# ================================================================
# SECURE ENVIRONMENT CONFIGURATION FOR THE DAS BOARD
# ================================================================
# Security Notes:
# - Never commit your actual .env file to version control
# - Use environment-specific configurations for different environments
# - Keep sensitive credentials in secure secret management systems
# - Production deployments should use environment variables from hosting platform
# - Validate all environment variables before use
# ================================================================

# ================================================================
# REQUIRED SUPABASE CONFIGURATION - CRITICAL FOR PREVENTING 500 ERRORS
# ================================================================
# ⚠️  IMPORTANT: These variables are REQUIRED and must be set correctly
# ⚠️  Missing or incorrect values will cause 500 errors in authentication
# ⚠️  After changing these values, you MUST restart your dev server

# Your Supabase project URL (must use HTTPS in production)
# Format: https://yourproject.supabase.co (no trailing slash)
# Get this from: Supabase Dashboard > Settings > API > Project URL
VITE_SUPABASE_URL=https://your-project.supabase.co

# Supabase anon key (safe for client-side use)
# Format: JWT starting with "eyJ" (very long string)
# Get this from: Supabase Dashboard > Settings > API > Project API keys > anon public
VITE_SUPABASE_ANON_KEY=your_supabase_anon_key_here

# ================================================================
# 500 ERROR PREVENTION CHECKLIST FOR SUPABASE CONFIGURATION
# ================================================================
# Before starting development, verify:
# ✅ VITE_SUPABASE_URL is set and matches https://yourproject.supabase.co format
# ✅ VITE_SUPABASE_ANON_KEY is set and starts with "eyJ"
# ✅ Both values are copied exactly from your Supabase dashboard (no extra spaces)
# ✅ No quotes around the values in this .env file
# ✅ This .env file is in your project root (same level as package.json)
# ✅ You restart your dev server after making changes (npm run dev)
#
# Common 500 error causes:
# ❌ Missing environment variables
# ❌ Incorrect URL format (missing https://, wrong domain)
# ❌ Wrong API key (using service_role instead of anon key)
# ❌ Forgetting to restart dev server after changes
# ❌ Extra spaces or quotes around values

# ================================================================
# API CONFIGURATION
# ================================================================
# Backend API URL (use HTTPS in production)
VITE_API_URL=http://localhost:3001

# Application URLs
VITE_APP_URL=http://localhost:5173
VITE_MARKETING_URL=http://localhost:5173

# ================================================================
# DEPLOYMENT CONFIGURATION
# ================================================================
# Environment identifier (development, staging, production)
VITE_ENVIRONMENT=development

# Deployment version for cache busting
VITE_DEPLOYMENT_VERSION=1.0.0

# Base path for deployment (usually "/" for root domain)
VITE_BASE_PATH=/

# ================================================================
# FEATURE FLAGS & SECURITY SETTINGS
# ================================================================
# Enable/disable specific features
VITE_FEATURE_FLAGS={"maintenance_mode":false,"beta_features":false}

# Rate limiting configuration
VITE_RATE_LIMIT_ENABLED=true

# Skip email verification in development (NEVER use in production)
VITE_SKIP_EMAIL_VERIFICATION=false

# ================================================================
# DEVELOPMENT-ONLY CONFIGURATION
# ================================================================
# Mock Supabase for local development (development only)
USE_MOCK_SUPABASE=false

# Development debugging
VITE_DEBUG_MODE=false
VITE_ENABLE_DEVTOOLS=true

# ================================================================
# OPTIONAL THIRD-PARTY INTEGRATIONS
# ================================================================
# Stripe configuration (if using payments)
# VITE_STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_key

# Google Analytics (if using analytics)
# VITE_GA_MEASUREMENT_ID=G-XXXXXXXXXX

# Sentry DSN (if using error tracking)
# VITE_SENTRY_DSN=https://your-sentry-dsn

# ================================================================
# MULTI-TENANT CONFIGURATION (Optional)
# ================================================================
# Additional Supabase instances for multi-tenant setup
# VITE_DEALERSHIP1_SUPABASE_URL=https://dealership1.supabase.co
# VITE_DEALERSHIP1_SUPABASE_ANON_KEY=dealership1_anon_key

# ================================================================
# SECURITY VALIDATION RULES
# ================================================================
# The following rules will be enforced by the application:
#
# 1. All URLs must use HTTPS in production
# 2. Supabase URLs must match pattern: https://[project].supabase.co
# 3. No JavaScript protocols allowed in URLs
# 4. Environment variables are sanitized for XSS prevention
# 5. Only allowed variables are exposed to the client
# 6. All sensitive data must be in server-side environment variables

# ================================================================
# ENVIRONMENT-SPECIFIC EXAMPLES
# ================================================================

# Development Example:
# VITE_SUPABASE_URL=https://dev-project.supabase.co
# VITE_API_URL=http://localhost:3001
# VITE_APP_URL=http://localhost:5173
# VITE_ENVIRONMENT=development

# Staging Example:
# VITE_SUPABASE_URL=https://staging-project.supabase.co
# VITE_API_URL=https://staging-api.yourdomain.com
# VITE_APP_URL=https://staging.yourdomain.com
# VITE_ENVIRONMENT=staging

# Production Example:
# VITE_SUPABASE_URL=https://prod-project.supabase.co
# VITE_API_URL=https://api.yourdomain.com
# VITE_APP_URL=https://yourdomain.com
# VITE_ENVIRONMENT=production
# VITE_SKIP_EMAIL_VERIFICATION=false

# ================================================================
# TROUBLESHOOTING 500 ERRORS GUIDE
# ================================================================
# If you encounter 500 errors during authentication or role fetching:
#
# 1. CHECK ENVIRONMENT VARIABLES:
#    - Open browser dev tools (F12) and look for console errors
#    - Look for messages starting with "[500 Prevention]"
#    - Verify VITE_SUPABASE_URL and VITE_SUPABASE_ANON_KEY are set
#
# 2. VERIFY SUPABASE VALUES:
#    - Go to https://supabase.com/dashboard
#    - Select your project
#    - Go to Settings > API
#    - Copy EXACT values (no extra spaces)
#    - Ensure you're using the "anon public" key, not service_role
#
# 3. RESTART DEV SERVER:
#    - Stop server: Ctrl+C
#    - Start server: npm run dev
#    - Environment variables are only loaded on startup!
#
# 4. CHECK FILE LOCATION:
#    - Ensure .env file is in project root (same level as package.json)
#    - File should be named exactly ".env" (no .txt extension)
#
# 5. VALIDATE FORMAT:
#    - URL should be: https://yourproject.supabase.co
#    - Key should start with: eyJ
#    - No quotes around values
#    - No spaces before/after = sign
#
# 6. COMMON ERROR PATTERNS:
#    - "Environment variables missing post-login" → Restart dev server
#    - "API key validation failed" → Check VITE_SUPABASE_ANON_KEY
#    - "Network connectivity issues" → Check VITE_SUPABASE_URL
#    - "Role fetch 500 error" → Usually environment mismatch
#
# 7. DEVELOPMENT WORKFLOW:
#    - Change .env → Stop server → Start server → Test login
#    - Never edit .env while server is running
#    - Check browser console for detailed error messages

# ================================================================
# SECURITY CHECKLIST
# ================================================================
# Before deploying to production, ensure:
# ✅ All URLs use HTTPS
# ✅ No sensitive keys in client-side variables
# ✅ Environment variables are properly validated
# ✅ VITE_SKIP_EMAIL_VERIFICATION=false in production
# ✅ VITE_DEBUG_MODE=false in production
# ✅ Rate limiting is enabled
# ✅ CSP headers are configured
# ✅ All secrets are in secure environment variable storage