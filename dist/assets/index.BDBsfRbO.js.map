{"version":3,"file":"index.BDBsfRbO.js","sources":["../../node_modules/react-dom/client.js","../../src/lib/supabaseClient.ts","../../node_modules/@radix-ui/react-visually-hidden/dist/index.mjs","../../node_modules/@radix-ui/react-toast/dist/index.mjs","../../node_modules/class-variance-authority/dist/index.mjs","../../src/lib/utils.ts","../../src/components/ui/toast.tsx","../../src/lib/use-toast.tsx","../../src/lib/apiService.ts","../../src/lib/directAuth.ts","../../src/contexts/AuthContext.tsx","../../src/components/ui/card.tsx","../../src/components/ui/button.tsx","../../src/components/ui/input.tsx","../../node_modules/@radix-ui/react-label/dist/index.mjs","../../src/components/ui/label.tsx","../../src/components/auth/LoginForm.tsx","../../src/pages/AuthPage.tsx","../../src/components/auth/ProtectedRoute.tsx","../../src/components/layout/DashboardLayout.tsx","../../src/components/ui/toaster.tsx","../../src/lib/react-query.ts","../../src/components/GoalTracking.tsx","../../src/utils/dealMapper.js","../../src/hooks/useDealsData.ts","../../src/components/dashboards/SalesDashboard.tsx","../../src/pages/finance/FinanceHomePage.tsx","../../src/components/ui/badge.tsx","../../src/pages/finance/FinanceDealsPage.tsx","../../src/pages/finance/FinanceSchedulePage.tsx","../../src/components/dashboards/FinanceDashboard.tsx","../../src/components/ui/dialog.tsx","../../node_modules/@radix-ui/number/dist/index.mjs","../../node_modules/@radix-ui/react-use-previous/dist/index.mjs","../../node_modules/@radix-ui/react-select/dist/index.mjs","../../src/components/ui/select.tsx","../../src/components/ui/table.tsx","../../src/components/dashboards/SalesManagerDashboard.tsx","../../src/components/dashboards/GMDashboard.tsx","../../src/components/ui/tabs.tsx","../../node_modules/@radix-ui/react-checkbox/dist/index.mjs","../../src/components/ui/checkbox.tsx","../../node_modules/@radix-ui/react-switch/node_modules/@radix-ui/react-slot/dist/index.mjs","../../node_modules/@radix-ui/react-switch/node_modules/@radix-ui/react-primitive/dist/index.mjs","../../node_modules/@radix-ui/react-switch/dist/index.mjs","../../src/components/ui/switch.tsx","../../src/components/ui/textarea.tsx","../../src/types/payPlan.ts","../../src/components/payplan/EnhancedPayPlanManager.tsx","../../src/components/payplan/PayCalculator.tsx","../../src/components/admin/AdminDashboard.tsx","../../src/pages/AdminDashboardPage.tsx","../../src/pages/DealLogPage.tsx","../../src/components/dashboards/AVPDashboard.tsx","../../src/components/admin/GroupAdminDashboard.tsx","../../src/components/ui/alert.tsx","../../src/pages/DebugAuthPage.tsx","../../src/components/debug/AuthDebugger.tsx","../../src/components/auth/TestUserMiddleware.tsx","../../src/pages/DirectLoginPage.tsx","../../src/components/auth/DirectAuthProvider.tsx","../../src/pages/ForceLoginPage.tsx","../../src/pages/LogoutPage.tsx","../../src/pages/TestLoginRedirect.tsx","../../src/pages/GroupAdminBypass.tsx","../../src/pages/DashboardSelector.tsx","../../src/pages/manager/TeamManagementPage.tsx","../../src/pages/manager/GoalsPage.tsx","../../src/pages/manager/SchedulePage.tsx","../../node_modules/@radix-ui/react-collapsible/node_modules/@radix-ui/react-slot/dist/index.mjs","../../node_modules/@radix-ui/react-collapsible/node_modules/@radix-ui/react-primitive/dist/index.mjs","../../node_modules/@radix-ui/react-collapsible/dist/index.mjs","../../src/components/ui/collapsible.tsx","../../src/pages/manager/SalesReportPage.tsx","../../src/components/ui/dropdown-menu.tsx","../../src/pages/finance/SingleFinanceHomePage.tsx","../../src/pages/finance/SingleFinanceDealsPage.tsx","../../src/components/dashboards/SingleFinanceManagerDashboard.tsx","../../src/components/dashboards/FinanceDirectorDashboard.tsx","../../src/components/ui/use-toast.tsx","../../src/pages/finance/LogFinanceManagerDeal.tsx","../../src/lib/directSupabase.ts","../../src/components/EnvTest.tsx","../../src/pages/admin/MasterAdminPage.tsx","../../src/components/auth/SignUp.tsx","../../src/components/auth/SingleFinanceSignup.tsx","../../src/components/auth/DealershipSignup.tsx","../../src/components/auth/DealerGroupSignup.tsx","../../src/contexts/TranslationContext.tsx","../../src/components/LanguageSwitcher.tsx","../../src/pages/HomePage.tsx","../../src/pages/PricingPage.tsx","../../src/pages/legal/TermsPage.tsx","../../src/pages/legal/PrivacyPage.tsx","../../src/pages/legal/SubscriptionPage.tsx","../../src/pages/AboutPage.tsx","../../src/pages/ScreenshotsPage.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import { createClient } from '@supabase/supabase-js';\nimport { Database } from './database.types';\n\n// Default Supabase config (Das Board Master)\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL || '';\nconst supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY || '';\n\n// Dealership1 Supabase config\nconst dealership1Url = import.meta.env.VITE_DEALERSHIP1_SUPABASE_URL || '';\nconst dealership1AnonKey = import.meta.env.VITE_DEALERSHIP1_SUPABASE_ANON_KEY || '';\n\n// Validate main configuration\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing Supabase configuration. Please check your environment variables.');\n}\n\n// Create singleton instance with proper configuration\nlet supabaseInstance: ReturnType<typeof createClient<Database>> | null = null;\n\nconst createSupabaseClient = () => {\n  if (supabaseInstance) {\n    return supabaseInstance;\n  }\n\n  console.log('Initializing Supabase client:', {\n    url: supabaseUrl,\n    keyLength: supabaseAnonKey.length,\n    timestamp: new Date().toISOString(),\n  });\n\n  supabaseInstance = createClient<Database>(supabaseUrl, supabaseAnonKey, {\n    auth: {\n      persistSession: true, // Enable session persistence\n      autoRefreshToken: true, // Enable auto-refresh\n      detectSessionInUrl: true, // Enable URL session detection for redirects\n      storage: window.localStorage, // Use localStorage for session storage\n    },\n    global: {\n      headers: {\n        'X-Client-Info': 'dasboard-app',\n      },\n    },\n  });\n\n  return supabaseInstance;\n};\n\n// Export the main client - this replaces the old direct createClient call\nexport const supabase = createSupabaseClient();\n\n// Client instances cache\nconst clientInstances = new Map<string, ReturnType<typeof createClient<Database>>>();\n\n// Get Supabase client for a specific dealership\nexport const getDealershipSupabase = (dealershipId?: string | number) => {\n  // If no dealershipId or it's 'master', return the master project\n  if (!dealershipId || dealershipId === 'master') {\n    return supabase;\n  }\n\n  // For now, we only have Dealership1 as a separate project\n  if (dealershipId === 1 || dealershipId === '1' || dealershipId === 'dealership1') {\n    if (!dealership1Url || !dealership1AnonKey) {\n      console.warn('Dealership1 Supabase configuration missing, falling back to master project');\n      return supabase;\n    }\n\n    // Check if we already have an instance\n    const cacheKey = `dealership-${dealershipId}`;\n    if (clientInstances.has(cacheKey)) {\n      return clientInstances.get(cacheKey)!;\n    }\n\n    // Create a new instance\n    console.log(`Creating new Supabase client for dealership ${dealershipId}`);\n    const instance = createClient<Database>(dealership1Url, dealership1AnonKey, {\n      auth: {\n        persistSession: true,\n        storageKey: `dealership-${dealershipId}-auth`,\n        storage: window.localStorage,\n        detectSessionInUrl: true,\n        autoRefreshToken: true,\n      },\n    });\n\n    // Cache the instance\n    clientInstances.set(cacheKey, instance);\n    return instance;\n  }\n\n  // Default to master project if dealership ID doesn't match\n  console.warn(`No specific Supabase project for dealership ${dealershipId}, using master project`);\n  return supabase;\n};\n\n// Get the default Supabase client (Master project)\nexport const getSupabase = () => {\n  return supabase;\n};\n\n// Helper function to check if a session exists\nexport const hasValidSession = async () => {\n  try {\n    const {\n      data: { session },\n      error,\n    } = await supabase.auth.getSession();\n    if (error) {\n      console.error('Error checking session:', error);\n      return false;\n    }\n    return !!session;\n  } catch (error) {\n    console.error('Unexpected error checking session:', error);\n    return false;\n  }\n};\n\n// Get current session with error handling\nexport const getUserSession = async () => {\n  try {\n    const { data, error } = await supabase.auth.getSession();\n    if (error) {\n      console.error('Error getting session:', error);\n      throw error;\n    }\n    return { data, error: null };\n  } catch (error) {\n    console.error('Error in getUserSession:', error);\n    return { data: { session: null }, error };\n  }\n};\n\n// Cache for user roles to prevent excessive database queries\nconst userRoleCache = new Map<string, string>();\nlet pendingRequests = new Set<string>();\n\n// Get current user with role\nexport const getCurrentUser = async () => {\n  try {\n    const {\n      data: { user },\n      error: userError,\n    } = await supabase.auth.getUser();\n\n    if (userError) {\n      console.error('Error getting user:', userError);\n      return null;\n    }\n\n    if (!user) {\n      return null;\n    }\n\n    // Check cache first to avoid unnecessary database calls\n    if (userRoleCache.has(user.id)) {\n      const cachedRole = userRoleCache.get(user.id);\n      console.log('Using cached role for user:', { userId: user.id, role: cachedRole });\n      return {\n        ...user,\n        role: cachedRole,\n      };\n    }\n\n    // Guard against concurrent/repeated calls for the same user ID\n    const requestKey = `role-${user.id}`;\n    if (pendingRequests.has(requestKey)) {\n      console.warn('Avoiding duplicate role request for user:', user.id);\n      return {\n        ...user,\n        role: null, // Return null role, will be filled on next attempt after cache is populated\n      };\n    }\n\n    // Mark this request as in progress\n    pendingRequests.add(requestKey);\n\n    try {\n      // Get user's role from profiles table\n      const { data: profile, error: profileError } = await supabase\n        .from('profiles')\n        .select('role')\n        .eq('id', user.id)\n        .single();\n\n      if (profileError) {\n        console.error('Error fetching user role:', profileError);\n        // Try fallback to roles through users table\n        const { data: userData, error: userDataError } = await supabase\n          .from('users')\n          .select('role_id')\n          .eq('id', user.id)\n          .single();\n\n        if (!userDataError && userData?.role_id) {\n          // Get role name from role_id\n          const { data: roleData } = await supabase\n            .from('roles')\n            .select('name')\n            .eq('id', userData.role_id)\n            .single();\n\n          if (roleData?.name) {\n            // Cache the role\n            userRoleCache.set(user.id, roleData.name);\n            return {\n              ...user,\n              role: roleData.name,\n            };\n          }\n        }\n\n        // If no role found in either table, use default\n        userRoleCache.set(user.id, 'viewer');\n        return {\n          ...user,\n          role: 'viewer', // Default fallback role\n        };\n      }\n\n      // Cache the role\n      userRoleCache.set(user.id, profile.role);\n\n      return {\n        ...user,\n        role: profile.role,\n      };\n    } finally {\n      // Clean up pending request marker\n      pendingRequests.delete(requestKey);\n    }\n  } catch (error) {\n    console.error('Error in getCurrentUser:', error);\n    return null;\n  }\n};\n\n// Get current user's dealership ID\nexport const getUserDealershipId = async () => {\n  try {\n    const user = await getCurrentUser();\n    if (!user) return null;\n\n    // Try to get from users table first (newer schema)\n    const { data: userData, error: userError } = await supabase\n      .from('users')\n      .select('dealership_id')\n      .eq('id', user.id)\n      .single();\n\n    if (!userError && userData?.dealership_id) {\n      return userData.dealership_id;\n    }\n\n    // Fall back to profiles table (older schema)\n    const { data: profile, error: profileError } = await supabase\n      .from('profiles')\n      .select('dealership_id')\n      .eq('id', user.id)\n      .single();\n\n    if (!profileError && profile?.dealership_id) {\n      return profile.dealership_id;\n    }\n\n    console.warn('No dealership ID found for user:', user.id);\n    return null;\n  } catch (error) {\n    console.error('Error getting user dealership ID:', error);\n    return null;\n  }\n};\n\n// Export types\nexport type { Database } from './database.types';\n\nexport type DealType = 'Cash' | 'Finance' | 'Lease';\nexport type VehicleType = 'N' | 'U' | 'D';\nexport type DealStatus = 'Pending' | 'Funded' | 'Unwound';\n\n// Regular expression to check if an email is a test email\nexport const isTestEmail = (email: string): boolean => {\n  return /(@exampletest\\.com|@example\\.com|test.*@)/.test(email.toLowerCase());\n};\n\n// Special login handling for test accounts\nexport const loginTestUser = async (email: string, password: string) => {\n  try {\n    console.log(`[supabaseClient] Logging in test user: ${email}`);\n\n    // Check if this is an email that should be handled specially\n    if (!isTestEmail(email)) {\n      console.warn('[supabaseClient] This is not a test email, should use regular login');\n      return { error: new Error('Not a test email') };\n    }\n\n    // Check if this user is a group admin based on email\n    const isGroupAdminEmail =\n      email.toLowerCase().includes('group') && email.toLowerCase().includes('@exampletest.com');\n\n    if (isGroupAdminEmail) {\n      console.log(`[supabaseClient] ${email} - detected as a group admin by email pattern`);\n\n      // Force direct redirection for group admin test users, preventing any redirect loops\n      localStorage.setItem('force_redirect_after_login', '/group-admin');\n      localStorage.setItem('force_redirect_timestamp', Date.now().toString());\n    }\n\n    // Try regular sign-in first\n    const { data: signInData, error: signInError } = await supabase.auth.signInWithPassword({\n      email,\n      password,\n      options: {\n        // Keep this session for testing\n        persistSession: true,\n      },\n    });\n\n    // If sign-in worked without errors, return the session data\n    if (!signInError && signInData?.user) {\n      console.log(`[supabaseClient] Sign-in successful for ${email}, checking group admin status`);\n\n      // For group admin emails, ensure the flag is set regardless of database state\n      if (isGroupAdminEmail) {\n        console.log(`[supabaseClient] Setting group admin metadata for ${email}`);\n\n        try {\n          // First update the user metadata\n          const { data: userUpdateData, error: userUpdateError } = await supabase.auth.updateUser({\n            data: {\n              is_group_admin: true,\n              role: 'dealer_group_admin',\n            },\n          });\n\n          if (userUpdateError) {\n            console.warn('[supabaseClient] Could not update user metadata:', userUpdateError);\n          } else {\n            console.log('[supabaseClient] Updated user metadata for group admin:', userUpdateData);\n          }\n\n          // Then update the profile record\n          const { error: profileError } = await supabase\n            .from('profiles')\n            .update({\n              is_group_admin: true,\n              role: 'dealer_group_admin',\n            })\n            .eq('id', signInData.user.id);\n\n          if (profileError) {\n            console.warn('[supabaseClient] Could not update profile:', profileError);\n          } else {\n            console.log('[supabaseClient] Updated profile for group admin');\n          }\n        } catch (err) {\n          console.error('[supabaseClient] Error setting group admin status:', err);\n        }\n\n        // IMMEDIATE REDIRECT: Force direct navigation for group admin test users\n        console.log('[supabaseClient] Performing immediate redirect for group admin test user');\n\n        // Set a session flag to indicate this is a valid redirect, not a cross-site one\n        sessionStorage.setItem('auth_redirect_authorized', 'true');\n\n        // Short timeout to ensure the session is established before redirect\n        setTimeout(() => {\n          // Redirect to our special redirect page instead of directly to group-admin\n          window.location.href = '/test-login-redirect';\n        }, 500);\n\n        // Force direct redirect via custom metadata\n        return {\n          data: {\n            ...signInData,\n            user: {\n              ...signInData.user,\n              user_metadata: {\n                ...signInData.user.user_metadata,\n                is_group_admin: true,\n                role: 'dealer_group_admin',\n              },\n            },\n          },\n          isGroupAdmin: true,\n          forceRedirect: true,\n          redirectPath: '/test-login-redirect',\n          message: 'Group admin test user logged in successfully',\n        };\n      }\n\n      // For non-group admin accounts, proceed with regular checks\n      console.log(`[supabaseClient] Checking group admin status for ${email}`);\n      try {\n        const { data, error } = await supabase\n          .from('profiles')\n          .select('is_group_admin, role, dealership_id')\n          .eq('id', signInData.user.id)\n          .maybeSingle();\n\n        console.log(`[supabaseClient] Test user profile data:`, data);\n\n        if (data?.is_group_admin) {\n          console.log(`[supabaseClient] User ${email} is a group admin`);\n\n          // Add metadata to the test user for easier debugging\n          const { data: userUpdateData, error: userUpdateError } = await supabase.auth.updateUser({\n            data: {\n              is_group_admin: true,\n              role: data.role || 'dealer_group_admin',\n            },\n          });\n\n          if (userUpdateError) {\n            console.warn('[supabaseClient] Could not update user metadata:', userUpdateError);\n          } else {\n            console.log('[supabaseClient] Updated user metadata for group admin');\n          }\n\n          // Return with isGroupAdmin flag set\n          return {\n            data: signInData,\n            isGroupAdmin: true,\n            message: 'Group admin test user logged in successfully',\n          };\n        }\n      } catch (profileError) {\n        console.error('[supabaseClient] Error checking group admin status:', profileError);\n      }\n\n      return {\n        data: signInData,\n        message: 'Test user logged in successfully',\n      };\n    }\n\n    // If regular sign-in worked, just return the data\n    if (signInData?.session) {\n      return {\n        data: signInData,\n        message: 'Test user logged in successfully',\n      };\n    }\n\n    return { error: signInError, message: 'Failed to log in test user' };\n  } catch (error) {\n    console.error('[supabaseClient] Exception in loginTestUser:', error);\n    return {\n      error: error instanceof Error ? error : new Error('Unknown error during test login'),\n    };\n  }\n};\n\nexport interface Deal {\n  id?: string;\n  stock_number: string;\n  vin_last8: string;\n  new_or_used: VehicleType;\n  customer_last_name: string;\n  deal_type: DealType;\n  reserve_flat_amount: number | null;\n  vsc_profit: number | null;\n  ppm_profit: number | null;\n  tire_wheel_profit: number | null;\n  paint_fabric_profit: number | null;\n  other_profit: number | null;\n  front_end_gross: number;\n  status: DealStatus;\n  created_by?: string;\n  sales_manager_id?: string | null;\n  fi_manager_id?: string;\n  salesperson_id?: string;\n  salesperson_initials?: string;\n  created_at?: string;\n  updated_at?: string;\n  funded_at?: string | null;\n  unwound_at?: string | null;\n}\n\nexport type User = {\n  id: string;\n  first_name: string;\n  last_name: string;\n  email: string;\n  role_id: string;\n  created_by: string;\n  created_at: string;\n};\n\nexport type PayPlan = {\n  id: string;\n  role_id: string;\n  front_end_percent: number;\n  back_end_percent: number;\n  csi_bonus: number;\n  demo_allowance: number;\n  vsc_bonus: number;\n  ppm_bonus: number;\n  volume_bonus: Record<string, number>;\n  updated_by: string;\n  updated_at: string;\n};\n\n// Add a debug function to test the Supabase connection\nexport const testSupabaseConnection = async () => {\n  try {\n    console.log('[supabaseClient] Testing Supabase connection', {\n      url: import.meta.env.VITE_SUPABASE_URL,\n      keyFirstChars: import.meta.env.VITE_SUPABASE_ANON_KEY?.substring(0, 5) + '...',\n    });\n\n    // Try a simple query\n    const { data, error } = await supabase.from('roles').select('count').limit(1);\n\n    if (error) {\n      console.error('[supabaseClient] Connection test failed:', error);\n      return {\n        success: false,\n        error: error,\n      };\n    }\n\n    console.log('[supabaseClient] Connection test successful:', data);\n    return {\n      success: true,\n      data: data,\n    };\n  } catch (err) {\n    console.error('[supabaseClient] Exception in connection test:', err);\n    return {\n      success: false,\n      error: err,\n    };\n  }\n};\n\n/**\n * Creates a test user account that doesn't require email verification.\n * Use this for testing purposes only.\n */\nexport const createTestUser = async (email: string, password: string, userData: any) => {\n  try {\n    console.log(`[supabaseClient] Creating test user: ${email}`);\n\n    // For test domains, we want to explicitly bypass verification\n    const isTestDomain =\n      email.endsWith('@exampletest.com') ||\n      email.endsWith('@example.com') ||\n      email.includes('test');\n\n    if (!isTestDomain) {\n      console.warn(\n        '[supabaseClient] Warning: Creating account with non-test domain may require email verification'\n      );\n    }\n\n    // 1. First, sign up the user normally\n    const { data: signUpData, error: signUpError } = await supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        data: userData,\n        // For test accounts, request no email confirmation\n        emailRedirectTo: window.location.origin,\n      },\n    });\n\n    if (signUpError) {\n      console.error('[supabaseClient] Error creating test user:', signUpError);\n      return { error: signUpError };\n    }\n\n    if (!signUpData.user) {\n      console.error('[supabaseClient] No user returned from sign up');\n      return { error: new Error('No user returned from sign up') };\n    }\n\n    const userId = signUpData.user.id;\n    console.log('[supabaseClient] User created with ID:', userId);\n\n    // For test domains, attempt to auto-verify using admin functions\n    if (isTestDomain) {\n      // 2. Try to directly set email_confirmed_at in auth.users via RPC\n      try {\n        console.log('[supabaseClient] Attempting to auto-confirm test account');\n\n        // Try force_confirm_email RPC if it exists\n        const { data: rpcData, error: rpcError } = await supabase.rpc('force_confirm_email', {\n          user_id_param: userId,\n        });\n\n        if (rpcError) {\n          console.warn('[supabaseClient] RPC confirmation failed:', rpcError);\n\n          // Try a different RPC function name if the first one failed\n          try {\n            const { data: rpc2Data, error: rpc2Error } = await supabase.rpc('admin_confirm_user', {\n              user_id: userId,\n            });\n\n            if (rpc2Error) {\n              console.warn('[supabaseClient] Second RPC confirmation failed:', rpc2Error);\n            } else {\n              console.log('[supabaseClient] Second RPC confirmation successful');\n            }\n          } catch (rpc2Err) {\n            console.warn('[supabaseClient] Second RPC exception:', rpc2Err);\n          }\n        } else {\n          console.log('[supabaseClient] RPC confirmation successful');\n        }\n\n        // Admin API approach - may not work without proper permissions\n        try {\n          const { data: adminData, error: adminError } = await supabase.auth.admin.updateUserById(\n            userId,\n            { email_confirm: true }\n          );\n\n          if (adminError) {\n            console.warn('[supabaseClient] Admin API confirmation failed:', adminError);\n          } else {\n            console.log('[supabaseClient] Admin API confirmation successful');\n          }\n        } catch (adminErr) {\n          console.warn('[supabaseClient] Admin API exception:', adminErr);\n        }\n      } catch (rpcError) {\n        console.warn('[supabaseClient] RPC confirmation exception:', rpcError);\n      }\n    }\n\n    // 3. Try to upsert into the profiles table to ensure profile exists\n    try {\n      const { error: profileError } = await supabase.from('profiles').upsert([\n        {\n          id: userId,\n          email,\n          name: userData.name || email.split('@')[0],\n          role: userData.role || 'salesperson',\n          dealership_id: userData.dealership_id || 1,\n          is_test_account: true,\n        },\n      ]);\n\n      if (profileError) {\n        console.warn('[supabaseClient] Profile creation warning:', profileError);\n      } else {\n        console.log('[supabaseClient] Profile created successfully');\n      }\n    } catch (profileError) {\n      console.warn('[supabaseClient] Profile creation exception:', profileError);\n    }\n\n    // Return the created user with helpful information\n    return {\n      data: signUpData.user,\n      credentials: {\n        email,\n        password,\n        role: userData.role || 'salesperson',\n        dealership_id: userData.dealership_id || 1,\n      },\n      needsConfirmation: !isTestDomain,\n      message: isTestDomain\n        ? 'Test user created with automatic verification attempted.'\n        : 'User created. Email confirmation might still be required.',\n    };\n  } catch (error) {\n    console.error('[supabaseClient] Exception creating test user:', error);\n    return {\n      error: error instanceof Error ? error : new Error('Unknown error creating test user'),\n    };\n  }\n};\n","// src/visually-hidden.tsx\nimport * as React from \"react\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx } from \"react/jsx-runtime\";\nvar VISUALLY_HIDDEN_STYLES = Object.freeze({\n  // See: https://github.com/twbs/bootstrap/blob/main/scss/mixins/_visually-hidden.scss\n  position: \"absolute\",\n  border: 0,\n  width: 1,\n  height: 1,\n  padding: 0,\n  margin: -1,\n  overflow: \"hidden\",\n  clip: \"rect(0, 0, 0, 0)\",\n  whiteSpace: \"nowrap\",\n  wordWrap: \"normal\"\n});\nvar NAME = \"VisuallyHidden\";\nvar VisuallyHidden = React.forwardRef(\n  (props, forwardedRef) => {\n    return /* @__PURE__ */ jsx(\n      Primitive.span,\n      {\n        ...props,\n        ref: forwardedRef,\n        style: { ...VISUALLY_HIDDEN_STYLES, ...props.style }\n      }\n    );\n  }\n);\nVisuallyHidden.displayName = NAME;\nvar Root = VisuallyHidden;\nexport {\n  Root,\n  VISUALLY_HIDDEN_STYLES,\n  VisuallyHidden\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// src/toast.tsx\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createCollection } from \"@radix-ui/react-collection\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport * as DismissableLayer from \"@radix-ui/react-dismissable-layer\";\nimport { Portal } from \"@radix-ui/react-portal\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { Primitive, dispatchDiscreteCustomEvent } from \"@radix-ui/react-primitive\";\nimport { useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { VisuallyHidden } from \"@radix-ui/react-visually-hidden\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar PROVIDER_NAME = \"ToastProvider\";\nvar [Collection, useCollection, createCollectionScope] = createCollection(\"Toast\");\nvar [createToastContext, createToastScope] = createContextScope(\"Toast\", [createCollectionScope]);\nvar [ToastProviderProvider, useToastProviderContext] = createToastContext(PROVIDER_NAME);\nvar ToastProvider = (props) => {\n  const {\n    __scopeToast,\n    label = \"Notification\",\n    duration = 5e3,\n    swipeDirection = \"right\",\n    swipeThreshold = 50,\n    children\n  } = props;\n  const [viewport, setViewport] = React.useState(null);\n  const [toastCount, setToastCount] = React.useState(0);\n  const isFocusedToastEscapeKeyDownRef = React.useRef(false);\n  const isClosePausedRef = React.useRef(false);\n  if (!label.trim()) {\n    console.error(\n      `Invalid prop \\`label\\` supplied to \\`${PROVIDER_NAME}\\`. Expected non-empty \\`string\\`.`\n    );\n  }\n  return /* @__PURE__ */ jsx(Collection.Provider, { scope: __scopeToast, children: /* @__PURE__ */ jsx(\n    ToastProviderProvider,\n    {\n      scope: __scopeToast,\n      label,\n      duration,\n      swipeDirection,\n      swipeThreshold,\n      toastCount,\n      viewport,\n      onViewportChange: setViewport,\n      onToastAdd: React.useCallback(() => setToastCount((prevCount) => prevCount + 1), []),\n      onToastRemove: React.useCallback(() => setToastCount((prevCount) => prevCount - 1), []),\n      isFocusedToastEscapeKeyDownRef,\n      isClosePausedRef,\n      children\n    }\n  ) });\n};\nToastProvider.displayName = PROVIDER_NAME;\nvar VIEWPORT_NAME = \"ToastViewport\";\nvar VIEWPORT_DEFAULT_HOTKEY = [\"F8\"];\nvar VIEWPORT_PAUSE = \"toast.viewportPause\";\nvar VIEWPORT_RESUME = \"toast.viewportResume\";\nvar ToastViewport = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeToast,\n      hotkey = VIEWPORT_DEFAULT_HOTKEY,\n      label = \"Notifications ({hotkey})\",\n      ...viewportProps\n    } = props;\n    const context = useToastProviderContext(VIEWPORT_NAME, __scopeToast);\n    const getItems = useCollection(__scopeToast);\n    const wrapperRef = React.useRef(null);\n    const headFocusProxyRef = React.useRef(null);\n    const tailFocusProxyRef = React.useRef(null);\n    const ref = React.useRef(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref, context.onViewportChange);\n    const hotkeyLabel = hotkey.join(\"+\").replace(/Key/g, \"\").replace(/Digit/g, \"\");\n    const hasToasts = context.toastCount > 0;\n    React.useEffect(() => {\n      const handleKeyDown = (event) => {\n        const isHotkeyPressed = hotkey.length !== 0 && hotkey.every((key) => event[key] || event.code === key);\n        if (isHotkeyPressed) ref.current?.focus();\n      };\n      document.addEventListener(\"keydown\", handleKeyDown);\n      return () => document.removeEventListener(\"keydown\", handleKeyDown);\n    }, [hotkey]);\n    React.useEffect(() => {\n      const wrapper = wrapperRef.current;\n      const viewport = ref.current;\n      if (hasToasts && wrapper && viewport) {\n        const handlePause = () => {\n          if (!context.isClosePausedRef.current) {\n            const pauseEvent = new CustomEvent(VIEWPORT_PAUSE);\n            viewport.dispatchEvent(pauseEvent);\n            context.isClosePausedRef.current = true;\n          }\n        };\n        const handleResume = () => {\n          if (context.isClosePausedRef.current) {\n            const resumeEvent = new CustomEvent(VIEWPORT_RESUME);\n            viewport.dispatchEvent(resumeEvent);\n            context.isClosePausedRef.current = false;\n          }\n        };\n        const handleFocusOutResume = (event) => {\n          const isFocusMovingOutside = !wrapper.contains(event.relatedTarget);\n          if (isFocusMovingOutside) handleResume();\n        };\n        const handlePointerLeaveResume = () => {\n          const isFocusInside = wrapper.contains(document.activeElement);\n          if (!isFocusInside) handleResume();\n        };\n        wrapper.addEventListener(\"focusin\", handlePause);\n        wrapper.addEventListener(\"focusout\", handleFocusOutResume);\n        wrapper.addEventListener(\"pointermove\", handlePause);\n        wrapper.addEventListener(\"pointerleave\", handlePointerLeaveResume);\n        window.addEventListener(\"blur\", handlePause);\n        window.addEventListener(\"focus\", handleResume);\n        return () => {\n          wrapper.removeEventListener(\"focusin\", handlePause);\n          wrapper.removeEventListener(\"focusout\", handleFocusOutResume);\n          wrapper.removeEventListener(\"pointermove\", handlePause);\n          wrapper.removeEventListener(\"pointerleave\", handlePointerLeaveResume);\n          window.removeEventListener(\"blur\", handlePause);\n          window.removeEventListener(\"focus\", handleResume);\n        };\n      }\n    }, [hasToasts, context.isClosePausedRef]);\n    const getSortedTabbableCandidates = React.useCallback(\n      ({ tabbingDirection }) => {\n        const toastItems = getItems();\n        const tabbableCandidates = toastItems.map((toastItem) => {\n          const toastNode = toastItem.ref.current;\n          const toastTabbableCandidates = [toastNode, ...getTabbableCandidates(toastNode)];\n          return tabbingDirection === \"forwards\" ? toastTabbableCandidates : toastTabbableCandidates.reverse();\n        });\n        return (tabbingDirection === \"forwards\" ? tabbableCandidates.reverse() : tabbableCandidates).flat();\n      },\n      [getItems]\n    );\n    React.useEffect(() => {\n      const viewport = ref.current;\n      if (viewport) {\n        const handleKeyDown = (event) => {\n          const isMetaKey = event.altKey || event.ctrlKey || event.metaKey;\n          const isTabKey = event.key === \"Tab\" && !isMetaKey;\n          if (isTabKey) {\n            const focusedElement = document.activeElement;\n            const isTabbingBackwards = event.shiftKey;\n            const targetIsViewport = event.target === viewport;\n            if (targetIsViewport && isTabbingBackwards) {\n              headFocusProxyRef.current?.focus();\n              return;\n            }\n            const tabbingDirection = isTabbingBackwards ? \"backwards\" : \"forwards\";\n            const sortedCandidates = getSortedTabbableCandidates({ tabbingDirection });\n            const index = sortedCandidates.findIndex((candidate) => candidate === focusedElement);\n            if (focusFirst(sortedCandidates.slice(index + 1))) {\n              event.preventDefault();\n            } else {\n              isTabbingBackwards ? headFocusProxyRef.current?.focus() : tailFocusProxyRef.current?.focus();\n            }\n          }\n        };\n        viewport.addEventListener(\"keydown\", handleKeyDown);\n        return () => viewport.removeEventListener(\"keydown\", handleKeyDown);\n      }\n    }, [getItems, getSortedTabbableCandidates]);\n    return /* @__PURE__ */ jsxs(\n      DismissableLayer.Branch,\n      {\n        ref: wrapperRef,\n        role: \"region\",\n        \"aria-label\": label.replace(\"{hotkey}\", hotkeyLabel),\n        tabIndex: -1,\n        style: { pointerEvents: hasToasts ? void 0 : \"none\" },\n        children: [\n          hasToasts && /* @__PURE__ */ jsx(\n            FocusProxy,\n            {\n              ref: headFocusProxyRef,\n              onFocusFromOutsideViewport: () => {\n                const tabbableCandidates = getSortedTabbableCandidates({\n                  tabbingDirection: \"forwards\"\n                });\n                focusFirst(tabbableCandidates);\n              }\n            }\n          ),\n          /* @__PURE__ */ jsx(Collection.Slot, { scope: __scopeToast, children: /* @__PURE__ */ jsx(Primitive.ol, { tabIndex: -1, ...viewportProps, ref: composedRefs }) }),\n          hasToasts && /* @__PURE__ */ jsx(\n            FocusProxy,\n            {\n              ref: tailFocusProxyRef,\n              onFocusFromOutsideViewport: () => {\n                const tabbableCandidates = getSortedTabbableCandidates({\n                  tabbingDirection: \"backwards\"\n                });\n                focusFirst(tabbableCandidates);\n              }\n            }\n          )\n        ]\n      }\n    );\n  }\n);\nToastViewport.displayName = VIEWPORT_NAME;\nvar FOCUS_PROXY_NAME = \"ToastFocusProxy\";\nvar FocusProxy = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeToast, onFocusFromOutsideViewport, ...proxyProps } = props;\n    const context = useToastProviderContext(FOCUS_PROXY_NAME, __scopeToast);\n    return /* @__PURE__ */ jsx(\n      VisuallyHidden,\n      {\n        \"aria-hidden\": true,\n        tabIndex: 0,\n        ...proxyProps,\n        ref: forwardedRef,\n        style: { position: \"fixed\" },\n        onFocus: (event) => {\n          const prevFocusedElement = event.relatedTarget;\n          const isFocusFromOutsideViewport = !context.viewport?.contains(prevFocusedElement);\n          if (isFocusFromOutsideViewport) onFocusFromOutsideViewport();\n        }\n      }\n    );\n  }\n);\nFocusProxy.displayName = FOCUS_PROXY_NAME;\nvar TOAST_NAME = \"Toast\";\nvar TOAST_SWIPE_START = \"toast.swipeStart\";\nvar TOAST_SWIPE_MOVE = \"toast.swipeMove\";\nvar TOAST_SWIPE_CANCEL = \"toast.swipeCancel\";\nvar TOAST_SWIPE_END = \"toast.swipeEnd\";\nvar Toast = React.forwardRef(\n  (props, forwardedRef) => {\n    const { forceMount, open: openProp, defaultOpen, onOpenChange, ...toastProps } = props;\n    const [open, setOpen] = useControllableState({\n      prop: openProp,\n      defaultProp: defaultOpen ?? true,\n      onChange: onOpenChange,\n      caller: TOAST_NAME\n    });\n    return /* @__PURE__ */ jsx(Presence, { present: forceMount || open, children: /* @__PURE__ */ jsx(\n      ToastImpl,\n      {\n        open,\n        ...toastProps,\n        ref: forwardedRef,\n        onClose: () => setOpen(false),\n        onPause: useCallbackRef(props.onPause),\n        onResume: useCallbackRef(props.onResume),\n        onSwipeStart: composeEventHandlers(props.onSwipeStart, (event) => {\n          event.currentTarget.setAttribute(\"data-swipe\", \"start\");\n        }),\n        onSwipeMove: composeEventHandlers(props.onSwipeMove, (event) => {\n          const { x, y } = event.detail.delta;\n          event.currentTarget.setAttribute(\"data-swipe\", \"move\");\n          event.currentTarget.style.setProperty(\"--radix-toast-swipe-move-x\", `${x}px`);\n          event.currentTarget.style.setProperty(\"--radix-toast-swipe-move-y\", `${y}px`);\n        }),\n        onSwipeCancel: composeEventHandlers(props.onSwipeCancel, (event) => {\n          event.currentTarget.setAttribute(\"data-swipe\", \"cancel\");\n          event.currentTarget.style.removeProperty(\"--radix-toast-swipe-move-x\");\n          event.currentTarget.style.removeProperty(\"--radix-toast-swipe-move-y\");\n          event.currentTarget.style.removeProperty(\"--radix-toast-swipe-end-x\");\n          event.currentTarget.style.removeProperty(\"--radix-toast-swipe-end-y\");\n        }),\n        onSwipeEnd: composeEventHandlers(props.onSwipeEnd, (event) => {\n          const { x, y } = event.detail.delta;\n          event.currentTarget.setAttribute(\"data-swipe\", \"end\");\n          event.currentTarget.style.removeProperty(\"--radix-toast-swipe-move-x\");\n          event.currentTarget.style.removeProperty(\"--radix-toast-swipe-move-y\");\n          event.currentTarget.style.setProperty(\"--radix-toast-swipe-end-x\", `${x}px`);\n          event.currentTarget.style.setProperty(\"--radix-toast-swipe-end-y\", `${y}px`);\n          setOpen(false);\n        })\n      }\n    ) });\n  }\n);\nToast.displayName = TOAST_NAME;\nvar [ToastInteractiveProvider, useToastInteractiveContext] = createToastContext(TOAST_NAME, {\n  onClose() {\n  }\n});\nvar ToastImpl = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeToast,\n      type = \"foreground\",\n      duration: durationProp,\n      open,\n      onClose,\n      onEscapeKeyDown,\n      onPause,\n      onResume,\n      onSwipeStart,\n      onSwipeMove,\n      onSwipeCancel,\n      onSwipeEnd,\n      ...toastProps\n    } = props;\n    const context = useToastProviderContext(TOAST_NAME, __scopeToast);\n    const [node, setNode] = React.useState(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node2) => setNode(node2));\n    const pointerStartRef = React.useRef(null);\n    const swipeDeltaRef = React.useRef(null);\n    const duration = durationProp || context.duration;\n    const closeTimerStartTimeRef = React.useRef(0);\n    const closeTimerRemainingTimeRef = React.useRef(duration);\n    const closeTimerRef = React.useRef(0);\n    const { onToastAdd, onToastRemove } = context;\n    const handleClose = useCallbackRef(() => {\n      const isFocusInToast = node?.contains(document.activeElement);\n      if (isFocusInToast) context.viewport?.focus();\n      onClose();\n    });\n    const startTimer = React.useCallback(\n      (duration2) => {\n        if (!duration2 || duration2 === Infinity) return;\n        window.clearTimeout(closeTimerRef.current);\n        closeTimerStartTimeRef.current = (/* @__PURE__ */ new Date()).getTime();\n        closeTimerRef.current = window.setTimeout(handleClose, duration2);\n      },\n      [handleClose]\n    );\n    React.useEffect(() => {\n      const viewport = context.viewport;\n      if (viewport) {\n        const handleResume = () => {\n          startTimer(closeTimerRemainingTimeRef.current);\n          onResume?.();\n        };\n        const handlePause = () => {\n          const elapsedTime = (/* @__PURE__ */ new Date()).getTime() - closeTimerStartTimeRef.current;\n          closeTimerRemainingTimeRef.current = closeTimerRemainingTimeRef.current - elapsedTime;\n          window.clearTimeout(closeTimerRef.current);\n          onPause?.();\n        };\n        viewport.addEventListener(VIEWPORT_PAUSE, handlePause);\n        viewport.addEventListener(VIEWPORT_RESUME, handleResume);\n        return () => {\n          viewport.removeEventListener(VIEWPORT_PAUSE, handlePause);\n          viewport.removeEventListener(VIEWPORT_RESUME, handleResume);\n        };\n      }\n    }, [context.viewport, duration, onPause, onResume, startTimer]);\n    React.useEffect(() => {\n      if (open && !context.isClosePausedRef.current) startTimer(duration);\n    }, [open, duration, context.isClosePausedRef, startTimer]);\n    React.useEffect(() => {\n      onToastAdd();\n      return () => onToastRemove();\n    }, [onToastAdd, onToastRemove]);\n    const announceTextContent = React.useMemo(() => {\n      return node ? getAnnounceTextContent(node) : null;\n    }, [node]);\n    if (!context.viewport) return null;\n    return /* @__PURE__ */ jsxs(Fragment, { children: [\n      announceTextContent && /* @__PURE__ */ jsx(\n        ToastAnnounce,\n        {\n          __scopeToast,\n          role: \"status\",\n          \"aria-live\": type === \"foreground\" ? \"assertive\" : \"polite\",\n          \"aria-atomic\": true,\n          children: announceTextContent\n        }\n      ),\n      /* @__PURE__ */ jsx(ToastInteractiveProvider, { scope: __scopeToast, onClose: handleClose, children: ReactDOM.createPortal(\n        /* @__PURE__ */ jsx(Collection.ItemSlot, { scope: __scopeToast, children: /* @__PURE__ */ jsx(\n          DismissableLayer.Root,\n          {\n            asChild: true,\n            onEscapeKeyDown: composeEventHandlers(onEscapeKeyDown, () => {\n              if (!context.isFocusedToastEscapeKeyDownRef.current) handleClose();\n              context.isFocusedToastEscapeKeyDownRef.current = false;\n            }),\n            children: /* @__PURE__ */ jsx(\n              Primitive.li,\n              {\n                role: \"status\",\n                \"aria-live\": \"off\",\n                \"aria-atomic\": true,\n                tabIndex: 0,\n                \"data-state\": open ? \"open\" : \"closed\",\n                \"data-swipe-direction\": context.swipeDirection,\n                ...toastProps,\n                ref: composedRefs,\n                style: { userSelect: \"none\", touchAction: \"none\", ...props.style },\n                onKeyDown: composeEventHandlers(props.onKeyDown, (event) => {\n                  if (event.key !== \"Escape\") return;\n                  onEscapeKeyDown?.(event.nativeEvent);\n                  if (!event.nativeEvent.defaultPrevented) {\n                    context.isFocusedToastEscapeKeyDownRef.current = true;\n                    handleClose();\n                  }\n                }),\n                onPointerDown: composeEventHandlers(props.onPointerDown, (event) => {\n                  if (event.button !== 0) return;\n                  pointerStartRef.current = { x: event.clientX, y: event.clientY };\n                }),\n                onPointerMove: composeEventHandlers(props.onPointerMove, (event) => {\n                  if (!pointerStartRef.current) return;\n                  const x = event.clientX - pointerStartRef.current.x;\n                  const y = event.clientY - pointerStartRef.current.y;\n                  const hasSwipeMoveStarted = Boolean(swipeDeltaRef.current);\n                  const isHorizontalSwipe = [\"left\", \"right\"].includes(context.swipeDirection);\n                  const clamp = [\"left\", \"up\"].includes(context.swipeDirection) ? Math.min : Math.max;\n                  const clampedX = isHorizontalSwipe ? clamp(0, x) : 0;\n                  const clampedY = !isHorizontalSwipe ? clamp(0, y) : 0;\n                  const moveStartBuffer = event.pointerType === \"touch\" ? 10 : 2;\n                  const delta = { x: clampedX, y: clampedY };\n                  const eventDetail = { originalEvent: event, delta };\n                  if (hasSwipeMoveStarted) {\n                    swipeDeltaRef.current = delta;\n                    handleAndDispatchCustomEvent(TOAST_SWIPE_MOVE, onSwipeMove, eventDetail, {\n                      discrete: false\n                    });\n                  } else if (isDeltaInDirection(delta, context.swipeDirection, moveStartBuffer)) {\n                    swipeDeltaRef.current = delta;\n                    handleAndDispatchCustomEvent(TOAST_SWIPE_START, onSwipeStart, eventDetail, {\n                      discrete: false\n                    });\n                    event.target.setPointerCapture(event.pointerId);\n                  } else if (Math.abs(x) > moveStartBuffer || Math.abs(y) > moveStartBuffer) {\n                    pointerStartRef.current = null;\n                  }\n                }),\n                onPointerUp: composeEventHandlers(props.onPointerUp, (event) => {\n                  const delta = swipeDeltaRef.current;\n                  const target = event.target;\n                  if (target.hasPointerCapture(event.pointerId)) {\n                    target.releasePointerCapture(event.pointerId);\n                  }\n                  swipeDeltaRef.current = null;\n                  pointerStartRef.current = null;\n                  if (delta) {\n                    const toast = event.currentTarget;\n                    const eventDetail = { originalEvent: event, delta };\n                    if (isDeltaInDirection(delta, context.swipeDirection, context.swipeThreshold)) {\n                      handleAndDispatchCustomEvent(TOAST_SWIPE_END, onSwipeEnd, eventDetail, {\n                        discrete: true\n                      });\n                    } else {\n                      handleAndDispatchCustomEvent(\n                        TOAST_SWIPE_CANCEL,\n                        onSwipeCancel,\n                        eventDetail,\n                        {\n                          discrete: true\n                        }\n                      );\n                    }\n                    toast.addEventListener(\"click\", (event2) => event2.preventDefault(), {\n                      once: true\n                    });\n                  }\n                })\n              }\n            )\n          }\n        ) }),\n        context.viewport\n      ) })\n    ] });\n  }\n);\nvar ToastAnnounce = (props) => {\n  const { __scopeToast, children, ...announceProps } = props;\n  const context = useToastProviderContext(TOAST_NAME, __scopeToast);\n  const [renderAnnounceText, setRenderAnnounceText] = React.useState(false);\n  const [isAnnounced, setIsAnnounced] = React.useState(false);\n  useNextFrame(() => setRenderAnnounceText(true));\n  React.useEffect(() => {\n    const timer = window.setTimeout(() => setIsAnnounced(true), 1e3);\n    return () => window.clearTimeout(timer);\n  }, []);\n  return isAnnounced ? null : /* @__PURE__ */ jsx(Portal, { asChild: true, children: /* @__PURE__ */ jsx(VisuallyHidden, { ...announceProps, children: renderAnnounceText && /* @__PURE__ */ jsxs(Fragment, { children: [\n    context.label,\n    \" \",\n    children\n  ] }) }) });\n};\nvar TITLE_NAME = \"ToastTitle\";\nvar ToastTitle = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeToast, ...titleProps } = props;\n    return /* @__PURE__ */ jsx(Primitive.div, { ...titleProps, ref: forwardedRef });\n  }\n);\nToastTitle.displayName = TITLE_NAME;\nvar DESCRIPTION_NAME = \"ToastDescription\";\nvar ToastDescription = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeToast, ...descriptionProps } = props;\n    return /* @__PURE__ */ jsx(Primitive.div, { ...descriptionProps, ref: forwardedRef });\n  }\n);\nToastDescription.displayName = DESCRIPTION_NAME;\nvar ACTION_NAME = \"ToastAction\";\nvar ToastAction = React.forwardRef(\n  (props, forwardedRef) => {\n    const { altText, ...actionProps } = props;\n    if (!altText.trim()) {\n      console.error(\n        `Invalid prop \\`altText\\` supplied to \\`${ACTION_NAME}\\`. Expected non-empty \\`string\\`.`\n      );\n      return null;\n    }\n    return /* @__PURE__ */ jsx(ToastAnnounceExclude, { altText, asChild: true, children: /* @__PURE__ */ jsx(ToastClose, { ...actionProps, ref: forwardedRef }) });\n  }\n);\nToastAction.displayName = ACTION_NAME;\nvar CLOSE_NAME = \"ToastClose\";\nvar ToastClose = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeToast, ...closeProps } = props;\n    const interactiveContext = useToastInteractiveContext(CLOSE_NAME, __scopeToast);\n    return /* @__PURE__ */ jsx(ToastAnnounceExclude, { asChild: true, children: /* @__PURE__ */ jsx(\n      Primitive.button,\n      {\n        type: \"button\",\n        ...closeProps,\n        ref: forwardedRef,\n        onClick: composeEventHandlers(props.onClick, interactiveContext.onClose)\n      }\n    ) });\n  }\n);\nToastClose.displayName = CLOSE_NAME;\nvar ToastAnnounceExclude = React.forwardRef((props, forwardedRef) => {\n  const { __scopeToast, altText, ...announceExcludeProps } = props;\n  return /* @__PURE__ */ jsx(\n    Primitive.div,\n    {\n      \"data-radix-toast-announce-exclude\": \"\",\n      \"data-radix-toast-announce-alt\": altText || void 0,\n      ...announceExcludeProps,\n      ref: forwardedRef\n    }\n  );\n});\nfunction getAnnounceTextContent(container) {\n  const textContent = [];\n  const childNodes = Array.from(container.childNodes);\n  childNodes.forEach((node) => {\n    if (node.nodeType === node.TEXT_NODE && node.textContent) textContent.push(node.textContent);\n    if (isHTMLElement(node)) {\n      const isHidden = node.ariaHidden || node.hidden || node.style.display === \"none\";\n      const isExcluded = node.dataset.radixToastAnnounceExclude === \"\";\n      if (!isHidden) {\n        if (isExcluded) {\n          const altText = node.dataset.radixToastAnnounceAlt;\n          if (altText) textContent.push(altText);\n        } else {\n          textContent.push(...getAnnounceTextContent(node));\n        }\n      }\n    }\n  });\n  return textContent;\n}\nfunction handleAndDispatchCustomEvent(name, handler, detail, { discrete }) {\n  const currentTarget = detail.originalEvent.currentTarget;\n  const event = new CustomEvent(name, { bubbles: true, cancelable: true, detail });\n  if (handler) currentTarget.addEventListener(name, handler, { once: true });\n  if (discrete) {\n    dispatchDiscreteCustomEvent(currentTarget, event);\n  } else {\n    currentTarget.dispatchEvent(event);\n  }\n}\nvar isDeltaInDirection = (delta, direction, threshold = 0) => {\n  const deltaX = Math.abs(delta.x);\n  const deltaY = Math.abs(delta.y);\n  const isDeltaX = deltaX > deltaY;\n  if (direction === \"left\" || direction === \"right\") {\n    return isDeltaX && deltaX > threshold;\n  } else {\n    return !isDeltaX && deltaY > threshold;\n  }\n};\nfunction useNextFrame(callback = () => {\n}) {\n  const fn = useCallbackRef(callback);\n  useLayoutEffect(() => {\n    let raf1 = 0;\n    let raf2 = 0;\n    raf1 = window.requestAnimationFrame(() => raf2 = window.requestAnimationFrame(fn));\n    return () => {\n      window.cancelAnimationFrame(raf1);\n      window.cancelAnimationFrame(raf2);\n    };\n  }, [fn]);\n}\nfunction isHTMLElement(node) {\n  return node.nodeType === node.ELEMENT_NODE;\n}\nfunction getTabbableCandidates(container) {\n  const nodes = [];\n  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: (node) => {\n      const isHiddenInput = node.tagName === \"INPUT\" && node.type === \"hidden\";\n      if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;\n      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n    }\n  });\n  while (walker.nextNode()) nodes.push(walker.currentNode);\n  return nodes;\n}\nfunction focusFirst(candidates) {\n  const previouslyFocusedElement = document.activeElement;\n  return candidates.some((candidate) => {\n    if (candidate === previouslyFocusedElement) return true;\n    candidate.focus();\n    return document.activeElement !== previouslyFocusedElement;\n  });\n}\nvar Provider = ToastProvider;\nvar Viewport = ToastViewport;\nvar Root2 = Toast;\nvar Title = ToastTitle;\nvar Description = ToastDescription;\nvar Action = ToastAction;\nvar Close = ToastClose;\nexport {\n  Action,\n  Close,\n  Description,\n  Provider,\n  Root2 as Root,\n  Title,\n  Toast,\n  ToastAction,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n  Viewport,\n  createToastScope\n};\n//# sourceMappingURL=index.mjs.map\n","/**\n * Copyright 2022 Joe Bell. All rights reserved.\n *\n * This file is licensed to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with the\n * License. You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR REPRESENTATIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */ import { clsx } from \"clsx\";\nconst falsyToString = (value)=>typeof value === \"boolean\" ? `${value}` : value === 0 ? \"0\" : value;\nexport const cx = clsx;\nexport const cva = (base, config)=>(props)=>{\n        var _config_compoundVariants;\n        if ((config === null || config === void 0 ? void 0 : config.variants) == null) return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n        const { variants, defaultVariants } = config;\n        const getVariantClassNames = Object.keys(variants).map((variant)=>{\n            const variantProp = props === null || props === void 0 ? void 0 : props[variant];\n            const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];\n            if (variantProp === null) return null;\n            const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);\n            return variants[variant][variantKey];\n        });\n        const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param)=>{\n            let [key, value] = param;\n            if (value === undefined) {\n                return acc;\n            }\n            acc[key] = value;\n            return acc;\n        }, {});\n        const getCompoundVariantClassNames = config === null || config === void 0 ? void 0 : (_config_compoundVariants = config.compoundVariants) === null || _config_compoundVariants === void 0 ? void 0 : _config_compoundVariants.reduce((acc, param)=>{\n            let { class: cvClass, className: cvClassName, ...compoundVariantOptions } = param;\n            return Object.entries(compoundVariantOptions).every((param)=>{\n                let [key, value] = param;\n                return Array.isArray(value) ? value.includes({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                }[key]) : ({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                })[key] === value;\n            }) ? [\n                ...acc,\n                cvClass,\n                cvClassName\n            ] : acc;\n        }, []);\n        return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n    };\n\n","import { type ClassValue, clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n","'use client';\n\nimport * as React from 'react';\nimport * as ToastPrimitives from '@radix-ui/react-toast';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { X } from 'lucide-react';\n\nimport { cn } from '../../lib/utils';\n\nconst ToastProvider = ToastPrimitives.Provider;\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      'fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]',\n      className\n    )}\n    {...props}\n  />\n));\nToastViewport.displayName = ToastPrimitives.Viewport.displayName;\n\nconst toastVariants = cva(\n  'group pointer-events-auto relative flex w-full items-center justify-between space-x-2 overflow-hidden rounded-md border p-4 pr-6 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full',\n  {\n    variants: {\n      variant: {\n        default: 'border bg-background text-foreground',\n        destructive:\n          'destructive group border-destructive bg-destructive text-destructive-foreground',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  }\n);\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> & VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  );\n});\nToast.displayName = ToastPrimitives.Root.displayName;\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      'inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium transition-colors hover:bg-secondary focus:outline-none focus:ring-1 focus:ring-ring disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive',\n      className\n    )}\n    {...props}\n  />\n));\nToastAction.displayName = ToastPrimitives.Action.displayName;\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      'absolute right-1 top-1 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-1 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600',\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n));\nToastClose.displayName = ToastPrimitives.Close.displayName;\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn('text-sm font-semibold [&+div]:text-xs', className)}\n    {...props}\n  />\n));\nToastTitle.displayName = ToastPrimitives.Title.displayName;\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn('text-sm opacity-90', className)}\n    {...props}\n  />\n));\nToastDescription.displayName = ToastPrimitives.Description.displayName;\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>;\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>;\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n};\n","// Inspired by react-hot-toast library\r\nimport * as React from 'react';\r\n\r\nimport {\r\n  Toast,\r\n  ToastActionElement,\r\n  ToastProps,\r\n  ToastProvider,\r\n  ToastViewport,\r\n} from '../components/ui/toast';\r\n\r\nconst TOAST_LIMIT = 3;\r\nconst TOAST_REMOVE_DELAY = 1000000;\r\n\r\ntype ToasterToast = ToastProps & {\r\n  id: string;\r\n  title?: React.ReactNode;\r\n  description?: React.ReactNode;\r\n  action?: ToastActionElement;\r\n};\r\n\r\nconst actionTypes = {\r\n  ADD_TOAST: 'ADD_TOAST',\r\n  UPDATE_TOAST: 'UPDATE_TOAST',\r\n  DISMISS_TOAST: 'DISMISS_TOAST',\r\n  REMOVE_TOAST: 'REMOVE_TOAST',\r\n} as const;\r\n\r\nlet count = 0;\r\n\r\nfunction genId() {\r\n  count = (count + 1) % Number.MAX_SAFE_INTEGER;\r\n  return count.toString();\r\n}\r\n\r\ntype ActionType = typeof actionTypes;\r\n\r\ntype Action =\r\n  | {\r\n      type: ActionType['ADD_TOAST'];\r\n      toast: ToasterToast;\r\n    }\r\n  | {\r\n      type: ActionType['UPDATE_TOAST'];\r\n      toast: Partial<ToasterToast>;\r\n    }\r\n  | {\r\n      type: ActionType['DISMISS_TOAST'];\r\n      toastId?: string;\r\n    }\r\n  | {\r\n      type: ActionType['REMOVE_TOAST'];\r\n      toastId?: string;\r\n    };\r\n\r\ninterface State {\r\n  toasts: ToasterToast[];\r\n}\r\n\r\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>();\r\n\r\nconst reducer = (state: State, action: Action): State => {\r\n  switch (action.type) {\r\n    case 'ADD_TOAST':\r\n      return {\r\n        ...state,\r\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\r\n      };\r\n\r\n    case 'UPDATE_TOAST':\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map(t => (t.id === action.toast.id ? { ...t, ...action.toast } : t)),\r\n      };\r\n\r\n    case 'DISMISS_TOAST': {\r\n      const { toastId } = action;\r\n\r\n      // Dismiss all toasts if no ID is provided\r\n      if (toastId === undefined) {\r\n        return {\r\n          ...state,\r\n          toasts: state.toasts.map(t => ({\r\n            ...t,\r\n            open: false,\r\n          })),\r\n        };\r\n      }\r\n\r\n      // Dismiss a specific toast by ID\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map(t => (t.id === toastId ? { ...t, open: false } : t)),\r\n      };\r\n    }\r\n\r\n    case 'REMOVE_TOAST': {\r\n      const { toastId } = action;\r\n\r\n      if (toastId === undefined) {\r\n        return {\r\n          ...state,\r\n          toasts: [],\r\n        };\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.filter(t => t.id !== toastId),\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\ntype ToastContextType = {\r\n  toasts: ToasterToast[];\r\n  addToast: (toast: Omit<ToasterToast, 'id'>) => string;\r\n  updateToast: (toast: Partial<ToasterToast> & { id: string }) => void;\r\n  dismissToast: (id?: string) => void;\r\n  removeToast: (id?: string) => void;\r\n} | null;\r\n\r\nconst ToastContext = React.createContext<ToastContextType>(null);\r\n\r\n// Create a global store for the toast context\r\nlet toastContextValue: ToastContextType = null;\r\n\r\nexport function useToast() {\r\n  const context = React.useContext(ToastContext);\r\n\r\n  if (!context) {\r\n    console.error('[ToastContext] useToast called outside of ToastProvider');\r\n    throw new Error('useToast must be used within a ToastProvider');\r\n  }\r\n\r\n  return context;\r\n}\r\n\r\nexport function ToastContextProvider({ children }: { children: React.ReactNode }) {\r\n  const [state, dispatch] = React.useReducer(reducer, { toasts: [] });\r\n\r\n  React.useEffect(() => {\r\n    console.log('[ToastContext] Provider mounted');\r\n    return () => {\r\n      console.log('[ToastContext] Provider unmounted');\r\n    };\r\n  }, []);\r\n\r\n  const addToast = React.useCallback(\r\n    (toast: Omit<ToasterToast, 'id'>) => {\r\n      const id = genId();\r\n      console.log(`[ToastContext] Adding toast: ${id}`, toast);\r\n\r\n      const newToast = {\r\n        ...toast,\r\n        id,\r\n        open: true,\r\n        onOpenChange: (open: boolean) => {\r\n          if (!open) {\r\n            dismissToast(id);\r\n          }\r\n        },\r\n      };\r\n\r\n      dispatch({ type: 'ADD_TOAST', toast: newToast });\r\n\r\n      return id;\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const updateToast = React.useCallback(\r\n    (toast: Partial<ToasterToast> & { id: string }) => {\r\n      console.log(`[ToastContext] Updating toast: ${toast.id}`, toast);\r\n      dispatch({ type: 'UPDATE_TOAST', toast });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const dismissToast = React.useCallback(\r\n    (toastId?: string) => {\r\n      console.log(`[ToastContext] Dismissing toast: ${toastId || 'all'}`);\r\n      dispatch({ type: 'DISMISS_TOAST', toastId });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const removeToast = React.useCallback(\r\n    (toastId?: string) => {\r\n      console.log(`[ToastContext] Removing toast: ${toastId || 'all'}`);\r\n      if (toastId !== undefined && toastTimeouts.has(toastId)) {\r\n        clearTimeout(toastTimeouts.get(toastId));\r\n        toastTimeouts.delete(toastId);\r\n      }\r\n\r\n      dispatch({ type: 'REMOVE_TOAST', toastId });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    state.toasts.forEach(toast => {\r\n      if (!toast.open && !toastTimeouts.has(toast.id)) {\r\n        const timeout = setTimeout(() => {\r\n          removeToast(toast.id);\r\n        }, TOAST_REMOVE_DELAY);\r\n\r\n        toastTimeouts.set(toast.id, timeout);\r\n      }\r\n    });\r\n  }, [state.toasts, removeToast]);\r\n\r\n  // Store the context value in our global variable\r\n  const contextValue = {\r\n    toasts: state.toasts,\r\n    addToast,\r\n    removeToast,\r\n    updateToast,\r\n    dismissToast,\r\n  };\r\n\r\n  toastContextValue = contextValue;\r\n\r\n  console.log('[ToastContext] Rendering with state:', state);\r\n\r\n  return (\r\n    <ToastContext.Provider value={contextValue}>\r\n      {children}\r\n      <ToastProvider>\r\n        {state.toasts.map(({ id, title, description, action, ...props }) => (\r\n          <Toast key={id} {...props}>\r\n            {title && <div className=\"grid gap-1\">{title}</div>}\r\n            {description && <div className=\"text-sm opacity-90\">{description}</div>}\r\n            {action}\r\n          </Toast>\r\n        ))}\r\n        <ToastViewport />\r\n      </ToastProvider>\r\n    </ToastContext.Provider>\r\n  );\r\n}\r\n\r\n// Create and export the toast function that doesn't use hooks directly\r\nexport function toast(props: Omit<ToasterToast, 'id'>) {\r\n  try {\r\n    if (!toastContextValue) {\r\n      console.warn('[ToastContext] Toast context not available yet. Toast will not be displayed.');\r\n      console.log('[ToastContext] Toast props:', props);\r\n      return '';\r\n    }\r\n\r\n    return toastContextValue.addToast(props);\r\n  } catch (error) {\r\n    console.error('[ToastContext] Error displaying toast:', error);\r\n    console.log('[ToastContext] Toast props:', props);\r\n    return '';\r\n  }\r\n}\r\n\r\n// Helper functions\r\ntoast.success = function (props: { title: string; description: string }) {\r\n  return toast({ ...props, variant: 'default' });\r\n};\r\n\r\ntoast.error = function (props: { title: string; description: string }) {\r\n  return toast({ ...props, variant: 'destructive' });\r\n};\r\n\r\ntoast.warning = function (props: { title: string; description: string }) {\r\n  return toast({ ...props, variant: 'warning' });\r\n};\r\n\r\ntoast.info = function (props: { title: string; description: string }) {\r\n  return toast({ ...props, variant: 'info' });\r\n};\r\n","/**\n * API Service\n * Provides functions to interact with the Supabase API\n */\n\nimport { supabase, getUserSession, getCurrentUser } from './supabaseClient';\nimport type { User } from '@supabase/supabase-js';\n\n// Types\ninterface SignInCredentials {\n  email: string;\n  password: string;\n}\n\ninterface SignUpCredentials extends SignInCredentials {\n  name?: string;\n  role?: string;\n  dealership_id?: string;\n}\n\ninterface AuthResponse {\n  user: User | null;\n  session: any | null;\n  error?: Error | null;\n}\n\nexport interface Sale {\n  id: string;\n  dealership_id: string;\n  sale_date: string;\n  amount: number;\n  // Add other sale fields as needed\n}\n\nexport interface Metric {\n  id: string;\n  dealership_id: string;\n  metric_date: string;\n  value: number;\n  type: string;\n  // Add other metric fields as needed\n}\n\nexport interface FniDetail {\n  id: string;\n  sale_id: string;\n  product_type: string;\n  amount: number;\n  // Add other F&I fields as needed\n}\n\nexport interface DealershipGroup {\n  id: number;\n  name: string;\n  logo_url?: string;\n  brands?: string | string[]; // Can be either a JSON string or an array of strings\n  created_at?: string;\n}\n\nexport interface Dealership {\n  id: number;\n  name: string;\n  group_id?: number;\n  schema_name: string;\n  logo_url?: string;\n  locations?: any[];\n  brands?: string[];\n  created_at?: string;\n}\n\nexport interface Role {\n  id: number;\n  name: string;\n  description?: string;\n}\n\nexport interface SignupRequest {\n  id: string;\n  dealership_name: string;\n  contact_person: string;\n  email: string;\n  tier: 'free_trial' | 'finance_manager' | 'dealership' | 'dealer_group';\n  add_ons?: string[]; // For storing + Version and ++ Version add-ons\n  stripe_subscription_id?: string;\n  status: 'pending' | 'approved' | 'rejected';\n  created_at: string;\n  updated_at: string;\n  processed_at?: string;\n  processed_by?: string;\n}\n\n// Base API configuration\nconst API_URL = import.meta.env.VITE_API_URL || 'http://localhost:3000';\n\n// Helper to handle API responses\nconst handleResponse = async (response: Response) => {\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.message || 'API request failed');\n  }\n  return response.json();\n};\n\n// Get auth headers for API requests\nconst getAuthHeaders = async () => {\n  const user = await getCurrentUser();\n  if (!user) {\n    throw new Error('No authenticated user');\n  }\n\n  const {\n    data: { session },\n    error,\n  } = await supabase.auth.getSession();\n  if (error || !session) {\n    throw new Error('Failed to get auth session');\n  }\n\n  return {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${session.access_token}`,\n  };\n};\n\n// Generic API request function with auth\nexport const apiRequest = async <T>(endpoint: string, options: RequestInit = {}): Promise<T> => {\n  try {\n    const headers = await getAuthHeaders();\n    const response = await fetch(`${API_URL}${endpoint}`, {\n      ...options,\n      headers: {\n        ...headers,\n        ...options.headers,\n      },\n    });\n    return handleResponse(response);\n  } catch (error) {\n    console.error('API request failed:', error);\n    throw error;\n  }\n};\n\n// Example API methods\nexport const getDealershipBasicInfo = async (dealershipId: string) => {\n  return apiRequest(`/dealerships/${dealershipId}`);\n};\n\nexport const updateDealershipData = async (dealershipId: string, data: any) => {\n  return apiRequest(`/dealerships/${dealershipId}`, {\n    method: 'PUT',\n    body: JSON.stringify(data),\n  });\n};\n\nexport const getSalesData = async (dealershipId: string, params?: Record<string, string>) => {\n  const queryString = params ? new URLSearchParams(params).toString() : '';\n  return apiRequest(`/dealerships/${dealershipId}/sales${queryString ? `?${queryString}` : ''}`);\n};\n\nexport const getMetrics = async (dealershipId: string, timeframe?: string) => {\n  const query = timeframe ? `?timeframe=${timeframe}` : '';\n  return apiRequest(`/dealerships/${dealershipId}/metrics${query}`);\n};\n\nexport const getFniDetails = async (dealershipId: string, params?: Record<string, string>) => {\n  const queryString = params ? new URLSearchParams(params).toString() : '';\n  return apiRequest(`/dealerships/${dealershipId}/fni${queryString ? `?${queryString}` : ''}`);\n};\n\n// Authentication Functions\nexport async function signIn(credentials: SignInCredentials): Promise<AuthResponse> {\n  try {\n    console.log('Attempting sign in for:', credentials.email);\n\n    const { data, error } = await supabase.auth.signInWithPassword({\n      email: credentials.email,\n      password: credentials.password,\n    });\n\n    if (error) {\n      console.error('Sign in error:', error);\n      throw error;\n    }\n\n    if (!data.user) {\n      throw new Error('No user returned from authentication');\n    }\n\n    // Get the user profile from the profiles table\n    const { data: profileData, error: profileError } = await supabase\n      .from('profiles')\n      .select('*')\n      .eq('id', data.user.id)\n      .single();\n\n    if (profileError) {\n      console.error('Profile fetch error:', profileError);\n    }\n\n    // Combine auth user with profile data\n    const userWithProfile = profileData ? { ...data.user, ...profileData } : data.user;\n\n    console.log('Sign in successful:', { userId: data.user.id });\n\n    return {\n      user: userWithProfile,\n      session: data.session,\n    };\n  } catch (error) {\n    console.error('Sign in failed:', error);\n    throw error;\n  }\n}\n\nexport async function signUp(credentials: SignUpCredentials): Promise<AuthResponse> {\n  try {\n    const { data, error } = await supabase.auth.signUp({\n      email: credentials.email,\n      password: credentials.password,\n      options: {\n        data: {\n          name: credentials.name,\n          role: credentials.role,\n          dealership_id: credentials.dealership_id,\n        },\n      },\n    });\n\n    if (error) {\n      console.error('Sign up error:', error);\n      throw error;\n    }\n\n    return {\n      user: data.user,\n      session: data.session,\n    };\n  } catch (error) {\n    console.error('Sign up failed:', error);\n    throw error;\n  }\n}\n\nexport async function signOut(): Promise<void> {\n  const { error } = await supabase.auth.signOut();\n  if (error) {\n    console.error('Sign out error:', error);\n    throw error;\n  }\n}\n\nexport async function getProfile(): Promise<User | null> {\n  try {\n    const user = await getCurrentUser();\n    if (!user) {\n      console.log('No authenticated user found');\n      return null;\n    }\n\n    const { data, error } = await supabase.from('profiles').select('*').eq('id', user.id).single();\n\n    if (error) {\n      console.error('Profile fetch error:', error);\n      return user;\n    }\n\n    return {\n      ...user,\n      ...data,\n    };\n  } catch (error) {\n    console.error('Get profile error:', error);\n    return null;\n  }\n}\n\n// Sales Functions\nexport async function getSales(dealershipId?: string): Promise<Sale[]> {\n  try {\n    let query = supabase.from('sales').select('*');\n    if (dealershipId) {\n      query = query.eq('dealership_id', dealershipId);\n    }\n    const { data, error } = await query;\n    if (error) throw error;\n    return data;\n  } catch (error) {\n    console.error('Get sales error:', error);\n    throw error;\n  }\n}\n\nexport async function createSale(sale: Omit<Sale, 'id'>): Promise<Sale> {\n  const { data, error } = await supabase.from('sales').insert([sale]).select().single();\n\n  if (error) throw error;\n  return data;\n}\n\n// Metrics Functions\nexport async function getMetricsData(dealershipId?: string, timeframe?: string): Promise<Metric[]> {\n  try {\n    let query = supabase.from('metrics').select('*');\n    if (dealershipId) {\n      query = query.eq('dealership_id', dealershipId);\n    }\n    if (timeframe) {\n      query = query.gte('metric_date', timeframe);\n    }\n    const { data, error } = await query;\n    if (error) throw error;\n    return data;\n  } catch (error) {\n    console.error('Get metrics error:', error);\n    throw error;\n  }\n}\n\n// F&I Functions\nexport async function getFniData(saleId?: string): Promise<FniDetail[]> {\n  try {\n    let query = supabase.from('fni_details').select('*');\n    if (saleId) {\n      query = query.eq('sale_id', saleId);\n    }\n    const { data, error } = await query;\n    if (error) throw error;\n    return data;\n  } catch (error) {\n    console.error('Get F&I details error:', error);\n    throw error;\n  }\n}\n\n// Dealership Functions\nexport async function getBasicDealerships() {\n  const { data, error } = await supabase.from('dealerships').select('*');\n\n  if (error) throw error;\n  return data;\n}\n\n// General data fetching function\nexport async function getData(table: string) {\n  const { data, error } = await supabase.from(table).select('*');\n\n  if (error) throw error;\n  return data;\n}\n\n// Connection test\nexport async function testConnection(): Promise<boolean> {\n  try {\n    const { data, error } = await supabase\n      .from('profiles')\n      .select('count', { count: 'exact', head: true });\n    return !error;\n  } catch (error) {\n    console.error('Connection test failed:', error);\n    return false;\n  }\n}\n\n// Dealership Group functions\nexport const getDealershipGroups = async () => {\n  try {\n    console.log('[apiService] Fetching dealership groups');\n    const { data, error } = await supabase\n      .from('dealership_groups')\n      .select('*') // Fetch all columns including brands and brands_list\n      .order('name');\n\n    if (error) {\n      console.error('[apiService] Error fetching dealership groups:', error);\n      throw error;\n    }\n\n    // For debugging, log the structure of the first group if available\n    if (data && data.length > 0) {\n      console.log('[apiService] First group structure:', data[0]);\n    }\n\n    console.log(`[apiService] Fetched ${data?.length || 0} dealership groups`);\n    return data;\n  } catch (error) {\n    console.error('[apiService] Exception in getDealershipGroups:', error);\n    throw error;\n  }\n};\n\nexport const createDealershipGroup = async groupData => {\n  try {\n    console.log('[apiService] Creating dealership group:', groupData);\n\n    // Create a copy of the data to avoid modifying the original\n    const dataToInsert = { ...groupData };\n\n    // Handle brands properly - ensure it's stored as a plain string in the database\n    if (dataToInsert.brands) {\n      if (Array.isArray(dataToInsert.brands)) {\n        console.log('[apiService] Brands provided as array, converting to string');\n        // Join the array into a comma-separated string instead of using JSON.stringify\n        dataToInsert.brands = dataToInsert.brands.join(',');\n      } else if (typeof dataToInsert.brands === 'string') {\n        console.log('[apiService] Brands provided as string:', dataToInsert.brands);\n        // Keep as is\n      }\n    }\n\n    const { data, error } = await supabase\n      .from('dealership_groups')\n      .insert(dataToInsert)\n      .select()\n      .single();\n\n    if (error) {\n      console.error('[apiService] Error creating dealership group:', error);\n      console.error('[apiService] Error details:', {\n        message: error.message,\n        code: error.code,\n        details: error.details,\n        hint: error.hint,\n      });\n\n      // Log full error as string for more details\n      console.error('[apiService] Full error JSON:', JSON.stringify(error, null, 2));\n\n      throw error;\n    }\n\n    console.log('[apiService] Created dealership group successfully:', data);\n    return data;\n  } catch (error) {\n    console.error('[apiService] Exception in createDealershipGroup:', error);\n    if (error instanceof Error) {\n      console.error('[apiService] Error message:', error.message);\n      console.error('[apiService] Error stack:', error.stack);\n    }\n\n    // Try to stringify the entire error object\n    try {\n      console.error(\n        '[apiService] Full error object:',\n        JSON.stringify(error, Object.getOwnPropertyNames(error))\n      );\n    } catch (e) {\n      console.error('[apiService] Could not stringify error object');\n    }\n\n    throw error;\n  }\n};\n\n// Dealership functions\nexport const getDealerships = async (groupId?: number) => {\n  try {\n    console.log('[apiService] Fetching dealerships', groupId ? `for group ${groupId}` : '');\n    let query = supabase.from('dealerships').select('*, dealership_groups(name)').order('name');\n\n    if (groupId) {\n      query = query.eq('group_id', groupId);\n    }\n\n    const { data, error } = await query;\n\n    if (error) {\n      console.error('[apiService] Error fetching dealerships:', error);\n      throw error;\n    }\n\n    console.log('[apiService] Fetched dealerships:', data);\n    return data;\n  } catch (error) {\n    console.error('[apiService] Exception in getDealerships:', error);\n    throw error;\n  }\n};\n\nexport const createDealership = async (dealershipData: Omit<Dealership, 'id'>) => {\n  try {\n    console.log('[apiService] Creating dealership, data:', dealershipData);\n\n    // Generate schema name if not provided\n    if (!dealershipData.schema_name) {\n      dealershipData.schema_name = `dealership_${Date.now()}`;\n    }\n\n    // Ensure group_id is handled correctly\n    if (dealershipData.group_id) {\n      console.log(`[apiService] Assigning dealership to group: ${dealershipData.group_id}`);\n    } else {\n      console.log('[apiService] No group assigned for this dealership');\n      // Make sure null is passed and not undefined to avoid database errors\n      dealershipData.group_id = null;\n    }\n\n    // Store brands properly\n    if (dealershipData.brands && typeof dealershipData.brands === 'string') {\n      console.log('[apiService] Brands provided as string:', dealershipData.brands);\n      // Already a JSON string, no need to convert\n    } else if (Array.isArray(dealershipData.brands)) {\n      console.log('[apiService] Brands provided as array, converting to JSON');\n      dealershipData.brands = JSON.stringify(dealershipData.brands);\n    }\n\n    // Log the final data being sent to database\n    console.log(\n      '[apiService] Final dealership data for DB:',\n      JSON.stringify(dealershipData, null, 2)\n    );\n\n    const { data, error } = await supabase\n      .from('dealerships')\n      .insert(dealershipData)\n      .select()\n      .single();\n\n    if (error) {\n      console.error('[apiService] Error creating dealership:', error);\n      console.error('[apiService] Error details:', {\n        message: error.message,\n        code: error.code,\n        details: error.details,\n        hint: error.hint,\n      });\n      throw error;\n    }\n\n    console.log('[apiService] Created dealership successfully:', data);\n    return data;\n  } catch (error) {\n    console.error('[apiService] Exception in createDealership:', error);\n    if (error instanceof Error) {\n      console.error('[apiService] Error message:', error.message);\n      console.error('[apiService] Error stack:', error.stack);\n    }\n    throw error;\n  }\n};\n\n// Roles functions\nexport const getRoles = async () => {\n  try {\n    console.log('[apiService] Fetching roles');\n    const { data, error } = await supabase.from('roles').select('*').order('id');\n\n    if (error) {\n      console.error('[apiService] Error fetching roles:', error);\n      throw error;\n    }\n\n    console.log('[apiService] Fetched roles:', data);\n    return data;\n  } catch (error) {\n    console.error('[apiService] Exception in getRoles:', error);\n    throw error;\n  }\n};\n\n// User functions\nexport const updateUserRole = async (userId: string, roleId: number, dealershipId?: number) => {\n  try {\n    console.log(\n      `[apiService] Updating user ${userId} with role ${roleId} and dealership ${\n        dealershipId || 'none'\n      }`\n    );\n\n    const updateData: { role_id: number; dealership_id?: number } = {\n      role_id: roleId,\n    };\n\n    if (dealershipId) {\n      updateData.dealership_id = dealershipId;\n    }\n\n    const { data, error } = await supabase\n      .from('profiles')\n      .update(updateData)\n      .eq('id', userId)\n      .select()\n      .single();\n\n    if (error) {\n      console.error('[apiService] Error updating user role:', error);\n      throw error;\n    }\n\n    console.log('[apiService] Updated user role:', data);\n    return data;\n  } catch (error) {\n    console.error('[apiService] Exception in updateUserRole:', error);\n    throw error;\n  }\n};\n\n// Dealership-specific data functions\nexport const getDealershipData = async <T>(\n  dealershipId: number,\n  table: string,\n  columns: string = '*'\n): Promise<T[]> => {\n  try {\n    console.log(`[apiService] Fetching ${table} data for dealership ${dealershipId}`);\n\n    // First, get the schema name for this dealership\n    const { data: dealership, error: dealershipError } = await supabase\n      .from('dealerships')\n      .select('schema_name')\n      .eq('id', dealershipId)\n      .single();\n\n    if (dealershipError) {\n      console.error('[apiService] Error fetching dealership schema:', dealershipError);\n      throw dealershipError;\n    }\n\n    if (!dealership) {\n      console.error(`[apiService] Dealership with ID ${dealershipId} not found`);\n      throw new Error(`Dealership with ID ${dealershipId} not found`);\n    }\n\n    // Query the table in the dealership's schema\n    const { data, error } = await supabase\n      .from(`${dealership.schema_name}.${table}`)\n      .select(columns);\n\n    if (error) {\n      console.error(`[apiService] Error fetching ${table} data:`, error);\n      throw error;\n    }\n\n    console.log(`[apiService] Fetched ${table} data:`, data);\n    return data as T[];\n  } catch (error) {\n    console.error(`[apiService] Exception in getDealershipData for ${table}:`, error);\n    throw error;\n  }\n};\n\nexport const createDealershipRecord = async <T>(\n  dealershipId: number,\n  table: string,\n  recordData: any\n): Promise<T> => {\n  try {\n    console.log(\n      `[apiService] Creating ${table} record for dealership ${dealershipId}:`,\n      recordData\n    );\n\n    // First, get the schema name for this dealership\n    const { data: dealership, error: dealershipError } = await supabase\n      .from('dealerships')\n      .select('schema_name')\n      .eq('id', dealershipId)\n      .single();\n\n    if (dealershipError) {\n      console.error('[apiService] Error fetching dealership schema:', dealershipError);\n      throw dealershipError;\n    }\n\n    if (!dealership) {\n      console.error(`[apiService] Dealership with ID ${dealershipId} not found`);\n      throw new Error(`Dealership with ID ${dealershipId} not found`);\n    }\n\n    // Insert the record into the dealership's schema\n    const { data, error } = await supabase\n      .from(`${dealership.schema_name}.${table}`)\n      .insert(recordData)\n      .select()\n      .single();\n\n    if (error) {\n      console.error(`[apiService] Error creating ${table} record:`, error);\n      throw error;\n    }\n\n    console.log(`[apiService] Created ${table} record:`, data);\n    return data as T;\n  } catch (error) {\n    console.error(`[apiService] Exception in createDealershipRecord for ${table}:`, error);\n    throw error;\n  }\n};\n\n// Debug functions\nexport const logSchemaOperation = async (action: string, details: any) => {\n  try {\n    console.log(`[apiService] Logging schema operation: ${action}`, details);\n\n    // Check if the logs table exists first\n    try {\n      const { data, error } = await supabase\n        .from('logs')\n        .insert({\n          action,\n          details,\n        })\n        .select()\n        .single();\n\n      if (error) {\n        console.log(\n          '[apiService] Error logging schema operation, continuing silently:',\n          error.message\n        );\n        return true; // Don't fail the operation just because logging failed\n      }\n\n      console.log('[apiService] Logged schema operation:', data);\n      return true;\n    } catch (innerError) {\n      console.log('[apiService] Schema operation logging failed, continuing silently');\n      return true; // Don't fail the operation just because logging failed\n    }\n  } catch (error) {\n    console.log('[apiService] Exception in logSchemaOperation, continuing silently');\n    return true; // Don't fail the operation just because logging failed\n  }\n};\n\nexport const testSchemaConnections = async () => {\n  try {\n    console.log('[apiService] Testing schema connections');\n\n    // Test global tables\n    const { data: groups, error: groupsError } = await supabase\n      .from('dealership_groups')\n      .select('count(*)');\n\n    if (groupsError) {\n      throw new Error(`Error connecting to dealership_groups: ${groupsError.message}`);\n    }\n\n    const { data: dealerships, error: dealershipsError } = await supabase\n      .from('dealerships')\n      .select('count(*)');\n\n    if (dealershipsError) {\n      throw new Error(`Error connecting to dealerships: ${dealershipsError.message}`);\n    }\n\n    // Get first dealership to test schema\n    const { data: firstDealership, error: firstDealershipError } = await supabase\n      .from('dealerships')\n      .select('schema_name')\n      .limit(1)\n      .single();\n\n    let schemaTestResult = { success: false, message: 'No dealerships found' };\n\n    if (firstDealership) {\n      try {\n        // Try to query a table in the dealership's schema\n        const { data: schemaTest, error: schemaTestError } = await supabase\n          .from(`${firstDealership.schema_name}.pay_plans`)\n          .select('count(*)');\n\n        if (schemaTestError) {\n          schemaTestResult = {\n            success: false,\n            message: `Error connecting to ${firstDealership.schema_name}: ${schemaTestError.message}`,\n          };\n        } else {\n          schemaTestResult = {\n            success: true,\n            message: `Successfully connected to ${firstDealership.schema_name}`,\n          };\n        }\n      } catch (schemaError) {\n        schemaTestResult = {\n          success: false,\n          message: `Exception connecting to ${firstDealership.schema_name}: ${String(schemaError)}`,\n        };\n      }\n    }\n\n    const results = {\n      globalTables: {\n        groups: { success: true, count: groups[0].count },\n        dealerships: { success: true, count: dealerships[0].count },\n      },\n      dealershipSchema: schemaTestResult,\n    };\n\n    console.log('[apiService] Schema connection test results:', results);\n    return results;\n  } catch (error) {\n    console.error('[apiService] Exception in testSchemaConnections:', error);\n    return {\n      globalTables: { success: false, message: String(error) },\n      dealershipSchema: { success: false, message: 'Could not test dealership schema' },\n    };\n  }\n};\n\n// New functions for dealership project management\n\n/**\n * Fetches the Supabase URL and anon key for a dealership project\n */\nexport const getDealershipSupabaseConfig = async (dealershipId: number) => {\n  try {\n    console.log('Fetching Supabase config for dealership:', dealershipId);\n    const { data, error } = await supabase\n      .from('dealerships')\n      .select('id, name, schema_name, supabase_url, supabase_key')\n      .eq('id', dealershipId)\n      .single();\n\n    if (error) {\n      console.error('Error fetching dealership Supabase config:', error);\n      throw error;\n    }\n\n    if (!data) {\n      throw new Error(`No dealership found with ID ${dealershipId}`);\n    }\n\n    if (!data.supabase_url || !data.supabase_key) {\n      // If the keys are not in the database, use the environment variables based on schema_name\n      const schemaName = data.schema_name || `dealership_${dealershipId}`;\n      const envUrlKey = `VITE_${schemaName.toUpperCase()}_SUPABASE_URL`;\n      const envAnonKey = `VITE_${schemaName.toUpperCase()}_SUPABASE_ANON_KEY`;\n\n      // Try to get from environment\n      const url = import.meta.env[envUrlKey] || '';\n      const key = import.meta.env[envAnonKey] || '';\n\n      if (!url || !key) {\n        console.warn(\n          `No Supabase config found for dealership ${dealershipId} in either database or environment`\n        );\n        return null;\n      }\n\n      return {\n        id: data.id,\n        name: data.name,\n        schema_name: schemaName,\n        supabase_url: url,\n        supabase_key: key,\n      };\n    }\n\n    return data;\n  } catch (error) {\n    console.error('Failed to get dealership Supabase config:', error);\n    return null;\n  }\n};\n\n/**\n * Test connection to a dealership's Supabase project\n */\nexport const testDealershipConnection = async (dealershipId: number) => {\n  try {\n    const config = await getDealershipSupabaseConfig(dealershipId);\n    if (!config || !config.supabase_url || !config.supabase_key) {\n      return { success: false, message: 'Missing Supabase configuration for this dealership' };\n    }\n\n    // Create a temporary client\n    const tempClient = createClient(config.supabase_url, config.supabase_key);\n\n    // Test the connection by fetching the PostgreSQL version\n    const { data, error } = await tempClient.rpc('get_pg_version');\n\n    if (error) {\n      console.error('Error testing dealership connection:', error);\n      return {\n        success: false,\n        message: `Connection failed: ${error.message}`,\n        error,\n      };\n    }\n\n    return {\n      success: true,\n      message: 'Connection successful',\n      data,\n      config,\n    };\n  } catch (error) {\n    console.error('Failed to test dealership connection:', error);\n    return {\n      success: false,\n      message: `Connection test failed: ${error}`,\n      error,\n    };\n  }\n};\n\n/**\n * Create a user in a dealership's Supabase project\n */\nexport const createDealershipUser = async (\n  dealershipId: number,\n  userData: {\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role_id: string;\n    phone_number?: string;\n  }\n) => {\n  try {\n    console.log(`Creating user in dealership ${dealershipId}:`, {\n      email: userData.email,\n      name: `${userData.first_name} ${userData.last_name}`,\n      role: userData.role_id,\n    });\n\n    // First, test the connection to ensure we have access\n    const connectionTest = await testDealershipConnection(dealershipId);\n    if (!connectionTest.success) {\n      throw new Error(`Cannot connect to dealership Supabase: ${connectionTest.message}`);\n    }\n\n    // Get the dealership supabase client\n    const dealershipClient = getDealershipSupabase(dealershipId);\n\n    // Create the user in the auth system\n    const { data: authData, error: authError } = await dealershipClient.auth.admin.createUser({\n      email: userData.email,\n      password: userData.password,\n      email_confirm: true,\n      user_metadata: {\n        first_name: userData.first_name,\n        last_name: userData.last_name,\n        full_name: `${userData.first_name} ${userData.last_name}`,\n        role_id: userData.role_id,\n        dealership_id: dealershipId,\n      },\n    });\n\n    if (authError) {\n      console.error('Error creating user in auth system:', authError);\n      throw authError;\n    }\n\n    if (!authData.user) {\n      throw new Error('User creation failed - no user returned');\n    }\n\n    // Add user to the public.users table\n    const { data: userData, error: userError } = await dealershipClient\n      .from('users')\n      .insert({\n        id: authData.user.id,\n        first_name: userData.first_name,\n        last_name: userData.last_name,\n        email: userData.email,\n        role_id: userData.role_id,\n        dealership_id: dealershipId,\n        phone_number: userData.phone_number,\n      })\n      .select()\n      .single();\n\n    if (userError) {\n      console.error('Error adding user to public.users table:', userError);\n\n      // Try to clean up the auth user if possible\n      try {\n        await dealershipClient.auth.admin.deleteUser(authData.user.id);\n      } catch (cleanupError) {\n        console.error('Error cleaning up auth user after failure:', cleanupError);\n      }\n\n      throw userError;\n    }\n\n    // Log the successful creation\n    await logSchemaOperation('create_dealership_user', {\n      dealership_id: dealershipId,\n      user_id: authData.user.id,\n      email: userData.email,\n      role_id: userData.role_id,\n    });\n\n    return {\n      success: true,\n      user: {\n        ...authData.user,\n        ...userData,\n      },\n    };\n  } catch (error) {\n    console.error(`Failed to create user in dealership ${dealershipId}:`, error);\n    return {\n      success: false,\n      error,\n    };\n  }\n};\n\n/**\n * Get users from a specific dealership Supabase project\n */\nexport const getDealershipUsers = async (dealershipId: number) => {\n  try {\n    // Test connection first\n    const connectionTest = await testDealershipConnection(dealershipId);\n    if (!connectionTest.success) {\n      throw new Error(`Cannot connect to dealership Supabase: ${connectionTest.message}`);\n    }\n\n    // Get the dealership client\n    const dealershipClient = getDealershipSupabase(dealershipId);\n\n    // Fetch users\n    const { data, error } = await dealershipClient\n      .from('users')\n      .select(\n        `\n        id, \n        first_name, \n        last_name, \n        email, \n        role_id,\n        phone_number,\n        roles(name)\n      `\n      )\n      .order('last_name', { ascending: true });\n\n    if (error) {\n      console.error(`Error fetching users from dealership ${dealershipId}:`, error);\n      throw error;\n    }\n\n    return data || [];\n  } catch (error) {\n    console.error(`Failed to get users from dealership ${dealershipId}:`, error);\n    throw error;\n  }\n};\n\n// Function to create a new schema for a dealership\nexport const createDealershipSchema = async (schemaName: string) => {\n  try {\n    console.log(`[apiService] Creating schema: ${schemaName}`);\n\n    // Create the schema\n    const { error: schemaError } = await supabase.rpc('create_dealership_schema', {\n      schema_name: schemaName,\n    });\n\n    if (schemaError) {\n      console.error('[apiService] Error creating schema:', schemaError);\n      throw schemaError;\n    }\n\n    // Log the creation\n    console.log(`[apiService] Schema ${schemaName} created successfully`);\n\n    return { success: true, message: `Schema ${schemaName} created successfully` };\n  } catch (error) {\n    console.error('[apiService] Exception in createDealershipSchema:', error);\n    throw error;\n  }\n};\n\n// Function to update a dealership's schema name\nexport const updateDealershipSchema = async (dealershipId: number, schemaName: string) => {\n  try {\n    console.log(`[apiService] Updating dealership ${dealershipId} with schema: ${schemaName}`);\n\n    const { data, error } = await supabase\n      .from('dealerships')\n      .update({ schema_name: schemaName })\n      .eq('id', dealershipId)\n      .select()\n      .single();\n\n    if (error) {\n      console.error('[apiService] Error updating dealership schema:', error);\n      throw error;\n    }\n\n    console.log('[apiService] Dealership schema updated:', data);\n    return data;\n  } catch (error) {\n    console.error('[apiService] Exception in updateDealershipSchema:', error);\n    throw error;\n  }\n};\n\n// Dealership group operations\nexport const deleteDealershipGroup = async (groupId: number) => {\n  try {\n    console.log('[apiService] Deleting dealership group:', groupId);\n\n    // First check if there are any dealerships in this group\n    const { data: relatedDealerships, error: checkError } = await supabase\n      .from('dealerships')\n      .select('id')\n      .eq('group_id', groupId);\n\n    if (checkError) {\n      console.error('[apiService] Error checking related dealerships:', checkError);\n      throw checkError;\n    }\n\n    // Don't allow deletion if there are dealerships in this group\n    if (relatedDealerships && relatedDealerships.length > 0) {\n      throw new Error(\n        `Cannot delete group: ${relatedDealerships.length} dealership(s) are associated with this group`\n      );\n    }\n\n    // Delete the group\n    const { error } = await supabase.from('dealership_groups').delete().eq('id', groupId);\n\n    if (error) {\n      console.error('[apiService] Error deleting dealership group:', error);\n      throw error;\n    }\n\n    console.log('[apiService] Successfully deleted dealership group:', groupId);\n    return { success: true };\n  } catch (error) {\n    console.error('[apiService] Exception in deleteDealershipGroup:', error);\n    throw error;\n  }\n};\n\n// Dealership operations\nexport const deleteDealership = async (dealershipId: number) => {\n  try {\n    console.log('[apiService] Deleting dealership:', dealershipId);\n\n    // Get the dealership to find its schema name\n    const { data: dealership, error: getError } = await supabase\n      .from('dealerships')\n      .select('schema_name')\n      .eq('id', dealershipId)\n      .single();\n\n    if (getError) {\n      console.error('[apiService] Error getting dealership before delete:', getError);\n      throw getError;\n    }\n\n    if (!dealership) {\n      throw new Error('Dealership not found');\n    }\n\n    // Delete the dealership\n    const { error: deleteError } = await supabase\n      .from('dealerships')\n      .delete()\n      .eq('id', dealershipId);\n\n    if (deleteError) {\n      console.error('[apiService] Error deleting dealership:', deleteError);\n      throw deleteError;\n    }\n\n    // Note: We're keeping the schema in the database for data recovery purposes\n    // A full schema delete would require admin privileges and should be done carefully\n\n    console.log('[apiService] Successfully deleted dealership:', dealershipId);\n    return { success: true, schemaName: dealership.schema_name };\n  } catch (error) {\n    console.error('[apiService] Exception in deleteDealership:', error);\n    throw error;\n  }\n};\n\n/**\n * Gets pending signup requests\n */\nexport const getSignupRequests = async (): Promise<SignupRequest[]> => {\n  try {\n    console.log('[apiService] Fetching signup requests');\n\n    const { data, error } = await supabase\n      .from('signup_requests')\n      .select('*')\n      .order('created_at', { ascending: false });\n\n    if (error) {\n      console.error('[apiService] Error fetching signup requests:', error);\n      throw error;\n    }\n\n    console.log(`[apiService] Retrieved ${data?.length || 0} signup requests`);\n    return data || [];\n  } catch (error) {\n    console.error('[apiService] Error in getSignupRequests:', error);\n    throw error;\n  }\n};\n\n/**\n * Approves a signup request and creates necessary resources\n */\nexport const approveSignupRequest = async (\n  requestId: string,\n  options: {\n    createSchema?: boolean;\n    schemaName?: string;\n    adminEmail?: string;\n    adminName?: string;\n    tempPassword?: string;\n    addOns?: string[];\n    isDealerGroup?: boolean;\n    groupLevel?: string;\n    dealershipCount?: number;\n  }\n): Promise<{\n  success: boolean;\n  message: string;\n  error?: any;\n  groupId?: number;\n  dealershipIds?: number[];\n}> => {\n  try {\n    console.log(`[apiService] Approving signup request: ${requestId}`);\n    const user = await getCurrentUser();\n\n    if (!user) {\n      throw new Error('Not authenticated');\n    }\n\n    // Get the signup request\n    const { data: requestData, error: requestError } = await supabase\n      .from('signup_requests')\n      .select('*')\n      .eq('id', requestId)\n      .single();\n\n    if (requestError) {\n      console.error(`[apiService] Error fetching signup request: ${requestError.message}`);\n      throw requestError;\n    }\n\n    const request = requestData;\n    console.log('[apiService] Found signup request:', request);\n\n    // First, update request status\n    const { error: updateError } = await supabase\n      .from('signup_requests')\n      .update({ status: 'approved', approved_at: new Date().toISOString() })\n      .eq('id', requestId);\n\n    if (updateError) {\n      console.error(`[apiService] Error updating signup request: ${updateError.message}`);\n      throw updateError;\n    }\n\n    // Group signup management\n    if (options.isDealerGroup) {\n      return await handleDealerGroupSignup(request, options);\n    }\n    // Finance Manager Only signup management\n    else if (request.tier === 'finance_manager_only') {\n      return await handleFinanceManagerSignup(request, options);\n    }\n    // Regular dealership signup management\n    else {\n      console.log(`[apiService] Handling dealership signup for ${request.dealership_name}`);\n\n      // Create schema if requested\n      let schemaName = options.schemaName;\n\n      if (options.createSchema && schemaName) {\n        console.log(`[apiService] Creating schema: ${schemaName}`);\n        const { success: schemaSuccess, error: schemaError } = await createDealershipSchema(\n          schemaName\n        );\n\n        if (!schemaSuccess) {\n          console.error(`[apiService] Error creating schema: ${schemaError}`);\n          throw schemaError;\n        }\n      }\n\n      // Create a dealership record\n      const { data: dealershipData, error: dealershipError } = await supabase\n        .from('dealerships')\n        .insert({\n          name: request.dealership_name,\n          schema_name: schemaName,\n          tier: request.tier,\n          add_ons: request.add_ons || [],\n          status: 'active',\n          contact_email: request.email,\n          contact_name: request.contact_person,\n          contact_phone: request.phone,\n          subscription_status: 'active',\n          created_by: user.id,\n        })\n        .select()\n        .single();\n\n      if (dealershipError) {\n        console.error(`[apiService] Error creating dealership: ${dealershipError.message}`);\n        throw dealershipError;\n      }\n\n      const dealershipId = dealershipData.id;\n      console.log(`[apiService] Created dealership with ID: ${dealershipId}`);\n\n      // Create the dealership admin user if email provided\n      if (options.adminEmail) {\n        console.log(`[apiService] Creating admin user: ${options.adminEmail}`);\n\n        // Check if user already exists\n        const { data: existingUser, error: existingUserError } = await supabase\n          .from('profiles')\n          .select('id')\n          .eq('email', options.adminEmail)\n          .single();\n\n        if (existingUserError && existingUserError.code !== 'PGRST116') {\n          console.error(\n            `[apiService] Error checking for existing user: ${existingUserError.message}`\n          );\n          throw existingUserError;\n        }\n\n        if (existingUser) {\n          console.log(`[apiService] User already exists: ${options.adminEmail}`);\n\n          // Update existing user to add dealership admin role\n          const { error: updateUserError } = await supabase\n            .from('profiles')\n            .update({\n              dealership_id: dealershipId,\n              role: 'dealership_admin',\n            })\n            .eq('email', options.adminEmail);\n\n          if (updateUserError) {\n            console.error(`[apiService] Error updating user: ${updateUserError.message}`);\n            throw updateUserError;\n          }\n        } else {\n          // Create new user\n          const { error: signupError, data: signupData } = await supabase.auth.signUp({\n            email: options.adminEmail,\n            password: options.tempPassword || generatePassword(),\n          });\n\n          if (signupError) {\n            console.error(`[apiService] Error creating user: ${signupError.message}`);\n            throw signupError;\n          }\n\n          // Create profile record\n          const { error: profileError } = await supabase.from('profiles').insert({\n            id: signupData?.user?.id,\n            email: options.adminEmail,\n            dealership_id: dealershipId,\n            role: 'dealership_admin',\n            first_name: options.adminName?.split(' ')[0] || '',\n            last_name: options.adminName?.split(' ').slice(1).join(' ') || '',\n          });\n\n          if (profileError) {\n            console.error(`[apiService] Error creating profile: ${profileError.message}`);\n            throw profileError;\n          }\n        }\n      }\n\n      // Create a subscription event record for billing tracking\n      await recordSubscriptionEvent({\n        dealership_id: dealershipId,\n        event_type: 'signup',\n        tier: request.tier,\n        add_ons: request.add_ons || [],\n        user_id: user.id,\n      });\n\n      console.log(\n        `[apiService] Dealership signup approved and setup complete for ${request.dealership_name}`\n      );\n\n      return {\n        success: true,\n        message: `Dealership ${request.dealership_name} created successfully`,\n        dealershipIds: [dealershipId],\n      };\n    }\n  } catch (error) {\n    console.error('[apiService] Error in approveSignupRequest:', error);\n    return {\n      success: false,\n      message: error instanceof Error ? error.message : 'An unknown error occurred',\n      error,\n    };\n  }\n};\n\n/**\n * Rejects a signup request\n */\nexport const rejectSignupRequest = async (\n  requestId: string,\n  reason?: string\n): Promise<{ success: boolean; message: string; error?: any }> => {\n  try {\n    console.log(`[apiService] Rejecting signup request: ${requestId}`);\n    const user = await getCurrentUser();\n\n    if (!user) {\n      throw new Error('Not authenticated');\n    }\n\n    // Update the request status to 'rejected'\n    const { error: updateError } = await supabase\n      .from('signup_requests')\n      .update({\n        status: 'rejected',\n        processed_at: new Date().toISOString(),\n        processed_by: user.id,\n        // Store rejection reason in additional metadata\n        metadata: { rejection_reason: reason || 'No reason provided' },\n      })\n      .eq('id', requestId);\n\n    if (updateError) {\n      console.error('[apiService] Error updating signup request status:', updateError);\n      throw updateError;\n    }\n\n    return { success: true, message: 'Signup request rejected successfully' };\n  } catch (error) {\n    console.error('[apiService] Error in rejectSignupRequest:', error);\n    return { success: false, message: 'Failed to reject signup request', error };\n  }\n};\n\n/**\n * Generates a random temporary password\n */\nconst generateTemporaryPassword = (length = 12): string => {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()';\n  let result = '';\n  for (let i = 0; i < length; i++) {\n    result += chars.charAt(Math.floor(Math.random() * chars.length));\n  }\n  return result;\n};\n\n/**\n * API service for handling deal-related data and goal tracking\n */\n\n// Define types for the goal tracking data\nexport interface Deal {\n  id: string;\n  salesperson_id: string;\n  sale_date: string;\n  front_end_gross?: number;\n  back_end_gross?: number;\n  [key: string]: any; // Allow for additional properties\n}\n\nexport interface GoalProgressMetrics {\n  expected: number;\n  actual: number;\n  progress: number;\n  status: 'on-track' | 'slightly-behind' | 'behind' | 'neutral';\n  progressRatio: number;\n}\n\nexport interface GoalTrackingData {\n  deals: Deal[];\n  daysOff: number[];\n  progressMetrics: GoalProgressMetrics;\n  daysInMonth: number;\n  currentDay: number;\n}\n\n/**\n * Gets all deals for the current user in the specified date range\n * @param userId - The ID of the current user\n * @param startDate - Start date in ISO format (YYYY-MM-DD)\n * @param endDate - End date in ISO format (YYYY-MM-DD)\n * @returns Promise with the deals data\n */\nexport const getUserDeals = async (\n  userId: string,\n  startDate: string,\n  endDate: string\n): Promise<Deal[]> => {\n  console.log('[apiService] Getting deals for user:', userId, 'from:', startDate, 'to:', endDate);\n\n  try {\n    const { data, error } = await supabase\n      .from('deals')\n      .select('*')\n      .eq('salesperson_id', userId)\n      .gte('sale_date', startDate)\n      .lte('sale_date', endDate);\n\n    if (error) {\n      console.error('[apiService] Error fetching deals:', error);\n      throw error;\n    }\n\n    console.log(`[apiService] Found ${data?.length || 0} deals`);\n    return data || [];\n  } catch (error) {\n    console.error('[apiService] Unexpected error fetching deals:', error);\n    throw error;\n  }\n};\n\n/**\n * Gets days off for a salesperson in the current month\n * @param userId - The ID of the current user\n * @param startDate - Start date in ISO format (YYYY-MM-DD)\n * @param endDate - End date in ISO format (YYYY-MM-DD)\n * @returns Promise with array of day numbers (1-31) that are days off\n */\nexport const getSalespersonDaysOff = async (\n  userId: string,\n  startDate: string,\n  endDate: string\n): Promise<number[]> => {\n  console.log('[apiService] Getting days off for user:', userId);\n\n  try {\n    // Query schedule data from Supabase\n    const { data, error } = await supabase\n      .from('schedule')\n      .select('*')\n      .eq('user_id', userId)\n      .gte('date', startDate)\n      .lte('date', endDate)\n      .eq('is_day_off', true);\n\n    if (error) {\n      console.error('[apiService] Error fetching schedule:', error);\n      // Return default days off if there's an error\n      return [5, 8, 15, 18, 25, 27, 29];\n    }\n\n    // Extract day numbers from dates\n    const daysOff =\n      data?.map(entry => {\n        const date = new Date(entry.date);\n        return date.getDate();\n      }) || [];\n\n    console.log('[apiService] Days off this month:', daysOff);\n\n    // If no days off are scheduled, return default pattern\n    if (daysOff.length === 0) {\n      console.log('[apiService] No days off found, using default pattern');\n      return [5, 8, 15, 18, 25, 27, 29];\n    }\n\n    return daysOff;\n  } catch (error) {\n    console.error('[apiService] Unexpected error fetching schedule:', error);\n    // Return default days off on error\n    return [5, 8, 15, 18, 25, 27, 29];\n  }\n};\n\n/**\n * Calculate expected sales based on the non-linear sales pace model\n * @param currentDay - The current day of the month\n * @param daysOff - Array of days that are days off\n * @returns The expected number of sales by the current day\n */\nexport const calculateExpectedSales = (currentDay: number, daysOff: number[]): number => {\n  let expectedSales = 0;\n\n  // Phase 1: Days 1-10 - 1 sale every 3 days (except days off)\n  for (let i = 1; i <= Math.min(10, currentDay); i++) {\n    if (!daysOff.includes(i) && i % 3 === 0) {\n      expectedSales++;\n    }\n  }\n\n  // Phase 2: Days 11-20 - 1 sale every 2 days (except days off)\n  if (currentDay > 10) {\n    for (let i = 11; i <= Math.min(20, currentDay); i++) {\n      if (!daysOff.includes(i) && i % 2 === 0) {\n        expectedSales++;\n      }\n    }\n  }\n\n  // Phase 3: Days 21-30/31 - 1 sale every day (except days off)\n  if (currentDay > 20) {\n    for (let i = 21; i <= currentDay; i++) {\n      if (!daysOff.includes(i)) {\n        expectedSales++;\n      }\n    }\n  }\n\n  console.log(`[apiService] Expected sales by day ${currentDay}:`, expectedSales);\n  return expectedSales;\n};\n\n/**\n * Calculate goal progress metrics\n * @param deals - Array of deal objects\n * @param currentDay - Current day of the month\n * @param daysOff - Array of days off\n * @param monthlyGoal - Monthly sales goal target\n * @returns Object with goal progress metrics\n */\nexport const calculateGoalProgress = (\n  deals: Deal[],\n  currentDay: number,\n  daysOff: number[],\n  monthlyGoal: number = 15\n): GoalProgressMetrics => {\n  // Calculate expected sales by the current day\n  const expectedSales = calculateExpectedSales(currentDay, daysOff);\n\n  // Count actual sales\n  const actualSales = deals.length;\n\n  // Calculate progress ratio\n  const progressRatio = actualSales / (expectedSales || 1); // Avoid division by zero\n\n  // Determine status based on progress ratio\n  let status: 'on-track' | 'slightly-behind' | 'behind' | 'neutral' = 'neutral';\n  if (progressRatio >= 1) {\n    status = 'on-track'; // Green\n  } else if (progressRatio >= 0.8) {\n    status = 'slightly-behind'; // Yellow\n  } else {\n    status = 'behind'; // Red\n  }\n\n  // Calculate overall progress percentage toward monthly goal\n  const progressPercentage = Math.min(100, Math.round((actualSales / monthlyGoal) * 100));\n\n  console.log('[apiService] Goal progress calculation:', {\n    currentDay,\n    expectedSales,\n    actualSales,\n    progressRatio,\n    status,\n    progressPercentage,\n  });\n\n  return {\n    expected: expectedSales,\n    actual: actualSales,\n    progress: progressPercentage,\n    status,\n    progressRatio,\n  };\n};\n\n/**\n * Get all data needed for goal tracking\n * @param userId - User ID of the salesperson\n * @returns Promise with the goal tracking data\n */\nexport const getGoalTrackingData = async (userId: string): Promise<GoalTrackingData> => {\n  // Get current month date range\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const currentMonth = currentDate.getMonth();\n  const currentDay = currentDate.getDate();\n\n  const startDate = new Date(currentYear, currentMonth, 1).toISOString().split('T')[0];\n  const endDate = new Date(currentYear, currentMonth + 1, 0).toISOString().split('T')[0];\n\n  try {\n    // Get deals and days off in parallel\n    const [deals, daysOff] = await Promise.all([\n      getUserDeals(userId, startDate, endDate),\n      getSalespersonDaysOff(userId, startDate, endDate),\n    ]);\n\n    // Calculate goal progress\n    const progressMetrics = calculateGoalProgress(deals, currentDay, daysOff);\n\n    return {\n      deals,\n      daysOff,\n      progressMetrics,\n      daysInMonth: new Date(currentYear, currentMonth + 1, 0).getDate(),\n      currentDay,\n    };\n  } catch (error) {\n    console.error('[apiService] Error in getGoalTrackingData:', error);\n    throw error;\n  }\n};\n\n/**\n * Sets up RLS policies to allow access across dealerships within a group\n */\nexport const setupGroupRlsPolicies = async (\n  groupId: number,\n  dealershipIds: number[]\n): Promise<{ success: boolean; message: string; error?: any }> => {\n  try {\n    console.log(\n      `[apiService] Setting up RLS policies for group ${groupId} with ${dealershipIds.length} dealerships`\n    );\n\n    // For each dealership in the group, we need to create policies:\n    // 1. For group_admin role to access all dealerships in the group\n    // 2. For area_vp role to access assigned dealerships\n\n    // First, get the role IDs\n    const { data: roles, error: rolesError } = await supabase\n      .from('roles')\n      .select('id, name')\n      .in('name', ['group_admin', 'area_vp', 'dealership_admin']);\n\n    if (rolesError) {\n      console.error('[apiService] Error fetching roles:', rolesError);\n      throw rolesError;\n    }\n\n    const groupAdminRoleId = roles.find(r => r.name === 'group_admin')?.id;\n    const areaVpRoleId = roles.find(r => r.name === 'area_vp')?.id;\n\n    if (!groupAdminRoleId || !areaVpRoleId) {\n      console.error('[apiService] Missing required role IDs');\n      throw new Error('Required role IDs not found');\n    }\n\n    console.log(\n      '[apiService] Found role IDs - Group Admin:',\n      groupAdminRoleId,\n      'Area VP:',\n      areaVpRoleId\n    );\n\n    // Create mapping records for each dealership in the group\n    const mappings = dealershipIds.map(dealershipId => ({\n      group_id: groupId,\n      dealership_id: dealershipId,\n      created_at: new Date().toISOString(),\n    }));\n\n    const { error: mappingError } = await supabase\n      .from('group_dealership_mappings')\n      .upsert(mappings);\n\n    if (mappingError) {\n      console.error('[apiService] Error creating group dealership mappings:', mappingError);\n      throw mappingError;\n    }\n\n    console.log(`[apiService] Created ${mappings.length} group dealership mappings`);\n\n    // Create an RLS policy that grants access to users with role_id = group_admin_role_id\n    // where user_metadata->group_id = the group_id of the dealership\n    for (const dealershipId of dealershipIds) {\n      // Create log entry for this setup\n      await logSchemaOperation('setup_group_rls', {\n        group_id: groupId,\n        dealership_id: dealershipId,\n        roles: {\n          group_admin: groupAdminRoleId,\n          area_vp: areaVpRoleId,\n        },\n      });\n    }\n\n    console.log('[apiService] Group RLS policies setup complete');\n\n    return {\n      success: true,\n      message: `RLS policies configured for group ${groupId}`,\n    };\n  } catch (error) {\n    console.error('[apiService] Error setting up group RLS policies:', error);\n    return {\n      success: false,\n      message: 'Failed to set up group RLS policies',\n      error,\n    };\n  }\n};\n\n/**\n * Creates a schema for a Finance Manager in Supabase\n */\nexport const createFinanceManagerSchema = async (\n  schemaName: string\n): Promise<{ success: boolean; message: string; error?: any }> => {\n  try {\n    console.log(`[apiService] Creating finance manager schema: ${schemaName}`);\n\n    // Get current user for logging\n    const user = await getCurrentUser();\n\n    // Execute SQL to create schema\n    const { error: schemaError } = await supabase.rpc('create_schema', {\n      schema_name: schemaName,\n    });\n\n    if (schemaError) {\n      console.error(`[apiService] Error creating schema ${schemaName}:`, schemaError);\n      throw schemaError;\n    }\n\n    console.log(`[apiService] Schema ${schemaName} created successfully. Creating tables...`);\n\n    // Create deals table in the schema\n    const createDealsTableQuery = `\n      CREATE TABLE IF NOT EXISTS \"${schemaName}\".deals (\n        id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),\n        user_id UUID NOT NULL REFERENCES auth.users(id),\n        deal_number TEXT,\n        stock_number TEXT,\n        vin TEXT,\n        customer_name TEXT,\n        vehicle TEXT,\n        sale_date DATE NOT NULL DEFAULT CURRENT_DATE,\n        amount NUMERIC(10,2),\n        products JSONB DEFAULT '[]',\n        profit NUMERIC(10,2) DEFAULT 0,\n        status TEXT DEFAULT 'pending',\n        deal_details JSONB,\n        created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),\n        updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW()\n      );\n    `;\n\n    const { error: tableError } = await supabase.rpc('run_sql', {\n      sql_query: createDealsTableQuery,\n    });\n\n    if (tableError) {\n      console.error(`[apiService] Error creating deals table in ${schemaName}:`, tableError);\n      throw tableError;\n    }\n\n    // Set RLS policies for the deals table\n    const createRlsPolicyQuery = `\n      -- Enable RLS on the deals table\n      ALTER TABLE \"${schemaName}\".deals ENABLE ROW LEVEL SECURITY;\n      \n      -- Create policy for users to select their own deals\n      CREATE POLICY \"Users can view their own deals\" \n      ON \"${schemaName}\".deals FOR SELECT \n      USING (auth.uid() = user_id);\n      \n      -- Create policy for users to insert their own deals\n      CREATE POLICY \"Users can insert their own deals\" \n      ON \"${schemaName}\".deals FOR INSERT \n      WITH CHECK (auth.uid() = user_id);\n      \n      -- Create policy for users to update their own deals\n      CREATE POLICY \"Users can update their own deals\" \n      ON \"${schemaName}\".deals FOR UPDATE\n      USING (auth.uid() = user_id);\n    `;\n\n    const { error: rlsError } = await supabase.rpc('run_sql', {\n      sql_query: createRlsPolicyQuery,\n    });\n\n    if (rlsError) {\n      console.error(`[apiService] Error setting RLS policies in ${schemaName}:`, rlsError);\n      throw rlsError;\n    }\n\n    // Log the schema operation\n    await logSchemaOperation('create_finance_manager_schema', {\n      schemaName,\n      createdBy: user?.id,\n      timestamp: new Date().toISOString(),\n    });\n\n    console.log(`[apiService] Finance manager schema ${schemaName} setup completed successfully`);\n\n    return {\n      success: true,\n      message: `Finance manager schema ${schemaName} created successfully`,\n    };\n  } catch (error) {\n    console.error(`[apiService] Error in createFinanceManagerSchema:`, error);\n    return {\n      success: false,\n      message: `Failed to create finance manager schema: ${error.message || error}`,\n      error,\n    };\n  }\n};\n\n/**\n * Logs a deal for a Finance Manager in their schema's deals table\n */\nexport const logFinanceManagerDeal = async (\n  schema: string,\n  dealData: {\n    deal_number?: string;\n    stock_number?: string;\n    vin?: string;\n    customer_name: string;\n    vehicle: string;\n    sale_date?: string;\n    amount?: number;\n    products?: string[];\n    profit?: number;\n    status?: string;\n    deal_details?: any;\n  }\n): Promise<{ success: boolean; deal?: any; message: string; error?: any }> => {\n  try {\n    console.log(`[apiService] Logging finance manager deal to schema: ${schema}`);\n    const user = await getCurrentUser();\n\n    if (!user) {\n      throw new Error('Not authenticated');\n    }\n\n    // Format the deal data\n    const formattedDeal = {\n      user_id: user.id,\n      deal_number: dealData.deal_number || `D${Math.floor(1000 + Math.random() * 9000)}`,\n      stock_number: dealData.stock_number || '',\n      vin: dealData.vin || '',\n      customer_name: dealData.customer_name,\n      vehicle: dealData.vehicle,\n      sale_date: dealData.sale_date || new Date().toISOString().split('T')[0],\n      amount: dealData.amount || 0,\n      products: dealData.products ? JSON.stringify(dealData.products) : '[]',\n      profit: dealData.profit || 0,\n      status: dealData.status || 'pending',\n      deal_details: dealData.deal_details ? JSON.stringify(dealData.deal_details) : '{}',\n      created_at: new Date().toISOString(),\n      updated_at: new Date().toISOString(),\n    };\n\n    // Construct SQL query to insert into the specific schema\n    const insertQuery = `\n      INSERT INTO \"${schema}\".deals (\n        user_id, deal_number, stock_number, vin, customer_name, \n        vehicle, sale_date, amount, products, profit, \n        status, deal_details, created_at, updated_at\n      ) \n      VALUES (\n        '${formattedDeal.user_id}', \n        '${formattedDeal.deal_number}', \n        '${formattedDeal.stock_number}', \n        '${formattedDeal.vin}', \n        '${formattedDeal.customer_name}', \n        '${formattedDeal.vehicle}', \n        '${formattedDeal.sale_date}', \n        ${formattedDeal.amount}, \n        '${formattedDeal.products}', \n        ${formattedDeal.profit}, \n        '${formattedDeal.status}', \n        '${formattedDeal.deal_details}',\n        '${formattedDeal.created_at}',\n        '${formattedDeal.updated_at}'\n      )\n      RETURNING *;\n    `;\n\n    // Execute the query\n    const { data, error } = await supabase.rpc('run_sql', {\n      sql_query: insertQuery,\n    });\n\n    if (error) {\n      console.error(`[apiService] Error inserting deal into ${schema}:`, error);\n      throw error;\n    }\n\n    console.log(`[apiService] Deal logged successfully to ${schema}:`, data);\n\n    return {\n      success: true,\n      deal: data && data.length > 0 ? data[0] : null,\n      message: 'Deal logged successfully',\n    };\n  } catch (error) {\n    console.error(`[apiService] Error in logFinanceManagerDeal:`, error);\n    return {\n      success: false,\n      message: `Failed to log deal: ${error.message || error}`,\n      error,\n    };\n  }\n};\n\n/**\n * Gets deals for a Finance Manager from their schema\n */\nexport const getFinanceManagerDeals = async (\n  schema: string,\n  options?: {\n    limit?: number;\n    offset?: number;\n    sortBy?: string;\n    sortDirection?: 'asc' | 'desc';\n    filter?: Record<string, any>;\n  }\n): Promise<{ success: boolean; deals: any[]; count: number; message: string; error?: any }> => {\n  try {\n    console.log(`[apiService] Getting finance manager deals from schema: ${schema}`);\n    const user = await getCurrentUser();\n\n    if (!user) {\n      throw new Error('Not authenticated');\n    }\n\n    const limit = options?.limit || 50;\n    const offset = options?.offset || 0;\n    const sortBy = options?.sortBy || 'created_at';\n    const sortDirection = options?.sortDirection || 'desc';\n\n    // Build the filter conditions if provided\n    let filterCondition = '';\n    if (options?.filter) {\n      const conditions = [];\n      Object.entries(options.filter).forEach(([key, value]) => {\n        if (value !== undefined && value !== null) {\n          // Handle string values\n          if (typeof value === 'string') {\n            conditions.push(`${key} ILIKE '%${value}%'`);\n          }\n          // Handle numeric values\n          else if (typeof value === 'number') {\n            conditions.push(`${key} = ${value}`);\n          }\n          // Handle boolean values\n          else if (typeof value === 'boolean') {\n            conditions.push(`${key} = ${value}`);\n          }\n          // Handle date ranges\n          else if (value.start && value.end) {\n            conditions.push(`${key} BETWEEN '${value.start}' AND '${value.end}'`);\n          }\n        }\n      });\n      if (conditions.length > 0) {\n        filterCondition = `AND ${conditions.join(' AND ')}`;\n      }\n    }\n\n    // Construct SQL query to select from the specific schema\n    const selectQuery = `\n      SELECT * FROM \"${schema}\".deals \n      WHERE user_id = '${user.id}' ${filterCondition}\n      ORDER BY ${sortBy} ${sortDirection}\n      LIMIT ${limit} OFFSET ${offset};\n    `;\n\n    // Also get the total count for pagination\n    const countQuery = `\n      SELECT COUNT(*) FROM \"${schema}\".deals \n      WHERE user_id = '${user.id}' ${filterCondition};\n    `;\n\n    // Execute the query\n    const { data, error } = await supabase.rpc('run_sql', {\n      sql_query: selectQuery,\n    });\n\n    if (error) {\n      console.error(`[apiService] Error selecting deals from ${schema}:`, error);\n      throw error;\n    }\n\n    // Get the count\n    const { data: countData, error: countError } = await supabase.rpc('run_sql', {\n      sql_query: countQuery,\n    });\n\n    if (countError) {\n      console.error(`[apiService] Error counting deals in ${schema}:`, countError);\n      throw countError;\n    }\n\n    const count = countData && countData.length > 0 ? parseInt(countData[0].count) : 0;\n\n    console.log(\n      `[apiService] Retrieved ${data ? data.length : 0} deals from ${schema} (total: ${count})`\n    );\n\n    return {\n      success: true,\n      deals: data || [],\n      count,\n      message: `Retrieved ${data ? data.length : 0} deals successfully`,\n    };\n  } catch (error) {\n    console.error(`[apiService] Error in getFinanceManagerDeals:`, error);\n    return {\n      success: false,\n      deals: [],\n      count: 0,\n      message: `Failed to get deals: ${error.message || error}`,\n      error,\n    };\n  }\n};\n\n/**\n * Notifies master admin of new signup requests\n */\nexport const notifyMasterAdminOfSignup = async (\n  signupRequest: SignupRequest\n): Promise<{ success: boolean; message: string; error?: any }> => {\n  try {\n    console.log(\n      `[apiService] Notifying master admin of new signup: ${signupRequest.dealership_name}`\n    );\n\n    // Log notification attempt\n    const notificationData = {\n      type: 'signup_notification',\n      signup_id: signupRequest.id,\n      dealership_name: signupRequest.dealership_name,\n      email: signupRequest.email,\n      tier: signupRequest.tier,\n      timestamp: new Date().toISOString(),\n    };\n\n    // Create a notification record in the database\n    const { error: notificationError } = await supabase.from('admin_notifications').insert({\n      type: 'signup_request',\n      content: {\n        signup_id: signupRequest.id,\n        dealership_name: signupRequest.dealership_name,\n        contact_person: signupRequest.contact_person,\n        email: signupRequest.email,\n        tier: signupRequest.tier,\n        add_ons: signupRequest.add_ons,\n      },\n      is_read: false,\n      created_at: new Date().toISOString(),\n    });\n\n    if (notificationError) {\n      console.error('[apiService] Error creating notification record:', notificationError);\n      // Don't throw - this shouldn't block the signup process\n    }\n\n    // In a real system, we would send an email or push notification here\n    // For now, just log it\n    console.log(\n      `[apiService] Would send email to master admin about new ${signupRequest.tier} signup: ${signupRequest.dealership_name}`\n    );\n\n    return {\n      success: true,\n      message: 'Notification sent to master admin',\n    };\n  } catch (error) {\n    console.error('[apiService] Error notifying master admin:', error);\n    // Return success anyway - we don't want signup to fail if notification fails\n    return {\n      success: false,\n      message: 'Failed to send notification to master admin',\n      error,\n    };\n  }\n};\n\n/**\n * Get user limits for a dealership based on subscription tier and add-ons\n */\nexport const getDealershipUserLimits = async (\n  dealershipId: string\n): Promise<{\n  success: boolean;\n  limits?: {\n    sales_people: number;\n    finance_managers: number;\n    sales_managers: number;\n    general_managers: number;\n    finance_assistants: number;\n    others: number;\n  };\n  tier?: string;\n  add_ons?: string[];\n  error?: any;\n}> => {\n  try {\n    console.log(`[apiService] Getting user limits for dealership: ${dealershipId}`);\n\n    // Get the dealership details including its subscription tier and add-ons\n    const { data: dealership, error: dealershipError } = await supabase\n      .from('dealerships')\n      .select('*')\n      .eq('id', dealershipId)\n      .single();\n\n    if (dealershipError) {\n      console.error(`[apiService] Error getting dealership info: ${dealershipError.message}`);\n      throw dealershipError;\n    }\n\n    // Base limits for the dealership tier\n    let limits = {\n      sales_people: 10,\n      finance_managers: 3,\n      sales_managers: 3,\n      general_managers: 1,\n      finance_assistants: 2,\n      others: 2,\n    };\n\n    // Adjust limits based on add-ons\n    const addOns = dealership.add_ons || [];\n\n    if (addOns.includes('plus')) {\n      // + Version add-on increases limits by 50%\n      limits = {\n        sales_people: 15,\n        finance_managers: 5,\n        sales_managers: 5,\n        general_managers: 2,\n        finance_assistants: 3,\n        others: 3,\n      };\n    }\n\n    if (addOns.includes('plusplus')) {\n      // ++ Version add-on increases limits by 150%\n      limits = {\n        sales_people: 25,\n        finance_managers: 8,\n        sales_managers: 8,\n        general_managers: 3,\n        finance_assistants: 5,\n        others: 5,\n      };\n    }\n\n    return {\n      success: true,\n      limits,\n      tier: dealership.tier,\n      add_ons: addOns,\n    };\n  } catch (error) {\n    console.error(`[apiService] Error getting user limits: ${error}`);\n    return {\n      success: false,\n      error,\n    };\n  }\n};\n\n/**\n * Check if a dealership can add a user of a specific role\n */\nexport const canAddUserWithRole = async (\n  dealershipId: string,\n  role: string\n): Promise<{\n  success: boolean;\n  canAdd: boolean;\n  currentCount?: number;\n  limit?: number;\n  error?: any;\n}> => {\n  try {\n    console.log(\n      `[apiService] Checking if dealership ${dealershipId} can add user with role ${role}`\n    );\n\n    // Get the dealership's user limits\n    const { success, limits, error } = await getDealershipUserLimits(dealershipId);\n\n    if (!success || !limits) {\n      throw error || new Error('Failed to get user limits');\n    }\n\n    // Count existing users by role\n    const { data: users, error: usersError } = await supabase\n      .from('profiles')\n      .select('role')\n      .eq('dealership_id', dealershipId);\n\n    if (usersError) {\n      console.error(`[apiService] Error counting users: ${usersError.message}`);\n      throw usersError;\n    }\n\n    // Map the role to its category\n    let roleCategory;\n    if (role.includes('sales') && !role.includes('manager')) {\n      roleCategory = 'sales_people';\n    } else if (\n      role.includes('finance') &&\n      !role.includes('manager') &&\n      !role.includes('director')\n    ) {\n      roleCategory = 'finance_assistants';\n    } else if (\n      role.includes('finance') &&\n      (role.includes('manager') || role.includes('director'))\n    ) {\n      roleCategory = 'finance_managers';\n    } else if (role.includes('sales') && role.includes('manager')) {\n      roleCategory = 'sales_managers';\n    } else if (role.includes('general') && role.includes('manager')) {\n      roleCategory = 'general_managers';\n    } else {\n      roleCategory = 'others';\n    }\n\n    // Count users in this category\n    const count = users.filter(user => {\n      if (roleCategory === 'sales_people') {\n        return user.role.includes('sales') && !user.role.includes('manager');\n      } else if (roleCategory === 'finance_assistants') {\n        return (\n          user.role.includes('finance') &&\n          !user.role.includes('manager') &&\n          !user.role.includes('director')\n        );\n      } else if (roleCategory === 'finance_managers') {\n        return (\n          user.role.includes('finance') &&\n          (user.role.includes('manager') || user.role.includes('director'))\n        );\n      } else if (roleCategory === 'sales_managers') {\n        return user.role.includes('sales') && user.role.includes('manager');\n      } else if (roleCategory === 'general_managers') {\n        return user.role.includes('general') && user.role.includes('manager');\n      } else {\n        return ![\n          'sales_people',\n          'finance_managers',\n          'sales_managers',\n          'general_managers',\n          'finance_assistants',\n        ].includes(getCategory(user.role));\n      }\n    }).length;\n\n    // Check if under limit\n    const limit = limits[roleCategory];\n    const canAdd = count < limit;\n\n    return {\n      success: true,\n      canAdd,\n      currentCount: count,\n      limit,\n    };\n  } catch (error) {\n    console.error(`[apiService] Error checking if can add user: ${error}`);\n    return {\n      success: false,\n      canAdd: false,\n      error,\n    };\n  }\n};\n\n// Helper function to get role category\nfunction getCategory(role: string): string {\n  if (role.includes('sales') && !role.includes('manager')) {\n    return 'sales_people';\n  } else if (role.includes('finance') && !role.includes('manager') && !role.includes('director')) {\n    return 'finance_assistants';\n  } else if (role.includes('finance') && (role.includes('manager') || role.includes('director'))) {\n    return 'finance_managers';\n  } else if (role.includes('sales') && role.includes('manager')) {\n    return 'sales_managers';\n  } else if (role.includes('general') && role.includes('manager')) {\n    return 'general_managers';\n  } else {\n    return 'others';\n  }\n}\n\n/**\n * Helper functions for signup approval\n */\n\n// Helper function to generate a password\nexport function generatePassword() {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()';\n  let password = '';\n  for (let i = 0; i < 12; i++) {\n    password += chars.charAt(Math.floor(Math.random() * chars.length));\n  }\n  return password;\n}\n\n// Handle dealer group signups\nasync function handleDealerGroupSignup(\n  request: any,\n  options: any\n): Promise<{\n  success: boolean;\n  message: string;\n  error?: any;\n  groupId?: number;\n  dealershipIds?: number[];\n}> {\n  try {\n    console.log(`[apiService] Processing dealer group signup for ${request.dealership_name}`);\n\n    // Get current user for logging\n    const user = await getCurrentUser();\n    if (!user) {\n      throw new Error('Not authenticated');\n    }\n\n    // Get group level and dealership count\n    const groupLevel = options.groupLevel || request.group_level || 'level_1';\n    const dealershipCount = options.dealershipCount || request.dealership_count || 2;\n    const addOns = options.addOns || request.add_ons || [];\n\n    console.log(\n      `[apiService] Group level: ${groupLevel}, Dealership count: ${dealershipCount}, Add-ons: ${JSON.stringify(\n        addOns\n      )}`\n    );\n\n    // Generate base schema name\n    const baseSchemaName =\n      options.schemaName ||\n      `group_${Date.now().toString(36)}_${Math.random().toString(36).substring(2, 7)}`;\n\n    // Set user limits based on add-ons\n    const userLimits = {\n      sales_people: 10,\n      finance_managers: 3,\n      sales_managers: 3,\n      general_managers: 1,\n      finance_assistants: 2,\n      others: 2,\n      area_vps: 0, // Default is 0\n    };\n\n    // Apply + Version add-on limits\n    if (addOns.includes('plus')) {\n      userLimits.sales_people = 15;\n      userLimits.finance_managers = 5;\n      userLimits.sales_managers = 5;\n      userLimits.general_managers = 2;\n      userLimits.finance_assistants = 3;\n      userLimits.others = 3;\n\n      // Add Area VPs based on tier\n      userLimits.area_vps = groupLevel === 'level_1' ? 1 : 2;\n    }\n\n    // Apply ++ Version add-on limits\n    if (addOns.includes('plusplus')) {\n      userLimits.sales_people = 25;\n      userLimits.finance_managers = 8;\n      userLimits.sales_managers = 8;\n      userLimits.general_managers = 3;\n      userLimits.finance_assistants = 5;\n      userLimits.others = 5;\n\n      // Unlimited AVPs for ++ Version\n      userLimits.area_vps = 999; // Effectively unlimited\n    }\n\n    // Get pricing based on tier level\n    const pricingPerDealership =\n      groupLevel === 'level_1' ? 200 : groupLevel === 'level_2' ? 250 : 300; // Level 3 or default\n\n    // Create the dealer group\n    const { data: groupData, error: groupError } = await supabase\n      .from('dealership_groups')\n      .insert({\n        name: request.dealership_name,\n        settings: {\n          level: groupLevel,\n          dealership_count: dealershipCount,\n          add_ons: addOns,\n          user_limits: userLimits,\n          pricing_per_dealership: pricingPerDealership,\n          stripe_subscription_id: request.stripe_session_id,\n        },\n        status: 'active',\n        created_by: user.id,\n      })\n      .select()\n      .single();\n\n    if (groupError) {\n      console.error(`[apiService] Error creating dealership group: ${groupError.message}`);\n      throw groupError;\n    }\n\n    const groupId = groupData.id;\n    console.log(`[apiService] Created dealer group: ${groupData.name}, ID: ${groupId}`);\n\n    // Create dealerships under the group\n    const dealershipIds: number[] = [];\n\n    for (let i = 0; i < dealershipCount; i++) {\n      // Create schema name for this dealership\n      const schemaName = `${baseSchemaName}_${i + 1}`;\n      const dealershipName = `${request.dealership_name} - Location ${i + 1}`;\n\n      // Create schema\n      if (options.createSchema) {\n        console.log(`[apiService] Creating schema for dealership ${i + 1}: ${schemaName}`);\n        const schemaResult = await createDealershipSchema(schemaName);\n\n        if (!schemaResult.success) {\n          console.error(\n            `[apiService] Error creating schema for dealership ${i + 1}:`,\n            schemaResult.error\n          );\n          // Continue anyway - we'll just log the error\n        }\n      }\n\n      // Create dealership record\n      const { data: dealershipData, error: dealershipError } = await supabase\n        .from('dealerships')\n        .insert({\n          name: dealershipName,\n          group_id: groupId,\n          schema_name: schemaName,\n          tier: 'dealership',\n          add_ons: addOns,\n          status: 'active',\n          contact_email: request.email,\n          contact_name: request.contact_person,\n          contact_phone: request.phone,\n          subscription_status: 'active',\n          created_by: user.id,\n          settings: {\n            user_limits: userLimits,\n            group_level: groupLevel,\n            dealership_index: i + 1,\n          },\n        })\n        .select()\n        .single();\n\n      if (dealershipError) {\n        console.error(`[apiService] Error creating dealership ${i + 1}:`, dealershipError);\n        continue; // Skip to next dealership on error\n      }\n\n      dealershipIds.push(dealershipData.id);\n      console.log(\n        `[apiService] Created dealership: ${dealershipData.name}, ID: ${dealershipData.id}`\n      );\n    }\n\n    // Create admin user if requested\n    if (options.adminEmail) {\n      console.log(`[apiService] Creating group admin user: ${options.adminEmail}`);\n\n      // Get primary dealership id for the admin\n      const primaryDealershipId = dealershipIds[0];\n\n      // Check if user already exists\n      const { data: existingUser, error: existingUserError } = await supabase\n        .from('profiles')\n        .select('id')\n        .eq('email', options.adminEmail)\n        .single();\n\n      if (existingUserError && existingUserError.code !== 'PGRST116') {\n        console.error(\n          `[apiService] Error checking for existing user: ${existingUserError.message}`\n        );\n        throw existingUserError;\n      }\n\n      if (existingUser) {\n        console.log(`[apiService] User already exists: ${options.adminEmail}`);\n\n        // Update existing user to add group admin role\n        const { error: updateUserError } = await supabase\n          .from('profiles')\n          .update({\n            dealership_id: primaryDealershipId,\n            group_id: groupId,\n            role: 'dealer_group_admin',\n            is_group_admin: true,\n          })\n          .eq('email', options.adminEmail);\n\n        if (updateUserError) {\n          console.error(`[apiService] Error updating user: ${updateUserError.message}`);\n          throw updateUserError;\n        }\n      } else {\n        // Create new user\n        const { error: signupError, data: signupData } = await supabase.auth.signUp({\n          email: options.adminEmail,\n          password: options.tempPassword || generatePassword(),\n        });\n\n        if (signupError) {\n          console.error(`[apiService] Error creating user: ${signupError.message}`);\n          throw signupError;\n        }\n\n        // Create profile record\n        const { error: profileError } = await supabase.from('profiles').insert({\n          id: signupData?.user?.id,\n          email: options.adminEmail,\n          dealership_id: primaryDealershipId,\n          group_id: groupId,\n          role: 'dealer_group_admin',\n          is_group_admin: true,\n          first_name: options.adminName?.split(' ')[0] || '',\n          last_name: options.adminName?.split(' ').slice(1).join(' ') || '',\n        });\n\n        if (profileError) {\n          console.error(`[apiService] Error creating profile: ${profileError.message}`);\n          throw profileError;\n        }\n      }\n    }\n\n    // Set up cross-dealership RLS policies for the group\n    await setupGroupRlsPolicies(groupId, dealershipIds);\n\n    // Create a subscription event record\n    const totalAmount =\n      pricingPerDealership * dealershipCount +\n      (addOns.includes('plus') ? 100 : 0) +\n      (addOns.includes('plusplus') ? 500 : 0);\n\n    await recordSubscriptionEvent({\n      group_id: groupId,\n      dealership_id: dealershipIds[0],\n      event_type: 'signup',\n      tier: 'dealer_group',\n      add_ons: addOns,\n      amount: totalAmount,\n      user_id: user.id,\n    });\n\n    console.log(\n      `[apiService] Group signup completed successfully. Created ${dealershipIds.length} dealerships.`\n    );\n\n    return {\n      success: true,\n      message: `Dealer Group created with ${dealershipIds.length} dealerships`,\n      groupId,\n      dealershipIds,\n    };\n  } catch (error) {\n    console.error('[apiService] Error in handleDealerGroupSignup:', error);\n    return {\n      success: false,\n      message: error instanceof Error ? error.message : 'An unknown error occurred',\n      error,\n    };\n  }\n}\n\n// Handle finance manager signups\nasync function handleFinanceManagerSignup(\n  request: any,\n  options: any\n): Promise<{\n  success: boolean;\n  message: string;\n  error?: any;\n}> {\n  try {\n    console.log(`[apiService] Processing finance manager signup for ${request.contact_person}`);\n    console.log(`[apiService] Promotional pricing applied: Free (normally $5/month)`);\n\n    // Get current user for logging\n    const user = await getCurrentUser();\n    if (!user) {\n      throw new Error('Not authenticated');\n    }\n\n    // Generate schema name if not provided\n    const schemaName =\n      options.schemaName ||\n      `finance_mgr_${Date.now().toString(36)}_${Math.random().toString(36).substring(2, 7)}`;\n\n    // Create schema for the finance manager\n    if (options.createSchema !== false) {\n      console.log(`[apiService] Creating schema for finance manager: ${schemaName}`);\n      const schemaResult = await createFinanceManagerSchema(schemaName);\n\n      if (!schemaResult.success) {\n        console.error('[apiService] Error creating finance manager schema:', schemaResult.error);\n        throw new Error(`Failed to create schema: ${schemaResult.message}`);\n      }\n    }\n\n    // Create admin user if requested\n    if (options.adminEmail) {\n      console.log(`[apiService] Creating finance manager user: ${options.adminEmail}`);\n\n      // Check if user already exists\n      const { data: existingUser, error: existingUserError } = await supabase\n        .from('profiles')\n        .select('id')\n        .eq('email', options.adminEmail)\n        .single();\n\n      if (existingUserError && existingUserError.code !== 'PGRST116') {\n        console.error(\n          `[apiService] Error checking for existing user: ${existingUserError.message}`\n        );\n        throw existingUserError;\n      }\n\n      if (existingUser) {\n        console.log(`[apiService] User already exists: ${options.adminEmail}`);\n\n        // Update existing user to add finance manager role and schema\n        const { error: updateUserError } = await supabase\n          .from('profiles')\n          .update({\n            role: 'finance_manager',\n            schema_name: schemaName,\n          })\n          .eq('email', options.adminEmail);\n\n        if (updateUserError) {\n          console.error(`[apiService] Error updating user: ${updateUserError.message}`);\n          throw updateUserError;\n        }\n      } else {\n        // Create new user\n        const { error: signupError, data: signupData } = await supabase.auth.signUp({\n          email: options.adminEmail,\n          password: options.tempPassword || generatePassword(),\n          options: {\n            data: {\n              role: 'finance_manager',\n              schema_name: schemaName,\n            },\n          },\n        });\n\n        if (signupError) {\n          console.error(`[apiService] Error creating user: ${signupError.message}`);\n          throw signupError;\n        }\n\n        // Create profile record\n        const { error: profileError } = await supabase.from('profiles').insert({\n          id: signupData?.user?.id,\n          email: options.adminEmail,\n          role: 'finance_manager',\n          schema_name: schemaName,\n          first_name: options.adminName?.split(' ')[0] || '',\n          last_name: options.adminName?.split(' ').slice(1).join(' ') || '',\n          settings: {\n            subscription_tier: 'finance_manager_only',\n            trial_ends_at: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(), // 30 days trial\n            promo_applied: true, // Indicate promotion was applied\n            promo_details: 'Free instead of $5/month for a limited time',\n          },\n        });\n\n        if (profileError) {\n          console.error(`[apiService] Error creating profile: ${profileError.message}`);\n          throw profileError;\n        }\n      }\n    }\n\n    // Record subscription event with promotional pricing\n    await recordSubscriptionEvent({\n      schema_name: schemaName,\n      event_type: 'signup',\n      tier: 'finance_manager_only',\n      amount: 0, // $0/month with promotion (normally $5)\n      is_promo: true,\n      original_amount: 5,\n      user_id: user.id,\n    });\n\n    // Record the promotional signup in the promotions_usage table if it exists\n    try {\n      const { error: usageError } = await supabase.from('promotions_usage').insert({\n        promotion_tier: 'finance_manager_only',\n        user_id: options.adminEmail ? await getUserIdByEmail(options.adminEmail) : null,\n        schema_name: schemaName,\n        signup_date: new Date().toISOString(),\n      });\n\n      if (usageError) {\n        // Log but don't throw - this is supplementary tracking\n        console.log('[apiService] Note: Could not record promotion usage:', usageError.message);\n      }\n    } catch (trackingError) {\n      // Ignore errors in promotional tracking - it shouldn't block the main flow\n      console.log('[apiService] Note: Error in promotion tracking:', trackingError);\n    }\n\n    console.log(\n      `[apiService] Finance manager signup completed successfully for schema: ${schemaName} with promotional pricing`\n    );\n\n    return {\n      success: true,\n      message: `Finance Manager account created successfully with promotional pricing (Free)`,\n    };\n  } catch (error) {\n    console.error('[apiService] Error in handleFinanceManagerSignup:', error);\n    return {\n      success: false,\n      message: error instanceof Error ? error.message : 'An unknown error occurred',\n      error,\n    };\n  }\n}\n\n// Function to record subscription events\nexport const recordSubscriptionEvent = async (data: {\n  dealership_id?: number;\n  group_id?: number;\n  schema_name?: string;\n  event_type: string;\n  tier: string;\n  add_ons?: string[];\n  amount?: number;\n  is_promo?: boolean;\n  original_amount?: number;\n  user_id: string;\n}): Promise<{ success: boolean; message: string; error?: any }> => {\n  try {\n    console.log(\n      `[apiService] Recording subscription event: ${data.event_type} for tier: ${data.tier}`\n    );\n\n    if (data.is_promo) {\n      console.log(\n        `[apiService] Promotional pricing applied: ${data.amount} (original: ${data.original_amount})`\n      );\n    }\n\n    const { error } = await supabase.from('subscription_events').insert({\n      dealership_id: data.dealership_id,\n      group_id: data.group_id,\n      schema_name: data.schema_name,\n      event_type: data.event_type,\n      tier: data.tier,\n      add_ons: data.add_ons || [],\n      amount: data.amount || null,\n      is_promotional: data.is_promo || false,\n      original_amount: data.original_amount,\n      user_id: data.user_id,\n      created_at: new Date().toISOString(),\n    });\n\n    if (error) {\n      console.error('[apiService] Error recording subscription event:', error);\n      throw error;\n    }\n\n    return {\n      success: true,\n      message: 'Subscription event recorded successfully',\n    };\n  } catch (error) {\n    console.error('[apiService] Error recording subscription event:', error);\n    return {\n      success: false,\n      message: 'Failed to record subscription event',\n      error,\n    };\n  }\n};\n\n// Helper function to get user ID by email\nasync function getUserIdByEmail(email: string): Promise<string | null> {\n  try {\n    const { data, error } = await supabase\n      .from('profiles')\n      .select('id')\n      .eq('email', email)\n      .single();\n\n    if (error) {\n      console.error('[apiService] Error getting user ID by email:', error);\n      return null;\n    }\n\n    return data?.id || null;\n  } catch (error) {\n    console.error('[apiService] Exception in getUserIdByEmail:', error);\n    return null;\n  }\n}\n","// Direct authentication system that bypasses Supabase\n// This provides a reliable way to test the application without auth issues\n\nexport interface DirectAuthUser {\n  id: string;\n  email: string;\n  role: string;\n  dealershipId?: number;\n  isGroupAdmin?: boolean;\n  isAdmin?: boolean;\n  name?: string;\n}\n\n// Test accounts that will always work\nexport const TEST_USERS: DirectAuthUser[] = [\n  {\n    id: 'test-admin-id',\n    email: 'testadmin@example.com',\n    role: 'admin',\n    isAdmin: true,\n    name: 'Test Admin',\n  },\n  {\n    id: 'group-admin-id',\n    email: 'group1.admin@exampletest.com',\n    role: 'dealer_group_admin',\n    isGroupAdmin: true,\n    name: 'Group Admin',\n  },\n  {\n    id: 'dealership-admin-id',\n    email: 'dealer1.admin@exampletest.com',\n    role: 'dealership_admin',\n    dealershipId: 1,\n    name: 'Dealership Admin',\n  },\n  {\n    id: 'sales-manager-id',\n    email: 'sales.manager@exampletest.com',\n    role: 'sales_manager',\n    dealershipId: 1,\n    name: 'Sales Manager',\n  },\n  {\n    id: 'sales-id',\n    email: 'sales@exampletest.com',\n    role: 'salesperson',\n    dealershipId: 1,\n    name: 'Salesperson',\n  },\n  {\n    id: 'finance-manager-1-id',\n    email: 'finance@exampletest.com',\n    role: 'finance_manager',\n    dealershipId: 1,\n    name: 'Finance Manager',\n  },\n  {\n    id: 'finance-manager-2-id',\n    email: 'testfinance@example.com',\n    role: 'single_finance_manager',\n    dealershipId: 1,\n    name: 'Single Finance Manager',\n  },\n  {\n    id: 'finance-manager-3-id',\n    email: 'finance1@exampletest.com',\n    role: 'single_finance_manager',\n    dealershipId: 1,\n    name: 'Single Finance Manager 2',\n  },\n  {\n    id: 'avp-id',\n    email: 'avp@exampletest.com',\n    role: 'area_vice_president',\n    name: 'Area Vice President',\n  },\n  {\n    id: 'avp-id',\n    email: 'avp@exampletest.com',\n    role: 'area_vice_president',\n    name: 'Area Vice President',\n  },\n];\n\n// Storage key for the auth user\nconst STORAGE_KEY = 'direct_auth_user';\n// New key used by dashboard selector\nconst DASHBOARD_SELECTOR_KEY = 'directauth_user';\n\n// ---------- Memoised helpers ----------\nlet _cachedUser: DirectAuthUser | null | undefined;\nlet _lastCacheTime = 0;\nconst CACHE_TTL_MS = 1000; // 1 second cache window is enough to prevent thrashing\n\nfunction _readUserFromStorage(): DirectAuthUser | null {\n  // 1) Original storage key (legacy)\n  const jsonA = localStorage.getItem(STORAGE_KEY);\n  if (jsonA) {\n    try {\n      return JSON.parse(jsonA) as DirectAuthUser;\n    } catch {}\n  }\n\n  // 2) New dashboard-selector key\n  const jsonB = localStorage.getItem(DASHBOARD_SELECTOR_KEY);\n  if (jsonB) {\n    try {\n      console.log('[directAuth] Found user from dashboard selector');\n      return JSON.parse(jsonB) as DirectAuthUser;\n    } catch {}\n  }\n  return null;\n}\n\nexport function getCurrentUser(): DirectAuthUser | null {\n  const now = Date.now();\n  if (_cachedUser !== undefined && now - _lastCacheTime < CACHE_TTL_MS) {\n    return _cachedUser;\n  }\n\n  _cachedUser = _readUserFromStorage();\n  _lastCacheTime = now;\n  return _cachedUser;\n}\n\nexport function isAuthenticated(): boolean {\n  return getCurrentUser() !== null;\n}\n\n// Reset cache on logout\nexport function logout(): void {\n  console.log('[directAuth] Logging out - clearing all auth keys');\n  localStorage.removeItem(STORAGE_KEY);\n  localStorage.removeItem(DASHBOARD_SELECTOR_KEY);\n  localStorage.removeItem('directauth_timestamp');\n  _cachedUser = undefined;\n}\n\n// Login with a test account\nexport function loginWithTestAccount(email: string): { success: boolean; message: string } {\n  // Find matching test user\n  const user = TEST_USERS.find(u => u.email.toLowerCase() === email.toLowerCase());\n\n  if (!user) {\n    return {\n      success: false,\n      message: `No test account found for ${email}`,\n    };\n  }\n\n  // Store user in localStorage\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(user));\n\n  return {\n    success: true,\n    message: `Logged in as ${user.name || user.email}`,\n  };\n}\n\n// Get redirect path based on role\nexport function getRedirectPath(user: DirectAuthUser): string {\n  if (user.isAdmin) {\n    return '/master-admin';\n  }\n\n  if (user.isGroupAdmin) {\n    return '/group-admin';\n  }\n\n  if (user.role === 'dealership_admin') {\n    return '/dashboard/admin';\n  }\n\n  if (user.role === 'sales_manager') {\n    return '/dashboard/sales-manager';\n  }\n\n  if (user.role === 'finance_manager') {\n    return '/dashboard/finance';\n  }\n\n  if (user.role === 'single_finance_manager') {\n    return '/dashboard/single-finance';\n  }\n\n  if (user.role === 'general_manager') {\n    return '/dashboard/gm';\n  }\n\n  if (user.role === 'area_vice_president') {\n    return '/avp-full-dashboard';\n  }\n\n  // Default to sales dashboard\n  return '/dashboard/sales';\n}\n","import React, { createContext, useContext, useEffect, useState, useCallback, useRef } from 'react';\nimport { User, AuthError, Session } from '@supabase/supabase-js';\nimport {\n  supabase,\n  getCurrentUser,\n  getDealershipSupabase,\n  getUserDealershipId,\n  loginTestUser,\n  isTestEmail,\n} from '../lib/supabaseClient';\nimport { Database } from '../lib/database.types';\nimport { toast } from '../lib/use-toast';\nimport { logSchemaOperation, testDealershipConnection } from '../lib/apiService';\nimport {\n  logout as directAuthLogout,\n  isAuthenticated,\n  getCurrentUser as getDirectAuthUser,\n} from '../lib/directAuth';\n\n// Use lowercase role names to match database\ntype UserRole =\n  | 'salesperson'\n  | 'finance_manager'\n  | 'single_finance_manager'\n  | 'sales_manager'\n  | 'general_manager'\n  | 'admin'\n  | 'dealership_admin'\n  | 'dealer_group_admin'\n  | 'area_vice_president';\n\ninterface AuthContextType {\n  user: User | null;\n  role: UserRole | null;\n  signIn: (email: string, password: string, rememberMe?: boolean) => Promise<void>;\n  signUp: (email: string, password: string, userData: any) => Promise<void>;\n  signOut: () => Promise<void>;\n  loading: boolean;\n  hasSession: boolean;\n  error: Error | null;\n  userRole: string | null;\n  dealershipId: number | null;\n  setDealershipContext: (dealershipId: number) => void;\n  currentDealershipName: string | null;\n  fetchFromDealershipSchema: (\n    dealershipId: number,\n    table: string,\n    query?: any\n  ) => Promise<{ data: any | null; error: Error | null }>;\n  magicLinkLogin: (email: string) => Promise<void>;\n  loginTestAccount: (email: string, password: string) => Promise<void>;\n  logAccessAttempt: (path: string, allowed: boolean, details?: any) => void;\n  isGroupAdmin: boolean;\n  authCheckComplete: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// Use these defaults consistently\nconst DEFAULT_ROLE: UserRole = 'salesperson';\nconst FALLBACK_ROLE: UserRole = 'finance_manager'; // Fallback role if profile operations fail\nconst DEFAULT_DEALERSHIP_ID = 1;\n\n// Track profile operations globally to prevent duplicates\nconst profileOperationAttempted = new Map<string, boolean>();\n\n// Debug logger to track authentication flow\nconst logAuthEvent = (event: string, details: any) => {\n  const timestamp = new Date().toISOString();\n  const deploymentVersion = import.meta.env.VITE_DEPLOYMENT_VERSION || '1.0.0';\n  const deploymentEnv = import.meta.env.MODE || 'development';\n\n  console.log(`[AuthContext][${timestamp}] ${event}`, {\n    ...details,\n    app_version: deploymentVersion,\n    environment: deploymentEnv,\n    timestamp,\n  });\n\n  // Add optional analytics tracking here if needed\n  try {\n    if (typeof window !== 'undefined') {\n      if (!window.authEvents) {\n        window.authEvents = [];\n      }\n\n      // Keep last 100 events\n      if (window.authEvents.length > 100) {\n        window.authEvents.shift();\n      }\n\n      window.authEvents.push({\n        event,\n        details,\n        timestamp,\n      });\n    }\n  } catch (err) {\n    console.error('[AuthContext] Error logging auth event to window object:', err);\n  }\n};\n\n// Improved security event logger\nconst logSecurityEvent = (event: string, details: any) => {\n  const timestamp = new Date().toISOString();\n  console.warn(`[SecurityEvent][${timestamp}] ${event}`, {\n    ...details,\n    user_agent: navigator.userAgent,\n    app_url: window.location.href,\n    timestamp,\n  });\n};\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [role, setRole] = useState<UserRole | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [hasSession, setHasSession] = useState(false);\n  const [initialized, setInitialized] = useState(false);\n  const retryCountRef = useRef(0);\n  const profileOperationInProgressRef = useRef(false);\n  const [error, setError] = useState<Error | null>(null);\n  const [userRole, setUserRole] = useState<string | null>(null);\n  const [dealershipId, setDealershipId] = useState<number | null>(null);\n  const [currentDealershipName, setCurrentDealershipName] = useState<string | null>(null);\n  const [isGroupAdmin, setIsGroupAdmin] = useState<boolean>(false);\n  const [authCheckComplete, setAuthCheckComplete] = useState<boolean>(false);\n\n  // Fetch profile data to check for is_group_admin flag\n  const fetchProfileData = async (userId: string) => {\n    try {\n      console.warn(`[DEBUG AUTH] Fetching profile data for user ${userId}`);\n\n      const { data, error } = await supabase\n        .from('profiles')\n        .select('*')\n        .eq('id', userId)\n        .maybeSingle();\n\n      if (error) {\n        console.error('[DEBUG AUTH] Error fetching profile:', error);\n        return null;\n      }\n\n      if (data) {\n        console.warn('[DEBUG AUTH] Profile data found:', data);\n\n        // Add more detailed logging for group admin detection\n        console.warn('[DEBUG AUTH] Group admin detection:', {\n          isGroupAdmin: !!data.is_group_admin,\n          userEmail: data.email,\n          userRole: data.role,\n          userData: data,\n          userMetadata: user?.user_metadata,\n        });\n\n        // Check user metadata if profile doesn't have the flag\n        if (!data.is_group_admin && user?.user_metadata?.is_group_admin) {\n          console.warn('[DEBUG AUTH] Group admin flag found in user metadata');\n          setIsGroupAdmin(true);\n        }\n\n        // Set the isGroupAdmin flag based on profile data\n        if (data.is_group_admin) {\n          console.warn('[DEBUG AUTH] User is a group admin!');\n          setIsGroupAdmin(true);\n        } else {\n          console.warn('[DEBUG AUTH] User is not a group admin');\n          setIsGroupAdmin(false);\n        }\n\n        return data;\n      }\n\n      console.warn('[DEBUG AUTH] No profile data found');\n      return null;\n    } catch (err) {\n      console.error('[DEBUG AUTH] Error in fetchProfileData:', err);\n      return null;\n    }\n  };\n\n  // Set the current dealership context\n  const setDealershipContext = useCallback(\n    (newDealershipId: number) => {\n      logAuthEvent('Setting dealership context', {\n        dealership_id: newDealershipId,\n        previous_id: dealershipId,\n        user_id: user?.id,\n        user_email: user?.email,\n      });\n\n      setDealershipId(newDealershipId);\n\n      // Get the dealership name\n      supabase\n        .from('dealerships')\n        .select('name')\n        .eq('id', newDealershipId)\n        .single()\n        .then(({ data, error }) => {\n          if (error) {\n            console.error('[AuthContext] Error fetching dealership name:', error);\n          } else if (data) {\n            setCurrentDealershipName(data.name);\n            logAuthEvent('Dealership name fetched', {\n              dealership_id: newDealershipId,\n              dealership_name: data.name,\n            });\n          }\n        });\n\n      // Log the context change\n      logSchemaOperation('set_dealership_context', {\n        userId: user?.id,\n        dealershipId: newDealershipId,\n        timestamp: new Date().toISOString(),\n      }).catch(err => {\n        console.error('[AuthContext] Error logging dealership context change:', err);\n      });\n    },\n    [user, dealershipId]\n  );\n\n  // Update toast utility functions to use the imported toast function directly\n  const showSuccessToast = useCallback((title: string, description: string) => {\n    try {\n      toast({\n        title,\n        description,\n        variant: 'default',\n      });\n    } catch (err) {\n      console.error('[AuthContext] Error showing success toast:', err);\n    }\n  }, []);\n\n  const showErrorToast = useCallback((title: string, description: string) => {\n    try {\n      toast({\n        title,\n        description,\n        variant: 'destructive',\n      });\n    } catch (err) {\n      console.error('[AuthContext] Error showing error toast:', err);\n    }\n  }, []);\n\n  const showInfoToast = useCallback((title: string, description: string) => {\n    try {\n      toast({\n        title,\n        description,\n        variant: 'info',\n      });\n    } catch (err) {\n      console.error('[AuthContext] Error showing info toast:', err);\n    }\n  }, []);\n\n  const MAX_RETRIES = 1; // Limit retries to prevent excessive database calls\n\n  // Debug function to check profile existence\n  const checkProfileExists = async (userId: string): Promise<boolean> => {\n    try {\n      logAuthEvent('Checking profile existence', { user_id: userId });\n\n      const { data, error } = await supabase\n        .from('profiles')\n        .select('id')\n        .eq('id', userId)\n        .maybeSingle();\n\n      if (error) {\n        logAuthEvent('Profile check error', {\n          user_id: userId,\n          error: error.message,\n          code: error.code,\n        });\n        return false;\n      }\n\n      const exists = !!data;\n      logAuthEvent('Profile check result', {\n        user_id: userId,\n        exists,\n        data: data ? 'found' : 'not found',\n      });\n      return exists;\n    } catch (err) {\n      logAuthEvent('Profile check exception', {\n        user_id: userId,\n        error: err instanceof Error ? err.message : String(err),\n      });\n      return false;\n    }\n  };\n\n  // Get user's dealership\n  const fetchUserDealership = useCallback(async (userId: string): Promise<number | null> => {\n    try {\n      logAuthEvent('Fetching user dealership', { user_id: userId });\n\n      // First try the new users table schema\n      const { data: userData, error: userError } = await supabase\n        .from('users')\n        .select('dealership_id, role_id, roles(name)')\n        .eq('id', userId)\n        .maybeSingle();\n\n      if (!userError && userData?.dealership_id) {\n        logAuthEvent('Fetched dealership from users table', {\n          user_id: userId,\n          dealership_id: userData.dealership_id,\n          role_id: userData.role_id,\n          role_name: userData.roles?.name,\n        });\n\n        // Also set the role from the roles table if available\n        if (userData.roles?.name) {\n          const roleName = userData.roles.name.toLowerCase() as UserRole;\n          setRole(roleName);\n          setUserRole(roleName);\n          logAuthEvent('Set user role from users table', {\n            user_id: userId,\n            role: roleName,\n          });\n        }\n\n        return userData.dealership_id;\n      }\n\n      // Fallback to the profiles table (older schema)\n      const { data, error } = await supabase\n        .from('profiles')\n        .select('dealership_id, role')\n        .eq('id', userId)\n        .maybeSingle();\n\n      if (error) {\n        logAuthEvent('Error fetching user dealership from profiles', {\n          user_id: userId,\n          error: error.message,\n          code: error.code,\n        });\n        return null;\n      }\n\n      // If we got the role from profiles, set it\n      if (data?.role) {\n        const roleName = data.role.toLowerCase() as UserRole;\n        setRole(roleName);\n        setUserRole(roleName);\n        logAuthEvent('Set user role from profiles table', {\n          user_id: userId,\n          role: roleName,\n        });\n      }\n\n      logAuthEvent('Fetched dealership from profiles table', {\n        user_id: userId,\n        dealership_id: data?.dealership_id,\n      });\n\n      // If we found a dealership ID, get its name\n      if (data?.dealership_id) {\n        supabase\n          .from('dealerships')\n          .select('name')\n          .eq('id', data.dealership_id)\n          .single()\n          .then(({ data: dealershipData, error: dealershipError }) => {\n            if (dealershipError) {\n              logAuthEvent('Error fetching dealership name', {\n                dealership_id: data.dealership_id,\n                error: dealershipError.message,\n              });\n            } else if (dealershipData) {\n              setCurrentDealershipName(dealershipData.name);\n              logAuthEvent('Set dealership name', {\n                dealership_id: data.dealership_id,\n                dealership_name: dealershipData.name,\n              });\n            }\n          });\n      }\n\n      return data?.dealership_id || null;\n    } catch (err) {\n      logAuthEvent('Exception fetching user dealership', {\n        user_id: userId,\n        error: err instanceof Error ? err.message : String(err),\n      });\n      return null;\n    }\n  }, []);\n\n  // Simplified fetch user role function without recursive calls\n  const fetchUserRole = useCallback(\n    async (userId: string): Promise<UserRole> => {\n      console.log('[AuthContext] fetchUserRole called for userId:', userId, {\n        timestamp: new Date().toISOString(),\n      });\n\n      // Add detailed logging for role debugging\n      console.log('[AuthContext] Role debugging - current states:', {\n        currentRole: role,\n        hasSession,\n        dealershipId,\n        userId,\n      });\n\n      // Prevent concurrent operations on the same profile\n      if (profileOperationInProgressRef.current) {\n        console.log('[AuthContext] Profile operation already in progress, waiting...', {\n          userId,\n          timestamp: new Date().toISOString(),\n        });\n        // Wait briefly and try again up to 3 times\n        if (retryCountRef.current < 3) {\n          retryCountRef.current++;\n          await new Promise(resolve => setTimeout(resolve, 500));\n          return fetchUserRole(userId);\n        } else {\n          console.warn('[AuthContext] Max retries reached for fetchUserRole, using fallback role', {\n            userId,\n            timestamp: new Date().toISOString(),\n          });\n          return FALLBACK_ROLE;\n        }\n      }\n\n      profileOperationInProgressRef.current = true;\n      retryCountRef.current = 0;\n\n      try {\n        // First check if profile exists\n        const profileExists = await checkProfileExists(userId);\n\n        if (profileExists) {\n          // If profile exists, get the role\n          console.log('[AuthContext] Profile exists, fetching role', {\n            userId,\n            timestamp: new Date().toISOString(),\n          });\n\n          try {\n            const { data: profile, error: roleError } = await supabase\n              .from('profiles')\n              .select('role, dealership_id')\n              .eq('id', userId)\n              .maybeSingle();\n\n            if (roleError) {\n              console.error('[AuthContext] Error fetching role:', roleError, {\n                userId,\n                timestamp: new Date().toISOString(),\n              });\n              return FALLBACK_ROLE;\n            }\n\n            // Enhanced logging for dealership_admin role detection\n            console.log('[AuthContext] Profile data retrieved:', {\n              profileData: profile,\n              hasRole: !!profile?.role,\n              rawRole: profile?.role,\n              normalizedRole: profile?.role?.toLowerCase(),\n              isDealershipAdmin: profile?.role?.toLowerCase() === 'dealership_admin',\n              timestamp: new Date().toISOString(),\n            });\n\n            // Also set the dealership ID if available\n            if (profile?.dealership_id) {\n              setDealershipId(profile.dealership_id);\n              console.log('[AuthContext] Set dealership ID:', profile.dealership_id);\n            }\n\n            if (profile?.role) {\n              const normalizedRole = profile.role.toLowerCase() as UserRole;\n              console.log('[AuthContext] Role found:', profile.role, {\n                normalizedRole,\n                userId,\n                timestamp: new Date().toISOString(),\n              });\n              return normalizedRole;\n            } else {\n              console.log('[AuthContext] Profile exists but no role found, using fallback role', {\n                userId,\n                timestamp: new Date().toISOString(),\n              });\n              return FALLBACK_ROLE;\n            }\n          } catch (err) {\n            console.error('[AuthContext] Exception fetching role:', err, {\n              userId,\n              timestamp: new Date().toISOString(),\n            });\n            return FALLBACK_ROLE;\n          }\n        }\n\n        // If profile doesn't exist, create it\n        console.log('[AuthContext] Creating profile with default role', {\n          userId,\n          timestamp: new Date().toISOString(),\n        });\n\n        // Mark that we've attempted a profile operation for this user\n        profileOperationAttempted.set(userId, true);\n\n        try {\n          const { data: userData } = await supabase.auth.getUser();\n\n          // Prepare profile data\n          const profileData = {\n            id: userId,\n            role: DEFAULT_ROLE,\n            email: userData.user?.email || '',\n            name: userData.user?.user_metadata?.name || '',\n            dealership_id: DEFAULT_DEALERSHIP_ID,\n          };\n\n          console.log('[AuthContext] Inserting profile with data:', JSON.stringify(profileData), {\n            timestamp: new Date().toISOString(),\n          });\n\n          // Try insertion with a timeout to prevent hanging\n          const insertPromise = async () => {\n            try {\n              const { error } = await supabase.from('profiles').insert([profileData]);\n\n              return { error };\n            } catch (err) {\n              return { error: err as Error };\n            }\n          };\n\n          // Add timeout to prevent long-running operations\n          const timeoutPromise = new Promise<{ error: Error }>(resolve => {\n            setTimeout(() => {\n              resolve({ error: new Error('Profile insertion timeout') });\n            }, 5000); // 5 second timeout\n          });\n\n          const { error: insertError } = await Promise.race([insertPromise(), timeoutPromise]);\n\n          if (insertError) {\n            console.error('[AuthContext] Error inserting profile:', insertError, {\n              userId,\n              timestamp: new Date().toISOString(),\n            });\n\n            // Don't attempt further operations if insertion fails\n            return FALLBACK_ROLE;\n          } else {\n            console.log('[AuthContext] Profile insertion successful', {\n              userId,\n              timestamp: new Date().toISOString(),\n            });\n\n            // Set the dealership ID for new users\n            setDealershipId(DEFAULT_DEALERSHIP_ID);\n\n            // Log the profile creation\n            logSchemaOperation('profile_creation', {\n              userId,\n              role: DEFAULT_ROLE,\n              dealershipId: DEFAULT_DEALERSHIP_ID,\n              timestamp: new Date().toISOString(),\n            }).catch(err => {\n              console.error('[AuthContext] Error logging profile creation:', err);\n            });\n\n            return DEFAULT_ROLE;\n          }\n        } catch (err) {\n          console.error('[AuthContext] Error in profile creation:', err, {\n            userId,\n            timestamp: new Date().toISOString(),\n          });\n          return FALLBACK_ROLE;\n        } finally {\n          profileOperationInProgressRef.current = false;\n        }\n      } catch (err) {\n        console.error('[AuthContext] Unexpected error in fetchUserRole:', err, {\n          userId,\n          timestamp: new Date().toISOString(),\n        });\n        profileOperationInProgressRef.current = false;\n        return FALLBACK_ROLE;\n      }\n    },\n    [role]\n  );\n\n  // Handle auth state changes (login/logout/session changes)\n  const handleAuthStateChange = useCallback(\n    async (session: Session | null) => {\n      console.log('[AuthContext] Auth state changed, session exists:', !!session, {\n        timestamp: new Date().toISOString(),\n        userId: session?.user?.id || 'none',\n        event: 'auth_state_change',\n      });\n\n      try {\n        // Update session state immediately\n        setHasSession(!!session);\n\n        if (session?.user) {\n          // Set user immediately to ensure we have user data regardless of profile operations\n          setUser(session.user);\n          console.log('[AuthContext] User set from session:', session.user.email, {\n            userId: session.user.id,\n            timestamp: new Date().toISOString(),\n          });\n\n          // Check if group admin flag exists in user metadata first (faster than DB lookup)\n          if (session.user.user_metadata?.is_group_admin) {\n            console.warn(\n              '[AuthContext] Group admin flag found in user metadata, setting isGroupAdmin=true'\n            );\n            setIsGroupAdmin(true);\n            // Set role for group admin\n            setRole('dealer_group_admin');\n            setUserRole('dealer_group_admin');\n          } else {\n            // Check if the user is a group admin through profile data\n            try {\n              console.warn('[DEBUG AUTH] Checking group admin status during auth state change');\n              const profileData = await fetchProfileData(session.user.id);\n\n              // If we still don't have group admin status set from profile, check email pattern\n              if (!isGroupAdmin && session.user.email) {\n                const isGroupAdminEmail =\n                  session.user.email.toLowerCase().includes('group') &&\n                  session.user.email.toLowerCase().includes('@exampletest.com');\n\n                if (isGroupAdminEmail) {\n                  console.warn(\n                    '[AuthContext] Email pattern suggests group admin but not set in profile/metadata'\n                  );\n                  setIsGroupAdmin(true);\n                  setRole('dealer_group_admin');\n                  setUserRole('dealer_group_admin');\n\n                  // Try to update the profile and metadata\n                  try {\n                    await supabase\n                      .from('profiles')\n                      .update({\n                        is_group_admin: true,\n                        role: 'dealer_group_admin',\n                      })\n                      .eq('id', session.user.id);\n\n                    await supabase.auth.updateUser({\n                      data: {\n                        is_group_admin: true,\n                        role: 'dealer_group_admin',\n                      },\n                    });\n                    console.warn(\n                      '[AuthContext] Updated profile and metadata for detected group admin'\n                    );\n                  } catch (updateError) {\n                    console.error('[AuthContext] Error updating group admin data:', updateError);\n                  }\n                }\n              }\n            } catch (profileError) {\n              console.error('[DEBUG AUTH] Error checking group admin status:', profileError);\n            }\n          }\n\n          // Then try to get role - but don't let profile errors affect user state\n          try {\n            retryCountRef.current = 0;\n            const userRole = await fetchUserRole(session.user.id);\n            console.log('[AuthContext] Role fetched successfully:', userRole, {\n              userId: session.user.id,\n              timestamp: new Date().toISOString(),\n            });\n            setRole(userRole);\n\n            // Also fetch dealership ID if not already set\n            if (dealershipId === null) {\n              const userDealershipId = await fetchUserDealership(session.user.id);\n              if (userDealershipId) {\n                setDealershipId(userDealershipId);\n                console.log('[AuthContext] Dealership ID set from profile:', userDealershipId);\n\n                // Log the dealership assignment\n                logSchemaOperation('dealership_assignment', {\n                  userId: session.user.id,\n                  dealershipId: userDealershipId,\n                  timestamp: new Date().toISOString(),\n                }).catch(err => {\n                  console.error('[AuthContext] Error logging dealership assignment:', err);\n                });\n              }\n            }\n          } catch (error) {\n            console.error('[AuthContext] Error fetching role, using fallback:', error, {\n              userId: session.user.id,\n              timestamp: new Date().toISOString(),\n            });\n            // Always set a role even on error\n            setRole(FALLBACK_ROLE);\n          }\n        } else {\n          // Clear user and role on session end\n          console.log('[AuthContext] No session, clearing user and role', {\n            timestamp: new Date().toISOString(),\n          });\n          setUser(null);\n          setRole(null);\n          setDealershipId(null);\n        }\n      } catch (error) {\n        console.error('[AuthContext] Error in handleAuthStateChange:', error, {\n          sessionExists: !!session,\n          timestamp: new Date().toISOString(),\n        });\n      } finally {\n        setLoading(false);\n        // Mark auth check as complete\n        setAuthCheckComplete(true);\n      }\n    },\n    [fetchUserRole, fetchUserDealership, dealershipId, isGroupAdmin]\n  );\n\n  // Initialize auth state on component mount\n  useEffect(() => {\n    let mounted = true;\n    let authListener: { data: { subscription: { unsubscribe: () => void } } } | null = null;\n\n    const initialize = async () => {\n      if (initialized) return;\n\n      try {\n        console.log('[AuthContext] Initializing auth context', {\n          timestamp: new Date().toISOString(),\n        });\n\n        // Check for direct auth first - if active, skip normal Supabase initialization\n        if (isAuthenticated && isAuthenticated()) {\n          const directUser = getDirectAuthUser();\n          if (directUser) {\n            console.log(\n              '[AuthContext] Direct auth detected during initialization:',\n              directUser.email\n            );\n\n            // Set user data from direct auth\n            if (mounted) {\n              // Create a mock Supabase user object from direct auth user\n              const mockUser = {\n                id: directUser.id,\n                email: directUser.email,\n                user_metadata: { role: directUser.role },\n                app_metadata: {},\n                aud: 'authenticated',\n                created_at: new Date().toISOString(),\n                updated_at: new Date().toISOString(),\n              };\n\n              setUser(mockUser as any);\n              setRole(directUser.role as any);\n              setIsGroupAdmin(directUser.isGroupAdmin || false);\n              setLoading(false);\n              setAuthCheckComplete(true);\n              setHasSession(true); // Direct auth counts as having a session\n              console.log('[AuthContext] Direct auth initialization completed with user data', {\n                email: directUser.email,\n                role: directUser.role,\n                isGroupAdmin: directUser.isGroupAdmin,\n              });\n            }\n            return;\n          }\n        }\n\n        // Get initial session\n        const {\n          data: { session },\n          error: sessionError,\n        } = await supabase.auth.getSession();\n\n        if (sessionError) {\n          console.error('[AuthContext] Error getting initial session:', sessionError, {\n            timestamp: new Date().toISOString(),\n          });\n          if (mounted) {\n            setLoading(false); // Make sure to set loading to false even on error\n            setAuthCheckComplete(true); // Mark auth check as complete\n            setError(sessionError);\n          }\n          return;\n        }\n\n        // Update session state\n        if (mounted) {\n          console.log('[AuthContext] Initial session exists:', !!session, {\n            userId: session?.user?.id || 'none',\n            timestamp: new Date().toISOString(),\n          });\n          setHasSession(!!session);\n        }\n\n        // Process initial session\n        if (session?.user && mounted) {\n          console.log('[AuthContext] Found initial session for user:', session.user.email, {\n            userId: session.user.id,\n            timestamp: new Date().toISOString(),\n          });\n\n          // Always set user data immediately\n          setUser(session.user);\n\n          // Check if the user is a group admin\n          try {\n            console.warn('[DEBUG AUTH] Checking group admin status during initialization');\n            await fetchProfileData(session.user.id);\n          } catch (profileError) {\n            console.error('[DEBUG AUTH] Error checking group admin status:', profileError);\n          }\n\n          try {\n            // Then try to get role\n            const initialRole = await fetchUserRole(session.user.id);\n            if (mounted) {\n              console.log('[AuthContext] Setting initial role:', initialRole, {\n                userId: session.user.id,\n                timestamp: new Date().toISOString(),\n              });\n              setRole(initialRole);\n            }\n          } catch (error) {\n            console.error('[AuthContext] Error fetching initial role, using fallback:', error, {\n              userId: session.user.id,\n              timestamp: new Date().toISOString(),\n            });\n            if (mounted) {\n              // Always set a role even on error\n              console.log('[AuthContext] Setting fallback role due to error', {\n                role: FALLBACK_ROLE,\n                timestamp: new Date().toISOString(),\n              });\n              setRole(FALLBACK_ROLE);\n            }\n          }\n        }\n\n        if (mounted) {\n          setLoading(false);\n          setAuthCheckComplete(true); // Mark auth check as complete\n        }\n\n        // Set up auth state change listener\n        if (mounted) {\n          authListener = await supabase.auth.onAuthStateChange(async (event, newSession) => {\n            if (!mounted) return;\n\n            console.log('[AuthContext] Auth event:', event, {\n              userId: newSession?.user?.id || 'none',\n              email: newSession?.user?.email || 'none',\n              timestamp: new Date().toISOString(),\n            });\n\n            // Update hasSession immediately\n            setHasSession(!!newSession);\n\n            // Skip INITIAL_SESSION if we already have a user\n            if (event === 'INITIAL_SESSION' && user && role) {\n              console.log('[AuthContext] Skipping INITIAL_SESSION - already initialized', {\n                userId: user.id,\n                role,\n                timestamp: new Date().toISOString(),\n              });\n              return;\n            }\n\n            await handleAuthStateChange(newSession);\n          });\n        }\n\n        if (mounted) {\n          setInitialized(true);\n        }\n      } catch (error) {\n        console.error('[AuthContext] Error in initialization:', error, {\n          timestamp: new Date().toISOString(),\n        });\n        if (mounted) {\n          setLoading(false); // Ensure loading is set to false on any error\n          setAuthCheckComplete(true); // Mark auth check as complete\n          setError(error instanceof Error ? error : new Error('Unknown initialization error'));\n        }\n      }\n    };\n\n    initialize();\n\n    // Set a safety timeout to ensure loading state isn't stuck\n    const safetyTimer = setTimeout(() => {\n      if (mounted && loading) {\n        // Check if direct auth is active before forcing timeout\n        const isDirectAuth = isAuthenticated && isAuthenticated();\n        if (isDirectAuth) {\n          console.log(\n            '[AuthContext] Safety timeout reached but direct auth is active - completing auth state'\n          );\n          // Complete the auth state for direct auth\n          setLoading(false);\n          setAuthCheckComplete(true);\n          setHasSession(true); // Direct auth counts as having a session\n          return;\n        }\n\n        console.error('[AuthContext] Safety timeout reached - forcing loading state to false');\n        setLoading(false);\n        setAuthCheckComplete(true); // Mark auth check as complete even on timeout\n      }\n    }, 5000); // 5 second safety timeout\n\n    return () => {\n      mounted = false;\n      clearTimeout(safetyTimer);\n      if (authListener?.data?.subscription) {\n        authListener.data.subscription.unsubscribe();\n      }\n    };\n  }, [handleAuthStateChange, initialized, fetchUserRole]);\n\n  // Sign in with email and password\n  const signIn = async (email: string, password: string, rememberMe?: boolean) => {\n    try {\n      logAuthEvent('Sign in attempt', {\n        email,\n        remember_me: !!rememberMe,\n        timestamp: new Date().toISOString(),\n      });\n\n      setLoading(true);\n      setError(null);\n\n      console.log('[AuthContext] Signing in user:', email, {\n        timestamp: new Date().toISOString(),\n        rememberMe: !!rememberMe,\n      });\n\n      // Special handling for test accounts with @exampletest.com domain\n      if (isTestEmail(email)) {\n        console.log('[AuthContext] Test email detected, using special login flow');\n        const testLoginResult = await loginTestUser(email, password);\n\n        if (testLoginResult.error) {\n          throw testLoginResult.error;\n        }\n\n        // If successful, the loginTestUser function returns the session data\n        const session = testLoginResult.data?.session;\n\n        if (!session) {\n          throw new Error('No session returned from test login');\n        }\n\n        console.log('[AuthContext] Test login successful for:', email, testLoginResult);\n\n        // Handle the successful session similar to the normal flow\n        setUser(session.user);\n        setHasSession(true);\n\n        // Check for force_redirect flag that may have been set by loginTestUser\n        const forceRedirectTo = localStorage.getItem('force_redirect_after_login');\n        const forceRedirectTimestamp = localStorage.getItem('force_redirect_timestamp');\n\n        // Only use the redirect if it was set in the last 10 seconds\n        const isRecentRedirect =\n          forceRedirectTimestamp && Date.now() - parseInt(forceRedirectTimestamp) < 10000;\n\n        if (forceRedirectTo && isRecentRedirect) {\n          console.log('[AuthContext] Force redirect detected for test user to:', forceRedirectTo);\n          // Clear the flags to prevent redirect loops\n          localStorage.removeItem('force_redirect_after_login');\n          localStorage.removeItem('force_redirect_timestamp');\n\n          setLoading(false);\n          showSuccessToast('Welcome Back!', 'Login successful - redirecting...');\n\n          // Use window.location for a full page reload to ensure clean state\n          window.location.href = forceRedirectTo;\n          return;\n        }\n\n        // Force immediate redirection if group admin\n        const isGroupAdminByEmail =\n          email.toLowerCase().includes('group') && email.toLowerCase().includes('@exampletest.com');\n\n        if (isGroupAdmin || testLoginResult.isGroupAdmin) {\n          console.warn(\n            '[AuthContext] GROUP ADMIN test account detected, forcing immediate redirect'\n          );\n          setLoading(false);\n          showSuccessToast('Welcome Back!', 'Group Admin login successful');\n          window.location.href = '/group-admin';\n          return;\n        }\n\n        // Check if this user is explicitly marked as a group admin in the result\n        if (testLoginResult.isGroupAdmin) {\n          console.log('[AuthContext] Direct group admin flag detected, setting isGroupAdmin=true');\n          setIsGroupAdmin(true);\n          setRole('dealer_group_admin');\n          setUserRole('dealer_group_admin');\n        } else {\n          // Check group admin status\n          console.warn('[DEBUG AUTH] Checking group admin status after test login');\n          if (session.user?.id) {\n            const profileData = await fetchProfileData(session.user.id);\n\n            // Get the user's dealership\n            const userDealershipId = await fetchUserDealership(session.user.id);\n            if (userDealershipId) {\n              setDealershipId(userDealershipId);\n            }\n\n            // Set role from profile if available\n            if (profileData?.role) {\n              const normalizedRole = profileData.role.toLowerCase() as UserRole;\n              setRole(normalizedRole);\n              setUserRole(normalizedRole);\n            }\n          }\n        }\n\n        showSuccessToast('Welcome back!', 'You have successfully signed in as a test user.');\n        setLoading(false);\n        return;\n      }\n\n      // Normal login flow for non-test accounts\n      const { data, error } = await supabase.auth.signInWithPassword({\n        email,\n        password,\n        options: {\n          // Set session persistence based on remember me option\n          // Default to false if not specified (session expires when tab is closed)\n          persistSession: rememberMe ?? false,\n        },\n      });\n\n      if (error) {\n        console.error('[AuthContext] Sign in error:', error);\n        throw error;\n      }\n\n      if (!data.user) {\n        console.error('[AuthContext] No user returned from authentication');\n        throw new Error('No user returned from authentication');\n      }\n\n      console.log('[AuthContext] User authenticated successfully:', data.user.id);\n\n      // Update state with user data\n      setUser(data.user);\n      setHasSession(true);\n\n      // Check group admin status\n      console.warn('[DEBUG AUTH] Checking group admin status after login');\n      const profileData = await fetchProfileData(data.user.id);\n\n      // Immediate redirection for group admin accounts\n      const isGroupAdminByEmail =\n        data.user.email?.toLowerCase().includes('group') &&\n        data.user.email?.toLowerCase().includes('@exampletest.com');\n\n      if (\n        isGroupAdmin ||\n        profileData?.is_group_admin ||\n        isGroupAdminByEmail ||\n        data.user.user_metadata?.is_group_admin\n      ) {\n        console.warn('[DEBUG AUTH] Group admin detected, forcing immediate redirect');\n        setLoading(false); // Ensure loading state is cleared before redirect\n        showSuccessToast('Sign In Successful', `Welcome, Group Admin!`);\n\n        // Force immediate browser navigation\n        setTimeout(() => {\n          window.location.href = '/group-admin';\n        }, 100);\n        return;\n      }\n\n      // Get the user's dealership and role\n      const userDealershipId = await fetchUserDealership(data.user.id);\n      if (userDealershipId) {\n        setDealershipId(userDealershipId);\n        console.log(`[AuthContext] User belongs to dealership: ${userDealershipId}`);\n      } else {\n        console.log('[AuthContext] No dealership found for user, using default');\n        setDealershipId(DEFAULT_DEALERSHIP_ID);\n      }\n\n      showSuccessToast('Sign In Successful', `Welcome back, ${email}!`);\n    } catch (error) {\n      logAuthEvent('Sign in error', {\n        email,\n        error: error instanceof Error ? error.message : String(error),\n      });\n\n      logSecurityEvent('Failed login attempt', {\n        email,\n        error: error instanceof Error ? error.message : String(error),\n        ip_address: 'client-side', // Note: Real IP tracking should be done server-side\n      });\n\n      setError(error instanceof Error ? error : new Error('Unknown error occurred during sign in'));\n      showErrorToast(\n        'Sign In Failed',\n        error instanceof Error ? error.message : 'Unknown error occurred during sign in'\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Sign up function\n  const signUp = async (email: string, password: string, userData: any) => {\n    console.log('[AuthContext] Signing up:', email, {\n      timestamp: new Date().toISOString(),\n    });\n\n    if (!email || !password || !userData) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const { data, error } = await supabase.auth.signUp({\n        email,\n        password,\n        options: {\n          data: {\n            first_name: userData.firstName,\n            last_name: userData.lastName,\n          },\n        },\n      });\n\n      if (error) {\n        console.error('[AuthContext] Sign up error:', error.message, {\n          code: error.name,\n          timestamp: new Date().toISOString(),\n        });\n        setError(error);\n        showErrorToast('Sign up failed', error.message);\n        return;\n      }\n\n      if (data.user) {\n        // Create profile for new user\n        try {\n          console.log('[AuthContext] Creating profile for new user:', data.user.id, {\n            email,\n            timestamp: new Date().toISOString(),\n          });\n\n          const { error: profileError } = await supabase.from('profiles').insert([\n            {\n              id: data.user.id,\n              email,\n              name: `${userData.firstName} ${userData.lastName}`,\n              role: DEFAULT_ROLE,\n              dealership_id: DEFAULT_DEALERSHIP_ID,\n            },\n          ]);\n\n          if (profileError) {\n            console.error('[AuthContext] Error creating profile during signup:', profileError, {\n              userId: data.user.id,\n              timestamp: new Date().toISOString(),\n            });\n            // Don't fail sign up due to profile error\n          } else {\n            console.log('[AuthContext] Profile successfully created during signup', {\n              userId: data.user.id,\n              timestamp: new Date().toISOString(),\n            });\n          }\n        } catch (profileError) {\n          console.error('[AuthContext] Exception creating profile during signup:', profileError, {\n            userId: data.user.id,\n            timestamp: new Date().toISOString(),\n          });\n          // Don't fail sign up due to profile error\n        }\n\n        console.log('[AuthContext] Sign up successful for:', email, {\n          userId: data.user.id,\n          timestamp: new Date().toISOString(),\n        });\n        showSuccessToast('Account created', 'Your account has been created successfully');\n      }\n    } catch (error) {\n      console.error('[AuthContext] Error in signUp:', error, {\n        email,\n        timestamp: new Date().toISOString(),\n      });\n      const errorMsg = error instanceof Error ? error.message : String(error);\n      setError(error instanceof Error ? error : new Error(errorMsg));\n      showErrorToast('Sign up failed', errorMsg);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Sign out function\n  const signOut = async () => {\n    try {\n      logAuthEvent('Sign out initiated', {\n        user_id: user?.id,\n        email: user?.email,\n      });\n\n      console.log('[AuthContext] Signing out user:', user?.email, {\n        userId: user?.id,\n        timestamp: new Date().toISOString(),\n      });\n\n      // First try to clean up some state immediately for a smoother experience\n      try {\n        // Mark that we're in the logout process to prevent redirects\n        localStorage.setItem('logout_in_progress', 'true');\n\n        // Start the loading spinner\n        setLoading(true);\n\n        // Signal to the UI that we're logging out\n        showInfoToast('Signing Out', 'Please wait while we sign you out...');\n      } catch (localError) {\n        console.error('[AuthContext] Error during pre-logout cleanup:', localError);\n      }\n\n      // Redirect to the dedicated logout page to handle the complete logout process\n      console.log('[AuthContext] Redirecting to logout page');\n      window.location.href = '/logout';\n\n      return; // Early return to skip the rest of the function\n\n      // This code will not run, but is kept for reference\n    } catch (error) {\n      logAuthEvent('Sign out error', {\n        user_id: user?.id,\n        error: error instanceof Error ? error.message : String(error),\n      });\n\n      console.error('[AuthContext] Error during signOut:', error);\n\n      setError(\n        error instanceof Error ? error : new Error('Unknown error occurred during sign out')\n      );\n\n      showErrorToast(\n        'Sign Out Failed',\n        error instanceof Error ? error.message : 'Unknown error occurred'\n      );\n\n      // Even if there's an error, still try to navigate to the logout page\n      window.location.href = '/logout';\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // New function to fetch data from the correct schema based on dealership_id\n  const fetchFromDealershipSchema = useCallback(\n    async (dealershipId: number, table: string, query: any = {}) => {\n      try {\n        console.log(\n          `[AuthContext] Fetching data from schema for dealership: ${dealershipId}, table: ${table}`,\n          {\n            timestamp: new Date().toISOString(),\n            query,\n          }\n        );\n\n        // Get the schema name for this dealership\n        const { data: dealership, error: dealershipError } = await supabase\n          .from('dealerships')\n          .select('schema_name')\n          .eq('id', dealershipId)\n          .single();\n\n        if (dealershipError || !dealership?.schema_name) {\n          console.error(\n            `[AuthContext] Error fetching schema name for dealership ${dealershipId}:`,\n            dealershipError\n          );\n          return {\n            data: null,\n            error: dealershipError || new Error('No schema name found for dealership'),\n          };\n        }\n\n        const schemaName = dealership.schema_name;\n        console.log(`[AuthContext] Using schema: ${schemaName} for dealership: ${dealershipId}`);\n\n        // Build the query dynamically based on the provided query object\n        let dbQuery = supabase.from(`${schemaName}.${table}`);\n\n        // Apply select if provided\n        if (query.select) {\n          dbQuery = dbQuery.select(query.select);\n        } else {\n          dbQuery = dbQuery.select('*');\n        }\n\n        // Apply filters if provided\n        if (query.filters) {\n          for (const filter of query.filters) {\n            if (filter.type === 'eq') {\n              dbQuery = dbQuery.eq(filter.column, filter.value);\n            } else if (filter.type === 'in') {\n              dbQuery = dbQuery.in(filter.column, filter.value);\n            } else if (filter.type === 'gt') {\n              dbQuery = dbQuery.gt(filter.column, filter.value);\n            } else if (filter.type === 'lt') {\n              dbQuery = dbQuery.lt(filter.column, filter.value);\n            }\n            // Add more filter types as needed\n          }\n        }\n\n        // Apply order if provided\n        if (query.order) {\n          dbQuery = dbQuery.order(query.order.column, { ascending: query.order.ascending });\n        }\n\n        // Apply limit if provided\n        if (query.limit) {\n          dbQuery = dbQuery.limit(query.limit);\n        }\n\n        // Execute the query\n        const { data, error } = await dbQuery;\n\n        if (error) {\n          console.error(`[AuthContext] Error fetching data from ${schemaName}.${table}:`, error);\n          return { data: null, error };\n        }\n\n        console.log(`[AuthContext] Successfully fetched data from ${schemaName}.${table}:`, {\n          count: data?.length,\n        });\n        return { data, error: null };\n      } catch (err) {\n        console.error(`[AuthContext] Exception in fetchFromDealershipSchema:`, err);\n        return { data: null, error: err instanceof Error ? err : new Error('Unknown error') };\n      }\n    },\n    []\n  );\n\n  // Add a new function for magic link login\n  const magicLinkLogin = async (email: string) => {\n    console.log(`[AuthContext] Magic link login attempt for ${email}`);\n    setLoading(true);\n    setError(null);\n\n    try {\n      const { data, error } = await supabase.auth.signInWithOtp({\n        email,\n        options: {\n          shouldCreateUser: false, // Only send to existing users\n        },\n      });\n\n      if (error) {\n        console.error('[AuthContext] Magic link error:', error);\n        throw error;\n      }\n\n      console.log('[AuthContext] Magic link sent successfully');\n      showSuccessToast(\n        'Magic Link Sent',\n        `Check your email (${email}) for a login link. For test accounts, you can check the console for the magic link.`\n      );\n    } catch (error) {\n      console.error('[AuthContext] Magic link process failed:', error);\n\n      if (error instanceof Error) {\n        setError(error);\n        showErrorToast('Magic Link Failed', error.message);\n      } else {\n        const genericError = new Error('An unknown error occurred during magic link generation');\n        setError(genericError);\n        showErrorToast('Magic Link Failed', 'An unknown error occurred');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Create value with updated dealership context\n  const value = {\n    user,\n    role,\n    signIn,\n    signUp,\n    signOut,\n    loading,\n    hasSession,\n    error,\n    userRole,\n    dealershipId,\n    setDealershipContext,\n    currentDealershipName,\n    fetchFromDealershipSchema,\n    magicLinkLogin,\n    loginTestAccount: loginTestUser,\n    logAccessAttempt: (path: string, allowed: boolean, details?: any) => {\n      const accessEvent = allowed ? 'Access granted' : 'Access denied';\n\n      logAuthEvent(accessEvent, {\n        path,\n        user_id: user?.id,\n        email: user?.email,\n        role: role || userRole,\n        dealership_id: dealershipId,\n        dealership_name: currentDealershipName,\n        details,\n        allowed,\n      });\n\n      if (!allowed) {\n        logSecurityEvent('Unauthorized access attempt', {\n          path,\n          user_id: user?.id,\n          email: user?.email,\n          role: role || userRole,\n        });\n      }\n    },\n    isGroupAdmin,\n    authCheckComplete,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// Add a global type declaration for auth event tracking\ndeclare global {\n  interface Window {\n    authEvents?: Array<{\n      event: string;\n      details: any;\n      timestamp: string;\n    }>;\n  }\n}\n","import * as React from 'react';\n\nimport { cn } from '../../lib/utils';\n\nconst Card = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn('rounded-xl border bg-card text-card-foreground shadow', className)}\n      {...props}\n    />\n  )\n);\nCard.displayName = 'Card';\n\nconst CardHeader = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn('flex flex-col space-y-1.5 p-6', className)} {...props} />\n  )\n);\nCardHeader.displayName = 'CardHeader';\n\nconst CardTitle = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn('font-semibold leading-none tracking-tight', className)}\n      {...props}\n    />\n  )\n);\nCardTitle.displayName = 'CardTitle';\n\nconst CardDescription = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn('text-sm text-muted-foreground', className)} {...props} />\n  )\n);\nCardDescription.displayName = 'CardDescription';\n\nconst CardContent = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn('p-6 pt-0', className)} {...props} />\n  )\n);\nCardContent.displayName = 'CardContent';\n\nconst CardFooter = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn('flex items-center p-6 pt-0', className)} {...props} />\n  )\n);\nCardFooter.displayName = 'CardFooter';\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent };\n","import * as React from 'react';\nimport { Slot } from '@radix-ui/react-slot';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nimport { cn } from '../../lib/utils';\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\n  {\n    variants: {\n      variant: {\n        default: 'bg-primary text-primary-foreground hover:bg-primary/90',\n        destructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n        outline: 'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n        secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\n        link: 'text-primary underline-offset-4 hover:underline',\n      },\n      size: {\n        default: 'h-10 px-4 py-2',\n        sm: 'h-9 rounded-md px-3',\n        lg: 'h-11 rounded-md px-8',\n        icon: 'h-10 w-10',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  }\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : 'button';\n    return (\n      <Comp className={cn(buttonVariants({ variant, size, className }))} ref={ref} {...props} />\n    );\n  }\n);\nButton.displayName = 'Button';\n\nexport { Button, buttonVariants };\n","import * as React from 'react';\n\nimport { cn } from '../../lib/utils';\n\nexport interface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nInput.displayName = 'Input';\n\nexport { Input };\n","\"use client\";\n\n// src/label.tsx\nimport * as React from \"react\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NAME = \"Label\";\nvar Label = React.forwardRef((props, forwardedRef) => {\n  return /* @__PURE__ */ jsx(\n    Primitive.label,\n    {\n      ...props,\n      ref: forwardedRef,\n      onMouseDown: (event) => {\n        const target = event.target;\n        if (target.closest(\"button, input, select, textarea\")) return;\n        props.onMouseDown?.(event);\n        if (!event.defaultPrevented && event.detail > 1) event.preventDefault();\n      }\n    }\n  );\n});\nLabel.displayName = NAME;\nvar Root = Label;\nexport {\n  Label,\n  Root\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from 'react';\nimport * as LabelPrimitive from '@radix-ui/react-label';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { cn } from '../../lib/utils';\n\nconst labelVariants = cva(\n  'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70'\n);\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> & VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root ref={ref} className={cn(labelVariants(), className)} {...props} />\n));\nLabel.displayName = LabelPrimitive.Root.displayName;\n\nexport { Label };\n","import { useState, useEffect } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { Button } from '../../components/ui/button';\nimport { Input } from '../../components/ui/input';\nimport { Label } from '../../components/ui/label';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Eye, EyeOff, Key, Mail, AlertTriangle } from 'lucide-react';\nimport { supabase } from '../../lib/supabaseClient';\n\nexport default function LoginForm() {\n  const { signIn, magicLinkLogin, hasSession, user, role, userRole } = useAuth();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [loginAttempt, setLoginAttempt] = useState(0);\n  const [showPassword, setShowPassword] = useState(false);\n  const [isMagicLinkSent, setIsMagicLinkSent] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // Add login debug mode flag\n  const DEBUG_LOGIN = true;\n\n  useEffect(() => {\n    if (DEBUG_LOGIN) {\n      console.log('[LoginForm] Component mounted/updated:', {\n        hasSession,\n        userEmail: user?.email,\n        role,\n        userRole,\n        timestamp: new Date().toISOString(),\n      });\n    }\n  }, [hasSession, user, role, userRole]);\n\n  const validateInput = () => {\n    if (!email) return 'Email is required';\n    if (!email.includes('@')) return 'Invalid email format';\n    if (!password) return 'Password is required';\n    if (password.length < 6) return 'Password must be at least 6 characters';\n    return null;\n  };\n\n  // Special check for group admin emails to ensure redirection\n  const isGroupAdminEmail = (emailAddress: string) => {\n    return (\n      emailAddress.toLowerCase().includes('group') &&\n      emailAddress.toLowerCase().includes('@exampletest.com')\n    );\n  };\n\n  // Special check for test emails\n  const isTestEmail = (emailAddress: string) => {\n    return (\n      emailAddress.toLowerCase().includes('@exampletest.com') ||\n      emailAddress.toLowerCase().includes('@example.com')\n    );\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setLoginAttempt(prev => prev + 1);\n\n    try {\n      // Validate input\n      const validationError = validateInput();\n      if (validationError) {\n        setError(validationError);\n        return;\n      }\n\n      if (DEBUG_LOGIN) {\n        console.log('[LoginForm] Starting login attempt:', {\n          email,\n          attempt: loginAttempt + 1,\n          timestamp: new Date().toISOString(),\n        });\n      }\n\n      // Use Supabase auth directly for better error handling\n      const { data, error: authError } = await supabase.auth.signInWithPassword({\n        email: email.trim(),\n        password,\n      });\n\n      if (authError) {\n        console.error('[LoginForm] Authentication error:', authError);\n\n        // Handle specific error types\n        if (authError.message.includes('Invalid login credentials')) {\n          setError('Invalid email or password. Please check your credentials and try again.');\n        } else if (authError.message.includes('Email not confirmed')) {\n          setError('Please check your email and click the confirmation link before logging in.');\n        } else if (authError.message.includes('Too many requests')) {\n          setError('Too many login attempts. Please wait a few minutes before trying again.');\n        } else {\n          setError(`Login failed: ${authError.message}`);\n        }\n        return;\n      }\n\n      if (!data.user) {\n        setError('Login failed: No user data received');\n        return;\n      }\n\n      console.log('[LoginForm] Login successful:', {\n        userId: data.user.id,\n        email: data.user.email,\n        timestamp: new Date().toISOString(),\n      });\n\n      // Fetch user profile to get actual role from database\n      console.log('[LoginForm] Fetching user profile to determine role-based redirect');\n      const { data: profileData, error: profileError } = await supabase\n        .from('profiles')\n        .select('role, is_group_admin')\n        .eq('id', data.user.id)\n        .single();\n\n      if (profileError) {\n        console.error('[LoginForm] Error fetching user profile:', profileError);\n        // Fall back to basic dashboard if we can't get the role\n        navigate('/dashboard', { replace: true });\n        return;\n      }\n\n      const userRole = profileData?.role;\n      const isGroupAdmin = profileData?.is_group_admin;\n\n      console.log('[LoginForm] User role from database:', { userRole, isGroupAdmin, email });\n\n      // Set coordination flag for ProtectedRoute\n      localStorage.setItem('recent_supabase_login', 'true');\n      console.log('[LoginForm] Set recent_supabase_login flag for ProtectedRoute coordination');\n      localStorage.setItem('last_login_email', email); // Track email for bypass\n\n      // Determine redirect path based on user role/email\n      let redirectPath = '/dashboard';\n\n      // Special case for testfinance@example.com - redirect to single finance dashboard\n      if (email.toLowerCase() === 'testfinance@example.com') {\n        redirectPath = '/dashboard/single-finance';\n        console.log(\n          '[LoginForm] Test finance user detected, redirecting to single finance dashboard'\n        );\n      }\n      // Check for admin roles - more comprehensive admin detection\n      else if (\n        email.toLowerCase() === 'testadmin@example.com' ||\n        email.toLowerCase() === 'admin@thedasboard.com' ||\n        email.toLowerCase() === 'admin@example.com' ||\n        email.toLowerCase().includes('admin@example.com')\n      ) {\n        redirectPath = '/master-admin';\n        console.log('[LoginForm] Admin user detected, redirecting to master admin');\n      } else if (isGroupAdminEmail(email)) {\n        redirectPath = '/group-admin';\n        console.log('[LoginForm] Group admin detected, redirecting to group admin');\n      } else if (email.toLowerCase().includes('admin@exampletest.com')) {\n        redirectPath = '/dashboard/admin';\n        console.log('[LoginForm] Dealership admin detected, redirecting to dealership admin');\n      } else if (email.toLowerCase().includes('finance')) {\n        redirectPath = '/dashboard/finance';\n      } else if (email.toLowerCase().includes('sales')) {\n        redirectPath = '/dashboard/sales';\n      }\n\n      // Use navigate for consistent routing\n      console.log('[LoginForm] Redirecting to:', redirectPath);\n      navigate(redirectPath, { replace: true });\n    } catch (err) {\n      console.error('[LoginForm] Login error:', err);\n      const errorMsg = err instanceof Error ? err.message : 'An unexpected error occurred';\n      setError(`Login failed: ${errorMsg}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle magic link login\n  const handleMagicLinkLogin = async () => {\n    if (!email) {\n      setError('Please enter your email address');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const { error } = await supabase.auth.signInWithOtp({\n        email: email.trim(),\n        options: {\n          emailRedirectTo: `${window.location.origin}/auth/callback`,\n        },\n      });\n\n      if (error) {\n        setError(`Magic link failed: ${error.message}`);\n        return;\n      }\n\n      setIsMagicLinkSent(true);\n      setError('');\n    } catch (error) {\n      console.error('[LoginForm] Magic link error:', error);\n      const errorMsg = error instanceof Error ? error.message : 'Failed to send magic link';\n      setError(`Magic link failed: ${errorMsg}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Quick test login buttons\n  const testUsers = [\n    { email: 'testadmin@example.com', password: 'Password123!', label: 'Test Admin' },\n    { email: 'group1.admin@exampletest.com', password: 'Password123!', label: 'Group Admin' },\n    { email: 'dealer1.admin@exampletest.com', password: 'Password123!', label: 'Dealer Admin' },\n    { email: 'finance1@exampletest.com', password: 'Password123!', label: 'Finance Manager' },\n    { email: 'sales@exampletest.com', password: 'Password123!', label: 'Sales Person' },\n  ];\n\n  const quickLogin = (testUser: { email: string; password: string }) => {\n    setEmail(testUser.email);\n    setPassword(testUser.password);\n  };\n\n  const createTestUser = async (email: string, password: string, role: string, name: string) => {\n    try {\n      console.log(`[LoginForm] Creating test user: ${email}`);\n\n      // First try to sign up the user\n      const { data: signUpData, error: signUpError } = await supabase.auth.signUp({\n        email,\n        password,\n        options: {\n          data: {\n            name: name,\n          },\n        },\n      });\n\n      if (signUpError && !signUpError.message.includes('already registered')) {\n        console.error('[LoginForm] Signup error:', signUpError);\n        return { success: false, error: signUpError.message };\n      }\n\n      // If signup succeeded or user already exists, try to create/update profile\n      if (signUpData.user || signUpError?.message.includes('already registered')) {\n        const userId =\n          signUpData.user?.id || signUpError?.message.includes('already registered')\n            ? 'existing'\n            : null;\n\n        if (userId !== 'existing') {\n          // Create profile for new user\n          const { error: profileError } = await supabase.from('profiles').upsert({\n            id: userId,\n            email,\n            role,\n            name,\n            dealership_id: role.includes('group') ? null : 1,\n            is_group_admin: role.includes('group') || email.includes('group'),\n          });\n\n          if (profileError) {\n            console.error('[LoginForm] Profile creation error:', profileError);\n          }\n        }\n      }\n\n      return { success: true };\n    } catch (error) {\n      console.error('[LoginForm] Create test user error:', error);\n      return { success: false, error: (error as Error)?.message || 'Unknown error' };\n    }\n  };\n\n  const setupTestUsers = async () => {\n    setLoading(true);\n    setError('Setting up test users...');\n\n    const testUsersToCreate = [\n      {\n        email: 'testfinance@example.com',\n        password: 'Password123!',\n        role: 'single_finance_manager',\n        name: 'Test Finance Manager',\n      },\n      {\n        email: 'testadmin@example.com',\n        password: 'Password123!',\n        role: 'admin',\n        name: 'Master Admin',\n      },\n      {\n        email: 'group1.admin@exampletest.com',\n        password: 'Password123!',\n        role: 'admin',\n        name: 'Group Admin',\n      },\n      {\n        email: 'dealer1.admin@exampletest.com',\n        password: 'Password123!',\n        role: 'dealership_admin',\n        name: 'Dealer Admin',\n      },\n      {\n        email: 'sales@exampletest.com',\n        password: 'Password123!',\n        role: 'salesperson',\n        name: 'Sales Person',\n      },\n    ];\n\n    for (const user of testUsersToCreate) {\n      await createTestUser(user.email, user.password, user.role, user.name);\n      await new Promise(resolve => setTimeout(resolve, 1000)); // Wait between requests\n    }\n\n    setError('Test users setup complete! Try logging in now.');\n    setLoading(false);\n  };\n\n  if (isMagicLinkSent) {\n    return (\n      <div className=\"text-center space-y-4\">\n        <div className=\"p-4 bg-green-50 text-green-700 rounded-md\">\n          <h3 className=\"font-medium\">Magic link sent!</h3>\n          <p className=\"text-sm mt-1\">Check your email ({email}) for a login link.</p>\n        </div>\n        <Button variant=\"outline\" onClick={() => setIsMagicLinkSent(false)} className=\"w-full\">\n          Back to Login\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        <div>\n          <Label htmlFor=\"email\">Email</Label>\n          <Input\n            id=\"email\"\n            type=\"email\"\n            value={email}\n            onChange={e => setEmail(e.target.value.trim())}\n            placeholder=\"Enter your email\"\n            required\n            disabled={loading}\n            className=\"mt-1\"\n          />\n        </div>\n\n        <div>\n          <Label htmlFor=\"password\">Password</Label>\n          <div className=\"relative\">\n            <Input\n              id=\"password\"\n              type={showPassword ? 'text' : 'password'}\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              placeholder=\"Enter your password\"\n              required\n              disabled={loading}\n              className=\"mt-1 pr-10\"\n            />\n            <button\n              type=\"button\"\n              className=\"absolute right-2 top-[calc(50%-6px)] text-gray-500 hover:text-gray-700\"\n              onClick={() => setShowPassword(!showPassword)}\n            >\n              {showPassword ? <EyeOff size={16} /> : <Eye size={16} />}\n            </button>\n          </div>\n        </div>\n\n        <div className=\"flex items-center justify-between mt-2\">\n          <div className=\"flex items-center\">\n            <input\n              id=\"remember-me\"\n              name=\"remember-me\"\n              type=\"checkbox\"\n              className=\"h-4 w-4 rounded border-gray-300 text-primary focus:ring-primary\"\n              checked={rememberMe}\n              onChange={e => setRememberMe(e.target.checked)}\n            />\n            <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-gray-900\">\n              Remember me\n            </label>\n          </div>\n        </div>\n\n        {error && (\n          <div className=\"p-3 rounded bg-red-50 text-red-600 text-sm flex items-start gap-2\">\n            <AlertTriangle size={16} className=\"mt-0.5 flex-shrink-0\" />\n            <span>{error}</span>\n          </div>\n        )}\n\n        <div className=\"flex gap-2\">\n          <Button type=\"submit\" disabled={loading} className=\"flex-1\">\n            {loading ? 'Signing in...' : 'Sign in'}\n          </Button>\n\n          <Button\n            type=\"button\"\n            variant=\"outline\"\n            disabled={loading || !email}\n            onClick={handleMagicLinkLogin}\n            className=\"flex items-center\"\n          >\n            <Mail className=\"mr-2 h-4 w-4\" />\n            Magic Link\n          </Button>\n        </div>\n\n        {/* Quick Login Buttons for Testing */}\n        <div className=\"mt-6 pt-6 border-t border-gray-200\">\n          <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Quick Test Login:</h4>\n          <div className=\"grid grid-cols-2 gap-2\">\n            {testUsers.map(testUser => (\n              <Button\n                key={testUser.email}\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => quickLogin(testUser)}\n                className=\"text-xs\"\n              >\n                {testUser.label}\n              </Button>\n            ))}\n          </div>\n\n          <Button\n            variant=\"secondary\"\n            size=\"sm\"\n            onClick={setupTestUsers}\n            className=\"w-full mt-2\"\n            disabled={loading}\n          >\n            Setup Test Users (First Time)\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Navigate, useNavigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Card, CardHeader, CardTitle, CardContent, CardFooter } from '../components/ui/card';\nimport LoginForm from '../components/auth/LoginForm';\nimport { AlertCircle } from 'lucide-react';\nimport AuthDebugButton from '../components/debug/AuthDebugButton';\n\nconst AuthPage: React.FC = () => {\n  const { user, loading, hasSession, isGroupAdmin } = useAuth();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [loadingTimeout, setLoadingTimeout] = useState(false);\n\n  // Check for special query parameters\n  const searchParams = new URLSearchParams(location.search);\n  const noRedirect = searchParams.has('noredirect');\n  const forceLogin = searchParams.has('forcelogin');\n\n  // Add safety timeout for loading state\n  useEffect(() => {\n    let timeoutId: number;\n\n    // If loading takes too long, show a message\n    if (loading) {\n      console.log('[AuthPage] Setting safety timeout for loading state');\n      timeoutId = window.setTimeout(() => {\n        console.error('[AuthPage] Loading timeout reached');\n        setLoadingTimeout(true);\n      }, 10000); // 10 second timeout\n    }\n\n    return () => {\n      if (timeoutId) window.clearTimeout(timeoutId);\n    };\n  }, [loading]);\n\n  // Add direct redirection for group admin accounts\n  useEffect(() => {\n    // Skip redirect if noRedirect or forceLogin is true\n    if (noRedirect || forceLogin) {\n      console.log('[AuthPage] Skipping redirects due to query parameters');\n      return;\n    }\n\n    if (user && user.email && !loading) {\n      // Check if user is a group admin by email pattern\n      const isGroupAdminByEmail =\n        user.email.toLowerCase().includes('group') &&\n        user.email.toLowerCase().includes('@exampletest.com');\n\n      if (isGroupAdminByEmail || isGroupAdmin || user.user_metadata?.is_group_admin) {\n        console.log('[AuthPage] *** GROUP ADMIN DETECTED - FORCING DIRECT REDIRECT ***', {\n          email: user.email,\n          byEmail: isGroupAdminByEmail,\n          byFlag: isGroupAdmin,\n          byMetadata: user.user_metadata?.is_group_admin,\n        });\n\n        // Use direct browser navigation to break out of React Router cycles\n        window.location.href = '/group-admin';\n      }\n    }\n  }, [user, loading, isGroupAdmin, noRedirect, forceLogin]);\n\n  // Add logging for authentication state changes\n  useEffect(() => {\n    console.log('[AuthPage] Auth state changed:', {\n      hasUser: !!user,\n      hasSession,\n      loading,\n      email: user?.email,\n      isGroupAdmin: isGroupAdmin,\n      noRedirect,\n      forceLogin,\n      timestamp: new Date().toISOString(),\n    });\n\n    // Skip redirect if noRedirect or forceLogin is true\n    if (noRedirect || forceLogin) {\n      console.log('[AuthPage] Skipping redirects due to query parameters');\n      return;\n    }\n\n    // Redirect if user is authenticated (but not group admin, handled separately)\n    if (user && hasSession && !loading) {\n      const isGroupAdminByEmail =\n        user.email?.toLowerCase().includes('group') &&\n        user.email?.toLowerCase().includes('@exampletest.com');\n\n      // Skip normal redirect if group admin (handled by separate effect)\n      if (isGroupAdminByEmail || isGroupAdmin || user.user_metadata?.is_group_admin) {\n        return;\n      }\n\n      console.log('[AuthPage] Regular user authenticated, redirecting to dashboard');\n      navigate('/dashboard', { replace: true });\n    }\n  }, [user, hasSession, loading, navigate, isGroupAdmin, noRedirect, forceLogin]);\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen bg-orange-500\">\n        <div className=\"flex flex-col items-center gap-3\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-white\"></div>\n          {loadingTimeout && (\n            <div className=\"text-sm text-white max-w-md text-center mt-4 flex items-center gap-2 bg-orange-600 p-2 rounded border border-orange-400\">\n              <AlertCircle className=\"h-4 w-4 text-orange-200\" />\n              <span>\n                Taking longer than expected. Please try refreshing the page if this continues.\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  // If forceLogin or noRedirect is true, always show the login form\n  if (forceLogin || noRedirect) {\n    console.log('[AuthPage] Showing login form due to query parameters');\n    // Continue to login form\n  }\n  // Otherwise check if user is authenticated and redirect if needed\n  else if (user && hasSession) {\n    // Check again for group admin to ensure they go to the right place\n    const isGroupAdminByEmail =\n      user.email?.toLowerCase().includes('group') &&\n      user.email?.toLowerCase().includes('@exampletest.com');\n\n    if (isGroupAdminByEmail || isGroupAdmin || user.user_metadata?.is_group_admin) {\n      console.log('[AuthPage] Group admin authenticated, redirecting to group admin dashboard');\n      return <Navigate to=\"/group-admin\" replace />;\n    }\n\n    console.log('[AuthPage] User is already authenticated, redirecting to dashboard');\n    return <Navigate to=\"/dashboard\" replace />;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-orange-500\">\n      {/* Black border top section with 1/2\" height (approximately 48px) */}\n      <div className=\"h-12 bg-black flex items-center\">\n        <h1 className=\"text-white text-3xl font-bold ml-6\">The DAS Board</h1>\n      </div>\n\n      {/* Main content area */}\n      <div className=\"flex items-center justify-center py-12\">\n        <div className=\"w-full max-w-md\">\n          <Card className=\"bg-white\">\n            <CardHeader className=\"space-y-1\">\n              <CardTitle className=\"text-2xl font-bold text-center text-gray-800\">\n                The DAS Board Login\n              </CardTitle>\n              {(forceLogin || noRedirect) && (\n                <p className=\"text-sm text-center text-green-600\">\n                  Force login mode active - you can log in again\n                </p>\n              )}\n            </CardHeader>\n            <CardContent>\n              <LoginForm />\n            </CardContent>\n            <CardFooter className=\"flex flex-col gap-2\">\n              <p className=\"text-sm text-gray-500 text-center\">\n                Don't have an account? Contact your administrator.\n              </p>\n            </CardFooter>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthPage;\n","import React, { useEffect, useState } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { Loader2 } from 'lucide-react';\nimport { supabase } from '../../lib/supabase';\nimport { isTestEmail } from '../../lib/supabaseClient';\nimport { isAuthenticated, getCurrentUser, getRedirectPath } from '../../lib/directAuth';\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode;\n  requiredRoles?: string[];\n  requiredDealership?: number;\n}\n\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({\n  children,\n  requiredRoles = [],\n  requiredDealership,\n}) => {\n  const { user, loading, hasSession, userRole, dealershipId, logAccessAttempt, authCheckComplete } =\n    useAuth();\n  const location = useLocation();\n  const deploymentEnv = import.meta.env.MODE || 'development';\n  const isProduction = deploymentEnv === 'production';\n\n  // Add timeout for extra loading to prevent infinite loops\n  const [extraLoadingStartTime, setExtraLoadingStartTime] = useState<number | null>(null);\n\n  // Enhanced debug logging for access control\n  useEffect(() => {\n    // Skip unnecessary logging for logout page\n    if (location.pathname === '/logout') {\n      console.log(`[ProtectedRoute] Logout page accessed, skipping detailed access logging`);\n      return;\n    }\n\n    const timestamp = new Date().toISOString();\n    console.log(`[ProtectedRoute][${timestamp}] Checking access to ${location.pathname}`, {\n      user_email: user?.email,\n      user_id: user?.id,\n      user_role: userRole,\n      has_session: hasSession,\n      required_roles: requiredRoles,\n      user_dealership_id: dealershipId,\n      required_dealership: requiredDealership,\n      is_loading: loading,\n      auth_check_complete: authCheckComplete,\n      environment: deploymentEnv,\n      source_path: location.pathname,\n      source_query: location.search,\n    });\n  }, [\n    user,\n    loading,\n    location,\n    userRole,\n    hasSession,\n    dealershipId,\n    requiredRoles,\n    requiredDealership,\n    deploymentEnv,\n    authCheckComplete,\n  ]);\n\n  // Special case for logout page - always render it without auth checks\n  if (location.pathname === '/logout') {\n    console.log('[ProtectedRoute] Allowing access to logout page without auth checks');\n    return <>{children}</>;\n  }\n\n  // Special case for forced logout in progress\n  const logoutInProgress = localStorage.getItem('logout_in_progress') === 'true';\n  if (logoutInProgress && location.pathname !== '/auth') {\n    console.log('[ProtectedRoute] Logout in progress detected, allowing access');\n    return <>{children}</>;\n  }\n\n  // Check for direct authentication first - but only if not overridden by recent login\n  const directAuthUser = getCurrentUser();\n  const isDirectlyAuthenticated = isAuthenticated();\n  const recentLoginCleared = localStorage.getItem('recent_login_cleared') === 'true';\n  const recentSupabaseLogin = localStorage.getItem('recent_supabase_login') === 'true';\n\n  console.log('[ProtectedRoute] Direct auth check:', {\n    directAuthUser: directAuthUser,\n    isDirectlyAuthenticated: isDirectlyAuthenticated,\n    recentLoginCleared: recentLoginCleared,\n    recentSupabaseLogin: recentSupabaseLogin,\n    path: location.pathname,\n  });\n\n  // If we have a fresh login flag, give auth state time to propagate\n  if (recentSupabaseLogin && (!user || !hasSession)) {\n    console.log(\n      '[ProtectedRoute] Recent Supabase login detected, waiting for auth state to propagate...'\n    );\n\n    // Check direct Supabase auth as fallback to bypass context issues\n    const checkDirectSupabaseAuth = async () => {\n      try {\n        const {\n          data: { session },\n        } = await supabase.auth.getSession();\n        if (session?.user?.email === 'testfinance@example.com') {\n          console.log(\n            '[ProtectedRoute] Direct Supabase check confirmed finance user, allowing access'\n          );\n          localStorage.removeItem('recent_supabase_login');\n          return true;\n        }\n      } catch (error) {\n        console.error('[ProtectedRoute] Direct auth check failed:', error);\n      }\n      return false;\n    };\n\n    // For finance routes, try direct auth check\n    if (location.pathname === '/dashboard/single-finance') {\n      checkDirectSupabaseAuth().then(isAuthenticated => {\n        if (isAuthenticated) {\n          window.location.reload(); // Force reload to refresh auth context\n        }\n      });\n    }\n\n    // Set timeout start time if not already set\n    if (!extraLoadingStartTime) {\n      setExtraLoadingStartTime(Date.now());\n    }\n\n    // Clear the flag and give auth state time to propagate (max 8 seconds)\n    const timeElapsed = extraLoadingStartTime ? Date.now() - extraLoadingStartTime : 0;\n\n    if (timeElapsed > 8000) {\n      console.warn(\n        '[ProtectedRoute] Auth state timeout reached, clearing flags and redirecting to login'\n      );\n      localStorage.removeItem('recent_supabase_login');\n      setExtraLoadingStartTime(null);\n      return <Navigate to=\"/\" replace state={{ from: location }} />;\n    }\n\n    // Add debugging for auth state\n    console.log('[ProtectedRoute] Waiting for auth state...', {\n      timeElapsed: timeElapsed,\n      user: user?.email || 'none',\n      hasSession: hasSession,\n      loading: loading,\n      authCheckComplete: authCheckComplete,\n    });\n\n    return (\n      <div className=\"flex h-screen items-center justify-center\">\n        <div className=\"text-center\">\n          <Loader2 className=\"h-8 w-8 animate-spin mx-auto mb-2\" />\n          <p className=\"text-sm text-gray-500\">Completing authentication...</p>\n          <p className=\"text-xs text-gray-400 mt-1\">\n            Please wait ({Math.round((8000 - timeElapsed) / 1000)}s)\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  // Clear timeout if we have auth state\n  if (user && hasSession && extraLoadingStartTime) {\n    setExtraLoadingStartTime(null);\n    localStorage.removeItem('recent_supabase_login');\n  }\n\n  // If we have a Supabase session and recently logged in, prioritize Supabase auth\n  if (hasSession && user && recentSupabaseLogin) {\n    console.log('[ProtectedRoute] Recent Supabase login detected, skipping direct auth check');\n    // Clear the flag after using it\n    localStorage.removeItem('recent_supabase_login');\n  } else if (isDirectlyAuthenticated && directAuthUser) {\n    console.log('[ProtectedRoute] Direct auth user detected:', directAuthUser.email);\n\n    // Check if this is a logout attempt\n    if (location.pathname === '/logout') {\n      console.log('[ProtectedRoute] Allowing logout for direct auth user');\n      return <>{children}</>;\n    }\n\n    // Check role requirements if specified\n    if (requiredRoles.length > 0) {\n      const hasRequiredRole = requiredRoles.some(\n        role => role.toLowerCase() === directAuthUser.role.toLowerCase()\n      );\n\n      if (!hasRequiredRole) {\n        console.warn(\n          `[ProtectedRoute] Direct auth user doesn't have required role. Redirecting to correct dashboard.`\n        );\n        return <Navigate to={getRedirectPath(directAuthUser)} replace />;\n      }\n    }\n\n    // Check dealership if required\n    if (requiredDealership && directAuthUser.dealershipId !== requiredDealership) {\n      console.warn(\n        `[ProtectedRoute] Direct auth user doesn't belong to required dealership. Redirecting.`\n      );\n      return <Navigate to={getRedirectPath(directAuthUser)} replace />;\n    }\n\n    // All checks passed for direct auth user\n    console.log(`[ProtectedRoute] Direct auth access granted to ${location.pathname}`);\n    return <>{children}</>;\n  }\n\n  // If still loading or auth check not complete, show loading indicator\n  if (loading || !authCheckComplete) {\n    console.log(`[ProtectedRoute] Still loading authentication state for ${location.pathname}`, {\n      loading,\n      authCheckComplete,\n      path: location.pathname,\n    });\n    return (\n      <div className=\"flex h-screen items-center justify-center\">\n        <div className=\"text-center\">\n          <Loader2 className=\"h-8 w-8 animate-spin mx-auto mb-2\" />\n          <p className=\"text-sm text-gray-500\">Verifying your access...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Add a simple delay for auth state to propagate on fresh logins\n  // If we just came from login and don't have auth state yet, wait a bit\n  const isComingFromLogin = document.referrer.includes('/') || location.pathname !== '/';\n\n  if (!user && !hasSession && isComingFromLogin && !extraLoadingStartTime) {\n    console.log(\n      '[ProtectedRoute] Detected navigation from login without auth state, adding delay...'\n    );\n    setExtraLoadingStartTime(Date.now());\n  }\n\n  if (extraLoadingStartTime && !user && !hasSession) {\n    const timeElapsed = Date.now() - extraLoadingStartTime;\n\n    if (timeElapsed < 2000) {\n      // Wait up to 2 seconds for auth state\n      return (\n        <div className=\"flex h-screen items-center justify-center\">\n          <div className=\"text-center\">\n            <Loader2 className=\"h-8 w-8 animate-spin mx-auto mb-2\" />\n            <p className=\"text-sm text-gray-500\">Completing authentication...</p>\n            <p className=\"text-xs text-gray-400 mt-1\">\n              Please wait ({Math.round((2000 - timeElapsed) / 1000)}s)\n            </p>\n          </div>\n        </div>\n      );\n    } else {\n      console.warn('[ProtectedRoute] Auth state timeout reached, redirecting to login');\n      setExtraLoadingStartTime(null);\n      return <Navigate to=\"/\" replace state={{ from: location }} />;\n    }\n  }\n\n  // Clear loading state if we got auth\n  if ((user || hasSession) && extraLoadingStartTime) {\n    setExtraLoadingStartTime(null);\n  }\n\n  // Special handling for test users to bypass normal auth flow\n  if (user?.email && isTestEmail(user.email)) {\n    console.log(`[ProtectedRoute] Test user detected: ${user.email}`);\n\n    // Add specific debug for testfinance users\n    if (user.email === 'testfinance@example.com' || user.email === 'finance1@exampletest.com') {\n      console.warn('[ProtectedRoute] FINANCE USER DETECTED:', {\n        email: user.email,\n        currentPath: location.pathname,\n        willBeRedirectedToMaster: user.email === 'testadmin@example.com',\n      });\n    }\n\n    // Special case for testadmin@example.com - always allow access to master-admin\n    if (user.email === 'testadmin@example.com') {\n      console.log('[ProtectedRoute] Test admin account detected');\n\n      // If they're trying to access the master-admin panel, allow it\n      if (location.pathname === '/master-admin') {\n        console.log('[ProtectedRoute] Allowing test admin to access master-admin panel');\n        return <>{children}</>;\n      }\n\n      // If trying to access any other route, redirect to master-admin\n      console.log('[ProtectedRoute] Redirecting test admin to master-admin panel');\n      return <Navigate to=\"/master-admin\" replace />;\n    }\n\n    // Handle group admin test users\n    if (user.email.includes('group') && user.email.includes('@exampletest.com')) {\n      console.log('[ProtectedRoute] Group admin test account detected');\n\n      // If they're trying to access the group-admin panel, allow it\n      if (location.pathname === '/group-admin') {\n        console.log('[ProtectedRoute] Allowing group admin to access group-admin panel');\n        return <>{children}</>;\n      }\n\n      // If trying to access any other route, redirect to group-admin\n      console.log('[ProtectedRoute] Redirecting group admin to group-admin panel');\n      return <Navigate to=\"/group-admin\" replace />;\n    }\n  }\n\n  // If not authenticated, redirect to login\n  if (!user || !hasSession) {\n    console.warn(`[ProtectedRoute] Access denied - Not authenticated for ${location.pathname}`);\n\n    // Log access attempt using the function from AuthContext\n    logAccessAttempt(location.pathname, false, {\n      reason: 'Not authenticated',\n      has_session: hasSession,\n      redirect_to: '/',\n    });\n\n    return <Navigate to=\"/\" replace state={{ from: location }} />;\n  }\n\n  // If specific roles are required, check if user has any of them\n  if (requiredRoles.length > 0 && userRole) {\n    // Normalize case for comparison\n    const normalizedUserRole = userRole.toLowerCase();\n    const hasRequiredRole = requiredRoles.some(role => role.toLowerCase() === normalizedUserRole);\n\n    // Additional checks for specific routes and roles\n    let accessGranted = hasRequiredRole;\n\n    // Check for group-admin route - we need to ensure the user has is_group_admin flag\n    if (requiredRoles.includes('dealer_group_admin') && location.pathname === '/group-admin') {\n      console.log(`[ProtectedRoute] This is the group admin route, checking is_group_admin flag`);\n\n      // Try to check if user has is_group_admin flag in their metadata\n      const isGroupAdmin = user.user_metadata?.is_group_admin === true;\n\n      if (isGroupAdmin) {\n        console.log(`[ProtectedRoute] User has is_group_admin flag in metadata, granting access`);\n        accessGranted = true;\n      } else {\n        console.log(`[ProtectedRoute] User does not have is_group_admin flag, checking database`);\n        // The flag might also be in the database profile\n        const checkGroupAdminFlag = async () => {\n          try {\n            const { data, error } = await supabase\n              .from('profiles')\n              .select('is_group_admin')\n              .eq('id', user.id)\n              .maybeSingle();\n\n            if (!error && data?.is_group_admin === true) {\n              console.log(`[ProtectedRoute] User has is_group_admin=true in profile table`);\n              accessGranted = true;\n            }\n          } catch (err) {\n            console.error(`[ProtectedRoute] Error checking is_group_admin flag:`, err);\n          }\n        };\n\n        // Execute this check synchronously\n        checkGroupAdminFlag();\n      }\n    }\n\n    // Handle dealership_admin role for routes requiring 'admin'\n    if (\n      !accessGranted &&\n      requiredRoles.includes('admin') &&\n      normalizedUserRole === 'dealership_admin'\n    ) {\n      console.log(\n        `[ProtectedRoute] Dealership admin accessing route requiring 'admin' - checking compatibility`\n      );\n      accessGranted = true;\n    }\n\n    if (!accessGranted) {\n      console.warn(\n        `[ProtectedRoute] Access denied - User role ${userRole} not in required roles: ${requiredRoles.join(\n          ', '\n        )}`\n      );\n\n      logAccessAttempt(location.pathname, false, {\n        reason: 'Insufficient role permissions',\n        user_role: userRole,\n        required_roles: requiredRoles,\n        redirect_to: '/dashboard',\n      });\n\n      return <Navigate to=\"/dashboard\" replace />;\n    }\n  }\n\n  // If a specific dealership is required, check if user belongs to it\n  if (requiredDealership && dealershipId !== requiredDealership) {\n    console.warn(\n      `[ProtectedRoute] Access denied - User dealership ${dealershipId} doesn't match required dealership ${requiredDealership}`\n    );\n\n    logAccessAttempt(location.pathname, false, {\n      reason: 'Dealership mismatch',\n      user_dealership: dealershipId,\n      required_dealership: requiredDealership,\n      redirect_to: '/dashboard',\n    });\n\n    return <Navigate to=\"/dashboard\" replace />;\n  }\n\n  // Special handling for single-finance route - add extra loading time for auth propagation\n  if (location.pathname === '/dashboard/single-finance' && !user && !hasSession && !loading) {\n    console.log(\n      '[ProtectedRoute] Single finance route accessed without immediate auth state, waiting...'\n    );\n\n    if (!extraLoadingStartTime) {\n      setExtraLoadingStartTime(Date.now());\n    }\n\n    const timeElapsed = extraLoadingStartTime ? Date.now() - extraLoadingStartTime : 0;\n\n    if (timeElapsed < 2000) {\n      // Wait up to 2 seconds\n      return (\n        <div className=\"flex h-screen items-center justify-center\">\n          <div className=\"text-center\">\n            <Loader2 className=\"h-8 w-8 animate-spin mx-auto mb-2\" />\n            <p className=\"text-sm text-gray-500\">Loading your dashboard...</p>\n            <p className=\"text-xs text-gray-400 mt-1\">\n              Please wait ({Math.round((2000 - timeElapsed) / 1000)}s)\n            </p>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  // All checks passed, render the protected content\n  console.log(`[ProtectedRoute] Access granted to ${location.pathname}`);\n\n  logAccessAttempt(location.pathname, true, {\n    user_role: userRole,\n    dealership_id: dealershipId,\n  });\n\n  return <>{children}</>;\n};\n\nexport default ProtectedRoute;\n","import React from 'react';\nimport { Link, useLocation, Outlet } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { Button } from '../ui/button';\nimport { Home, BarChart2, Calendar, LogOut, User, Building2 } from 'lucide-react';\n\ninterface DashboardLayoutProps {\n  children?: React.ReactNode;\n  title?: string;\n}\n\nconst DashboardLayout: React.FC<DashboardLayoutProps> = ({ children, title = 'The DAS Board' }) => {\n  const { signOut, user, userRole, dealershipId, currentDealershipName } = useAuth();\n  const location = useLocation();\n\n  const handleSignOut = () => {\n    // Navigate to the dedicated logout page instead of calling signOut\n    window.location.href = '/logout';\n  };\n\n  const isActive = (path: string) => {\n    return location.pathname === path || location.pathname.startsWith(`${path}/`);\n  };\n\n  // Check if we're in a specific dealership context\n  const isDealershipPath = location.pathname.startsWith('/dealership/');\n  const dealershipIdFromPath = isDealershipPath ? location.pathname.split('/')[2] : null;\n\n  return (\n    <div className=\"flex h-screen bg-gray-100\">\n      {/* Sidebar */}\n      <div className=\"w-64 bg-black shadow-md text-white\">\n        <div className=\"p-4 border-b border-gray-700\">\n          <h1 className=\"text-2xl font-bold text-orange-500\">{title}</h1>\n          {currentDealershipName && (\n            <div className=\"flex items-center mt-2 text-sm text-orange-300\">\n              <Building2 size={14} className=\"mr-1\" />\n              <span>{currentDealershipName}</span>\n            </div>\n          )}\n        </div>\n\n        <div className=\"p-4\">\n          <div className=\"flex items-center space-x-2 mb-6\">\n            <div className=\"bg-blue-900 p-2 rounded-full\">\n              <User size={20} className=\"text-blue-300\" />\n            </div>\n            <div>\n              <p className=\"text-sm font-medium text-white\">{user?.email}</p>\n              <p className=\"text-xs text-gray-300\">{userRole || 'User'}</p>\n            </div>\n          </div>\n\n          <nav className=\"space-y-1\">\n            {/* Adjust links based on dealership context */}\n            <Link to={isDealershipPath ? `/dealership/${dealershipIdFromPath}` : '/dashboard'}>\n              <button\n                className={`flex items-center w-full px-4 py-2 text-left text-sm rounded-md ${\n                  (isActive('/dashboard') &&\n                    !isActive('/dashboard/deals') &&\n                    !isActive('/dashboard/schedule')) ||\n                  (isDealershipPath &&\n                    !location.pathname.includes('/deals') &&\n                    !location.pathname.includes('/schedule'))\n                    ? 'bg-gray-800 text-white'\n                    : 'text-gray-300 hover:bg-gray-800 hover:text-white'\n                }`}\n              >\n                <Home size={18} className=\"mr-2\" />\n                Home\n              </button>\n            </Link>\n\n            <Link\n              to={\n                isDealershipPath ? `/dealership/${dealershipIdFromPath}/deals` : '/dashboard/deals'\n              }\n            >\n              <button\n                className={`flex items-center w-full px-4 py-2 text-left text-sm rounded-md ${\n                  isActive('/dashboard/deals') ||\n                  (isDealershipPath && location.pathname.includes('/deals'))\n                    ? 'bg-gray-800 text-white'\n                    : 'text-gray-300 hover:bg-gray-800 hover:text-white'\n                }`}\n              >\n                <BarChart2 size={18} className=\"mr-2\" />\n                Deals\n              </button>\n            </Link>\n\n            <Link\n              to={\n                isDealershipPath\n                  ? `/dealership/${dealershipIdFromPath}/schedule`\n                  : '/dashboard/schedule'\n              }\n            >\n              <button\n                className={`flex items-center w-full px-4 py-2 text-left text-sm rounded-md ${\n                  isActive('/dashboard/schedule') ||\n                  (isDealershipPath && location.pathname.includes('/schedule'))\n                    ? 'bg-gray-800 text-white'\n                    : 'text-gray-300 hover:bg-gray-800 hover:text-white'\n                }`}\n              >\n                <Calendar size={18} className=\"mr-2\" />\n                Schedule\n              </button>\n            </Link>\n\n            {/* Master Admin Panel link for admins */}\n            {userRole === 'admin' && !dealershipId && (\n              <Link to=\"/master-admin\">\n                <button\n                  className={`flex items-center w-full px-4 py-2 text-left text-sm rounded-md ${\n                    isActive('/master-admin')\n                      ? 'bg-gray-800 text-white'\n                      : 'text-gray-300 hover:bg-gray-800 hover:text-white'\n                  }`}\n                >\n                  <Building2 size={18} className=\"mr-2\" />\n                  Master Admin\n                </button>\n              </Link>\n            )}\n          </nav>\n        </div>\n\n        <div className=\"absolute bottom-0 w-64 p-4 border-t border-gray-700\">\n          <Button\n            variant=\"outline\"\n            className=\"w-full flex items-center justify-center bg-gray-800 text-white border-gray-600 hover:bg-gray-700\"\n            onClick={handleSignOut}\n          >\n            <LogOut size={18} className=\"mr-2\" />\n            Sign Out\n          </Button>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"flex-1 overflow-auto\">\n        <main className=\"p-6\">\n          {/* Use Outlet to render nested routes */}\n          {children || <Outlet />}\n\n          {/* Debug placeholder only if neither children nor Outlet content exists */}\n          {!children &&\n            !location.pathname.includes('/admin') &&\n            !location.pathname.includes('/sales') && (\n              <div\n                style={{\n                  padding: '20px',\n                  backgroundColor: '#fff3cd',\n                  color: '#856404',\n                  border: '1px solid #ffeeba',\n                  borderRadius: '4px',\n                }}\n              >\n                <p>Warning: No content to display for this route.</p>\n                <p>Current path: {location.pathname}</p>\n              </div>\n            )}\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardLayout;\n","'use client';\n\nimport { ToastContextProvider } from '@/lib/use-toast';\nimport { Toast, ToastProvider, ToastViewport } from '@/components/ui/toast';\n\nexport function Toaster() {\n  return <ToastContextProvider />;\n}\n","import { QueryClient } from '@tanstack/react-query';\r\n\r\n// Create a client to export for use in components\r\nexport const queryClient = new QueryClient({\r\n  defaultOptions: {\r\n    queries: {\r\n      refetchOnWindowFocus: false,\r\n      staleTime: 5 * 60 * 1000, // 5 minutes\r\n    },\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Card, CardHeader, CardTitle, CardContent } from '../components/ui/card';\r\nimport {\r\n  Target,\r\n  Calendar,\r\n  TrendingUp,\r\n  TrendingDown,\r\n  CheckCircle2,\r\n  AlertTriangle,\r\n  XCircle,\r\n  Clock,\r\n  ArrowRight,\r\n} from 'lucide-react';\r\nimport { getGoalTrackingData } from '../lib/apiService';\r\n\r\n// Define types for goal progress data\r\ninterface GoalProgressData {\r\n  expected: number;\r\n  actual: number;\r\n  progress: number;\r\n  status: 'on-track' | 'slightly-behind' | 'behind' | 'neutral';\r\n  progressRatio: number;\r\n}\r\n\r\n// Define type for a deal\r\ninterface Deal {\r\n  id: string;\r\n  salesperson_id: string;\r\n  sale_date: string;\r\n  front_end_gross?: number;\r\n  back_end_gross?: number;\r\n  [key: string]: any;\r\n}\r\n\r\n/**\r\n * Goal Tracking component for salesperson dashboard\r\n * Shows a simplified status indicator with color coding\r\n */\r\nconst GoalTracking: React.FC = () => {\r\n  const { user } = useAuth();\r\n  const [salesData, setSalesData] = useState<Deal[]>([]);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [daysOff, setDaysOff] = useState<number[]>([5, 8, 15, 18, 25, 27, 29]);\r\n  const [goalProgress, setGoalProgress] = useState<GoalProgressData>({\r\n    expected: 0,\r\n    actual: 0,\r\n    progress: 0,\r\n    status: 'neutral',\r\n    progressRatio: 0,\r\n  });\r\n  const [currentDay, setCurrentDay] = useState<number>(new Date().getDate());\r\n  const [daysInMonth, setDaysInMonth] = useState<number>(\r\n    new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0).getDate()\r\n  );\r\n\r\n  // Monthly goal\r\n  const MONTHLY_GOAL: number = 15;\r\n\r\n  useEffect(() => {\r\n    console.log('[GoalTracking] Component mounted', {\r\n      userId: user?.id,\r\n      currentDay,\r\n      daysInMonth,\r\n      timestamp: new Date().toISOString(),\r\n    });\r\n\r\n    fetchGoalData();\r\n\r\n    return () => {\r\n      console.log('[GoalTracking] Component unmounting');\r\n    };\r\n  }, [user]);\r\n\r\n  // Fetch goal data using the apiService\r\n  const fetchGoalData = async (): Promise<void> => {\r\n    try {\r\n      setIsLoading(true);\r\n\r\n      if (!user?.id) {\r\n        console.log('[GoalTracking] No user ID available');\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      console.log('[GoalTracking] Fetching goal data for user:', user.id);\r\n\r\n      // Use the apiService to get all goal tracking data\r\n      const data = await getGoalTrackingData(user.id);\r\n\r\n      // Update component state with the fetched data\r\n      setSalesData(data.deals);\r\n      setDaysOff(data.daysOff);\r\n      setGoalProgress(data.progressMetrics);\r\n      setCurrentDay(data.currentDay);\r\n      setDaysInMonth(data.daysInMonth);\r\n\r\n      console.log('[GoalTracking] Goal data loaded:', data);\r\n    } catch (error) {\r\n      console.error('[GoalTracking] Error fetching goal data:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Calculate remaining days in month\r\n  const remainingDays: number = daysInMonth - currentDay;\r\n\r\n  // Calculate remaining sales needed to reach goal\r\n  const remainingSalesNeeded: number = Math.max(0, MONTHLY_GOAL - goalProgress.actual);\r\n\r\n  // Calculate sales per day needed to reach goal\r\n  const salesPerDayNeeded: string =\r\n    remainingDays > 0 ? (remainingSalesNeeded / remainingDays).toFixed(1) : '0';\r\n\r\n  // Get the status color\r\n  const getStatusColor = (): string => {\r\n    switch (goalProgress.status) {\r\n      case 'on-track':\r\n        return 'text-green-600';\r\n      case 'slightly-behind':\r\n        return 'text-amber-500';\r\n      case 'behind':\r\n        return 'text-red-500';\r\n      default:\r\n        return 'text-gray-500';\r\n    }\r\n  };\r\n\r\n  // Get background status color\r\n  const getStatusBgColor = (): string => {\r\n    switch (goalProgress.status) {\r\n      case 'on-track':\r\n        return 'bg-green-100';\r\n      case 'slightly-behind':\r\n        return 'bg-amber-100';\r\n      case 'behind':\r\n        return 'bg-red-100';\r\n      default:\r\n        return 'bg-gray-100';\r\n    }\r\n  };\r\n\r\n  // Get the status icon\r\n  const getStatusIcon = () => {\r\n    switch (goalProgress.status) {\r\n      case 'on-track':\r\n        return <CheckCircle2 className=\"h-12 w-12 text-green-500\" />;\r\n      case 'slightly-behind':\r\n        return <AlertTriangle className=\"h-12 w-12 text-amber-500\" />;\r\n      case 'behind':\r\n        return <XCircle className=\"h-12 w-12 text-red-500\" />;\r\n      default:\r\n        return <Target className=\"h-12 w-12 text-gray-400\" />;\r\n    }\r\n  };\r\n\r\n  // Get the status text and trend icon\r\n  const getStatusDisplay = () => {\r\n    switch (goalProgress.status) {\r\n      case 'on-track':\r\n        return (\r\n          <span className=\"flex items-center\">\r\n            <TrendingUp className=\"h-4 w-4 mr-1\" />\r\n            On Track\r\n          </span>\r\n        );\r\n      case 'slightly-behind':\r\n        return (\r\n          <span className=\"flex items-center\">\r\n            <TrendingDown className=\"h-4 w-4 mr-1\" />\r\n            Slightly Behind\r\n          </span>\r\n        );\r\n      case 'behind':\r\n        return (\r\n          <span className=\"flex items-center\">\r\n            <TrendingDown className=\"h-4 w-4 mr-1\" />\r\n            Behind Target\r\n          </span>\r\n        );\r\n      default:\r\n        return <span className=\"flex items-center\">Getting Started</span>;\r\n    }\r\n  };\r\n\r\n  // Get progress percentage visually\r\n  const getProgressPercentage = (): number => {\r\n    return Math.min(100, Math.round((goalProgress.actual / MONTHLY_GOAL) * 100));\r\n  };\r\n\r\n  return (\r\n    <Card className=\"border hover:shadow-md transition-shadow\">\r\n      <CardHeader className=\"pb-2 border-b\">\r\n        <div className=\"flex justify-between items-center\">\r\n          <CardTitle className=\"text-lg font-medium flex items-center\">\r\n            <Target className=\"mr-2 h-5 w-5 text-blue-600\" />\r\n            Goal Tracker\r\n          </CardTitle>\r\n\r\n          {/* Status light */}\r\n          <div className=\"flex items-center space-x-2\">\r\n            <div className=\"text-sm\">\r\n              {currentDay}/{daysInMonth}\r\n            </div>\r\n            <div\r\n              className={`w-3 h-3 rounded-full ${\r\n                goalProgress.status === 'on-track'\r\n                  ? 'bg-green-500'\r\n                  : goalProgress.status === 'slightly-behind'\r\n                  ? 'bg-amber-500'\r\n                  : goalProgress.status === 'behind'\r\n                  ? 'bg-red-500'\r\n                  : 'bg-gray-400'\r\n              } animate-pulse shadow-md`}\r\n              title={`Status: ${goalProgress.status}`}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n      <CardContent className=\"pt-4\">\r\n        {isLoading ? (\r\n          <div className=\"py-8 text-center\">\r\n            <Clock className=\"h-8 w-8 mx-auto mb-2 animate-pulse text-gray-400\" />\r\n            <p className=\"text-sm text-gray-500\">Loading goal data...</p>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {/* Progress Status Indicator */}\r\n            <div className=\"flex flex-col items-center mb-6\">\r\n              {/* Large colored circle showing status */}\r\n              <div\r\n                className={`w-32 h-32 rounded-full flex items-center justify-center mb-4 transition-all duration-500 ${getStatusBgColor()}`}\r\n              >\r\n                <div className=\"text-center\">\r\n                  <div className=\"text-3xl font-bold\">{goalProgress.actual}</div>\r\n                  <div className=\"text-sm\">of {MONTHLY_GOAL}</div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Status text */}\r\n              <div className={`text-lg font-bold ${getStatusColor()}`}>{getStatusDisplay()}</div>\r\n\r\n              <div className=\"text-sm text-gray-600 mt-1 text-center\">\r\n                You've sold {goalProgress.actual} units this month.\r\n                {goalProgress.expected > 0 &&\r\n                  ` Expected by day ${currentDay}: ${goalProgress.expected} units.`}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Progress bar */}\r\n            <div className=\"mb-6\">\r\n              <div className=\"flex justify-between text-sm mb-1\">\r\n                <span>Progress</span>\r\n                <span>{getProgressPercentage()}%</span>\r\n              </div>\r\n              <div className=\"w-full h-3 bg-gray-200 rounded-full overflow-hidden\">\r\n                <div\r\n                  className={`h-full rounded-full transition-all duration-500 ${\r\n                    goalProgress.status === 'on-track'\r\n                      ? 'bg-green-500'\r\n                      : goalProgress.status === 'slightly-behind'\r\n                      ? 'bg-amber-500'\r\n                      : 'bg-red-500'\r\n                  }`}\r\n                  style={{ width: `${getProgressPercentage()}%` }}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Sales Pace Data */}\r\n            <div className=\"grid grid-cols-2 gap-3 mb-4\">\r\n              <div className=\"bg-blue-50 p-3 rounded-lg\">\r\n                <div className=\"text-xs text-blue-600 mb-1\">Days Remaining</div>\r\n                <div className=\"text-xl font-bold\">{remainingDays} days</div>\r\n                <div className=\"text-xs text-gray-500\">Until end of month</div>\r\n              </div>\r\n              <div className=\"bg-purple-50 p-3 rounded-lg\">\r\n                <div className=\"text-xs text-purple-600 mb-1\">Daily Pace Needed</div>\r\n                <div className=\"text-xl font-bold\">{salesPerDayNeeded}</div>\r\n                <div className=\"text-xs text-gray-500\">Units per day to reach goal</div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Achievement badges - only show if there are any sales */}\r\n            {goalProgress.actual > 0 && (\r\n              <div className=\"mt-5 bg-gradient-to-r from-blue-50 to-indigo-50 p-3 rounded-lg border border-blue-100\">\r\n                <h4 className=\"text-sm font-medium text-blue-700 mb-2\">Achievements</h4>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {goalProgress.actual >= 1 && (\r\n                    <div className=\"bg-white/80 px-2 py-1 rounded-full text-xs backdrop-blur-sm border border-blue-100\">\r\n                      🏆 First Sale\r\n                    </div>\r\n                  )}\r\n                  {goalProgress.actual >= 5 && (\r\n                    <div className=\"bg-white/80 px-2 py-1 rounded-full text-xs backdrop-blur-sm border border-blue-100\">\r\n                      ⭐ Consistent Performer\r\n                    </div>\r\n                  )}\r\n                  {goalProgress.actual >= 10 && (\r\n                    <div className=\"bg-white/80 px-2 py-1 rounded-full text-xs backdrop-blur-sm border border-blue-100\">\r\n                      🔥 Sales Machine\r\n                    </div>\r\n                  )}\r\n                  {goalProgress.actual >= MONTHLY_GOAL && (\r\n                    <div className=\"bg-gradient-to-r from-green-100 to-emerald-100 px-2 py-1 rounded-full text-xs font-bold border border-green-200\">\r\n                      🌟 Monthly Goal Achieved!\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Data Last Updated */}\r\n            <div className=\"text-xs text-gray-400 text-right mt-4\">\r\n              <Calendar className=\"h-3 w-3 inline mr-1\" />\r\n              Data updated: {new Date().toLocaleString()}\r\n            </div>\r\n          </>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default GoalTracking;\r\n","/**\r\n * Deal Data Mapper Utility\r\n * Maps deal data from DealLogPage form to dashboard-compatible format\r\n */\r\n\r\n/**\r\n * Maps vehicle type codes to readable names\r\n * @param {string} vehicleType - Vehicle type code ('N', 'U', 'C')\r\n * @returns {string} Readable vehicle type name\r\n */\r\nexport const mapVehicleType = vehicleType => {\r\n  switch (vehicleType) {\r\n    case 'N':\r\n      return 'New';\r\n    case 'U':\r\n    case 'C':\r\n      return 'Used';\r\n    default:\r\n      return 'Unknown';\r\n  }\r\n};\r\n\r\n/**\r\n * Calculates F&I product mix from deal data\r\n * @param {Object} deal - Deal object\r\n * @returns {Array} Array of products with non-zero values\r\n */\r\nexport const calculateProductMix = deal => {\r\n  const products = [];\r\n\r\n  // Product mappings with profits\r\n  const productMap = [\r\n    { name: 'VSC/Extended Warranty', profit: deal.vscProfit || 0 },\r\n    { name: 'GAP Insurance', profit: deal.gapProfit || 0 },\r\n    { name: 'Paint Protection', profit: deal.appearanceProfit || 0 },\r\n    { name: 'Tire & Wheel', profit: deal.tireAndWheelProfit || 0 },\r\n    { name: 'Prepaid Maintenance', profit: deal.ppmProfit || 0 },\r\n    { name: 'Other Products', profit: deal.otherProfit || 0 },\r\n  ];\r\n\r\n  productMap.forEach(product => {\r\n    const profit = parseFloat(product.profit) || 0;\r\n    if (profit > 0) {\r\n      products.push({\r\n        name: product.name,\r\n        profit: profit,\r\n      });\r\n    }\r\n  });\r\n\r\n  return products;\r\n};\r\n\r\n/**\r\n * Handles split deal credit allocation\r\n * @param {Object} deal - Deal object\r\n * @param {string} targetSalespersonId - ID of salesperson to calculate credit for\r\n * @returns {Object} Credit allocation details\r\n */\r\nexport const calculateSplitDealCredit = (deal, targetSalespersonId) => {\r\n  if (!deal.isSplitDeal) {\r\n    return {\r\n      hasCredit: deal.primarySalespersonId === targetSalespersonId,\r\n      creditPercentage: deal.primarySalespersonId === targetSalespersonId ? 100 : 0,\r\n      splitWith: null,\r\n    };\r\n  }\r\n\r\n  // For split deals, 50/50 credit allocation\r\n  const hasCredit =\r\n    deal.primarySalespersonId === targetSalespersonId ||\r\n    deal.secondarySalespersonId === targetSalespersonId;\r\n\r\n  return {\r\n    hasCredit,\r\n    creditPercentage: hasCredit ? 50 : 0,\r\n    splitWith:\r\n      deal.primarySalespersonId === targetSalespersonId\r\n        ? deal.secondarySalespersonId\r\n        : deal.primarySalespersonId,\r\n  };\r\n};\r\n\r\n/**\r\n * Determines if deal should count toward various metrics\r\n * @param {Object} deal - Deal object\r\n * @returns {Object} Boolean flags for different metrics\r\n */\r\nexport const getDealMetricFlags = deal => {\r\n  const status = deal.status || deal.dealStatus;\r\n\r\n  return {\r\n    countsForSold: status === 'Funded',\r\n    countsForBooked: status === 'Funded',\r\n    countsForTracking: status === 'Pending',\r\n    countsForPVR: status === 'Funded' || status === 'Pending',\r\n    excludeFromMetrics: status === 'Unwound' || status === 'Dead Deal',\r\n  };\r\n};\r\n\r\n/**\r\n * Main mapping function - transforms deal data for dashboard consumption\r\n * @param {Object} rawDeal - Raw deal from localStorage or API\r\n * @param {Object} options - Options for mapping\r\n * @returns {Object} Mapped deal data\r\n */\r\nexport const mapDealData = (rawDeal, options = {}) => {\r\n  const { dashboardType = 'sales', userRole = 'salesperson', salespersonId = null } = options;\r\n\r\n  try {\r\n    // Handle different deal data formats (from DealLogPage vs legacy format)\r\n    const deal = {\r\n      // Basic deal info\r\n      id: rawDeal.id || rawDeal.dealNumber || `D${Date.now()}`,\r\n      dealNumber: rawDeal.dealNumber || rawDeal.id,\r\n      stockNumber: rawDeal.stockNumber || '',\r\n      vinLast8: rawDeal.vinLast8 || rawDeal.vin || '',\r\n      vehicleType: rawDeal.vehicleType || 'U',\r\n      lastName: rawDeal.lastName || rawDeal.customer || '',\r\n      dealDate: rawDeal.dealDate || rawDeal.saleDate || new Date().toISOString().split('T')[0],\r\n\r\n      // Financial data\r\n      frontEndGross: parseFloat(rawDeal.frontEndGross) || 0,\r\n      backEndGross: parseFloat(rawDeal.backEndGross) || parseFloat(rawDeal.profit) || 0,\r\n      totalGross: parseFloat(rawDeal.totalGross) || parseFloat(rawDeal.amount) || 0,\r\n\r\n      // Product profits\r\n      vscProfit: parseFloat(rawDeal.vscProfit) || 0,\r\n      ppmProfit: parseFloat(rawDeal.ppmProfit) || 0,\r\n      gapProfit: parseFloat(rawDeal.gapProfit) || 0,\r\n      tireAndWheelProfit: parseFloat(rawDeal.tireAndWheelProfit) || 0,\r\n      appearanceProfit: parseFloat(rawDeal.appearanceProfit) || 0,\r\n      otherProfit: parseFloat(rawDeal.otherProfit) || 0,\r\n      reserveFlat: parseFloat(rawDeal.reserveFlat) || 0,\r\n\r\n      // Deal details\r\n      dealType: rawDeal.dealType || 'Finance',\r\n      dealStatus: rawDeal.dealStatus || rawDeal.status || 'Pending',\r\n      lender: rawDeal.lender || '',\r\n      outsideFunding: rawDeal.outsideFunding || false,\r\n\r\n      // Salesperson info\r\n      primarySalespersonId: rawDeal.salespersonId || rawDeal.primarySalespersonId || '',\r\n      secondarySalespersonId: rawDeal.secondSalespersonId || rawDeal.secondarySalespersonId || '',\r\n      isSplitDeal: rawDeal.isSplitDeal || false,\r\n      salesManagerId: rawDeal.salesManagerId || '',\r\n\r\n      // Legacy fields for compatibility\r\n      products: rawDeal.products || [],\r\n      salesperson: rawDeal.salesperson || '',\r\n    };\r\n\r\n    // Calculate derived values\r\n    const vehicleTypeDisplay = mapVehicleType(deal.vehicleType);\r\n    const productMix = calculateProductMix(deal);\r\n    const metricFlags = getDealMetricFlags(deal);\r\n\r\n    // Calculate split deal credit if salespersonId is provided\r\n    const splitCredit = salespersonId\r\n      ? calculateSplitDealCredit(deal, salespersonId)\r\n      : { hasCredit: true, creditPercentage: 100, splitWith: null };\r\n\r\n    // Adjust profits based on split deal percentage\r\n    const adjustedFrontGross = deal.frontEndGross * (splitCredit.creditPercentage / 100);\r\n    const adjustedBackGross = deal.backEndGross * (splitCredit.creditPercentage / 100);\r\n    const adjustedTotalGross = deal.totalGross * (splitCredit.creditPercentage / 100);\r\n\r\n    // Return mapped deal object\r\n    return {\r\n      // Original data\r\n      raw: rawDeal,\r\n\r\n      // Basic info\r\n      id: deal.id,\r\n      dealNumber: deal.dealNumber,\r\n      stockNumber: deal.stockNumber,\r\n      vinLast8: deal.vinLast8,\r\n      vehicleType: deal.vehicleType,\r\n      vehicleTypeDisplay,\r\n      lastName: deal.lastName,\r\n      dealDate: deal.dealDate,\r\n\r\n      // Financial data (original)\r\n      frontEndGross: deal.frontEndGross,\r\n      backEndGross: deal.backEndGross,\r\n      totalGross: deal.totalGross,\r\n\r\n      // Financial data (adjusted for split deals)\r\n      adjustedFrontGross,\r\n      adjustedBackGross,\r\n      adjustedTotalGross,\r\n\r\n      // Product details\r\n      productMix,\r\n      productsPerDeal: productMix.length,\r\n\r\n      // Individual product profits\r\n      vscProfit: deal.vscProfit,\r\n      ppmProfit: deal.ppmProfit,\r\n      gapProfit: deal.gapProfit,\r\n      tireAndWheelProfit: deal.tireAndWheelProfit,\r\n      appearanceProfit: deal.appearanceProfit,\r\n      otherProfit: deal.otherProfit,\r\n      reserveFlat: deal.reserveFlat,\r\n\r\n      // Deal metadata\r\n      dealType: deal.dealType,\r\n      dealStatus: deal.dealStatus,\r\n      lender: deal.lender,\r\n      outsideFunding: deal.outsideFunding,\r\n\r\n      // Salesperson info\r\n      primarySalespersonId: deal.primarySalespersonId,\r\n      secondarySalespersonId: deal.secondarySalespersonId,\r\n      isSplitDeal: deal.isSplitDeal,\r\n      salesManagerId: deal.salesManagerId,\r\n      splitCredit,\r\n\r\n      // Metric flags\r\n      metricFlags,\r\n\r\n      // Convenience fields for dashboards\r\n      isNew: deal.vehicleType === 'N',\r\n      isUsed: deal.vehicleType === 'U' || deal.vehicleType === 'C',\r\n      isFunded: metricFlags.countsForSold,\r\n      isPending: metricFlags.countsForTracking,\r\n      isActive: !metricFlags.excludeFromMetrics,\r\n\r\n      // PVR calculation (Per Vehicle Retailed)\r\n      pvr: productMix.length > 0 ? Math.round(deal.backEndGross / productMix.length) : 0,\r\n\r\n      // Legacy compatibility\r\n      customer: deal.lastName,\r\n      vehicle: `${vehicleTypeDisplay} - Stock #${deal.stockNumber}`,\r\n      vin: deal.vinLast8,\r\n      saleDate: deal.dealDate,\r\n      salesperson: deal.salesperson,\r\n      amount: deal.totalGross,\r\n      status: deal.dealStatus,\r\n      products: deal.products || productMix.map(p => p.name),\r\n      profit: deal.backEndGross,\r\n      created_at: rawDeal.created_at || new Date().toISOString(),\r\n    };\r\n  } catch (error) {\r\n    console.error('Error mapping deal data:', error);\r\n    // Return a safe fallback object\r\n    return {\r\n      id: rawDeal.id || 'unknown',\r\n      dealNumber: rawDeal.id || 'unknown',\r\n      error: 'Failed to map deal data',\r\n      raw: rawDeal,\r\n      isActive: false,\r\n      metricFlags: {\r\n        countsForSold: false,\r\n        countsForBooked: false,\r\n        countsForTracking: false,\r\n        countsForPVR: false,\r\n        excludeFromMetrics: true,\r\n      },\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Maps deal data specifically for Sales Manager dashboard\r\n * @param {Array} deals - Array of raw deals\r\n * @param {string} dealershipId - Dealership ID to filter by\r\n * @param {string} timePeriod - Time period for filtering\r\n * @returns {Object} Manager dashboard formatted data\r\n */\r\nexport const mapManagerDashboardData = (deals, dealershipId, timePeriod = 'this-month') => {\r\n  try {\r\n    // Map all deals first\r\n    const mappedDeals = deals.map(deal =>\r\n      mapDealData(deal, {\r\n        dashboardType: 'sales-manager',\r\n        userRole: 'sales_manager',\r\n      })\r\n    );\r\n\r\n    // Filter by dealership if specified\r\n    let filteredDeals = mappedDeals.filter(deal => {\r\n      if (dealershipId && deal.raw.dealershipId && deal.raw.dealershipId !== dealershipId) {\r\n        return false;\r\n      }\r\n      return deal.isActive;\r\n    });\r\n\r\n    // Time period filtering\r\n    if (timePeriod !== 'all-time') {\r\n      const now = new Date();\r\n      const currentYear = now.getFullYear();\r\n      const currentMonth = now.getMonth();\r\n\r\n      filteredDeals = filteredDeals.filter(deal => {\r\n        const dealDate = new Date(deal.dealDate);\r\n\r\n        switch (timePeriod) {\r\n          case 'this-month':\r\n            return dealDate.getFullYear() === currentYear && dealDate.getMonth() === currentMonth;\r\n          case 'last-month':\r\n            const lastMonth = currentMonth === 0 ? 11 : currentMonth - 1;\r\n            const lastMonthYear = currentMonth === 0 ? currentYear - 1 : currentYear;\r\n            return dealDate.getFullYear() === lastMonthYear && dealDate.getMonth() === lastMonth;\r\n          case 'ytd':\r\n            return dealDate.getFullYear() === currentYear;\r\n          case 'last-year':\r\n            return dealDate.getFullYear() === currentYear - 1;\r\n          default:\r\n            return true;\r\n        }\r\n      });\r\n    }\r\n\r\n    // Calculate manager-specific metrics\r\n    const totalDeals = filteredDeals.length;\r\n    const fundedDeals = filteredDeals.filter(d => d.metricFlags.countsForSold).length;\r\n    const pendingDeals = filteredDeals.filter(d => d.metricFlags.countsForTracking).length;\r\n    const newVehicleDeals = filteredDeals.filter(d => d.vehicleType === 'N').length;\r\n    const usedVehicleDeals = filteredDeals.filter(\r\n      d => d.vehicleType === 'U' || d.vehicleType === 'C'\r\n    ).length;\r\n\r\n    const totalFrontGross = filteredDeals.reduce((sum, d) => sum + d.frontEndGross, 0);\r\n    const totalBackGross = filteredDeals.reduce((sum, d) => sum + d.backEndGross, 0);\r\n    const totalGross = filteredDeals.reduce((sum, d) => sum + d.totalGross, 0);\r\n\r\n    // Calculate per-salesperson metrics\r\n    const salespersonMetrics = {};\r\n    filteredDeals.forEach(deal => {\r\n      const salespersonId = deal.primarySalespersonId || 'unknown';\r\n      if (!salespersonMetrics[salespersonId]) {\r\n        salespersonMetrics[salespersonId] = {\r\n          salespersonId,\r\n          salespersonName:\r\n            deal.raw.salespersonName || deal.raw.salesperson || `SP-${salespersonId}`,\r\n          totalDeals: 0,\r\n          fundedDeals: 0,\r\n          totalFrontGross: 0,\r\n          totalBackGross: 0,\r\n          totalGross: 0,\r\n          newVehicleDeals: 0,\r\n          usedVehicleDeals: 0,\r\n        };\r\n      }\r\n\r\n      const metrics = salespersonMetrics[salespersonId];\r\n      const creditPercentage = deal.splitCredit?.creditPercentage || 100;\r\n\r\n      metrics.totalDeals += creditPercentage / 100;\r\n      if (deal.metricFlags.countsForSold) metrics.fundedDeals += creditPercentage / 100;\r\n      metrics.totalFrontGross += deal.frontEndGross * (creditPercentage / 100);\r\n      metrics.totalBackGross += deal.backEndGross * (creditPercentage / 100);\r\n      metrics.totalGross += deal.totalGross * (creditPercentage / 100);\r\n\r\n      if (deal.vehicleType === 'N') metrics.newVehicleDeals += creditPercentage / 100;\r\n      else metrics.usedVehicleDeals += creditPercentage / 100;\r\n    });\r\n\r\n    // Calculate averages for each salesperson\r\n    Object.values(salespersonMetrics).forEach(metrics => {\r\n      metrics.avgFrontGross =\r\n        metrics.totalDeals > 0 ? metrics.totalFrontGross / metrics.totalDeals : 0;\r\n      metrics.avgBackGross =\r\n        metrics.totalDeals > 0 ? metrics.totalBackGross / metrics.totalDeals : 0;\r\n      metrics.avgPerDeal = metrics.totalDeals > 0 ? metrics.totalGross / metrics.totalDeals : 0;\r\n      metrics.goalPercentage = (metrics.totalDeals / 15) * 100; // Assuming 15 deals goal per salesperson\r\n    });\r\n\r\n    return {\r\n      deals: filteredDeals.map(deal => ({\r\n        ...deal,\r\n        // Format for manager dashboard table\r\n        dealNumber: deal.dealNumber,\r\n        stockNumber: deal.stockNumber,\r\n        customer: deal.lastName,\r\n        date: deal.dealDate,\r\n        vehicleType: deal.vehicleTypeDisplay,\r\n        salesperson: deal.raw.salespersonName || deal.raw.salesperson || 'Unknown',\r\n        frontGross: deal.frontEndGross,\r\n        financeGross: deal.backEndGross,\r\n        totalGross: deal.totalGross,\r\n        status: deal.dealStatus,\r\n      })),\r\n      metrics: {\r\n        totalDeals,\r\n        fundedDeals,\r\n        pendingDeals,\r\n        newVehicleDeals,\r\n        usedVehicleDeals,\r\n        totalFrontGross,\r\n        totalBackGross,\r\n        totalGross,\r\n        avgFrontGross: totalDeals > 0 ? totalFrontGross / totalDeals : 0,\r\n        avgBackGross: totalDeals > 0 ? totalBackGross / totalDeals : 0,\r\n        avgPerDeal: totalDeals > 0 ? totalGross / totalDeals : 0,\r\n        salesGoal: 100, // This could be configurable\r\n        salesPerformance: (totalDeals / 100) * 100,\r\n      },\r\n      salespersonMetrics: Object.values(salespersonMetrics),\r\n      lastUpdated: new Date().toISOString(),\r\n    };\r\n  } catch (error) {\r\n    console.error('Error mapping manager dashboard data:', error);\r\n    return {\r\n      deals: [],\r\n      metrics: {\r\n        totalDeals: 0,\r\n        fundedDeals: 0,\r\n        pendingDeals: 0,\r\n        newVehicleDeals: 0,\r\n        usedVehicleDeals: 0,\r\n        totalFrontGross: 0,\r\n        totalBackGross: 0,\r\n        totalGross: 0,\r\n        avgFrontGross: 0,\r\n        avgBackGross: 0,\r\n        avgPerDeal: 0,\r\n        salesGoal: 100,\r\n        salesPerformance: 0,\r\n      },\r\n      salespersonMetrics: [],\r\n      error: error.message,\r\n      lastUpdated: new Date().toISOString(),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Filters and aggregates deals for dashboard display\r\n * @param {Array} deals - Array of raw deals\r\n * @param {Object} options - Filter and aggregation options\r\n * @returns {Object} Filtered and aggregated deal data\r\n */\r\nexport const aggregateDealsForDashboard = (deals, options = {}) => {\r\n  const {\r\n    dashboardType = 'sales',\r\n    userRole = 'salesperson',\r\n    salespersonId = null,\r\n    timePeriod = 'this-month',\r\n    includeInactive = false,\r\n  } = options;\r\n\r\n  try {\r\n    // Map all deals\r\n    const mappedDeals = deals.map(deal =>\r\n      mapDealData(deal, { dashboardType, userRole, salespersonId })\r\n    );\r\n\r\n    // Filter deals based on options\r\n    let filteredDeals = mappedDeals.filter(deal => {\r\n      // Filter out inactive deals unless specified\r\n      if (!includeInactive && !deal.isActive) return false;\r\n\r\n      // Filter by salesperson if specified\r\n      if (salespersonId) {\r\n        const splitCredit = calculateSplitDealCredit(deal, salespersonId);\r\n        if (!splitCredit.hasCredit) return false;\r\n        // Update deal with split credit info\r\n        deal.splitCredit = splitCredit;\r\n      }\r\n\r\n      return true;\r\n    });\r\n\r\n    // Time period filtering\r\n    if (timePeriod !== 'all-time') {\r\n      const now = new Date();\r\n      const currentYear = now.getFullYear();\r\n      const currentMonth = now.getMonth();\r\n\r\n      filteredDeals = filteredDeals.filter(deal => {\r\n        const dealDate = new Date(deal.dealDate);\r\n\r\n        switch (timePeriod) {\r\n          case 'this-month':\r\n            return dealDate.getFullYear() === currentYear && dealDate.getMonth() === currentMonth;\r\n          case 'last-month':\r\n            const lastMonth = currentMonth === 0 ? 11 : currentMonth - 1;\r\n            const lastMonthYear = currentMonth === 0 ? currentYear - 1 : currentYear;\r\n            return dealDate.getFullYear() === lastMonthYear && dealDate.getMonth() === lastMonth;\r\n          case 'ytd':\r\n            return dealDate.getFullYear() === currentYear;\r\n          case 'last-year':\r\n            return dealDate.getFullYear() === currentYear - 1;\r\n          default:\r\n            return true;\r\n        }\r\n      });\r\n    }\r\n\r\n    // Calculate aggregations\r\n    const totalDeals = filteredDeals.length;\r\n    const fundedDeals = filteredDeals.filter(d => d.isFunded).length;\r\n    const pendingDeals = filteredDeals.filter(d => d.isPending).length;\r\n    const newVehicleDeals = filteredDeals.filter(d => d.isNew).length;\r\n    const usedVehicleDeals = filteredDeals.filter(d => d.isUsed).length;\r\n\r\n    const totalFrontGross = filteredDeals.reduce((sum, d) => sum + d.adjustedFrontGross, 0);\r\n    const totalBackGross = filteredDeals.reduce((sum, d) => sum + d.adjustedBackGross, 0);\r\n    const totalGross = filteredDeals.reduce((sum, d) => sum + d.adjustedTotalGross, 0);\r\n\r\n    const avgFrontGross = totalDeals > 0 ? totalFrontGross / totalDeals : 0;\r\n    const avgBackGross = totalDeals > 0 ? totalBackGross / totalDeals : 0;\r\n    const totalPVR = filteredDeals.reduce((sum, d) => sum + d.pvr, 0);\r\n\r\n    return {\r\n      deals: filteredDeals,\r\n      metrics: {\r\n        totalDeals,\r\n        fundedDeals,\r\n        pendingDeals,\r\n        newVehicleDeals,\r\n        usedVehicleDeals,\r\n        totalFrontGross,\r\n        totalBackGross,\r\n        totalGross,\r\n        avgFrontGross,\r\n        avgBackGross,\r\n        totalPVR,\r\n        avgPVR: totalDeals > 0 ? totalPVR / totalDeals : 0,\r\n      },\r\n      lastUpdated: new Date().toISOString(),\r\n    };\r\n  } catch (error) {\r\n    console.error('Error aggregating deals for dashboard:', error);\r\n    return {\r\n      deals: [],\r\n      metrics: {\r\n        totalDeals: 0,\r\n        fundedDeals: 0,\r\n        pendingDeals: 0,\r\n        newVehicleDeals: 0,\r\n        usedVehicleDeals: 0,\r\n        totalFrontGross: 0,\r\n        totalBackGross: 0,\r\n        totalGross: 0,\r\n        avgFrontGross: 0,\r\n        avgBackGross: 0,\r\n        totalPVR: 0,\r\n        avgPVR: 0,\r\n      },\r\n      error: error.message,\r\n      lastUpdated: new Date().toISOString(),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Loads deals from localStorage with error handling\r\n * @param {string} storageKey - localStorage key to read from\r\n * @returns {Array} Array of deals or empty array on error\r\n */\r\nexport const loadDealsFromStorage = (storageKey = 'financeDeals') => {\r\n  try {\r\n    const dealsJson = localStorage.getItem(storageKey);\r\n    if (!dealsJson) return [];\r\n\r\n    const deals = JSON.parse(dealsJson);\r\n    return Array.isArray(deals) ? deals : [];\r\n  } catch (error) {\r\n    console.error('Error loading deals from localStorage:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n/**\r\n * Gets deal data formatted for specific dashboard types\r\n * @param {string} dashboardType - Type of dashboard ('sales', 'finance', 'single-finance', etc.)\r\n * @param {Object} options - Additional options\r\n * @returns {Object} Dashboard-specific deal data\r\n */\r\nexport const getDashboardData = (dashboardType, options = {}) => {\r\n  // Determine storage key based on dashboard type\r\n  let rawDeals = [];\r\n\r\n  switch (dashboardType) {\r\n    case 'single-finance':\r\n      // Load from singleFinanceDeals storage key\r\n      rawDeals = loadDealsFromStorage('singleFinanceDeals');\r\n      break;\r\n    case 'sales':\r\n      rawDeals = loadDealsFromStorage('financeDeals'); // Sales people see deals from financeDeals\r\n      break;\r\n    case 'finance':\r\n    default:\r\n      rawDeals = loadDealsFromStorage('financeDeals');\r\n      break;\r\n  }\r\n\r\n  return aggregateDealsForDashboard(rawDeals, {\r\n    dashboardType,\r\n    ...options,\r\n  });\r\n};\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  getDashboardData,\r\n  loadDealsFromStorage,\r\n  aggregateDealsForDashboard,\r\n  mapManagerDashboardData,\r\n} from '../utils/dealMapper';\r\n\r\ninterface UseDealsDataOptions {\r\n  dashboardType?: string;\r\n  userRole?: string;\r\n  salespersonId?: string;\r\n  timePeriod?: string;\r\n  includeInactive?: boolean;\r\n  autoRefresh?: boolean;\r\n  refreshInterval?: number;\r\n}\r\n\r\ninterface UseDealsDataReturn {\r\n  dealData: any;\r\n  loading: boolean;\r\n  error: string | null;\r\n  refresh: () => void;\r\n  setTimePeriod: (period: string) => void;\r\n}\r\n\r\n/**\r\n * Custom hook for managing deal data in dashboard components\r\n */\r\nexport const useDealsData = (options: UseDealsDataOptions = {}): UseDealsDataReturn => {\r\n  const {\r\n    dashboardType = 'sales',\r\n    userRole = 'salesperson',\r\n    salespersonId = null,\r\n    timePeriod: initialTimePeriod = 'this-month',\r\n    includeInactive = false,\r\n    autoRefresh = false,\r\n    refreshInterval = 30000, // 30 seconds\r\n  } = options;\r\n\r\n  const [dealData, setDealData] = useState<any>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [timePeriod, setTimePeriod] = useState(initialTimePeriod);\r\n\r\n  const loadDealData = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      console.log(`[useDealsData] Loading deals for ${dashboardType} dashboard`, {\r\n        userRole,\r\n        salespersonId,\r\n        timePeriod,\r\n        includeInactive,\r\n      });\r\n\r\n      const data = getDashboardData(dashboardType, {\r\n        userRole,\r\n        salespersonId,\r\n        timePeriod,\r\n        includeInactive,\r\n      });\r\n\r\n      setDealData(data);\r\n\r\n      if (data.error) {\r\n        console.warn('[useDealsData] Deal data warning:', data.error);\r\n        setError(`Warning: ${data.error}`);\r\n      }\r\n\r\n      console.log(\r\n        `[useDealsData] Loaded ${data.deals?.length || 0} deals with metrics:`,\r\n        data.metrics\r\n      );\r\n    } catch (err) {\r\n      console.error('[useDealsData] Error loading deal data:', err);\r\n      setError('Failed to load deal data');\r\n\r\n      // Provide empty fallback data\r\n      setDealData({\r\n        deals: [],\r\n        metrics: {\r\n          totalDeals: 0,\r\n          fundedDeals: 0,\r\n          pendingDeals: 0,\r\n          newVehicleDeals: 0,\r\n          usedVehicleDeals: 0,\r\n          totalFrontGross: 0,\r\n          totalBackGross: 0,\r\n          totalGross: 0,\r\n          avgFrontGross: 0,\r\n          avgBackGross: 0,\r\n          totalPVR: 0,\r\n          avgPVR: 0,\r\n        },\r\n        error: err instanceof Error ? err.message : 'Unknown error',\r\n        lastUpdated: new Date().toISOString(),\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [dashboardType, userRole, salespersonId, timePeriod, includeInactive]);\r\n\r\n  // Load data on mount and when dependencies change\r\n  useEffect(() => {\r\n    loadDealData();\r\n  }, [loadDealData]);\r\n\r\n  // Auto-refresh functionality\r\n  useEffect(() => {\r\n    if (!autoRefresh) return;\r\n\r\n    const interval = setInterval(() => {\r\n      console.log('[useDealsData] Auto-refreshing deal data');\r\n      loadDealData();\r\n    }, refreshInterval);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [autoRefresh, refreshInterval, loadDealData]);\r\n\r\n  // Listen for localStorage changes (when new deals are added)\r\n  useEffect(() => {\r\n    const handleStorageChange = (e: StorageEvent) => {\r\n      if (e.key === 'financeDeals' || e.key === 'singleFinanceDeals') {\r\n        console.log('[useDealsData] localStorage changed, refreshing deal data');\r\n        loadDealData();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('storage', handleStorageChange);\r\n    return () => window.removeEventListener('storage', handleStorageChange);\r\n  }, [loadDealData]);\r\n\r\n  return {\r\n    dealData,\r\n    loading,\r\n    error,\r\n    refresh: loadDealData,\r\n    setTimePeriod,\r\n  };\r\n};\r\n\r\n/**\r\n * Hook specifically for sales dashboard data\r\n */\r\nexport const useSalesDealsData = (salespersonId?: string, timePeriod = 'this-month') => {\r\n  return useDealsData({\r\n    dashboardType: 'sales',\r\n    userRole: 'salesperson',\r\n    salespersonId,\r\n    timePeriod,\r\n    includeInactive: false,\r\n    autoRefresh: true,\r\n  });\r\n};\r\n\r\n/**\r\n * Hook specifically for finance dashboard data\r\n */\r\nexport const useFinanceDealsData = (timePeriod = 'this-month') => {\r\n  return useDealsData({\r\n    dashboardType: 'finance',\r\n    userRole: 'finance_manager',\r\n    timePeriod,\r\n    includeInactive: false,\r\n    autoRefresh: true,\r\n  });\r\n};\r\n\r\n/**\r\n * Hook specifically for single finance dashboard data\r\n */\r\nexport const useSingleFinanceDealsData = (timePeriod = 'this-month') => {\r\n  return useDealsData({\r\n    dashboardType: 'single-finance',\r\n    userRole: 'single_finance_manager',\r\n    timePeriod,\r\n    includeInactive: false,\r\n    autoRefresh: true,\r\n  });\r\n};\r\n\r\n/**\r\n * Hook specifically for sales manager dashboard data\r\n */\r\nexport const useManagerDealsData = (dealershipId?: string, timePeriod = 'this-month') => {\r\n  const [dealData, setDealData] = useState<any>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const loadManagerData = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      console.log(`[useManagerDealsData] Loading deals for sales manager dashboard`, {\r\n        dealershipId,\r\n        timePeriod,\r\n      });\r\n\r\n      // Load deals from storage\r\n      const rawDeals = loadDealsFromStorage('financeDeals');\r\n\r\n      // Map data for manager dashboard\r\n      const data = mapManagerDashboardData(rawDeals, dealershipId, timePeriod);\r\n\r\n      setDealData(data);\r\n\r\n      if (data.error) {\r\n        console.warn('[useManagerDealsData] Deal data warning:', data.error);\r\n        setError(`Warning: ${data.error}`);\r\n      }\r\n\r\n      console.log(\r\n        `[useManagerDealsData] Loaded ${data.deals?.length || 0} deals with metrics:`,\r\n        data.metrics\r\n      );\r\n    } catch (err) {\r\n      console.error('[useManagerDealsData] Error loading manager deal data:', err);\r\n      setError('Failed to load manager deal data');\r\n\r\n      // Provide empty fallback data\r\n      setDealData({\r\n        deals: [],\r\n        metrics: {\r\n          totalDeals: 0,\r\n          fundedDeals: 0,\r\n          pendingDeals: 0,\r\n          newVehicleDeals: 0,\r\n          usedVehicleDeals: 0,\r\n          totalFrontGross: 0,\r\n          totalBackGross: 0,\r\n          totalGross: 0,\r\n          avgFrontGross: 0,\r\n          avgBackGross: 0,\r\n          avgPerDeal: 0,\r\n          salesGoal: 100,\r\n          salesPerformance: 0,\r\n        },\r\n        salespersonMetrics: [],\r\n        error: err instanceof Error ? err.message : 'Unknown error',\r\n        lastUpdated: new Date().toISOString(),\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [dealershipId, timePeriod]);\r\n\r\n  // Load data on mount and when dependencies change\r\n  useEffect(() => {\r\n    loadManagerData();\r\n  }, [loadManagerData]);\r\n\r\n  // Listen for localStorage changes\r\n  useEffect(() => {\r\n    const handleStorageChange = (e: StorageEvent) => {\r\n      if (e.key === 'financeDeals') {\r\n        console.log('[useManagerDealsData] localStorage changed, refreshing deal data');\r\n        loadManagerData();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('storage', handleStorageChange);\r\n    return () => window.removeEventListener('storage', handleStorageChange);\r\n  }, [loadManagerData]);\r\n\r\n  return {\r\n    dealData,\r\n    loading,\r\n    error,\r\n    refresh: loadManagerData,\r\n    setTimePeriod: (period: string) => {\r\n      // This will be handled by the parent component re-calling the hook\r\n    },\r\n  };\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Routes, Route, Link } from 'react-router-dom';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { Card, CardHeader, CardTitle, CardContent, CardFooter } from '../../components/ui/card';\r\nimport { Button } from '../../components/ui/button';\r\nimport { DealLogEditor } from '../manager/DealLogEditor';\r\nimport GoalTracking from '../GoalTracking';\r\nimport {\r\n  getDashboardData,\r\n  loadDealsFromStorage,\r\n  aggregateDealsForDashboard,\r\n} from '../../utils/dealMapper';\r\nimport { useSalesDealsData } from '../../hooks/useDealsData';\r\nimport {\r\n  ShoppingBag,\r\n  Target,\r\n  Calculator,\r\n  Clock,\r\n  TrendingUp,\r\n  DollarSign,\r\n  Car,\r\n  AlertTriangle,\r\n  CheckCircle2,\r\n  CalendarClock,\r\n  FileText,\r\n  ChevronUp,\r\n  ChevronDown,\r\n  ArrowRight,\r\n  Home,\r\n  Calendar,\r\n  Users,\r\n  Plus,\r\n  ChevronRight,\r\n  ChevronLeft,\r\n  Trophy,\r\n  User,\r\n  Lightbulb,\r\n  ArrowUpDown,\r\n} from 'lucide-react';\r\n\r\n// Mock data for salesperson deals\r\nconst MOCK_DEALS = [\r\n  {\r\n    id: 'D5421',\r\n    stockNumber: 'A7831',\r\n    lastName: 'Johnson',\r\n    frontGross: 1200,\r\n    backEndGross: 700,\r\n    date: '2023-06-10',\r\n    isNew: true,\r\n  },\r\n  {\r\n    id: 'D5398',\r\n    stockNumber: 'B2241',\r\n    lastName: 'Martinez',\r\n    frontGross: 800,\r\n    backEndGross: 900,\r\n    date: '2023-06-08',\r\n    isNew: false,\r\n  },\r\n  {\r\n    id: 'D5376',\r\n    stockNumber: 'C5532',\r\n    lastName: 'Williams',\r\n    frontGross: 0,\r\n    backEndGross: 500,\r\n    date: '2023-06-05',\r\n    isNew: false,\r\n  },\r\n  {\r\n    id: 'D5342',\r\n    stockNumber: 'A1277',\r\n    lastName: 'Garcia',\r\n    frontGross: 1500,\r\n    backEndGross: 800,\r\n    date: '2023-06-01',\r\n    isNew: false,\r\n  },\r\n  {\r\n    id: 'D5321',\r\n    stockNumber: 'B8773',\r\n    lastName: 'Miller',\r\n    frontGross: 950,\r\n    backEndGross: 600,\r\n    date: '2023-05-29',\r\n    isNew: false,\r\n  },\r\n  {\r\n    id: 'D5310',\r\n    stockNumber: 'C9912',\r\n    lastName: 'Davis',\r\n    frontGross: 0,\r\n    backEndGross: 450,\r\n    date: '2023-05-27',\r\n    isNew: false,\r\n  },\r\n  {\r\n    id: 'D5298',\r\n    stockNumber: 'A5523',\r\n    lastName: 'Rodriguez',\r\n    frontGross: 1300,\r\n    backEndGross: 750,\r\n    date: '2023-05-25',\r\n    isNew: false,\r\n  },\r\n];\r\n\r\n// Car emojis for goal progression\r\nconst CAR_PROGRESSION = [\r\n  { emoji: '🚗', name: 'Compact', threshold: 0 },\r\n  { emoji: '🚙', name: 'Sedan', threshold: 20 },\r\n  { emoji: '🚐', name: 'SUV', threshold: 40 },\r\n  { emoji: '🏎️', name: 'Sports Car', threshold: 60 },\r\n  { emoji: '🚓', name: 'Premium', threshold: 80 },\r\n  { emoji: '🏁', name: 'Supercar', threshold: 95 },\r\n];\r\n\r\n// Mock schedule data\r\nconst SCHEDULE_DATA = [\r\n  { day: 'Monday', date: '12', shift: 'Off', team: '' },\r\n  { day: 'Tuesday', date: '13', shift: '10am - 7pm', team: 'Team A' },\r\n  { day: 'Wednesday', date: '14', shift: '9am - 6pm', team: 'Team A' },\r\n  { day: 'Thursday', date: '15', shift: '12pm - 9pm', team: 'Team A' },\r\n  { day: 'Friday', date: '16', shift: '9am - 6pm', team: 'Team B' },\r\n  { day: 'Saturday', date: '17', shift: '9am - 8pm', team: 'Team B' },\r\n  { day: 'Sunday', date: '18', shift: 'Off', team: '' },\r\n];\r\n\r\n// Mock pay calculator data\r\nconst PAY_CALCULATOR = {\r\n  frontEndGrossPercent: 25,\r\n  backEndGrossPercent: 5,\r\n  spiffs: 350,\r\n  bonusThreshold: 12,\r\n  bonusAmount: 500,\r\n};\r\n\r\nconst SalesDashboard = () => {\r\n  const { user, role, dealershipId } = useAuth();\r\n  const [displayFrontEnd, setDisplayFrontEnd] = useState(true);\r\n  const [displayBackEnd, setDisplayBackEnd] = useState(true);\r\n  const [goalProgress, setGoalProgress] = useState(60);\r\n  const [timePeriod, setTimePeriod] = useState<string>('this-month');\r\n\r\n  // Use the custom hook to manage deal data\r\n  const salespersonId = user?.id || user?.user_metadata?.salesperson_id;\r\n  const {\r\n    dealData,\r\n    loading,\r\n    error,\r\n    setTimePeriod: setHookTimePeriod,\r\n  } = useSalesDealsData(salespersonId, timePeriod);\r\n\r\n  // Update goal progress based on actual deals\r\n  useEffect(() => {\r\n    if (dealData?.metrics) {\r\n      const progressPercentage =\r\n        dealData.metrics.totalDeals > 0\r\n          ? Math.min((dealData.metrics.totalDeals / 15) * 100, 100) // Assuming 15 deals goal\r\n          : 0;\r\n      setGoalProgress(progressPercentage);\r\n    }\r\n  }, [dealData]);\r\n\r\n  // Get the current car based on goal progress\r\n  const getCurrentCar = progress => {\r\n    for (let i = CAR_PROGRESSION.length - 1; i >= 0; i--) {\r\n      if (progress >= CAR_PROGRESSION[i].threshold) {\r\n        return CAR_PROGRESSION[i];\r\n      }\r\n    }\r\n    return CAR_PROGRESSION[0];\r\n  };\r\n\r\n  // Get deals performance indicator\r\n  const getDealsPerformanceIndicator = () => {\r\n    // Assuming goal is 15 deals in a 30 day month\r\n    const currentDay = new Date().getDate();\r\n    const daysInMonth = new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0).getDate();\r\n    const expectedDeals = Math.round((currentDay / daysInMonth) * 15);\r\n    const actualDeals = MOCK_DEALS.length;\r\n\r\n    if (actualDeals < expectedDeals - 2) return 'red';\r\n    if (actualDeals < expectedDeals) return 'yellow';\r\n    return 'green';\r\n  };\r\n\r\n  // Use real deal data or fallback to mock data\r\n  const currentDeals = dealData?.deals || MOCK_DEALS;\r\n  const metrics = dealData?.metrics || {};\r\n\r\n  // Calculate metrics from real data\r\n  const totalFrontEndGross = metrics.totalFrontGross || 0;\r\n  const totalBackEndGross = metrics.totalBackGross || 0;\r\n  const totalGross = metrics.totalGross || totalFrontEndGross + totalBackEndGross;\r\n  const totalDeals = metrics.totalDeals || 0;\r\n  const miniDeals = currentDeals.filter(\r\n    deal => (deal.frontGross || deal.frontEndGross || 0) === 0\r\n  ).length;\r\n\r\n  // Current car in progression\r\n  const currentCar = getCurrentCar(goalProgress);\r\n\r\n  // Performance indicator color\r\n  const performanceColor = getDealsPerformanceIndicator();\r\n\r\n  // Calculate current earnings\r\n  const currentEarnings =\r\n    totalFrontEndGross * (PAY_CALCULATOR.frontEndGrossPercent / 100) +\r\n    totalBackEndGross * (PAY_CALCULATOR.backEndGrossPercent / 100) +\r\n    PAY_CALCULATOR.spiffs;\r\n\r\n  // Calculate potential earnings (assuming similar performance for rest of month)\r\n  const daysInMonth = new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0).getDate();\r\n  const currentDay = new Date().getDate();\r\n  const remainingDaysFactor = daysInMonth / currentDay;\r\n  const potentialEarnings = currentEarnings * remainingDaysFactor;\r\n\r\n  // Add bonus if deals threshold is met\r\n  const projectedDeals = (metrics.totalDeals || MOCK_DEALS.length) * remainingDaysFactor;\r\n  const projectedEarningsWithBonus =\r\n    potentialEarnings +\r\n    (projectedDeals >= PAY_CALCULATOR.bonusThreshold ? PAY_CALCULATOR.bonusAmount : 0);\r\n\r\n  // Get period label for display\r\n  const getPeriodLabel = (period: string): string => {\r\n    const today = new Date();\r\n    const month = today.toLocaleString('default', { month: 'long' });\r\n    const year = today.getFullYear();\r\n\r\n    switch (period) {\r\n      case 'this-month':\r\n        return `${month} ${year}`;\r\n      case 'last-month':\r\n        const lastMonth =\r\n          today.getMonth() === 0\r\n            ? 'December'\r\n            : new Date(today.getFullYear(), today.getMonth() - 1, 1).toLocaleString('default', {\r\n                month: 'long',\r\n              });\r\n        const lastMonthYear =\r\n          today.getMonth() === 0 ? today.getFullYear() - 1 : today.getFullYear();\r\n        return `${lastMonth} ${lastMonthYear}`;\r\n      case 'last-quarter':\r\n        const currentQuarter = Math.floor(today.getMonth() / 3);\r\n        return `Q${currentQuarter === 0 ? 4 : currentQuarter} ${\r\n          currentQuarter === 0 ? year - 1 : year\r\n        }`;\r\n      case 'ytd':\r\n        return `Year to Date ${year}`;\r\n      case 'last-year':\r\n        return `${year - 1}`;\r\n      default:\r\n        return `${month} ${year}`;\r\n    }\r\n  };\r\n\r\n  // Handle time period change\r\n  const handleTimePeriodChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    const newPeriod = e.target.value;\r\n    setTimePeriod(newPeriod);\r\n    setHookTimePeriod(newPeriod);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('[SalesDashboard] Rendering sales dashboard', {\r\n      userId: user?.id,\r\n      role,\r\n      dealershipId,\r\n      timestamp: new Date().toISOString(),\r\n    });\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      console.log('[SalesDashboard] Unmounting sales dashboard');\r\n    };\r\n  }, [user, role, dealershipId]);\r\n\r\n  // Helper to highlight today in the schedule\r\n  const isToday = day => {\r\n    const today = new Date().getDay();\r\n    // Convert day name to day number (0 = Sunday, 1 = Monday, etc.)\r\n    const dayMap = {\r\n      Sunday: 0,\r\n      Monday: 1,\r\n      Tuesday: 2,\r\n      Wednesday: 3,\r\n      Thursday: 4,\r\n      Friday: 5,\r\n      Saturday: 6,\r\n    };\r\n    return dayMap[day] === today;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container py-6\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-3xl font-bold\">Sales Dashboard</h1>\r\n\r\n        {/* Daily Sales Tip - Centered */}\r\n        <div className=\"bg-blue-50 px-3 py-1 rounded-md text-center flex-1 mx-8 border border-blue-100\">\r\n          <p className=\"text-xs italic text-blue-800 truncate\">\r\n            <Lightbulb className=\"h-3 w-3 inline-block mr-1\" />\r\n            <strong>Daily Tip:</strong>{' '}\r\n            {\r\n              [\r\n                'Listen twice as much as you talk. You have two ears and one mouth for a reason.',\r\n                'The first 5 minutes with a customer sets the tone for the entire deal.',\r\n                'Be the expert they can trust, not just the salesperson they deal with.',\r\n                \"Follow up with past customers - they're your best source of referrals.\",\r\n                'Know your inventory better than anyone else on the floor.',\r\n                'Sell the experience and lifestyle, not just the vehicle.',\r\n                \"Always ask for referrals - it's the easiest way to grow your business.\",\r\n              ][new Date().getDay()]\r\n            }\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Dashboard Header with Month/Year and Time Period Filter */}\r\n      <div className=\"mb-6\">\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n          <div className=\"flex flex-row items-center gap-4\">\r\n            <h2 className=\"text-2xl font-bold text-gray-900\">{getPeriodLabel(timePeriod)}</h2>\r\n            <div className=\"flex items-center\">\r\n              <Calendar className=\"h-5 w-5 text-gray-500 mr-1\" />\r\n              <select\r\n                value={timePeriod}\r\n                onChange={handleTimePeriodChange}\r\n                className=\"p-2 border rounded-md shadow-sm\"\r\n              >\r\n                <option value=\"this-month\">This Month</option>\r\n                <option value=\"last-month\">Last Month</option>\r\n                <option value=\"last-quarter\">Last Quarter</option>\r\n                <option value=\"ytd\">Year to Date</option>\r\n                <option value=\"last-year\">Last Year</option>\r\n              </select>\r\n            </div>\r\n            <p className=\"text-gray-500\">Sales Performance</p>\r\n          </div>\r\n\r\n          <div className=\"flex items-center\">\r\n            <div className=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center mr-2\">\r\n              <User className=\"h-4 w-4 text-blue-600\" />\r\n            </div>\r\n            <div>\r\n              <div className=\"font-semibold\">{user?.email?.split('@')[0] || 'Sales Associate'}</div>\r\n              <div className=\"text-xs text-gray-500\">{role || 'Salesperson'}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Error Display */}\r\n      {error && (\r\n        <div className=\"mb-6\">\r\n          <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\r\n            <div className=\"flex\">\r\n              <AlertTriangle className=\"h-5 w-5 text-red-400 mr-2 mt-0.5\" />\r\n              <div>\r\n                <h3 className=\"text-sm font-medium text-red-800\">Deal Data Warning</h3>\r\n                <p className=\"text-sm text-red-700 mt-1\">{error}</p>\r\n                <p className=\"text-xs text-red-600 mt-1\">\r\n                  Showing fallback data. New deals will update automatically.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Loading Indicator */}\r\n      {loading && (\r\n        <div className=\"mb-6\">\r\n          <div className=\"bg-blue-50 border border-blue-200 rounded-md p-4\">\r\n            <div className=\"flex items-center\">\r\n              <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600 mr-2\"></div>\r\n              <p className=\"text-sm text-blue-700\">Loading deal data...</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-4 mb-6\">\r\n        <Card className=\"border-l-4 border-l-blue-500\">\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium flex items-center\">\r\n              <ShoppingBag className=\"mr-2 h-4 w-4 text-blue-500\" />\r\n              Total Deals This Month\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">\r\n              {dealData?.metrics?.totalDeals || MOCK_DEALS.length}\r\n            </div>\r\n            <p className=\"text-xs text-green-600 flex items-center mt-1\">\r\n              <ChevronUp className=\"h-3 w-3 mr-1\" />\r\n              8% from last month\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card className=\"border-l-4 border-l-green-500\">\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium flex items-center\">\r\n              <DollarSign className=\"mr-2 h-4 w-4 text-green-500\" />\r\n              Gross\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">${totalGross.toLocaleString()}</div>\r\n            <div className=\"flex flex-col text-xs mt-1\">\r\n              {displayFrontEnd && (\r\n                <span className=\"text-green-600\">\r\n                  Front: ${totalFrontEndGross.toLocaleString()}\r\n                </span>\r\n              )}\r\n              {displayBackEnd && (\r\n                <span className=\"text-blue-600\">Back: ${totalBackEndGross.toLocaleString()}</span>\r\n              )}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card className=\"border-l-4 border-l-amber-500\">\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium flex items-center\">\r\n              <AlertTriangle className=\"mr-2 h-4 w-4 text-amber-500\" />\r\n              Minis\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{miniDeals}</div>\r\n            <p className=\"text-xs text-amber-600 flex items-center mt-1\">\r\n              {miniDeals > 2 ? (\r\n                <>\r\n                  <ChevronUp className=\"h-3 w-3 mr-1\" />\r\n                  Focus on higher gross deals\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <ChevronDown className=\"h-3 w-3 mr-1\" />\r\n                  Good job keeping minis low\r\n                </>\r\n              )}\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card className=\"border-l-4 border-l-purple-500\">\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium flex items-center\">\r\n              <Target className=\"mr-2 h-4 w-4 text-purple-500\" />\r\n              Monthly Goal Progress\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{goalProgress}%</div>\r\n            <div className=\"w-full h-2 bg-gray-200 mt-2 rounded-full overflow-hidden\">\r\n              <div\r\n                className=\"h-full rounded-full\"\r\n                style={{\r\n                  width: `${goalProgress}%`,\r\n                  background: `linear-gradient(90deg, #4338ca, #3b82f6 ${goalProgress}%)`,\r\n                }}\r\n              ></div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Compact Weekly Schedule with left/right navigation */}\r\n      <div className=\"mb-6\">\r\n        <Card className=\"border hover:shadow-md transition-shadow\">\r\n          <CardHeader className=\"py-2 px-4 border-b\">\r\n            <CardTitle className=\"text-sm font-medium flex items-center\">\r\n              <CalendarClock className=\"mr-2 h-4 w-4 text-indigo-500\" />\r\n              Schedule\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"py-2 px-0 relative\">\r\n            <Button\r\n              variant=\"ghost\"\r\n              size=\"sm\"\r\n              className=\"absolute left-0 top-1/2 -translate-y-1/2 z-10 h-full\"\r\n            >\r\n              <ChevronLeft className=\"h-4 w-4\" />\r\n            </Button>\r\n            <div className=\"grid grid-cols-7 text-center px-6\">\r\n              {SCHEDULE_DATA.map((day, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`p-1 ${\r\n                    isToday(day.day) ? 'bg-blue-50 border-b-2 border-blue-500' : ''\r\n                  }`}\r\n                >\r\n                  <div className=\"font-medium text-xs text-gray-800\">\r\n                    {day.day.substring(0, 3)} <span className=\"text-gray-500\">{day.date}</span>\r\n                  </div>\r\n                  <div\r\n                    className={`mt-1 text-xs ${\r\n                      day.shift === 'Off' ? 'text-gray-400' : 'text-gray-800 font-medium'\r\n                    }`}\r\n                  >\r\n                    {day.shift === 'Off'\r\n                      ? 'Off'\r\n                      : day.shift.replace('am - ', '-').replace('pm', '').replace('am', '')}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <Button\r\n              variant=\"ghost\"\r\n              size=\"sm\"\r\n              className=\"absolute right-0 top-1/2 -translate-y-1/2 z-10 h-full\"\r\n            >\r\n              <ChevronRight className=\"h-4 w-4\" />\r\n            </Button>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Leader Board - The Das Board */}\r\n      <div className=\"mb-6\">\r\n        <Card className=\"border hover:shadow-md transition-shadow\">\r\n          <CardHeader className=\"py-2 px-4 border-b\">\r\n            <div className=\"flex justify-between items-center\">\r\n              <CardTitle className=\"text-sm font-medium flex items-center\">\r\n                <Trophy className=\"mr-2 h-4 w-4 text-yellow-500\" />\r\n                The Das Board\r\n              </CardTitle>\r\n            </div>\r\n          </CardHeader>\r\n          <CardContent className=\"py-1\">\r\n            {/* Sortable Header - Performance View */}\r\n            <div className=\"flex items-center text-xs font-medium text-white border-b py-2 px-1\">\r\n              <div className=\"w-10 text-center bg-gray-600 py-2 rounded-l-md\">#</div>\r\n              <div className=\"w-40 flex-shrink-0 bg-gray-600 py-2 px-2\">Salesperson</div>\r\n              <div className=\"w-28 text-center bg-purple-600 py-2 flex items-center justify-center cursor-pointer hover:bg-purple-700\">\r\n                PVR <ChevronDown className=\"ml-1 h-3 w-3\" />\r\n              </div>\r\n              <div className=\"w-36 text-center bg-green-600 py-2 flex items-center justify-center cursor-pointer hover:bg-green-700\">\r\n                Total Gross <ChevronDown className=\"ml-1 h-3 w-3\" />\r\n              </div>\r\n              <div className=\"w-28 text-center bg-blue-600 py-2 flex items-center justify-center cursor-pointer hover:bg-blue-700\">\r\n                Avg/Mo <ChevronDown className=\"ml-1 h-3 w-3\" />\r\n              </div>\r\n              <div className=\"w-28 text-center bg-blue-500 py-2 flex items-center justify-center cursor-pointer hover:bg-blue-600\">\r\n                Last Mo <ChevronDown className=\"ml-1 h-3 w-3\" />\r\n              </div>\r\n              <div className=\"w-28 text-center bg-blue-600 py-2 flex items-center justify-center cursor-pointer hover:bg-blue-700\">\r\n                YTD <ChevronDown className=\"ml-1 h-3 w-3\" />\r\n              </div>\r\n              <div className=\"w-28 text-center bg-blue-500 py-2 flex items-center justify-center cursor-pointer hover:bg-blue-600\">\r\n                Annual <ChevronDown className=\"ml-1 h-3 w-3\" />\r\n              </div>\r\n              <div className=\"w-24 text-center bg-green-600 py-2 flex items-center justify-center cursor-pointer hover:bg-green-700\">\r\n                New <ChevronDown className=\"ml-1 h-3 w-3\" />\r\n              </div>\r\n              <div className=\"w-24 text-center bg-amber-600 py-2 flex items-center justify-center cursor-pointer hover:bg-amber-700\">\r\n                Used <ChevronDown className=\"ml-1 h-3 w-3\" />\r\n              </div>\r\n              <div className=\"w-36 text-right bg-indigo-600 py-2 pr-3 flex items-center justify-end cursor-pointer hover:bg-indigo-700 font-semibold rounded-r-md\">\r\n                Current Month <ChevronDown className=\"ml-1 h-3 w-3\" />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Leaderboard Entries */}\r\n            <div>\r\n              {[\r\n                {\r\n                  name: 'Michael Scott',\r\n                  units: 14,\r\n                  frontGross: 18200,\r\n                  backGross: 14300,\r\n                  totalGross: 32500,\r\n                  avgMonth: 12,\r\n                  lastMonth: 15,\r\n                  ytd: 82,\r\n                  annualPace: 144,\r\n                  newUnits: 9,\r\n                  usedUnits: 5,\r\n                  pvr: 2321,\r\n                },\r\n                {\r\n                  name: 'Jim Halpert',\r\n                  units: 12,\r\n                  frontGross: 16400,\r\n                  backGross: 12500,\r\n                  totalGross: 28900,\r\n                  avgMonth: 10,\r\n                  lastMonth: 11,\r\n                  ytd: 65,\r\n                  annualPace: 120,\r\n                  newUnits: 7,\r\n                  usedUnits: 5,\r\n                  pvr: 2408,\r\n                },\r\n                {\r\n                  name: 'Dwight Schrute',\r\n                  units: 11,\r\n                  frontGross: 14800,\r\n                  backGross: 11600,\r\n                  totalGross: 26400,\r\n                  avgMonth: 9,\r\n                  lastMonth: 10,\r\n                  ytd: 58,\r\n                  annualPace: 108,\r\n                  newUnits: 4,\r\n                  usedUnits: 7,\r\n                  pvr: 2400,\r\n                },\r\n                {\r\n                  name: 'Pam Beesly',\r\n                  units: 9,\r\n                  frontGross: 11900,\r\n                  backGross: 9800,\r\n                  totalGross: 21700,\r\n                  avgMonth: 8,\r\n                  lastMonth: 7,\r\n                  ytd: 48,\r\n                  annualPace: 96,\r\n                  newUnits: 5,\r\n                  usedUnits: 4,\r\n                  pvr: 2411,\r\n                },\r\n                {\r\n                  name: 'Stanley Hudson',\r\n                  units: 8,\r\n                  frontGross: 10500,\r\n                  backGross: 8700,\r\n                  totalGross: 19200,\r\n                  avgMonth: 7,\r\n                  lastMonth: 9,\r\n                  ytd: 42,\r\n                  annualPace: 84,\r\n                  newUnits: 3,\r\n                  usedUnits: 5,\r\n                  pvr: 2400,\r\n                },\r\n              ].map((person, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`flex items-center py-2 px-1 ${\r\n                    index !== 4 ? 'border-b' : ''\r\n                  } border-gray-100 text-sm hover:bg-gray-50`}\r\n                >\r\n                  <div className=\"w-10 flex justify-center\">\r\n                    <div\r\n                      className={`w-5 h-5 rounded-full flex items-center justify-center\r\n                      ${\r\n                        index === 0\r\n                          ? 'bg-yellow-100 text-yellow-600'\r\n                          : index === 1\r\n                          ? 'bg-gray-100 text-gray-600'\r\n                          : index === 2\r\n                          ? 'bg-amber-100 text-amber-600'\r\n                          : 'bg-blue-50 text-blue-500'\r\n                      }`}\r\n                    >\r\n                      <span className=\"text-xs font-bold\">{index + 1}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"w-40 flex-shrink-0 font-medium truncate px-2\">{person.name}</div>\r\n                  <div className=\"w-28 text-center bg-purple-50\">${person.pvr}</div>\r\n                  <div className=\"w-36 text-center bg-green-50\">\r\n                    ${person.totalGross.toLocaleString()}\r\n                  </div>\r\n                  <div className=\"w-28 text-center bg-blue-50\">{person.avgMonth}</div>\r\n                  <div className=\"w-28 text-center\">{person.lastMonth}</div>\r\n                  <div className=\"w-28 text-center bg-blue-50\">{person.ytd}</div>\r\n                  <div className=\"w-28 text-center\">{person.annualPace}</div>\r\n                  <div className=\"w-24 text-center bg-green-50\">{person.newUnits}</div>\r\n                  <div className=\"w-24 text-center bg-amber-50\">{person.usedUnits}</div>\r\n                  <div className=\"w-36 text-right pr-3\">\r\n                    <span className=\"text-lg font-bold text-indigo-700\">{person.units}</span>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"mt-2 pt-2 text-center\">\r\n              <Button variant=\"ghost\" size=\"sm\" className=\"text-xs text-blue-600\">\r\n                View All Salespeople\r\n              </Button>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      <div className=\"grid gap-6 md:grid-cols-2\">\r\n        <Card className=\"flex-grow border hover:shadow-md transition-shadow\">\r\n          <CardHeader className=\"pb-2 border-b\">\r\n            <div className=\"flex justify-between items-center\">\r\n              <CardTitle className=\"text-lg font-medium flex items-center\">\r\n                <FileText className=\"mr-2 h-5 w-5 text-blue-500\" />\r\n                My Deals\r\n              </CardTitle>\r\n              <div\r\n                className={`h-3 w-3 rounded-full ${\r\n                  performanceColor === 'green'\r\n                    ? 'bg-green-500'\r\n                    : performanceColor === 'yellow'\r\n                    ? 'bg-yellow-500'\r\n                    : 'bg-red-500'\r\n                }`}\r\n              ></div>\r\n            </div>\r\n          </CardHeader>\r\n          <CardContent className=\"pt-4\">\r\n            <div className=\"overflow-hidden\">\r\n              <div className=\"overflow-x-auto\">\r\n                <table className=\"w-full\">\r\n                  <thead>\r\n                    <tr className=\"text-left border-b\">\r\n                      <th className=\"pb-2 font-medium text-xs text-gray-500\">STOCK #</th>\r\n                      <th className=\"pb-2 font-medium text-xs text-gray-500\">CUSTOMER</th>\r\n                      <th className=\"pb-2 font-medium text-xs text-gray-500 text-right\">FRONT</th>\r\n                      <th className=\"pb-2 font-medium text-xs text-gray-500 text-right\">BACK</th>\r\n                      <th className=\"pb-2 font-medium text-xs text-gray-500 text-right\">TOTAL</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {currentDeals.slice(0, 10).map((deal, index) => (\r\n                      <tr\r\n                        key={deal.id || deal.dealNumber}\r\n                        className={`${\r\n                          index !== currentDeals.slice(0, 10).length - 1 ? 'border-b' : ''\r\n                        } ${deal.vehicleType === 'N' || deal.isNew ? 'bg-blue-50' : ''}`}\r\n                      >\r\n                        <td className=\"py-3 text-sm\">{deal.stockNumber}</td>\r\n                        <td className=\"py-3 text-sm\">{deal.lastName || deal.customer}</td>\r\n                        <td\r\n                          className={`py-3 text-sm text-right ${\r\n                            (deal.frontEndGross || deal.frontGross || 0) === 0\r\n                              ? 'text-red-500 font-medium'\r\n                              : ''\r\n                          }`}\r\n                        >\r\n                          ${(deal.frontEndGross || deal.frontGross || 0).toLocaleString()}\r\n                        </td>\r\n                        <td className=\"py-3 text-sm text-right\">\r\n                          ${(deal.backEndGross || deal.profit || 0).toLocaleString()}\r\n                        </td>\r\n                        <td className=\"py-3 text-sm font-medium text-right\">\r\n                          $\r\n                          {(\r\n                            (deal.frontEndGross || deal.frontGross || 0) +\r\n                            (deal.backEndGross || deal.profit || 0)\r\n                          ).toLocaleString()}\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-8\">\r\n              <div className=\"bg-blue-50 rounded-lg border border-blue-100 p-4\">\r\n                <h3 className=\"font-semibold text-blue-700 mb-2\">Deal Performance</h3>\r\n                <div className=\"grid grid-cols-3 gap-4 text-center\">\r\n                  <div>\r\n                    <div className=\"text-xs text-gray-500\">Avg Front</div>\r\n                    <div className=\"font-bold text-blue-700\">\r\n                      ${Math.round(totalFrontEndGross / MOCK_DEALS.length).toLocaleString()}\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"text-xs text-gray-500\">Avg Back</div>\r\n                    <div className=\"font-bold text-blue-700\">\r\n                      ${Math.round(totalBackEndGross / MOCK_DEALS.length).toLocaleString()}\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"text-xs text-gray-500\">Avg Total</div>\r\n                    <div className=\"font-bold text-blue-700\">\r\n                      ${Math.round(totalGross / MOCK_DEALS.length).toLocaleString()}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n          <CardFooter className=\"border-t px-6 py-3\">\r\n            <Button\r\n              variant=\"ghost\"\r\n              size=\"sm\"\r\n              className=\"ml-auto flex items-center text-blue-600 text-sm\"\r\n            >\r\n              View All Deals\r\n              <ArrowRight className=\"ml-1 h-4 w-4\" />\r\n            </Button>\r\n          </CardFooter>\r\n        </Card>\r\n\r\n        {/* Right column with Goal Tracker and Pay Calculator */}\r\n        <div className=\"flex flex-col gap-6 h-full\">\r\n          {/* Taller Monthly Goal Tracker */}\r\n          <GoalTracking />\r\n\r\n          {/* Pay Calculator with Disclaimer */}\r\n          <Card className=\"border hover:shadow-md transition-shadow overflow-hidden bg-white z-10 relative\">\r\n            <CardHeader className=\"pb-2 border-b bg-gradient-to-r from-green-400 to-teal-500\">\r\n              <CardTitle className=\"text-lg font-medium flex items-center text-white\">\r\n                <Calculator className=\"mr-2 h-5 w-5 text-white\" />\r\n                Pay Calculator\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"pt-4 bg-white\">\r\n              <div className=\"flex items-center justify-center mb-3\">\r\n                <div className=\"text-center\">\r\n                  <div className=\"text-3xl font-bold text-green-600\">\r\n                    ${Math.round(currentEarnings).toLocaleString()}\r\n                  </div>\r\n                  <div className=\"text-xs text-gray-500 mt-1\">Month-to-Date Earnings</div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"space-y-2 mt-2\">\r\n                <div className=\"flex justify-between\">\r\n                  <span className=\"text-xs text-gray-600\">\r\n                    Front End ({PAY_CALCULATOR.frontEndGrossPercent}%)\r\n                  </span>\r\n                  <span className=\"text-xs font-medium\">\r\n                    $\r\n                    {Math.round(\r\n                      totalFrontEndGross * (PAY_CALCULATOR.frontEndGrossPercent / 100)\r\n                    ).toLocaleString()}\r\n                  </span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span className=\"text-xs text-gray-600\">\r\n                    Back End ({PAY_CALCULATOR.backEndGrossPercent}%)\r\n                  </span>\r\n                  <span className=\"text-xs font-medium\">\r\n                    $\r\n                    {Math.round(\r\n                      totalBackEndGross * (PAY_CALCULATOR.backEndGrossPercent / 100)\r\n                    ).toLocaleString()}\r\n                  </span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span className=\"text-xs text-gray-600\">Spiffs & Bonuses</span>\r\n                  <span className=\"text-xs font-medium\">\r\n                    ${PAY_CALCULATOR.spiffs.toLocaleString()}\r\n                  </span>\r\n                </div>\r\n                <div className=\"pt-2 border-t\">\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-xs font-semibold text-gray-700\">\r\n                      Potential Monthly Total\r\n                    </span>\r\n                    <span className=\"text-xs font-bold text-green-600\">\r\n                      ${Math.round(projectedEarningsWithBonus).toLocaleString()}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"text-xs text-gray-500 mt-1\">\r\n                    {projectedDeals >= PAY_CALCULATOR.bonusThreshold && (\r\n                      <div className=\"text-green-600 mt-1 font-medium text-xs\">\r\n                        Includes ${PAY_CALCULATOR.bonusAmount} volume bonus!\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mt-3 pt-2 border-t\">\r\n                <p className=\"text-[10px] text-gray-400 italic\">\r\n                  <strong>Disclaimer:</strong> These figures are estimates only and not actual\r\n                  earnings. Final compensation may vary based on dealership policies and deal\r\n                  structures.\r\n                </p>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Placeholder components for the routes\r\nfunction PayCalculator() {\r\n  return (\r\n    <Card className=\"p-6\">\r\n      <CardHeader>\r\n        <CardTitle>Pay Calculator</CardTitle>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <p>The pay calculator feature is coming soon.</p>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction GoalTracker() {\r\n  return (\r\n    <Card className=\"p-6\">\r\n      <CardHeader>\r\n        <CardTitle>Goal Tracker</CardTitle>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <p>The goal tracker feature is coming soon.</p>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction PerformanceMetrics() {\r\n  return (\r\n    <Card className=\"p-6\">\r\n      <CardHeader>\r\n        <CardTitle>Performance Metrics</CardTitle>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <p>Performance metrics are coming soon.</p>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default SalesDashboard;\r\n","import React, { useState, useEffect } from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '../../components/ui/card';\nimport { Button } from '../../components/ui/button';\nimport { Link } from 'react-router-dom';\nimport { useFinanceDealsData } from '../../hooks/useDealsData';\nimport {\n  DollarSign,\n  ChevronUp,\n  ChevronDown,\n  BarChart4,\n  CreditCard,\n  Percent,\n  Calendar,\n  Filter,\n  FileText,\n  Trophy,\n  CalendarClock,\n  ChevronLeft,\n  ChevronRight,\n  MoreVertical,\n  Calculator,\n  Target,\n  Badge,\n} from 'lucide-react';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from '../../components/ui/dropdown-menu';\n\n// Interface for a deal\ninterface Deal {\n  id: string;\n  customer: string;\n  vehicle: string;\n  vin: string;\n  saleDate: string;\n  salesperson: string;\n  amount: number;\n  status: string;\n  products: string[];\n  profit: number;\n  created_at: string;\n  // Additional fields for new deal structure\n  back_end_gross?: number;\n  vsc_profit?: number;\n  gap_profit?: number;\n  appearance_profit?: number;\n  tire_wheel_profit?: number;\n  ppm_profit?: number;\n  ext_warranty_profit?: number;\n  key_replacement_profit?: number;\n  theft_profit?: number;\n  windshield_profit?: number;\n  lojack_profit?: number;\n  other_profit?: number;\n  // Camel case variants for backward compatibility\n  vscProfit?: number;\n  gapProfit?: number;\n  appearanceProfit?: number;\n  tireWheelProfit?: number;\n  ppmProfit?: number;\n  extWarrantyProfit?: number;\n  keyReplacementProfit?: number;\n  theftProfit?: number;\n  windshieldProfit?: number;\n  lojackProfit?: number;\n  otherProfit?: number;\n}\n\n// Interface for metrics\ninterface Metrics {\n  mtdRevenue: number;\n  dealsProcessed: number;\n  productsPerDeal: number;\n  pvr: number;\n  productMix: {\n    extendedWarranty: number;\n    gapInsurance: number;\n    paintProtection: number;\n    tireWheel: number;\n    ppm: number;\n    other: number;\n  };\n  avgProfits: {\n    extendedWarranty: number;\n    gapInsurance: number;\n    paintProtection: number;\n    tireWheel: number;\n    ppm: number;\n    other: number;\n  };\n}\n\n// Time period options\ntype TimePeriod = 'this-month' | 'last-month' | 'last-quarter' | 'ytd' | 'last-year' | 'custom';\n\n// Add schedule data\n// Mock schedule data\nconst SCHEDULE_DATA = [\n  { day: 'Monday', date: '12', shift: 'Off', team: '' },\n  { day: 'Tuesday', date: '13', shift: '9am - 6pm', team: 'Team A' },\n  { day: 'Wednesday', date: '14', shift: '10am - 7pm', team: 'Team A' },\n  { day: 'Thursday', date: '15', shift: '9am - 6pm', team: 'Team A' },\n  { day: 'Friday', date: '16', shift: '11am - 8pm', team: 'Team B' },\n  { day: 'Saturday', date: '17', shift: '9am - 5pm', team: 'Team B' },\n  { day: 'Sunday', date: '18', shift: 'Off', team: '' },\n];\n\nconst FinanceHomePage: React.FC = () => {\n  const [timePeriod, setTimePeriod] = useState<TimePeriod>('this-month');\n  const [customDateRange, setCustomDateRange] = useState({\n    start: '',\n    end: '',\n  });\n  const [showCustomDatePicker, setShowCustomDatePicker] = useState(false);\n\n  // Local state for deal management\n  const [localDeals, setDeals] = useState<Deal[]>([]);\n  const [filteredDeals, setFilteredDeals] = useState<Deal[]>([]);\n  const [localPendingDeals, setPendingDeals] = useState<Deal[]>([]);\n  const [localMetrics, setMetrics] = useState<Metrics>({\n    mtdRevenue: 0,\n    dealsProcessed: 0,\n    productsPerDeal: 0,\n    pvr: 0,\n    productMix: {\n      extendedWarranty: 0,\n      gapInsurance: 0,\n      paintProtection: 0,\n      tireWheel: 0,\n      ppm: 0,\n      other: 0,\n    },\n    avgProfits: {\n      extendedWarranty: 0,\n      gapInsurance: 0,\n      paintProtection: 0,\n      tireWheel: 0,\n      ppm: 0,\n      other: 0,\n    },\n  });\n\n  // Use the finance deals data hook\n  const {\n    dealData,\n    loading,\n    error,\n    setTimePeriod: setHookTimePeriod,\n  } = useFinanceDealsData(timePeriod);\n\n  // Extract data from the hook\n  const hookDeals = dealData?.deals || [];\n  const hookMetrics = dealData?.metrics || {\n    totalDeals: 0,\n    fundedDeals: 0,\n    pendingDeals: 0,\n    totalFrontGross: 0,\n    totalBackGross: 0,\n    totalGross: 0,\n    avgFrontGross: 0,\n    avgBackGross: 0,\n    totalPVR: 0,\n    avgPVR: 0,\n  };\n\n  // Use local deals for table display and hook deals for other metrics\n  const deals = localDeals.length > 0 ? localDeals : hookDeals;\n  const metrics =\n    localMetrics.mtdRevenue > 0\n      ? localMetrics\n      : {\n          mtdRevenue: hookMetrics.totalBackGross,\n          dealsProcessed: hookMetrics.totalDeals,\n          productsPerDeal:\n            hookMetrics.totalDeals > 0 ? hookMetrics.totalPVR / hookMetrics.totalDeals : 0,\n          pvr: hookMetrics.avgPVR,\n          productMix: {\n            extendedWarranty: 0,\n            gapInsurance: 0,\n            paintProtection: 0,\n            tireWheel: 0,\n            ppm: 0,\n            other: 0,\n          },\n          avgProfits: {\n            extendedWarranty: 0,\n            gapInsurance: 0,\n            paintProtection: 0,\n            tireWheel: 0,\n            ppm: 0,\n            other: 0,\n          },\n        };\n\n  // Filter deals by status\n  const fundedDeals = deals.filter((deal: any) => deal.isFunded);\n  const pendingDeals =\n    localPendingDeals.length > 0 ? localPendingDeals : deals.filter((deal: any) => deal.isPending);\n\n  // Get current month and year for display\n  const getCurrentMonthYear = () => {\n    const date = new Date();\n    return date.toLocaleDateString('en-US', { month: 'long', year: 'numeric' });\n  };\n\n  // Get date range based on selected time period\n  const getDateRange = (period: TimePeriod) => {\n    const today = new Date();\n    let startDate = new Date();\n    let endDate = new Date();\n\n    switch (period) {\n      case 'this-month':\n        startDate = new Date(today.getFullYear(), today.getMonth(), 1);\n        endDate = today;\n        break;\n\n      case 'last-month':\n        startDate = new Date(today.getFullYear(), today.getMonth() - 1, 1);\n        endDate = new Date(today.getFullYear(), today.getMonth(), 0);\n        break;\n\n      case 'last-quarter':\n        const currentQuarter = Math.floor(today.getMonth() / 3);\n        startDate = new Date(today.getFullYear(), currentQuarter * 3 - 3, 1);\n        endDate = new Date(today.getFullYear(), currentQuarter * 3, 0);\n        break;\n\n      case 'ytd':\n        startDate = new Date(today.getFullYear(), 0, 1);\n        endDate = today;\n        break;\n\n      case 'last-year':\n        startDate = new Date(today.getFullYear() - 1, 0, 1);\n        endDate = new Date(today.getFullYear() - 1, 11, 31);\n        break;\n\n      case 'custom':\n        if (customDateRange.start && customDateRange.end) {\n          startDate = new Date(customDateRange.start);\n          endDate = new Date(customDateRange.end);\n        }\n        break;\n    }\n\n    return { startDate, endDate };\n  };\n\n  // Get period label for display\n  const getPeriodLabel = (period: TimePeriod) => {\n    switch (period) {\n      case 'this-month':\n        return getCurrentMonthYear();\n      case 'last-month':\n        const lastMonth = new Date();\n        lastMonth.setMonth(lastMonth.getMonth() - 1);\n        return lastMonth.toLocaleDateString('en-US', { month: 'long', year: 'numeric' });\n      case 'last-quarter':\n        const today = new Date();\n        const currentQuarter = Math.floor(today.getMonth() / 3);\n        const lastQuarterEndMonth = new Date(today.getFullYear(), currentQuarter * 3 - 1, 1);\n        return `Q${\n          Math.floor(lastQuarterEndMonth.getMonth() / 3) + 1\n        } ${lastQuarterEndMonth.getFullYear()}`;\n      case 'ytd':\n        return `YTD ${new Date().getFullYear()}`;\n      case 'last-year':\n        return `${new Date().getFullYear() - 1}`;\n      case 'custom':\n        if (customDateRange.start && customDateRange.end) {\n          return `${new Date(customDateRange.start).toLocaleDateString()} - ${new Date(\n            customDateRange.end\n          ).toLocaleDateString()}`;\n        }\n        return 'Custom Range';\n    }\n  };\n\n  // Handle time period change\n  const handleTimePeriodChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const newPeriod = e.target.value as TimePeriod;\n    setTimePeriod(newPeriod);\n    setShowCustomDatePicker(newPeriod === 'custom');\n\n    // Update the hook's time period if it's not custom\n    if (newPeriod !== 'custom') {\n      setHookTimePeriod(newPeriod);\n    }\n  };\n\n  // Handle custom date range change\n  const handleCustomDateChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setCustomDateRange(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  // Apply custom date range\n  const applyCustomDateRange = () => {\n    if (customDateRange.start && customDateRange.end) {\n      filterDealsByDateRange();\n    }\n  };\n\n  // Load deals from localStorage\n  useEffect(() => {\n    try {\n      const storedDeals = localStorage.getItem('financeDeals');\n      if (storedDeals) {\n        const parsedDeals = JSON.parse(storedDeals);\n        setDeals(parsedDeals);\n\n        // Filter for pending deals\n        const pendingDealsFilter = parsedDeals.filter(\n          (deal: any) =>\n            deal.status === 'Pending' ||\n            deal.status === 'Bank Approval' ||\n            deal.status === 'Pending Documents' ||\n            deal.status === 'Contract Review' ||\n            deal.status === 'Insurance Verification'\n        );\n        setPendingDeals(pendingDealsFilter);\n      }\n    } catch (error) {\n      console.error('Error loading deals from localStorage:', error);\n    }\n  }, []);\n\n  // Filter deals by date range when time period changes\n  useEffect(() => {\n    if (localDeals.length > 0) {\n      filterDealsByDateRange();\n    }\n  }, [timePeriod, customDateRange, localDeals]);\n\n  // Filter deals by selected date range\n  const filterDealsByDateRange = () => {\n    if (!localDeals.length) return;\n\n    const { startDate, endDate } = getDateRange(timePeriod);\n\n    const filtered = localDeals.filter((deal: any) => {\n      const dealDate = new Date(deal.saleDate);\n      return dealDate >= startDate && dealDate <= endDate;\n    });\n\n    setFilteredDeals(filtered);\n    calculateMetrics(filtered);\n  };\n\n  // Handle status change for a deal\n  const handleStatusChange = (dealId: string, newStatus: string) => {\n    try {\n      // Get existing deals from localStorage\n      const existingDealsJson = localStorage.getItem('financeDeals');\n      const existingDeals = existingDealsJson ? JSON.parse(existingDealsJson) : [];\n\n      // Update the deal status\n      const updatedDeals = existingDeals.map((deal: any) =>\n        deal.id === dealId ? { ...deal, status: newStatus } : deal\n      );\n\n      // Save back to localStorage\n      localStorage.setItem('financeDeals', JSON.stringify(updatedDeals));\n\n      // Update local state\n      setDeals(updatedDeals);\n\n      console.log(`[FinanceHomePage] Updated deal ${dealId} status to ${newStatus}`);\n    } catch (error) {\n      console.error('[FinanceHomePage] Error updating deal status:', error);\n    }\n  };\n\n  // Handle deal deletion\n  const handleDeleteDeal = (dealId: string, shouldDelete: boolean) => {\n    if (!shouldDelete) return;\n\n    if (confirm('Are you sure you want to delete this deal? This action cannot be undone.')) {\n      try {\n        // Get existing deals from localStorage\n        const existingDealsJson = localStorage.getItem('financeDeals');\n        const existingDeals = existingDealsJson ? JSON.parse(existingDealsJson) : [];\n\n        // Remove the deal\n        const updatedDeals = existingDeals.filter((deal: any) => deal.id !== dealId);\n\n        // Save back to localStorage\n        localStorage.setItem('financeDeals', JSON.stringify(updatedDeals));\n\n        // Update local state\n        setDeals(updatedDeals);\n\n        console.log(`[FinanceHomePage] Deleted deal ${dealId}`);\n      } catch (error) {\n        console.error('[FinanceHomePage] Error deleting deal:', error);\n      }\n    }\n  };\n\n  // Calculate metrics based on deals\n  const calculateMetrics = (deals: Deal[]) => {\n    if (deals.length === 0) {\n      setMetrics({\n        mtdRevenue: 0,\n        dealsProcessed: 0,\n        productsPerDeal: 0,\n        pvr: 0,\n        productMix: {\n          extendedWarranty: 0,\n          gapInsurance: 0,\n          paintProtection: 0,\n          tireWheel: 0,\n          ppm: 0,\n          other: 0,\n        },\n        avgProfits: {\n          extendedWarranty: 0,\n          gapInsurance: 0,\n          paintProtection: 0,\n          tireWheel: 0,\n          ppm: 0,\n          other: 0,\n        },\n      });\n      return;\n    }\n\n    // Calculate total F&I revenue for the time period - handle both new and old data structures\n    const totalRevenue = deals.reduce((total, deal) => {\n      // New structure has back_end_gross, old structure has profit\n      const dealProfit = deal.back_end_gross || deal.profit || 0;\n      return total + dealProfit;\n    }, 0);\n\n    // Calculate deals processed in this time period\n    const dealsProcessed = deals.length;\n\n    // Calculate product penetration and average profits based on actual profit values\n    let extendedWarrantyCount = 0;\n    let extendedWarrantyTotal = 0;\n    let gapInsuranceCount = 0;\n    let gapInsuranceTotal = 0;\n    let paintProtectionCount = 0;\n    let paintProtectionTotal = 0;\n    let tireWheelCount = 0;\n    let tireWheelTotal = 0;\n    let ppmCount = 0;\n    let ppmTotal = 0;\n    let otherCount = 0;\n    let otherTotal = 0;\n\n    deals.forEach(deal => {\n      // VSC/Extended Warranty\n      const vscProfit = deal.vsc_profit || deal.vscProfit || 0;\n      if (vscProfit > 0) {\n        extendedWarrantyCount++;\n        extendedWarrantyTotal += vscProfit;\n      }\n\n      // GAP Insurance\n      const gapProfit = deal.gap_profit || deal.gapProfit || 0;\n      if (gapProfit > 0) {\n        gapInsuranceCount++;\n        gapInsuranceTotal += gapProfit;\n      }\n\n      // Paint Protection/Appearance\n      const appearanceProfit = deal.appearance_profit || deal.appearanceProfit || 0;\n      if (appearanceProfit > 0) {\n        paintProtectionCount++;\n        paintProtectionTotal += appearanceProfit;\n      }\n\n      // Tire & Wheel\n      const tireWheelProfit = deal.tire_wheel_profit || deal.tireWheelProfit || 0;\n      if (tireWheelProfit > 0) {\n        tireWheelCount++;\n        tireWheelTotal += tireWheelProfit;\n      }\n\n      // PPM (Prepaid Maintenance)\n      const ppmProfit = deal.ppm_profit || deal.ppmProfit || 0;\n      if (ppmProfit > 0) {\n        ppmCount++;\n        ppmTotal += ppmProfit;\n      }\n\n      // Other products (Extended Warranty, Key Replacement, Theft, Windshield, LoJack, Other)\n      const otherProfit =\n        (deal.ext_warranty_profit || deal.extWarrantyProfit || 0) +\n        (deal.key_replacement_profit || deal.keyReplacementProfit || 0) +\n        (deal.theft_profit || deal.theftProfit || 0) +\n        (deal.windshield_profit || deal.windshieldProfit || 0) +\n        (deal.lojack_profit || deal.lojackProfit || 0) +\n        (deal.other_profit || deal.otherProfit || 0);\n\n      if (otherProfit > 0) {\n        otherCount++;\n        otherTotal += otherProfit;\n      }\n    });\n\n    // Calculate penetration percentage (how often each product is sold)\n    const calculatePenetration = (count: number) =>\n      dealsProcessed > 0 ? Math.round((count / dealsProcessed) * 100) : 0;\n\n    // Calculate average profit per product\n    const calculateAverage = (total: number, count: number) =>\n      count > 0 ? Math.round(total / count) : 0;\n\n    // Calculate average products per deal\n    const totalProductsSold =\n      extendedWarrantyCount +\n      gapInsuranceCount +\n      paintProtectionCount +\n      tireWheelCount +\n      ppmCount +\n      otherCount;\n    const productsPerDeal = dealsProcessed > 0 ? totalProductsSold / dealsProcessed : 0;\n\n    // Calculate PVR (Per Vehicle Retailed)\n    const pvr = dealsProcessed > 0 ? totalRevenue / dealsProcessed : 0;\n\n    const productMix = {\n      extendedWarranty: calculatePenetration(extendedWarrantyCount),\n      gapInsurance: calculatePenetration(gapInsuranceCount),\n      paintProtection: calculatePenetration(paintProtectionCount),\n      tireWheel: calculatePenetration(tireWheelCount),\n      ppm: calculatePenetration(ppmCount),\n      other: calculatePenetration(otherCount),\n    };\n\n    const avgProfits = {\n      extendedWarranty: calculateAverage(extendedWarrantyTotal, extendedWarrantyCount),\n      gapInsurance: calculateAverage(gapInsuranceTotal, gapInsuranceCount),\n      paintProtection: calculateAverage(paintProtectionTotal, paintProtectionCount),\n      tireWheel: calculateAverage(tireWheelTotal, tireWheelCount),\n      ppm: calculateAverage(ppmTotal, ppmCount),\n      other: calculateAverage(otherTotal, otherCount),\n    };\n\n    // Update metrics state\n    setMetrics({\n      mtdRevenue: totalRevenue,\n      dealsProcessed,\n      productsPerDeal,\n      pvr,\n      productMix,\n      avgProfits,\n    });\n  };\n\n  // Helper to highlight today in the schedule\n  const isToday = (day: string) => {\n    const today = new Date().getDay();\n    // Convert day name to day number (0 = Sunday, 1 = Monday, etc.)\n    const dayMap: { [key: string]: number } = {\n      Sunday: 0,\n      Monday: 1,\n      Tuesday: 2,\n      Wednesday: 3,\n      Thursday: 4,\n      Friday: 5,\n      Saturday: 6,\n    };\n    return dayMap[day] === today;\n  };\n\n  return (\n    <>\n      {/* Dashboard Header with Month/Year and Time Period Filter */}\n      <div className=\"mb-6\">\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\n          <div className=\"flex items-center gap-4\">\n            {/* Empty div to maintain layout spacing */}\n            <div></div>\n          </div>\n\n          <div className=\"flex flex-col md:flex-row gap-3\">\n            {showCustomDatePicker && (\n              <div className=\"flex items-center gap-2\">\n                <input\n                  type=\"date\"\n                  name=\"start\"\n                  value={customDateRange.start}\n                  onChange={handleCustomDateChange}\n                  className=\"p-2 border rounded-md shadow-sm\"\n                />\n                <span>to</span>\n                <input\n                  type=\"date\"\n                  name=\"end\"\n                  value={customDateRange.end}\n                  onChange={handleCustomDateChange}\n                  className=\"p-2 border rounded-md shadow-sm\"\n                />\n                <Button size=\"sm\" onClick={applyCustomDateRange}>\n                  Apply\n                </Button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"space-y-6\">\n        {/* 4 Metric Cards */}\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n          <Card className=\"border-l-4 border-l-green-500 hover:shadow-md transition-shadow\">\n            <CardHeader className=\"pb-2\">\n              <CardTitle className=\"text-sm font-medium flex items-center\">\n                <DollarSign className=\"mr-2 h-4 w-4 text-green-500\" />\n                F&I Gross\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\">\n                {metrics.mtdRevenue > 0 ? `$${metrics.mtdRevenue.toLocaleString()}` : 'No data yet'}\n              </div>\n              {metrics.mtdRevenue > 0 && (\n                <div className=\"flex items-center pt-1 text-green-500\">\n                  <ChevronUp className=\"h-3 w-3 mr-1\" />\n                  <span className=\"text-xs\">8.2% from previous period</span>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n\n          <Card className=\"border-l-4 border-l-blue-500 hover:shadow-md transition-shadow\">\n            <CardHeader className=\"pb-2\">\n              <CardTitle className=\"text-sm font-medium flex items-center\">\n                <CreditCard className=\"mr-2 h-4 w-4 text-blue-500\" />\n                Deals Processed\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\">\n                {metrics.dealsProcessed > 0 ? metrics.dealsProcessed : 'No deals yet'}\n              </div>\n              {metrics.dealsProcessed > 0 && (\n                <div className=\"flex items-center pt-1 text-green-500\">\n                  <ChevronUp className=\"h-3 w-3 mr-1\" />\n                  <span className=\"text-xs\">10.5% from previous period</span>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n\n          <Card className=\"border-l-4 border-l-purple-500 hover:shadow-md transition-shadow\">\n            <CardHeader className=\"pb-2\">\n              <CardTitle className=\"text-sm font-medium flex items-center\">\n                <BarChart4 className=\"mr-2 h-4 w-4 text-purple-500\" />\n                Pay Calculator MTD\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\">\n                ${Math.round(metrics.mtdRevenue * 0.15).toLocaleString()}\n              </div>\n              {metrics.dealsProcessed > 0 && (\n                <div className=\"flex items-center pt-1 text-green-500\">\n                  <ChevronUp className=\"h-3 w-3 mr-1\" />\n                  <span className=\"text-xs\">15% of F&I revenue</span>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n\n          <Card className=\"border-l-4 border-l-amber-500 hover:shadow-md transition-shadow\">\n            <CardHeader className=\"pb-2\">\n              <CardTitle className=\"text-sm font-medium flex items-center\">\n                <Percent className=\"mr-2 h-4 w-4 text-amber-500\" />\n                PVR\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\">\n                {metrics.dealsProcessed > 0 ? `$${metrics.pvr.toLocaleString()}` : 'No data yet'}\n              </div>\n              {metrics.dealsProcessed > 0 && (\n                <div className=\"flex items-center pt-1 text-green-500\">\n                  <ChevronUp className=\"h-3 w-3 mr-1\" />\n                  <span className=\"text-xs\">$120 from previous period</span>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Compact Weekly Schedule with left/right navigation */}\n        <div>\n          <Card className=\"border hover:shadow-md transition-shadow\">\n            <CardHeader className=\"py-2 px-4 border-b\">\n              <CardTitle className=\"text-sm font-medium flex items-center\">\n                <CalendarClock className=\"mr-2 h-4 w-4 text-indigo-500\" />\n                Finance Schedule\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"py-2 px-0 relative\">\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"absolute left-0 top-1/2 -translate-y-1/2 z-10 h-full\"\n              >\n                <ChevronLeft className=\"h-4 w-4\" />\n              </Button>\n              <div className=\"grid grid-cols-7 text-center px-6\">\n                {SCHEDULE_DATA.map((day, index) => (\n                  <div\n                    key={index}\n                    className={`p-1 ${\n                      isToday(day.day) ? 'bg-blue-50 border-b-2 border-blue-500' : ''\n                    }`}\n                  >\n                    <div className=\"font-medium text-xs text-gray-800\">\n                      {day.day.substring(0, 3)} <span className=\"text-gray-500\">{day.date}</span>\n                    </div>\n                    <div\n                      className={`mt-1 text-xs ${\n                        day.shift === 'Off' ? 'text-gray-400' : 'text-gray-800 font-medium'\n                      }`}\n                    >\n                      {day.shift === 'Off'\n                        ? 'Off'\n                        : day.shift.replace('am - ', '-').replace('pm', '').replace('am', '')}\n                    </div>\n                  </div>\n                ))}\n              </div>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"absolute right-0 top-1/2 -translate-y-1/2 z-10 h-full\"\n              >\n                <ChevronRight className=\"h-4 w-4\" />\n              </Button>\n            </CardContent>\n          </Card>\n        </div>\n\n        <div className=\"grid gap-6 md:grid-cols-2\">\n          <Card className=\"border hover:shadow-md transition-shadow\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center text-lg font-medium\">\n                <BarChart4 className=\"mr-2 h-5 w-5 text-blue-500\" />\n                F&I Product Mix & Avg. Profit\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              {metrics.dealsProcessed > 0 ? (\n                <div className=\"space-y-2\">\n                  {[\n                    {\n                      name: 'Vehicle Service Contract (VSC)',\n                      percent: metrics.productMix.extendedWarranty,\n                      value: `$${metrics.avgProfits.extendedWarranty.toLocaleString()}`,\n                      color: 'bg-teal-600',\n                    },\n                    {\n                      name: 'PrePaid Maintenance (PPM)',\n                      percent: metrics.productMix.ppm,\n                      value: `$${metrics.avgProfits.ppm.toLocaleString()}`,\n                      color: 'bg-purple-600',\n                    },\n                    {\n                      name: 'GAP Insurance',\n                      percent: metrics.productMix.gapInsurance,\n                      value: `$${metrics.avgProfits.gapInsurance.toLocaleString()}`,\n                      color: 'bg-green-600',\n                    },\n                    {\n                      name: 'Paint and Fabric Protection',\n                      percent: metrics.productMix.paintProtection,\n                      value: `$${metrics.avgProfits.paintProtection.toLocaleString()}`,\n                      color: 'bg-blue-600',\n                    },\n                    {\n                      name: 'Tire & Wheel Bundle',\n                      percent: metrics.productMix.tireWheel,\n                      value: `$${metrics.avgProfits.tireWheel.toLocaleString()}`,\n                      color: 'bg-amber-600',\n                    },\n                    {\n                      name: 'Other Products',\n                      percent: metrics.productMix.other,\n                      value: `$${metrics.avgProfits.other.toLocaleString()}`,\n                      color: 'bg-gray-600',\n                    },\n                  ].map((product, index) => (\n                    <div key={index} className=\"space-y-1\">\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"font-medium flex items-center text-sm\">\n                          <div className={`w-3 h-3 ${product.color} rounded-full mr-2`}></div>\n                          {product.name}\n                        </div>\n                        <div className=\"text-right\">\n                          <div className=\"text-xs text-gray-500\">Avg. Profit</div>\n                          <div className=\"font-medium text-sm\">{product.value}</div>\n                        </div>\n                      </div>\n                      <div className=\"relative h-1.5 w-full overflow-hidden rounded-full bg-gray-100\">\n                        <div\n                          className={`absolute inset-y-0 left-0 rounded-full ${product.color}`}\n                          style={{ width: `${product.percent}%` }}\n                        />\n                      </div>\n                      <div className=\"text-right text-xs text-gray-500\">{product.percent}%</div>\n                    </div>\n                  ))}\n\n                  {/* Add PPD metric at the bottom */}\n                  <div className=\"mt-4 pt-3 border-t border-gray-200\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"font-medium text-sm\">Products Per Deal (PPD)</div>\n                      <div className=\"font-bold text-lg text-purple-600\">\n                        {metrics.productsPerDeal.toFixed(1)}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"py-8 text-center text-gray-500\">\n                  No F&I product data available yet. Log deals with products to see the mix.\n                </div>\n              )}\n            </CardContent>\n          </Card>\n\n          <Card className=\"border hover:shadow-md transition-shadow\">\n            <CardHeader className=\"py-2 px-4 border-b\">\n              <div className=\"flex justify-between items-center\">\n                <CardTitle className=\"text-sm font-medium flex items-center\">\n                  <Trophy className=\"mr-2 h-4 w-4 text-yellow-500\" />\n                  Finance Das Board\n                </CardTitle>\n              </div>\n            </CardHeader>\n            <CardContent className=\"py-1\">\n              {/* Sortable Header */}\n              <div className=\"flex items-center text-xs font-medium text-white border-b py-2 px-1\">\n                <div className=\"w-10 text-center bg-gray-600 py-2 rounded-l-md\">#</div>\n                <div className=\"w-36 flex-shrink-0 bg-gray-600 py-2 px-2\">F&I Manager</div>\n                <div className=\"w-28 text-center bg-purple-600 py-2 flex items-center justify-center cursor-pointer hover:bg-purple-700\">\n                  PVR <ChevronDown className=\"ml-1 h-3 w-3\" />\n                </div>\n                <div className=\"w-28 text-center bg-teal-600 py-2 flex items-center justify-center cursor-pointer hover:bg-teal-700\">\n                  VSC % <ChevronDown className=\"ml-1 h-3 w-3\" />\n                </div>\n                <div className=\"w-28 text-center bg-green-600 py-2 flex items-center justify-center cursor-pointer hover:bg-green-700\">\n                  GAP % <ChevronDown className=\"ml-1 h-3 w-3\" />\n                </div>\n                <div className=\"w-28 text-center bg-purple-600 py-2 flex items-center justify-center cursor-pointer hover:bg-purple-700\">\n                  PPM % <ChevronDown className=\"ml-1 h-3 w-3\" />\n                </div>\n                <div className=\"w-24 text-center bg-pink-600 py-2 flex items-center justify-center cursor-pointer hover:bg-pink-700\">\n                  PPD <ChevronDown className=\"ml-1 h-3 w-3\" />\n                </div>\n                <div className=\"w-36 text-right bg-indigo-600 py-2 pr-3 flex items-center justify-end cursor-pointer hover:bg-indigo-700 font-semibold rounded-r-md\">\n                  Profit <ChevronDown className=\"ml-1 h-3 w-3\" />\n                </div>\n              </div>\n\n              {/* Leaderboard Entries */}\n              <div>\n                {[\n                  {\n                    name: 'Ashley Rodriguez',\n                    pvr: 2650,\n                    vscPen: 68,\n                    gapPen: 72,\n                    ppmPen: 54,\n                    ppd: 3.2,\n                    profit: 143200,\n                  },\n                  {\n                    name: 'Michael Parker',\n                    pvr: 2450,\n                    vscPen: 65,\n                    gapPen: 70,\n                    ppmPen: 48,\n                    ppd: 2.9,\n                    profit: 127500,\n                  },\n                  {\n                    name: 'Sophia Martinez',\n                    pvr: 2320,\n                    vscPen: 61,\n                    gapPen: 68,\n                    ppmPen: 45,\n                    ppd: 2.7,\n                    profit: 115300,\n                  },\n                  {\n                    name: 'James Wilson',\n                    pvr: 2200,\n                    vscPen: 58,\n                    gapPen: 65,\n                    ppmPen: 42,\n                    ppd: 2.5,\n                    profit: 96500,\n                  },\n                  {\n                    name: 'Emma Johnson',\n                    pvr: 2100,\n                    vscPen: 55,\n                    gapPen: 62,\n                    ppmPen: 38,\n                    ppd: 2.4,\n                    profit: 89200,\n                  },\n                ].map((person, index) => (\n                  <div\n                    key={index}\n                    className={`flex items-center py-2 px-1 ${\n                      index !== 4 ? 'border-b' : ''\n                    } border-gray-100 text-sm hover:bg-gray-50`}\n                  >\n                    <div className=\"w-10 flex justify-center\">\n                      <div\n                        className={`w-5 h-5 rounded-full flex items-center justify-center\n                        ${\n                          index === 0\n                            ? 'bg-yellow-100 text-yellow-600'\n                            : index === 1\n                            ? 'bg-gray-100 text-gray-600'\n                            : index === 2\n                            ? 'bg-amber-100 text-amber-600'\n                            : 'bg-blue-50 text-blue-500'\n                        }`}\n                      >\n                        <span className=\"text-xs font-bold\">{index + 1}</span>\n                      </div>\n                    </div>\n                    <div className=\"w-36 flex-shrink-0 font-medium truncate px-2\">\n                      {person.name}\n                    </div>\n                    <div className=\"w-28 text-center bg-purple-50\">\n                      ${person.pvr.toLocaleString()}\n                    </div>\n                    <div className=\"w-28 text-center bg-teal-50\">{person.vscPen}%</div>\n                    <div className=\"w-28 text-center bg-green-50\">{person.gapPen}%</div>\n                    <div className=\"w-28 text-center bg-purple-50\">{person.ppmPen}%</div>\n                    <div className=\"w-24 text-center bg-pink-50\">{person.ppd}</div>\n                    <div className=\"w-36 text-right pr-3\">\n                      <span className=\"text-lg font-bold text-green-600\">\n                        ${person.profit.toLocaleString()}\n                      </span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        <Card className=\"border hover:shadow-md transition-shadow\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2 border-b\">\n            <CardTitle className=\"text-lg font-medium flex items-center\">\n              <FileText className=\"mr-2 h-5 w-5 text-blue-500\" />\n              Deals Log\n            </CardTitle>\n            <Button variant=\"outline\" size=\"sm\" asChild>\n              <Link to=\"/dashboard/finance/deals\">View All</Link>\n            </Button>\n          </CardHeader>\n          <CardContent className=\"pt-4 px-0\">\n            {deals.length > 0 ? (\n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full text-sm\">\n                  <thead>\n                    <tr className=\"text-xs\">\n                      <th className=\"font-medium text-white py-2 pl-3 text-center bg-gray-600 w-12\">\n                        #\n                      </th>\n                      <th className=\"font-medium text-white py-2 px-2 text-left bg-gray-600\">\n                        Last Name\n                      </th>\n                      <th className=\"font-medium text-white py-2 pl-4 pr-2 text-left bg-blue-600\">\n                        Deal #\n                      </th>\n                      <th className=\"font-medium text-white py-2 px-2 text-left bg-gray-600\">\n                        Stock #\n                      </th>\n                      <th className=\"font-medium text-white py-2 px-2 text-center bg-gray-600\">\n                        Date\n                      </th>\n                      <th className=\"font-medium text-white py-2 px-2 text-left bg-gray-600\">\n                        VIN\n                      </th>\n                      <th className=\"font-medium text-white py-2 px-2 text-center bg-indigo-600\">\n                        N/U/CPO\n                      </th>\n                      <th className=\"font-medium text-white py-2 px-2 text-left bg-gray-600\">\n                        Lender\n                      </th>\n                      <th className=\"font-medium text-white py-2 px-2 text-right bg-blue-600\">\n                        Front End\n                      </th>\n                      <th className=\"font-medium text-white py-2 px-2 text-right bg-teal-600\">\n                        VSC\n                      </th>\n                      <th className=\"font-medium text-white py-2 px-2 text-right bg-purple-600\">\n                        PPM\n                      </th>\n                      <th className=\"font-medium text-white py-2 px-2 text-right bg-green-600\">\n                        GAP\n                      </th>\n                      <th className=\"font-medium text-white py-2 px-2 text-right bg-amber-600\">\n                        T&W/Bundle\n                      </th>\n                      <th className=\"font-medium text-white py-2 px-2 text-center bg-pink-600\">\n                        PPD\n                      </th>\n                      <th className=\"font-medium text-white py-2 px-2 text-right bg-purple-600\">\n                        PVR\n                      </th>\n                      <th className=\"font-medium text-white py-2 px-2 text-right bg-green-600\">\n                        Total\n                      </th>\n                      <th className=\"font-medium text-white py-2 px-2 text-center bg-gray-600 w-20\">\n                        Status\n                      </th>\n                      <th className=\"font-medium text-white py-2 px-2 text-center bg-red-600 rounded-tr-md w-16\">\n                        Delete\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {deals.slice(0, 10).map((deal, index) => {\n                      // Get individual product profits from deal data or calculate from legacy data\n                      const dealData = deal as any; // Type assertion to access extended properties\n\n                      // Extract last name from customer\n                      const lastName = deal.customer.split(' ').pop() || '';\n\n                      // Format date for display - use actual deal date from form\n                      const actualDealDate = dealData.dealDate || deal.saleDate;\n                      const dealDate = new Date(actualDealDate);\n                      const formattedDate = dealDate.toLocaleDateString('en-US', {\n                        month: '2-digit',\n                        day: '2-digit',\n                        year: '2-digit',\n                      });\n\n                      // Determine if New, Used or CPO - use actual form data\n                      const vehicleType =\n                        dealData.vehicleType ||\n                        (deal.vehicle.toLowerCase().includes('new')\n                          ? 'N'\n                          : deal.vehicle.toLowerCase().includes('cpo')\n                          ? 'C'\n                          : 'U');\n\n                      // Get individual product profits - ensure we handle both number and string values\n                      const vscProfit =\n                        typeof dealData.vscProfit === 'number'\n                          ? dealData.vscProfit\n                          : parseFloat(dealData.vscProfit) ||\n                            (deal.products.includes('Extended Warranty') ||\n                            deal.products.includes('Vehicle Service Contract (VSC)')\n                              ? Math.round(deal.profit * 0.35)\n                              : 0);\n\n                      const ppmProfit =\n                        typeof dealData.ppmProfit === 'number'\n                          ? dealData.ppmProfit\n                          : parseFloat(dealData.ppmProfit) ||\n                            (deal.products.includes('Paint Protection') ||\n                            deal.products.includes('Paint and Fabric Protection') ||\n                            deal.products.includes('PPM') ||\n                            deal.products.includes('PrePaid Maintenance (PPM)')\n                              ? Math.round(deal.profit * 0.2)\n                              : 0);\n\n                      const gapProfit =\n                        typeof dealData.gapProfit === 'number'\n                          ? dealData.gapProfit\n                          : parseFloat(dealData.gapProfit) ||\n                            (deal.products.includes('GAP Insurance')\n                              ? Math.round(deal.profit * 0.25)\n                              : 0);\n\n                      const twProfit =\n                        typeof dealData.tireAndWheelProfit === 'number'\n                          ? dealData.tireAndWheelProfit\n                          : parseFloat(dealData.tireAndWheelProfit) ||\n                            (deal.products.includes('Tire & Wheel') ||\n                            deal.products.includes('Tire & Wheel Bundle')\n                              ? Math.round(deal.profit * 0.2)\n                              : 0);\n\n                      // Products per deal\n                      const ppd = deal.products.length;\n\n                      // PVR (per vehicle retailed) - using profit as estimation\n                      const pvr = Math.round(deal.profit / (ppd || 1));\n\n                      // Get status based on deal status or default to \"Pending\"\n                      const status =\n                        deal.status === 'Complete' || deal.status === 'Funded'\n                          ? 'Funded'\n                          : deal.status === 'Canceled' || deal.status === 'Unwound'\n                          ? 'Unwound'\n                          : 'Pending';\n\n                      // Status badge colors\n                      const statusColor =\n                        status === 'Funded'\n                          ? 'bg-green-100 text-green-800 border-green-200'\n                          : status === 'Unwound'\n                          ? 'bg-red-100 text-red-800 border-red-200'\n                          : 'bg-amber-100 text-amber-800 border-amber-200';\n\n                      return (\n                        <tr\n                          key={deal.id}\n                          className={`border-b ${\n                            index % 2 === 1 ? 'bg-gray-50' : ''\n                          } hover:bg-blue-50`}\n                        >\n                          <td className=\"py-2 px-2 text-center font-medium\">\n                            {deals.length - index}\n                          </td>\n                          <td className=\"py-2 px-2 text-left font-medium\">{lastName}</td>\n                          <td className=\"py-2 pl-4 pr-2 text-left font-medium text-blue-600\">\n                            {dealData.dealNumber || deal.id}\n                          </td>\n                          <td className=\"py-2 px-2 text-left font-mono\">\n                            {dealData.stockNumber || deal.id.replace('D', 'S')}\n                          </td>\n                          <td className=\"py-2 px-2 text-center text-gray-600\">{formattedDate}</td>\n                          <td className=\"py-2 px-2 text-left font-mono text-xs\">\n                            {deal.vin ? `...${deal.vin.slice(-8)}` : dealData.vinLast8 || 'N/A'}\n                          </td>\n                          <td className=\"py-2 px-2 text-center\">\n                            <span\n                              className={`px-1.5 py-0.5 rounded text-xs font-medium ${\n                                vehicleType === 'N'\n                                  ? 'bg-green-100 text-green-800'\n                                  : vehicleType === 'C'\n                                  ? 'bg-blue-100 text-blue-800'\n                                  : 'bg-amber-100 text-amber-800'\n                              }`}\n                            >\n                              {vehicleType}\n                            </span>\n                          </td>\n                          <td className=\"py-2 px-2 text-left\">{dealData.lender || 'N/A'}</td>\n                          <td className=\"py-2 px-2 text-right bg-blue-50 font-medium\">\n                            $\n                            {(\n                              dealData.frontEndGross || Math.round(deal.amount * 0.7)\n                            ).toLocaleString()}\n                          </td>\n                          <td className=\"py-2 px-2 text-right bg-teal-50\">\n                            ${vscProfit.toLocaleString()}\n                          </td>\n                          <td className=\"py-2 px-2 text-right bg-purple-50\">\n                            ${ppmProfit.toLocaleString()}\n                          </td>\n                          <td className=\"py-2 px-2 text-right bg-green-50\">\n                            ${gapProfit.toLocaleString()}\n                          </td>\n                          <td className=\"py-2 px-2 text-right bg-amber-50\">\n                            ${twProfit.toLocaleString()}\n                          </td>\n                          <td className=\"py-2 px-2 text-center bg-pink-50 font-medium\">{ppd}</td>\n                          <td className=\"py-2 px-2 text-right bg-purple-50\">\n                            ${pvr.toLocaleString()}\n                          </td>\n                          <td className=\"py-2 px-2 text-right font-medium text-green-600\">\n                            ${deal.profit.toLocaleString()}\n                          </td>\n                          <td className=\"py-2 px-2 text-center\">\n                            <select\n                              value={status}\n                              onChange={e => handleStatusChange(deal.id, e.target.value)}\n                              className={`text-xs px-2 py-1 rounded border-0 focus:ring-1 focus:ring-blue-500 ${statusColor}`}\n                            >\n                              <option value=\"Pending\">Pending</option>\n                              <option value=\"Funded\">Funded</option>\n                              <option value=\"Unwound\">Unwound</option>\n                              <option value=\"Dead Deal\">Dead Deal</option>\n                            </select>\n                          </td>\n                          <td className=\"py-2 px-2 text-center\">\n                            <input\n                              type=\"checkbox\"\n                              onChange={e => handleDeleteDeal(deal.id, e.target.checked)}\n                              className=\"h-4 w-4 text-red-600 focus:ring-red-500 border-gray-300 rounded\"\n                            />\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                  <tfoot>\n                    <tr className=\"bg-gray-100 border-t border-t-gray-200 font-medium\">\n                      <td colSpan={9} className=\"py-2 pl-4 text-left\">\n                        TOTALS\n                      </td>\n                      <td className=\"py-2 px-2 text-right bg-teal-50\">\n                        $\n                        {deals\n                          .slice(0, 10)\n                          .reduce((sum, deal) => {\n                            const dealData = deal as any;\n                            const vscProfit =\n                              typeof dealData.vscProfit === 'number'\n                                ? dealData.vscProfit\n                                : parseFloat(dealData.vscProfit) ||\n                                  (deal.products.includes('Extended Warranty') ||\n                                  deal.products.includes('Vehicle Service Contract (VSC)')\n                                    ? Math.round(deal.profit * 0.35)\n                                    : 0);\n                            return sum + vscProfit;\n                          }, 0)\n                          .toLocaleString()}\n                      </td>\n                      <td className=\"py-2 px-2 text-right bg-purple-50\">\n                        $\n                        {deals\n                          .slice(0, 10)\n                          .reduce((sum, deal) => {\n                            const dealData = deal as any;\n                            const ppmProfit =\n                              typeof dealData.ppmProfit === 'number'\n                                ? dealData.ppmProfit\n                                : parseFloat(dealData.ppmProfit) ||\n                                  (deal.products.includes('Paint Protection') ||\n                                  deal.products.includes('Paint and Fabric Protection') ||\n                                  deal.products.includes('PPM') ||\n                                  deal.products.includes('PrePaid Maintenance (PPM)')\n                                    ? Math.round(deal.profit * 0.2)\n                                    : 0);\n                            return sum + ppmProfit;\n                          }, 0)\n                          .toLocaleString()}\n                      </td>\n                      <td className=\"py-2 px-2 text-right bg-green-50\">\n                        $\n                        {deals\n                          .slice(0, 10)\n                          .reduce((sum, deal) => {\n                            const dealData = deal as any;\n                            const gapProfit =\n                              typeof dealData.gapProfit === 'number'\n                                ? dealData.gapProfit\n                                : parseFloat(dealData.gapProfit) ||\n                                  (deal.products.includes('GAP Insurance')\n                                    ? Math.round(deal.profit * 0.25)\n                                    : 0);\n                            return sum + gapProfit;\n                          }, 0)\n                          .toLocaleString()}\n                      </td>\n                      <td className=\"py-2 px-2 text-right bg-amber-50\">\n                        $\n                        {deals\n                          .slice(0, 10)\n                          .reduce((sum, deal) => {\n                            const dealData = deal as any;\n                            const twProfit =\n                              typeof dealData.tireAndWheelProfit === 'number'\n                                ? dealData.tireAndWheelProfit\n                                : parseFloat(dealData.tireAndWheelProfit) ||\n                                  (deal.products.includes('Tire & Wheel') ||\n                                  deal.products.includes('Tire & Wheel Bundle')\n                                    ? Math.round(deal.profit * 0.2)\n                                    : 0);\n                            return sum + twProfit;\n                          }, 0)\n                          .toLocaleString()}\n                      </td>\n                      <td className=\"py-2 px-2 text-center bg-pink-50\">\n                        {(\n                          deals.slice(0, 10).reduce((sum, deal) => sum + deal.products.length, 0) /\n                          Math.max(1, deals.slice(0, 10).length)\n                        ).toFixed(1)}\n                      </td>\n                      <td className=\"py-2 px-2 text-right bg-purple-50\">\n                        $\n                        {Math.round(\n                          deals.slice(0, 10).reduce((sum, deal) => sum + deal.profit, 0) /\n                            Math.max(1, deals.slice(0, 10).length)\n                        ).toLocaleString()}\n                      </td>\n                      <td className=\"py-2 px-2 text-right font-medium text-green-600\">\n                        $\n                        {deals\n                          .slice(0, 10)\n                          .reduce((sum, deal) => sum + deal.profit, 0)\n                          .toLocaleString()}\n                      </td>\n                      <td className=\"py-2 px-2\"></td>\n                      <td className=\"py-2 px-2\"></td>\n                    </tr>\n                  </tfoot>\n                </table>\n              </div>\n            ) : (\n              <div className=\"py-8 text-center text-gray-500\">\n                No deals logged yet. Use the \"Log New Deal\" button to add deals.\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Pay Tracker and Goal Tracker Row */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mt-6\">\n          {/* Pay Tracker */}\n          <Card className=\"border hover:shadow-md transition-shadow\">\n            <CardHeader className=\"pb-2 border-b bg-gradient-to-r from-green-400 to-teal-500\">\n              <CardTitle className=\"text-lg font-medium flex items-center text-white\">\n                <Calculator className=\"mr-2 h-5 w-5 text-white\" />\n                Pay Tracker\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"pt-4\">\n              <div className=\"flex items-center justify-center mb-3\">\n                <div className=\"text-center\">\n                  <div className=\"text-3xl font-bold text-green-600\">\n                    ${Math.round(metrics.mtdRevenue * 0.25).toLocaleString()}\n                  </div>\n                  <div className=\"text-xs text-gray-500 mt-1\">Month-to-Date Earnings</div>\n                </div>\n              </div>\n\n              <div className=\"space-y-2 mt-2\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-xs text-gray-600\">Base Commission (25%)</span>\n                  <span className=\"text-xs font-medium\">\n                    ${Math.round(metrics.mtdRevenue * 0.25).toLocaleString()}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-xs text-gray-600\">Volume Bonus</span>\n                  <span className=\"text-xs font-medium\">\n                    ${metrics.dealsProcessed >= 20 ? '500' : '0'}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-xs text-gray-600\">PPD Bonus</span>\n                  <span className=\"text-xs font-medium\">\n                    ${metrics.productsPerDeal >= 2.5 ? '300' : '0'}\n                  </span>\n                </div>\n                <div className=\"pt-2 border-t\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-xs font-semibold text-gray-700\">\n                      Potential Monthly Total\n                    </span>\n                    <span className=\"text-xs font-bold text-green-600\">\n                      $\n                      {Math.round(\n                        metrics.mtdRevenue * 0.25 * 2.2 +\n                          (metrics.dealsProcessed >= 20 ? 500 : 0) +\n                          (metrics.productsPerDeal >= 2.5 ? 300 : 0)\n                      ).toLocaleString()}\n                    </span>\n                  </div>\n                  {(metrics.dealsProcessed >= 20 || metrics.productsPerDeal >= 2.5) && (\n                    <div className=\"text-xs text-green-600 mt-1 font-medium\">\n                      {metrics.dealsProcessed >= 20 && 'Volume bonus earned! '}\n                      {metrics.productsPerDeal >= 2.5 && 'PPD bonus earned!'}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"mt-3 pt-2 border-t\">\n                <p className=\"text-[10px] text-gray-400 italic\">\n                  <strong>Disclaimer:</strong> These figures are estimates only and not actual\n                  earnings. Final compensation may vary based on dealership policies and deal\n                  structures.\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Goal Tracker */}\n          <Card className=\"border hover:shadow-md transition-shadow\">\n            <CardHeader className=\"pb-2 border-b\">\n              <div className=\"flex justify-between items-center\">\n                <CardTitle className=\"text-lg font-medium flex items-center\">\n                  <Target className=\"mr-2 h-5 w-5 text-blue-600\" />\n                  Goal Tracker\n                </CardTitle>\n                <Badge variant=\"outline\" className=\"text-xs\">\n                  {Math.round((metrics.dealsProcessed / 25) * 100)}% Complete\n                </Badge>\n              </div>\n            </CardHeader>\n            <CardContent className=\"pt-4\">\n              <div className=\"space-y-4\">\n                {/* Deals Progress */}\n                <div>\n                  <div className=\"flex justify-between items-center mb-2\">\n                    <span className=\"text-sm font-medium\">Monthly Deals</span>\n                    <span className=\"text-sm text-gray-600\">{metrics.dealsProcessed} / 25</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div\n                      className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n                      style={{ width: `${Math.min(100, (metrics.dealsProcessed / 25) * 100)}%` }}\n                    ></div>\n                  </div>\n                </div>\n\n                {/* PPD Progress */}\n                <div>\n                  <div className=\"flex justify-between items-center mb-2\">\n                    <span className=\"text-sm font-medium\">Products Per Deal</span>\n                    <span className=\"text-sm text-gray-600\">{metrics.productsPerDeal} / 2.5</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div\n                      className=\"bg-purple-600 h-2 rounded-full transition-all duration-300\"\n                      style={{ width: `${Math.min(100, (metrics.productsPerDeal / 2.5) * 100)}%` }}\n                    ></div>\n                  </div>\n                </div>\n\n                {/* PVR Progress */}\n                <div>\n                  <div className=\"flex justify-between items-center mb-2\">\n                    <span className=\"text-sm font-medium\">Per Vehicle Retail</span>\n                    <span className=\"text-sm text-gray-600\">${metrics.pvr} / $1,500</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div\n                      className=\"bg-green-600 h-2 rounded-full transition-all duration-300\"\n                      style={{ width: `${Math.min(100, (metrics.pvr / 1500) * 100)}%` }}\n                    ></div>\n                  </div>\n                </div>\n\n                {/* Status Summary */}\n                <div className=\"pt-3 border-t\">\n                  <div className=\"text-center\">\n                    {metrics.dealsProcessed >= 25 &&\n                    metrics.productsPerDeal >= 2.5 &&\n                    metrics.pvr >= 1500 ? (\n                      <div className=\"text-green-600 font-medium text-sm\">\n                        🎉 All goals achieved!\n                      </div>\n                    ) : (\n                      <div className=\"text-gray-600 text-sm\">\n                        {25 - metrics.dealsProcessed > 0 &&\n                          `${25 - metrics.dealsProcessed} more deals needed`}\n                        {metrics.productsPerDeal < 2.5 && metrics.dealsProcessed < 25 && ' • '}\n                        {metrics.productsPerDeal < 2.5 &&\n                          `PPD needs ${(2.5 - metrics.productsPerDeal).toFixed(1)} improvement`}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default FinanceHomePage;\n","import * as React from 'react';\r\nimport { cva, type VariantProps } from 'class-variance-authority';\r\nimport { cn } from '../../lib/utils';\r\n\r\nconst badgeVariants = cva(\r\n  'inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: 'border-transparent bg-primary text-primary-foreground hover:bg-primary/80',\r\n        secondary:\r\n          'border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80',\r\n        destructive:\r\n          'border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80',\r\n        outline: 'text-foreground',\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: 'default',\r\n    },\r\n  }\r\n);\r\n\r\nexport interface BadgeProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof badgeVariants> {}\r\n\r\nfunction Badge({ className, variant, ...props }: BadgeProps) {\r\n  return <div className={cn(badgeVariants({ variant }), className)} {...props} />;\r\n}\r\n\r\nexport { Badge, badgeVariants };\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardHeader, CardTitle, CardContent } from '../../components/ui/card';\r\nimport { Button } from '../../components/ui/button';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Search,\r\n  Filter,\r\n  ArrowUpDown,\r\n  FileEdit,\r\n  CheckCircle,\r\n  AlertCircle,\r\n  Clock,\r\n  ArrowLeft,\r\n} from 'lucide-react';\r\nimport { Input } from '../../components/ui/input';\r\nimport { Badge } from '../../components/ui/badge';\r\n\r\n// Interface for a deal\r\ninterface Deal {\r\n  id: string;\r\n  customer: string;\r\n  vehicle: string;\r\n  vin: string;\r\n  saleDate: string;\r\n  salesperson: string;\r\n  amount: number;\r\n  status: string;\r\n  products: string[];\r\n  profit: number;\r\n  created_at: string;\r\n}\r\n\r\nconst FinanceDealsPage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [deals, setDeals] = useState<Deal[]>([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [statusFilter, setStatusFilter] = useState('All');\r\n  const [sortField, setSortField] = useState('saleDate');\r\n  const [sortDirection, setSortDirection] = useState('desc');\r\n\r\n  // Handle status change for a deal\r\n  const handleStatusChange = (dealId: string, newStatus: string) => {\r\n    try {\r\n      // Get existing deals from localStorage\r\n      const existingDealsJson = localStorage.getItem('financeDeals');\r\n      const existingDeals = existingDealsJson ? JSON.parse(existingDealsJson) : [];\r\n\r\n      // Update the deal status\r\n      const updatedDeals = existingDeals.map((deal: any) =>\r\n        deal.id === dealId ? { ...deal, status: newStatus } : deal\r\n      );\r\n\r\n      // Save back to localStorage\r\n      localStorage.setItem('financeDeals', JSON.stringify(updatedDeals));\r\n\r\n      // Update local state\r\n      setDeals(updatedDeals);\r\n\r\n      console.log(`[FinanceDealsPage] Updated deal ${dealId} status to ${newStatus}`);\r\n    } catch (error) {\r\n      console.error('[FinanceDealsPage] Error updating deal status:', error);\r\n    }\r\n  };\r\n\r\n  // Handle deal deletion\r\n  const handleDeleteDeal = (dealId: string, shouldDelete: boolean) => {\r\n    if (!shouldDelete) return;\r\n\r\n    if (confirm('Are you sure you want to delete this deal? This action cannot be undone.')) {\r\n      try {\r\n        // Get existing deals from localStorage\r\n        const existingDealsJson = localStorage.getItem('financeDeals');\r\n        const existingDeals = existingDealsJson ? JSON.parse(existingDealsJson) : [];\r\n\r\n        // Remove the deal\r\n        const updatedDeals = existingDeals.filter((deal: any) => deal.id !== dealId);\r\n\r\n        // Save back to localStorage\r\n        localStorage.setItem('financeDeals', JSON.stringify(updatedDeals));\r\n\r\n        // Update local state\r\n        setDeals(updatedDeals);\r\n\r\n        console.log(`[FinanceDealsPage] Deleted deal ${dealId}`);\r\n      } catch (error) {\r\n        console.error('[FinanceDealsPage] Error deleting deal:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleBackToDashboard = () => {\r\n    navigate('/dashboard/finance');\r\n  };\r\n\r\n  // Load deals from localStorage\r\n  useEffect(() => {\r\n    try {\r\n      const storedDeals = localStorage.getItem('financeDeals');\r\n      if (storedDeals) {\r\n        const parsedDeals = JSON.parse(storedDeals);\r\n        setDeals(parsedDeals);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading deals from localStorage:', error);\r\n    }\r\n  }, []);\r\n\r\n  // Filter and sort deals\r\n  const filteredDeals = deals\r\n    .filter(deal => {\r\n      const matchesSearch =\r\n        deal.customer.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        deal.vehicle.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        deal.id.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        (deal.vin && deal.vin.toLowerCase().includes(searchTerm.toLowerCase()));\r\n\r\n      const matchesStatus = statusFilter === 'All' || deal.status === statusFilter;\r\n\r\n      return matchesSearch && matchesStatus;\r\n    })\r\n    .sort((a, b) => {\r\n      const fieldA = a[sortField as keyof typeof a];\r\n      const fieldB = b[sortField as keyof typeof b];\r\n\r\n      if (typeof fieldA === 'string' && typeof fieldB === 'string') {\r\n        return sortDirection === 'asc'\r\n          ? fieldA.localeCompare(fieldB)\r\n          : fieldB.localeCompare(fieldA);\r\n      } else if (typeof fieldA === 'number' && typeof fieldB === 'number') {\r\n        return sortDirection === 'asc' ? fieldA - fieldB : fieldB - fieldA;\r\n      }\r\n      return 0;\r\n    });\r\n\r\n  const toggleSort = (field: string) => {\r\n    if (sortField === field) {\r\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortField(field);\r\n      setSortDirection('asc');\r\n    }\r\n  };\r\n\r\n  const getStatusBadge = (status: string) => {\r\n    switch (status) {\r\n      case 'Complete':\r\n        return (\r\n          <Badge variant=\"outline\" className=\"bg-green-50 text-green-700 border-green-200\">\r\n            <CheckCircle className=\"w-3 h-3 mr-1\" /> {status}\r\n          </Badge>\r\n        );\r\n      case 'Bank Approval':\r\n      case 'Contract Review':\r\n      case 'Insurance Verification':\r\n        return (\r\n          <Badge variant=\"outline\" className=\"bg-amber-50 text-amber-700 border-amber-200\">\r\n            <Clock className=\"w-3 h-3 mr-1\" /> {status}\r\n          </Badge>\r\n        );\r\n      case 'Pending Documents':\r\n        return (\r\n          <Badge variant=\"outline\" className=\"bg-blue-50 text-blue-700 border-blue-200\">\r\n            <AlertCircle className=\"w-3 h-3 mr-1\" /> {status}\r\n          </Badge>\r\n        );\r\n      default:\r\n        return <Badge variant=\"outline\">{status}</Badge>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center mb-6\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleBackToDashboard}\r\n          className=\"mr-4 flex items-center px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n        >\r\n          <ArrowLeft className=\"w-4 h-4 mr-2\" />\r\n          Back to Dashboard\r\n        </button>\r\n        <h1 className=\"text-2xl font-bold text-gray-900\">Finance Deals</h1>\r\n      </div>\r\n\r\n      <div className=\"flex flex-col sm:flex-row justify-between gap-4 mb-6\">\r\n        <div className=\"relative flex-1\">\r\n          <Search\r\n            className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\"\r\n            size={16}\r\n          />\r\n          <Input\r\n            placeholder=\"Search deals by customer, vehicle, ID, or VIN\"\r\n            className=\"pl-9 border-gray-300\"\r\n            value={searchTerm}\r\n            onChange={e => setSearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"flex gap-2\">\r\n          <div className=\"flex items-center gap-2 bg-white border border-gray-200 rounded-md px-2\">\r\n            <Filter size={16} className=\"text-gray-500\" />\r\n            <select\r\n              className=\"border-0 rounded p-2 text-sm focus:ring-0 focus:outline-none\"\r\n              value={statusFilter}\r\n              onChange={e => setStatusFilter(e.target.value)}\r\n            >\r\n              <option value=\"All\">All Statuses</option>\r\n              <option value=\"Bank Approval\">Bank Approval</option>\r\n              <option value=\"Pending Documents\">Pending Documents</option>\r\n              <option value=\"Contract Review\">Contract Review</option>\r\n              <option value=\"Insurance Verification\">Insurance Verification</option>\r\n              <option value=\"Complete\">Complete</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Card className=\"border hover:shadow-md transition-shadow\">\r\n        <CardContent className=\"p-0\">\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"w-full text-sm\">\r\n              <thead>\r\n                <tr className=\"text-xs\">\r\n                  <th className=\"font-medium text-white py-2 pl-3 text-center bg-gray-600 w-12\">\r\n                    #\r\n                  </th>\r\n                  <th className=\"font-medium text-white py-2 px-2 text-left bg-gray-600\">\r\n                    Last Name\r\n                  </th>\r\n                  <th className=\"font-medium text-white py-2 pl-4 pr-2 text-left bg-blue-600\">\r\n                    <button className=\"flex items-center\" onClick={() => toggleSort('id')}>\r\n                      Deal #\r\n                      {sortField === 'id' && <ArrowUpDown size={14} className=\"ml-1 text-white\" />}\r\n                    </button>\r\n                  </th>\r\n                  <th className=\"font-medium text-white py-2 px-2 text-left bg-gray-600\">\r\n                    Stock #\r\n                  </th>\r\n                  <th className=\"font-medium text-white py-2 px-2 text-center bg-gray-600\">\r\n                    <button className=\"flex items-center\" onClick={() => toggleSort('saleDate')}>\r\n                      Date\r\n                      {sortField === 'saleDate' && (\r\n                        <ArrowUpDown size={14} className=\"ml-1 text-white\" />\r\n                      )}\r\n                    </button>\r\n                  </th>\r\n                  <th className=\"font-medium text-white py-2 px-2 text-left bg-gray-600\">VIN</th>\r\n                  <th className=\"font-medium text-white py-2 px-2 text-center bg-indigo-600\">\r\n                    N/U/CPO\r\n                  </th>\r\n                  <th className=\"font-medium text-white py-2 px-2 text-left bg-gray-600\">Lender</th>\r\n                  <th className=\"font-medium text-white py-2 px-2 text-right bg-blue-600\">\r\n                    Front End\r\n                  </th>\r\n                  <th className=\"font-medium text-white py-2 px-2 text-right bg-teal-600\">VSC</th>\r\n                  <th className=\"font-medium text-white py-2 px-2 text-right bg-purple-600\">PPM</th>\r\n                  <th className=\"font-medium text-white py-2 px-2 text-right bg-green-600\">GAP</th>\r\n                  <th className=\"font-medium text-white py-2 px-2 text-right bg-amber-600\">\r\n                    T&W/Bundle\r\n                  </th>\r\n                  <th className=\"font-medium text-white py-2 px-2 text-center bg-pink-600\">PPD</th>\r\n                  <th className=\"font-medium text-white py-2 px-2 text-right bg-purple-600\">PVR</th>\r\n                  <th className=\"font-medium text-white py-2 px-2 text-right bg-green-600\">\r\n                    <button\r\n                      className=\"flex items-center justify-end ml-auto\"\r\n                      onClick={() => toggleSort('profit')}\r\n                    >\r\n                      Total\r\n                      {sortField === 'profit' && (\r\n                        <ArrowUpDown size={14} className=\"ml-1 text-white\" />\r\n                      )}\r\n                    </button>\r\n                  </th>\r\n                  <th className=\"font-medium text-white py-2 px-2 text-center bg-gray-600 w-20\">\r\n                    Status\r\n                  </th>\r\n                  <th className=\"font-medium text-white py-2 px-2 text-center bg-red-600 rounded-tr-md w-16\">\r\n                    Delete\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filteredDeals.length > 0 ? (\r\n                  filteredDeals.map((deal, index) => {\r\n                    // Get individual product profits from deal data or calculate from legacy data\r\n                    const dealData = deal as any; // Type assertion to access extended properties\r\n\r\n                    // Extract last name from customer\r\n                    const lastName = deal.customer.split(' ').pop() || '';\r\n\r\n                    // Format date for display - use actual deal date from form\r\n                    const actualDealDate = dealData.dealDate || deal.saleDate;\r\n                    const dealDate = new Date(actualDealDate);\r\n                    const formattedDate = dealDate.toLocaleDateString('en-US', {\r\n                      month: '2-digit',\r\n                      day: '2-digit',\r\n                      year: '2-digit',\r\n                    });\r\n\r\n                    // Determine if New, Used or CPO - use actual form data\r\n                    const vehicleType =\r\n                      dealData.vehicleType ||\r\n                      (deal.vehicle.toLowerCase().includes('new')\r\n                        ? 'N'\r\n                        : deal.vehicle.toLowerCase().includes('cpo')\r\n                        ? 'C'\r\n                        : 'U');\r\n\r\n                    // Get individual product profits - ensure we handle both number and string values\r\n                    const vscProfit =\r\n                      typeof dealData.vscProfit === 'number'\r\n                        ? dealData.vscProfit\r\n                        : parseFloat(dealData.vscProfit) ||\r\n                          (deal.products.includes('Extended Warranty') ||\r\n                          deal.products.includes('Vehicle Service Contract (VSC)')\r\n                            ? Math.round(deal.profit * 0.35)\r\n                            : 0);\r\n\r\n                    const ppmProfit =\r\n                      typeof dealData.ppmProfit === 'number'\r\n                        ? dealData.ppmProfit\r\n                        : parseFloat(dealData.ppmProfit) ||\r\n                          (deal.products.includes('Paint Protection') ||\r\n                          deal.products.includes('Paint and Fabric Protection') ||\r\n                          deal.products.includes('PPM') ||\r\n                          deal.products.includes('PrePaid Maintenance (PPM)')\r\n                            ? Math.round(deal.profit * 0.2)\r\n                            : 0);\r\n\r\n                    const gapProfit =\r\n                      typeof dealData.gapProfit === 'number'\r\n                        ? dealData.gapProfit\r\n                        : parseFloat(dealData.gapProfit) ||\r\n                          (deal.products.includes('GAP Insurance')\r\n                            ? Math.round(deal.profit * 0.25)\r\n                            : 0);\r\n\r\n                    const twProfit =\r\n                      typeof dealData.tireAndWheelProfit === 'number'\r\n                        ? dealData.tireAndWheelProfit\r\n                        : parseFloat(dealData.tireAndWheelProfit) ||\r\n                          (deal.products.includes('Tire & Wheel') ||\r\n                          deal.products.includes('Tire & Wheel Bundle')\r\n                            ? Math.round(deal.profit * 0.2)\r\n                            : 0);\r\n\r\n                    // Products per deal\r\n                    const ppd = deal.products.length;\r\n\r\n                    // PVR (per vehicle retailed) - using profit as estimation\r\n                    const pvr = Math.round(deal.profit / (ppd || 1));\r\n\r\n                    // Get status based on deal status or default to \"Pending\"\r\n                    const status =\r\n                      deal.status === 'Complete' || deal.status === 'Funded'\r\n                        ? 'Funded'\r\n                        : deal.status === 'Canceled' || deal.status === 'Unwound'\r\n                        ? 'Unwound'\r\n                        : deal.status === 'Dead Deal'\r\n                        ? 'Dead Deal'\r\n                        : 'Pending';\r\n\r\n                    // Status badge colors\r\n                    const statusColor =\r\n                      status === 'Funded'\r\n                        ? 'bg-green-100 text-green-800 border-green-200'\r\n                        : status === 'Unwound'\r\n                        ? 'bg-red-100 text-red-800 border-red-200'\r\n                        : status === 'Dead Deal'\r\n                        ? 'bg-gray-100 text-gray-800 border-gray-200'\r\n                        : 'bg-amber-100 text-amber-800 border-amber-200';\r\n\r\n                    return (\r\n                      <tr\r\n                        key={deal.id}\r\n                        className={`border-b ${\r\n                          index % 2 === 1 ? 'bg-gray-50' : ''\r\n                        } hover:bg-blue-50`}\r\n                      >\r\n                        <td className=\"py-2 px-2 text-center font-medium\">\r\n                          {filteredDeals.length - index}\r\n                        </td>\r\n                        <td className=\"py-2 px-2 text-left font-medium\">{lastName}</td>\r\n                        <td className=\"py-2 pl-4 pr-2 text-left font-medium text-blue-600\">\r\n                          {dealData.dealNumber || deal.id}\r\n                        </td>\r\n                        <td className=\"py-2 px-2 text-left font-mono\">\r\n                          {dealData.stockNumber || deal.id.replace('D', 'S')}\r\n                        </td>\r\n                        <td className=\"py-2 px-2 text-center text-gray-600\">{formattedDate}</td>\r\n                        <td className=\"py-2 px-2 text-left font-mono text-xs\">\r\n                          {deal.vin ? `...${deal.vin.slice(-8)}` : dealData.vinLast8 || 'N/A'}\r\n                        </td>\r\n                        <td className=\"py-2 px-2 text-center\">\r\n                          <span\r\n                            className={`px-1.5 py-0.5 rounded text-xs font-medium ${\r\n                              vehicleType === 'N'\r\n                                ? 'bg-green-100 text-green-800'\r\n                                : vehicleType === 'C'\r\n                                ? 'bg-blue-100 text-blue-800'\r\n                                : 'bg-amber-100 text-amber-800'\r\n                            }`}\r\n                          >\r\n                            {vehicleType}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"py-2 px-2 text-left\">{dealData.lender || 'N/A'}</td>\r\n                        <td className=\"py-2 px-2 text-right bg-blue-50 font-medium\">\r\n                          $\r\n                          {(\r\n                            dealData.frontEndGross || Math.round(deal.amount * 0.7)\r\n                          ).toLocaleString()}\r\n                        </td>\r\n                        <td className=\"py-2 px-2 text-right bg-teal-50\">\r\n                          ${vscProfit.toLocaleString()}\r\n                        </td>\r\n                        <td className=\"py-2 px-2 text-right bg-purple-50\">\r\n                          ${ppmProfit.toLocaleString()}\r\n                        </td>\r\n                        <td className=\"py-2 px-2 text-right bg-green-50\">\r\n                          ${gapProfit.toLocaleString()}\r\n                        </td>\r\n                        <td className=\"py-2 px-2 text-right bg-amber-50\">\r\n                          ${twProfit.toLocaleString()}\r\n                        </td>\r\n                        <td className=\"py-2 px-2 text-center bg-pink-50 font-medium\">{ppd}</td>\r\n                        <td className=\"py-2 px-2 text-right bg-purple-50\">\r\n                          ${pvr.toLocaleString()}\r\n                        </td>\r\n                        <td className=\"py-2 px-2 text-right font-medium text-green-600\">\r\n                          ${deal.profit.toLocaleString()}\r\n                        </td>\r\n                        <td className=\"py-2 px-2 text-center\">\r\n                          <select\r\n                            value={status}\r\n                            onChange={e => handleStatusChange(deal.id, e.target.value)}\r\n                            className={`text-xs px-2 py-1 rounded border-0 focus:ring-1 focus:ring-blue-500 ${statusColor}`}\r\n                          >\r\n                            <option value=\"Pending\">Pending</option>\r\n                            <option value=\"Funded\">Funded</option>\r\n                            <option value=\"Unwound\">Unwound</option>\r\n                            <option value=\"Dead Deal\">Dead Deal</option>\r\n                          </select>\r\n                        </td>\r\n                        <td className=\"py-2 px-2 text-center\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            onChange={e => handleDeleteDeal(deal.id, e.target.checked)}\r\n                            className=\"h-4 w-4 text-red-600 focus:ring-red-500 border-gray-300 rounded\"\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <tr>\r\n                    <td colSpan={18} className=\"py-10 text-center text-gray-500\">\r\n                      No deals match your filter criteria. Try adjusting your filters.\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <div className=\"flex justify-between items-center\">\r\n        <div className=\"text-sm text-gray-500\">\r\n          Showing {filteredDeals.length} of {deals.length} deals\r\n        </div>\r\n        <div className=\"flex gap-2\">\r\n          <Button variant=\"outline\" size=\"sm\">\r\n            Previous\r\n          </Button>\r\n          <Button variant=\"outline\" size=\"sm\">\r\n            Next\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinanceDealsPage;\r\n","import React, { useState } from 'react';\r\nimport { Card, CardHeader, CardTitle, CardContent } from '../../components/ui/card';\r\nimport { Button } from '../../components/ui/button';\r\nimport {\r\n  ChevronLeft,\r\n  ChevronRight,\r\n  Plus,\r\n  Clock,\r\n  User,\r\n  Calendar as CalendarIcon,\r\n} from 'lucide-react';\r\nimport { Badge } from '../../components/ui/badge';\r\n\r\n// Mock data for appointments\r\nconst APPOINTMENTS = [\r\n  {\r\n    id: 1,\r\n    customer: 'John Smith',\r\n    vehicle: '2024 Honda Accord',\r\n    time: '9:00 AM',\r\n    date: '2024-05-17',\r\n    status: 'Confirmed',\r\n    type: 'Final Document Signing',\r\n  },\r\n  {\r\n    id: 2,\r\n    customer: 'Sarah Wilson',\r\n    vehicle: '2023 Toyota Camry',\r\n    time: '10:30 AM',\r\n    date: '2024-05-17',\r\n    status: 'Confirmed',\r\n    type: 'Contract Review',\r\n  },\r\n  {\r\n    id: 3,\r\n    customer: 'Michael Brown',\r\n    vehicle: '2023 Nissan Rogue',\r\n    time: '1:00 PM',\r\n    date: '2024-05-17',\r\n    status: 'Pending',\r\n    type: 'Insurance Verification',\r\n  },\r\n  {\r\n    id: 4,\r\n    customer: 'Jessica Taylor',\r\n    vehicle: '2024 Subaru Outback',\r\n    time: '3:30 PM',\r\n    date: '2024-05-17',\r\n    status: 'Confirmed',\r\n    type: 'Final Document Signing',\r\n  },\r\n  {\r\n    id: 5,\r\n    customer: 'David Anderson',\r\n    vehicle: '2023 Mazda CX-5',\r\n    time: '11:00 AM',\r\n    date: '2024-05-18',\r\n    status: 'Confirmed',\r\n    type: 'Contract Review',\r\n  },\r\n  {\r\n    id: 6,\r\n    customer: 'Elizabeth Martin',\r\n    vehicle: '2024 Jeep Grand Cherokee',\r\n    time: '2:00 PM',\r\n    date: '2024-05-18',\r\n    status: 'Pending',\r\n    type: 'Final Document Signing',\r\n  },\r\n  {\r\n    id: 7,\r\n    customer: 'Robert Miller',\r\n    vehicle: '2024 Ford F-150',\r\n    time: '9:30 AM',\r\n    date: '2024-05-19',\r\n    status: 'Confirmed',\r\n    type: 'Insurance Verification',\r\n  },\r\n  {\r\n    id: 8,\r\n    customer: 'Jennifer Lee',\r\n    vehicle: '2023 Chevy Equinox',\r\n    time: '1:30 PM',\r\n    date: '2024-05-19',\r\n    status: 'Confirmed',\r\n    type: 'Contract Review',\r\n  },\r\n];\r\n\r\n// Generate calendar days\r\nconst generateCalendarDays = (year: number, month: number) => {\r\n  const firstDay = new Date(year, month, 1).getDay(); // 0 = Sunday\r\n  const daysInMonth = new Date(year, month + 1, 0).getDate();\r\n\r\n  // Create array for calendar\r\n  const days = [];\r\n\r\n  // Add empty cells for days before the first day of the month\r\n  for (let i = 0; i < firstDay; i++) {\r\n    days.push(null);\r\n  }\r\n\r\n  // Add days of the month\r\n  for (let i = 1; i <= daysInMonth; i++) {\r\n    days.push(i);\r\n  }\r\n\r\n  return days;\r\n};\r\n\r\nconst FinanceSchedulePage: React.FC = () => {\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\r\n\r\n  const year = currentDate.getFullYear();\r\n  const month = currentDate.getMonth();\r\n\r\n  const monthNames = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n\r\n  const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\n  const calendarDays = generateCalendarDays(year, month);\r\n\r\n  const prevMonth = () => {\r\n    setCurrentDate(new Date(year, month - 1, 1));\r\n  };\r\n\r\n  const nextMonth = () => {\r\n    setCurrentDate(new Date(year, month + 1, 1));\r\n  };\r\n\r\n  // Format date as YYYY-MM-DD for comparison\r\n  const formatDateForComparison = (year: number, month: number, day: number | null) => {\r\n    if (day === null) return '';\r\n    return `${year}-${String(month + 1).padStart(2, '0')}-${String(day).padStart(2, '0')}`;\r\n  };\r\n\r\n  // Filter appointments for selected date\r\n  const filteredAppointments = APPOINTMENTS.filter(app => app.date === selectedDate).sort(\r\n    (a, b) => {\r\n      // Sort by time\r\n      const timeA = new Date(`1970/01/01 ${a.time}`).getTime();\r\n      const timeB = new Date(`1970/01/01 ${b.time}`).getTime();\r\n      return timeA - timeB;\r\n    }\r\n  );\r\n\r\n  // Count appointments per day for the calendar\r\n  const appointmentsByDay = APPOINTMENTS.reduce((acc, appointment) => {\r\n    const date = appointment.date;\r\n    if (!acc[date]) {\r\n      acc[date] = 0;\r\n    }\r\n    acc[date]++;\r\n    return acc;\r\n  }, {} as Record<string, number>);\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <h2 className=\"text-2xl font-bold\">Finance Schedule</h2>\r\n        <Button>\r\n          <Plus className=\"mr-2 h-4 w-4\" />\r\n          New Appointment\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"grid gap-6 md:grid-cols-7 lg:grid-cols-12\">\r\n        {/* Calendar */}\r\n        <div className=\"md:col-span-3 lg:col-span-4\">\r\n          <Card>\r\n            <CardHeader className=\"pb-2\">\r\n              <div className=\"flex justify-between items-center\">\r\n                <Button variant=\"ghost\" onClick={prevMonth}>\r\n                  <ChevronLeft className=\"h-4 w-4\" />\r\n                </Button>\r\n                <CardTitle>\r\n                  {monthNames[month]} {year}\r\n                </CardTitle>\r\n                <Button variant=\"ghost\" onClick={nextMonth}>\r\n                  <ChevronRight className=\"h-4 w-4\" />\r\n                </Button>\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              {/* Days of Week */}\r\n              <div className=\"grid grid-cols-7 gap-1 text-center mb-2\">\r\n                {daysOfWeek.map(day => (\r\n                  <div key={day} className=\"text-xs font-medium text-gray-500\">\r\n                    {day}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              {/* Calendar Grid */}\r\n              <div className=\"grid grid-cols-7 gap-1\">\r\n                {calendarDays.map((day, index) => {\r\n                  const dateString = day ? formatDateForComparison(year, month, day) : '';\r\n                  const isCurrentDay = dateString === new Date().toISOString().split('T')[0];\r\n                  const isSelected = dateString === selectedDate;\r\n                  const appointmentCount = dateString ? appointmentsByDay[dateString] || 0 : 0;\r\n\r\n                  return (\r\n                    <div\r\n                      key={index}\r\n                      onClick={() =>\r\n                        day && setSelectedDate(formatDateForComparison(year, month, day))\r\n                      }\r\n                      className={`\r\n                        h-12 flex flex-col items-center justify-center rounded-md cursor-pointer text-sm\r\n                        ${isCurrentDay ? 'border border-blue-500' : ''}\r\n                        ${isSelected ? 'bg-blue-100' : day ? 'hover:bg-gray-100' : ''}\r\n                        ${!day ? 'text-gray-300' : ''}\r\n                      `}\r\n                    >\r\n                      {day && (\r\n                        <>\r\n                          <span>{day}</span>\r\n                          {appointmentCount > 0 && (\r\n                            <span className=\"text-xs px-1.5 py-0.5 bg-blue-500 text-white rounded-full mt-1\">\r\n                              {appointmentCount}\r\n                            </span>\r\n                          )}\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n\r\n        {/* Appointments */}\r\n        <div className=\"md:col-span-4 lg:col-span-8\">\r\n          <Card>\r\n            <CardHeader className=\"pb-2\">\r\n              <div className=\"flex justify-between items-center\">\r\n                <CardTitle>\r\n                  Appointments for{' '}\r\n                  {new Date(selectedDate).toLocaleDateString('en-US', {\r\n                    weekday: 'long',\r\n                    year: 'numeric',\r\n                    month: 'long',\r\n                    day: 'numeric',\r\n                  })}\r\n                </CardTitle>\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              {filteredAppointments.length === 0 ? (\r\n                <div className=\"text-center py-8 text-gray-500\">\r\n                  <CalendarIcon className=\"h-12 w-12 mx-auto mb-4 text-gray-300\" />\r\n                  <p>No appointments scheduled for this day.</p>\r\n                  <Button className=\"mt-4\" variant=\"outline\" size=\"sm\">\r\n                    <Plus className=\"mr-2 h-4 w-4\" />\r\n                    Add Appointment\r\n                  </Button>\r\n                </div>\r\n              ) : (\r\n                <div className=\"space-y-4\">\r\n                  {filteredAppointments.map(appointment => (\r\n                    <div\r\n                      key={appointment.id}\r\n                      className=\"border rounded-lg p-4 hover:bg-gray-50 transition-colors\"\r\n                    >\r\n                      <div className=\"flex items-start justify-between\">\r\n                        <div>\r\n                          <h3 className=\"font-medium\">{appointment.customer}</h3>\r\n                          <p className=\"text-sm text-gray-500\">{appointment.vehicle}</p>\r\n                          <div className=\"flex items-center mt-2 text-sm text-gray-500\">\r\n                            <Clock className=\"h-4 w-4 mr-1\" />\r\n                            {appointment.time}\r\n                            <span className=\"mx-2\">•</span>\r\n                            <Badge\r\n                              variant={appointment.status === 'Confirmed' ? 'default' : 'outline'}\r\n                            >\r\n                              {appointment.status}\r\n                            </Badge>\r\n                            <span className=\"mx-2\">•</span>\r\n                            {appointment.type}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"flex\">\r\n                          <Button variant=\"ghost\" size=\"sm\">\r\n                            Edit\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinanceSchedulePage;\r\n","import React, { useEffect, useState } from 'react';\nimport { Routes, Route, Link, Navigate, useLocation, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { Card, CardHeader, CardTitle, CardContent, CardFooter } from '../../components/ui/card';\nimport { Button } from '../../components/ui/button';\nimport {\n  DollarSign,\n  Calculator,\n  FileText,\n  TrendingUp,\n  PieChart,\n  Percent,\n  ChevronUp,\n  ChevronDown,\n  BarChart4,\n  CreditCard,\n  PlusCircle,\n  Lightbulb,\n} from 'lucide-react';\nimport FinanceHomePage from '../../pages/finance/FinanceHomePage';\nimport FinanceDealsPage from '../../pages/finance/FinanceDealsPage';\nimport FinanceSchedulePage from '../../pages/finance/FinanceSchedulePage';\nimport {\n  getDashboardData,\n  loadDealsFromStorage,\n  aggregateDealsForDashboard,\n} from '../../utils/dealMapper';\n\nconst FinanceDashboard = () => {\n  const { user, role, dealershipId } = useAuth();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const [timePeriod, setTimePeriod] = useState<string>('this-month');\n\n  useEffect(() => {\n    console.log('[FinanceDashboard] Rendering finance dashboard', {\n      userId: user?.id,\n      role,\n      dealershipId,\n      timestamp: new Date().toISOString(),\n      path: location.pathname,\n    });\n\n    // Cleanup function\n    return () => {\n      console.log('[FinanceDashboard] Unmounting finance dashboard');\n    };\n  }, [user, role, dealershipId, location.pathname]);\n\n  // Simple function to handle the \"Log New Deal\" button click\n  const handleLogNewDealClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    console.log('[FinanceDashboard] Log New Deal button clicked, navigating to /finance-deal-log');\n    navigate('/finance-deal-log'); // Navigate to the dedicated finance deal log route\n  };\n\n  // Helper to get the current month and year for display\n  const getPeriodLabel = (period: string): string => {\n    const today = new Date();\n    const month = today.toLocaleString('default', { month: 'long' });\n    const year = today.getFullYear();\n\n    switch (period) {\n      case 'this-month':\n        return `${month} ${year}`;\n      case 'last-month':\n        const lastMonth =\n          today.getMonth() === 0\n            ? 'December'\n            : new Date(today.getFullYear(), today.getMonth() - 1, 1).toLocaleString('default', {\n                month: 'long',\n              });\n        const lastMonthYear =\n          today.getMonth() === 0 ? today.getFullYear() - 1 : today.getFullYear();\n        return `${lastMonth} ${lastMonthYear}`;\n      case 'last-quarter':\n        const currentQuarter = Math.floor(today.getMonth() / 3);\n        return `Q${currentQuarter === 0 ? 4 : currentQuarter} ${\n          currentQuarter === 0 ? year - 1 : year\n        }`;\n      case 'ytd':\n        return `Year to Date ${year}`;\n      case 'last-year':\n        return `${year - 1}`;\n      default:\n        return `${month} ${year}`;\n    }\n  };\n\n  // Best practices tips for finance managers\n  const bestPractices = [\n    'Present every product to every customer every time - consistency is key.',\n    'Build value first, then discuss investment. Never start with the price.',\n    'Use customer-friendly language instead of industry jargon when explaining products.',\n    'Focus on protection and peace of mind, not just financial benefits.',\n    'Keep your menu presentation simple and visual for maximum effectiveness.',\n    'Digital menus increase compliance and provide a more professional presentation.',\n    'Always congratulate the customer on their vehicle purchase before starting your presentation.',\n    'Listen to customer concerns about products and address them specifically.',\n    \"Explain how each product benefits the customer's specific vehicle and usage patterns.\",\n  ];\n\n  return (\n    <div className=\"container py-4\">\n      {/* Dashboard header */}\n      <div className=\"flex justify-between items-start mb-6\">\n        <div className=\"flex-grow\">\n          <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-2\">\n            <div>\n              <h1 className=\"text-3xl font-bold\">Finance Manager Dashboard</h1>\n              <p className=\"text-gray-600 mt-1\">\n                Finance Manager: {user?.email?.split('@')[0] || 'Not Assigned'}\n              </p>\n            </div>\n\n            {/* Daily Finance Tip - Best Practices */}\n            <div className=\"bg-blue-50 p-2 rounded-md mt-2 md:mt-0 border border-blue-100 max-w-2xl\">\n              <p className=\"text-xs italic text-blue-800\">\n                <Lightbulb className=\"h-3 w-3 inline-block mr-1\" />\n                <strong>F&I Best Practice:</strong>{' '}\n                {bestPractices[new Date().getDay() % bestPractices.length]}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Month/Year and New Deal Button row */}\n      <div className=\"flex justify-between items-center mb-3\">\n        <div className=\"flex items-center\">\n          <h2 className=\"text-2xl font-bold mr-3\">{getPeriodLabel(timePeriod)}</h2>\n          <select\n            value={timePeriod}\n            onChange={e => setTimePeriod(e.target.value)}\n            className=\"p-2 border rounded-md shadow-sm\"\n          >\n            <option value=\"this-month\">This Month</option>\n            <option value=\"last-month\">Last Month</option>\n            <option value=\"last-quarter\">Last Quarter</option>\n            <option value=\"ytd\">Year to Date</option>\n            <option value=\"last-year\">Last Year</option>\n          </select>\n        </div>\n\n        <Button\n          size=\"lg\"\n          className=\"bg-orange-600 hover:bg-orange-700\"\n          onClick={handleLogNewDealClick}\n        >\n          <span className=\"flex items-center\">\n            <PlusCircle className=\"mr-2 h-5 w-5\" />\n            Log New Deal\n          </span>\n        </Button>\n      </div>\n\n      <Routes>\n        <Route path=\"/\" element={<FinanceHomePage />} />\n        <Route path=\"/deals\" element={<FinanceDealsPage />} />\n        <Route path=\"/schedule\" element={<FinanceSchedulePage />} />\n        <Route path=\"*\" element={<Navigate to=\"/dashboard/finance\" replace />} />\n      </Routes>\n    </div>\n  );\n};\n\n// Placeholder components for the routes\nfunction DealProfitTracker() {\n  return (\n    <Card className=\"p-6\">\n      <CardHeader>\n        <CardTitle>Deal Profit Tracker</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <p>The deal profit tracker feature is coming soon.</p>\n      </CardContent>\n    </Card>\n  );\n}\n\nfunction PayCalculator() {\n  return (\n    <Card className=\"p-6\">\n      <CardHeader>\n        <CardTitle>Pay Calculator</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <p>The pay calculator feature is coming soon.</p>\n      </CardContent>\n    </Card>\n  );\n}\n\nfunction ProductsPerformance() {\n  return (\n    <Card className=\"p-6\">\n      <CardHeader>\n        <CardTitle>Products Performance</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <p>The products performance feature is coming soon.</p>\n      </CardContent>\n    </Card>\n  );\n}\n\nfunction DealDocuments() {\n  return (\n    <Card className=\"p-6\">\n      <CardHeader>\n        <CardTitle>Deal Documents</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <p>The deal documents feature is coming soon.</p>\n      </CardContent>\n    </Card>\n  );\n}\n\nfunction PerformanceMetrics() {\n  return (\n    <Card className=\"p-6\">\n      <CardHeader>\n        <CardTitle>Performance Metrics</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <p>Performance metrics are coming soon.</p>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default FinanceDashboard;\n","import * as React from 'react';\r\nimport * as DialogPrimitive from '@radix-ui/react-dialog';\r\nimport { X } from 'lucide-react';\r\n\r\nimport { cn } from '../../lib/utils';\r\n\r\nconst Dialog = DialogPrimitive.Root;\r\n\r\nconst DialogTrigger = DialogPrimitive.Trigger;\r\n\r\nconst DialogPortal = DialogPrimitive.Portal;\r\n\r\nconst DialogClose = DialogPrimitive.Close;\r\n\r\nconst DialogOverlay = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Overlay\r\n    ref={ref}\r\n    className={cn(\r\n      'fixed inset-0 z-50 bg-background/80 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0',\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName;\r\n\r\nconst DialogContent = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\r\n>(({ className, children, ...props }, ref) => (\r\n  <DialogPortal>\r\n    <DialogOverlay />\r\n    <DialogPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        'fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg',\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\r\n        <X className=\"h-4 w-4\" />\r\n        <span className=\"sr-only\">Close</span>\r\n      </DialogPrimitive.Close>\r\n    </DialogPrimitive.Content>\r\n  </DialogPortal>\r\n));\r\nDialogContent.displayName = DialogPrimitive.Content.displayName;\r\n\r\nconst DialogHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div className={cn('flex flex-col space-y-1.5 text-center sm:text-left', className)} {...props} />\r\n);\r\nDialogHeader.displayName = 'DialogHeader';\r\n\r\nconst DialogFooter = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn('flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2', className)}\r\n    {...props}\r\n  />\r\n);\r\nDialogFooter.displayName = 'DialogFooter';\r\n\r\nconst DialogTitle = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Title\r\n    ref={ref}\r\n    className={cn('text-lg font-semibold leading-none tracking-tight', className)}\r\n    {...props}\r\n  />\r\n));\r\nDialogTitle.displayName = DialogPrimitive.Title.displayName;\r\n\r\nconst DialogDescription = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Description\r\n    ref={ref}\r\n    className={cn('text-sm text-muted-foreground', className)}\r\n    {...props}\r\n  />\r\n));\r\nDialogDescription.displayName = DialogPrimitive.Description.displayName;\r\n\r\nexport {\r\n  Dialog,\r\n  DialogPortal,\r\n  DialogOverlay,\r\n  DialogClose,\r\n  DialogTrigger,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogFooter,\r\n  DialogTitle,\r\n  DialogDescription,\r\n};\r\n","// packages/core/number/src/number.ts\nfunction clamp(value, [min, max]) {\n  return Math.min(max, Math.max(min, value));\n}\nexport {\n  clamp\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/use-previous/src/use-previous.tsx\nimport * as React from \"react\";\nfunction usePrevious(value) {\n  const ref = React.useRef({ value, previous: value });\n  return React.useMemo(() => {\n    if (ref.current.value !== value) {\n      ref.current.previous = ref.current.value;\n      ref.current.value = value;\n    }\n    return ref.current.previous;\n  }, [value]);\n}\nexport {\n  usePrevious\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// src/select.tsx\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { clamp } from \"@radix-ui/number\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { createCollection } from \"@radix-ui/react-collection\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useDirection } from \"@radix-ui/react-direction\";\nimport { DismissableLayer } from \"@radix-ui/react-dismissable-layer\";\nimport { useFocusGuards } from \"@radix-ui/react-focus-guards\";\nimport { FocusScope } from \"@radix-ui/react-focus-scope\";\nimport { useId } from \"@radix-ui/react-id\";\nimport * as PopperPrimitive from \"@radix-ui/react-popper\";\nimport { createPopperScope } from \"@radix-ui/react-popper\";\nimport { Portal as PortalPrimitive } from \"@radix-ui/react-portal\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { createSlot } from \"@radix-ui/react-slot\";\nimport { useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { usePrevious } from \"@radix-ui/react-use-previous\";\nimport { VISUALLY_HIDDEN_STYLES } from \"@radix-ui/react-visually-hidden\";\nimport { hideOthers } from \"aria-hidden\";\nimport { RemoveScroll } from \"react-remove-scroll\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar OPEN_KEYS = [\" \", \"Enter\", \"ArrowUp\", \"ArrowDown\"];\nvar SELECTION_KEYS = [\" \", \"Enter\"];\nvar SELECT_NAME = \"Select\";\nvar [Collection, useCollection, createCollectionScope] = createCollection(SELECT_NAME);\nvar [createSelectContext, createSelectScope] = createContextScope(SELECT_NAME, [\n  createCollectionScope,\n  createPopperScope\n]);\nvar usePopperScope = createPopperScope();\nvar [SelectProvider, useSelectContext] = createSelectContext(SELECT_NAME);\nvar [SelectNativeOptionsProvider, useSelectNativeOptionsContext] = createSelectContext(SELECT_NAME);\nvar Select = (props) => {\n  const {\n    __scopeSelect,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    value: valueProp,\n    defaultValue,\n    onValueChange,\n    dir,\n    name,\n    autoComplete,\n    disabled,\n    required,\n    form\n  } = props;\n  const popperScope = usePopperScope(__scopeSelect);\n  const [trigger, setTrigger] = React.useState(null);\n  const [valueNode, setValueNode] = React.useState(null);\n  const [valueNodeHasChildren, setValueNodeHasChildren] = React.useState(false);\n  const direction = useDirection(dir);\n  const [open, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen ?? false,\n    onChange: onOpenChange,\n    caller: SELECT_NAME\n  });\n  const [value, setValue] = useControllableState({\n    prop: valueProp,\n    defaultProp: defaultValue,\n    onChange: onValueChange,\n    caller: SELECT_NAME\n  });\n  const triggerPointerDownPosRef = React.useRef(null);\n  const isFormControl = trigger ? form || !!trigger.closest(\"form\") : true;\n  const [nativeOptionsSet, setNativeOptionsSet] = React.useState(/* @__PURE__ */ new Set());\n  const nativeSelectKey = Array.from(nativeOptionsSet).map((option) => option.props.value).join(\";\");\n  return /* @__PURE__ */ jsx(PopperPrimitive.Root, { ...popperScope, children: /* @__PURE__ */ jsxs(\n    SelectProvider,\n    {\n      required,\n      scope: __scopeSelect,\n      trigger,\n      onTriggerChange: setTrigger,\n      valueNode,\n      onValueNodeChange: setValueNode,\n      valueNodeHasChildren,\n      onValueNodeHasChildrenChange: setValueNodeHasChildren,\n      contentId: useId(),\n      value,\n      onValueChange: setValue,\n      open,\n      onOpenChange: setOpen,\n      dir: direction,\n      triggerPointerDownPosRef,\n      disabled,\n      children: [\n        /* @__PURE__ */ jsx(Collection.Provider, { scope: __scopeSelect, children: /* @__PURE__ */ jsx(\n          SelectNativeOptionsProvider,\n          {\n            scope: props.__scopeSelect,\n            onNativeOptionAdd: React.useCallback((option) => {\n              setNativeOptionsSet((prev) => new Set(prev).add(option));\n            }, []),\n            onNativeOptionRemove: React.useCallback((option) => {\n              setNativeOptionsSet((prev) => {\n                const optionsSet = new Set(prev);\n                optionsSet.delete(option);\n                return optionsSet;\n              });\n            }, []),\n            children\n          }\n        ) }),\n        isFormControl ? /* @__PURE__ */ jsxs(\n          SelectBubbleInput,\n          {\n            \"aria-hidden\": true,\n            required,\n            tabIndex: -1,\n            name,\n            autoComplete,\n            value,\n            onChange: (event) => setValue(event.target.value),\n            disabled,\n            form,\n            children: [\n              value === void 0 ? /* @__PURE__ */ jsx(\"option\", { value: \"\" }) : null,\n              Array.from(nativeOptionsSet)\n            ]\n          },\n          nativeSelectKey\n        ) : null\n      ]\n    }\n  ) });\n};\nSelect.displayName = SELECT_NAME;\nvar TRIGGER_NAME = \"SelectTrigger\";\nvar SelectTrigger = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSelect, disabled = false, ...triggerProps } = props;\n    const popperScope = usePopperScope(__scopeSelect);\n    const context = useSelectContext(TRIGGER_NAME, __scopeSelect);\n    const isDisabled = context.disabled || disabled;\n    const composedRefs = useComposedRefs(forwardedRef, context.onTriggerChange);\n    const getItems = useCollection(__scopeSelect);\n    const pointerTypeRef = React.useRef(\"touch\");\n    const [searchRef, handleTypeaheadSearch, resetTypeahead] = useTypeaheadSearch((search) => {\n      const enabledItems = getItems().filter((item) => !item.disabled);\n      const currentItem = enabledItems.find((item) => item.value === context.value);\n      const nextItem = findNextItem(enabledItems, search, currentItem);\n      if (nextItem !== void 0) {\n        context.onValueChange(nextItem.value);\n      }\n    });\n    const handleOpen = (pointerEvent) => {\n      if (!isDisabled) {\n        context.onOpenChange(true);\n        resetTypeahead();\n      }\n      if (pointerEvent) {\n        context.triggerPointerDownPosRef.current = {\n          x: Math.round(pointerEvent.pageX),\n          y: Math.round(pointerEvent.pageY)\n        };\n      }\n    };\n    return /* @__PURE__ */ jsx(PopperPrimitive.Anchor, { asChild: true, ...popperScope, children: /* @__PURE__ */ jsx(\n      Primitive.button,\n      {\n        type: \"button\",\n        role: \"combobox\",\n        \"aria-controls\": context.contentId,\n        \"aria-expanded\": context.open,\n        \"aria-required\": context.required,\n        \"aria-autocomplete\": \"none\",\n        dir: context.dir,\n        \"data-state\": context.open ? \"open\" : \"closed\",\n        disabled: isDisabled,\n        \"data-disabled\": isDisabled ? \"\" : void 0,\n        \"data-placeholder\": shouldShowPlaceholder(context.value) ? \"\" : void 0,\n        ...triggerProps,\n        ref: composedRefs,\n        onClick: composeEventHandlers(triggerProps.onClick, (event) => {\n          event.currentTarget.focus();\n          if (pointerTypeRef.current !== \"mouse\") {\n            handleOpen(event);\n          }\n        }),\n        onPointerDown: composeEventHandlers(triggerProps.onPointerDown, (event) => {\n          pointerTypeRef.current = event.pointerType;\n          const target = event.target;\n          if (target.hasPointerCapture(event.pointerId)) {\n            target.releasePointerCapture(event.pointerId);\n          }\n          if (event.button === 0 && event.ctrlKey === false && event.pointerType === \"mouse\") {\n            handleOpen(event);\n            event.preventDefault();\n          }\n        }),\n        onKeyDown: composeEventHandlers(triggerProps.onKeyDown, (event) => {\n          const isTypingAhead = searchRef.current !== \"\";\n          const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n          if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);\n          if (isTypingAhead && event.key === \" \") return;\n          if (OPEN_KEYS.includes(event.key)) {\n            handleOpen();\n            event.preventDefault();\n          }\n        })\n      }\n    ) });\n  }\n);\nSelectTrigger.displayName = TRIGGER_NAME;\nvar VALUE_NAME = \"SelectValue\";\nvar SelectValue = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSelect, className, style, children, placeholder = \"\", ...valueProps } = props;\n    const context = useSelectContext(VALUE_NAME, __scopeSelect);\n    const { onValueNodeHasChildrenChange } = context;\n    const hasChildren = children !== void 0;\n    const composedRefs = useComposedRefs(forwardedRef, context.onValueNodeChange);\n    useLayoutEffect(() => {\n      onValueNodeHasChildrenChange(hasChildren);\n    }, [onValueNodeHasChildrenChange, hasChildren]);\n    return /* @__PURE__ */ jsx(\n      Primitive.span,\n      {\n        ...valueProps,\n        ref: composedRefs,\n        style: { pointerEvents: \"none\" },\n        children: shouldShowPlaceholder(context.value) ? /* @__PURE__ */ jsx(Fragment, { children: placeholder }) : children\n      }\n    );\n  }\n);\nSelectValue.displayName = VALUE_NAME;\nvar ICON_NAME = \"SelectIcon\";\nvar SelectIcon = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSelect, children, ...iconProps } = props;\n    return /* @__PURE__ */ jsx(Primitive.span, { \"aria-hidden\": true, ...iconProps, ref: forwardedRef, children: children || \"\\u25BC\" });\n  }\n);\nSelectIcon.displayName = ICON_NAME;\nvar PORTAL_NAME = \"SelectPortal\";\nvar SelectPortal = (props) => {\n  return /* @__PURE__ */ jsx(PortalPrimitive, { asChild: true, ...props });\n};\nSelectPortal.displayName = PORTAL_NAME;\nvar CONTENT_NAME = \"SelectContent\";\nvar SelectContent = React.forwardRef(\n  (props, forwardedRef) => {\n    const context = useSelectContext(CONTENT_NAME, props.__scopeSelect);\n    const [fragment, setFragment] = React.useState();\n    useLayoutEffect(() => {\n      setFragment(new DocumentFragment());\n    }, []);\n    if (!context.open) {\n      const frag = fragment;\n      return frag ? ReactDOM.createPortal(\n        /* @__PURE__ */ jsx(SelectContentProvider, { scope: props.__scopeSelect, children: /* @__PURE__ */ jsx(Collection.Slot, { scope: props.__scopeSelect, children: /* @__PURE__ */ jsx(\"div\", { children: props.children }) }) }),\n        frag\n      ) : null;\n    }\n    return /* @__PURE__ */ jsx(SelectContentImpl, { ...props, ref: forwardedRef });\n  }\n);\nSelectContent.displayName = CONTENT_NAME;\nvar CONTENT_MARGIN = 10;\nvar [SelectContentProvider, useSelectContentContext] = createSelectContext(CONTENT_NAME);\nvar CONTENT_IMPL_NAME = \"SelectContentImpl\";\nvar Slot = createSlot(\"SelectContent.RemoveScroll\");\nvar SelectContentImpl = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeSelect,\n      position = \"item-aligned\",\n      onCloseAutoFocus,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      //\n      // PopperContent props\n      side,\n      sideOffset,\n      align,\n      alignOffset,\n      arrowPadding,\n      collisionBoundary,\n      collisionPadding,\n      sticky,\n      hideWhenDetached,\n      avoidCollisions,\n      //\n      ...contentProps\n    } = props;\n    const context = useSelectContext(CONTENT_NAME, __scopeSelect);\n    const [content, setContent] = React.useState(null);\n    const [viewport, setViewport] = React.useState(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n    const [selectedItem, setSelectedItem] = React.useState(null);\n    const [selectedItemText, setSelectedItemText] = React.useState(\n      null\n    );\n    const getItems = useCollection(__scopeSelect);\n    const [isPositioned, setIsPositioned] = React.useState(false);\n    const firstValidItemFoundRef = React.useRef(false);\n    React.useEffect(() => {\n      if (content) return hideOthers(content);\n    }, [content]);\n    useFocusGuards();\n    const focusFirst = React.useCallback(\n      (candidates) => {\n        const [firstItem, ...restItems] = getItems().map((item) => item.ref.current);\n        const [lastItem] = restItems.slice(-1);\n        const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n        for (const candidate of candidates) {\n          if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n          candidate?.scrollIntoView({ block: \"nearest\" });\n          if (candidate === firstItem && viewport) viewport.scrollTop = 0;\n          if (candidate === lastItem && viewport) viewport.scrollTop = viewport.scrollHeight;\n          candidate?.focus();\n          if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n        }\n      },\n      [getItems, viewport]\n    );\n    const focusSelectedItem = React.useCallback(\n      () => focusFirst([selectedItem, content]),\n      [focusFirst, selectedItem, content]\n    );\n    React.useEffect(() => {\n      if (isPositioned) {\n        focusSelectedItem();\n      }\n    }, [isPositioned, focusSelectedItem]);\n    const { onOpenChange, triggerPointerDownPosRef } = context;\n    React.useEffect(() => {\n      if (content) {\n        let pointerMoveDelta = { x: 0, y: 0 };\n        const handlePointerMove = (event) => {\n          pointerMoveDelta = {\n            x: Math.abs(Math.round(event.pageX) - (triggerPointerDownPosRef.current?.x ?? 0)),\n            y: Math.abs(Math.round(event.pageY) - (triggerPointerDownPosRef.current?.y ?? 0))\n          };\n        };\n        const handlePointerUp = (event) => {\n          if (pointerMoveDelta.x <= 10 && pointerMoveDelta.y <= 10) {\n            event.preventDefault();\n          } else {\n            if (!content.contains(event.target)) {\n              onOpenChange(false);\n            }\n          }\n          document.removeEventListener(\"pointermove\", handlePointerMove);\n          triggerPointerDownPosRef.current = null;\n        };\n        if (triggerPointerDownPosRef.current !== null) {\n          document.addEventListener(\"pointermove\", handlePointerMove);\n          document.addEventListener(\"pointerup\", handlePointerUp, { capture: true, once: true });\n        }\n        return () => {\n          document.removeEventListener(\"pointermove\", handlePointerMove);\n          document.removeEventListener(\"pointerup\", handlePointerUp, { capture: true });\n        };\n      }\n    }, [content, onOpenChange, triggerPointerDownPosRef]);\n    React.useEffect(() => {\n      const close = () => onOpenChange(false);\n      window.addEventListener(\"blur\", close);\n      window.addEventListener(\"resize\", close);\n      return () => {\n        window.removeEventListener(\"blur\", close);\n        window.removeEventListener(\"resize\", close);\n      };\n    }, [onOpenChange]);\n    const [searchRef, handleTypeaheadSearch] = useTypeaheadSearch((search) => {\n      const enabledItems = getItems().filter((item) => !item.disabled);\n      const currentItem = enabledItems.find((item) => item.ref.current === document.activeElement);\n      const nextItem = findNextItem(enabledItems, search, currentItem);\n      if (nextItem) {\n        setTimeout(() => nextItem.ref.current.focus());\n      }\n    });\n    const itemRefCallback = React.useCallback(\n      (node, value, disabled) => {\n        const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;\n        const isSelectedItem = context.value !== void 0 && context.value === value;\n        if (isSelectedItem || isFirstValidItem) {\n          setSelectedItem(node);\n          if (isFirstValidItem) firstValidItemFoundRef.current = true;\n        }\n      },\n      [context.value]\n    );\n    const handleItemLeave = React.useCallback(() => content?.focus(), [content]);\n    const itemTextRefCallback = React.useCallback(\n      (node, value, disabled) => {\n        const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;\n        const isSelectedItem = context.value !== void 0 && context.value === value;\n        if (isSelectedItem || isFirstValidItem) {\n          setSelectedItemText(node);\n        }\n      },\n      [context.value]\n    );\n    const SelectPosition = position === \"popper\" ? SelectPopperPosition : SelectItemAlignedPosition;\n    const popperContentProps = SelectPosition === SelectPopperPosition ? {\n      side,\n      sideOffset,\n      align,\n      alignOffset,\n      arrowPadding,\n      collisionBoundary,\n      collisionPadding,\n      sticky,\n      hideWhenDetached,\n      avoidCollisions\n    } : {};\n    return /* @__PURE__ */ jsx(\n      SelectContentProvider,\n      {\n        scope: __scopeSelect,\n        content,\n        viewport,\n        onViewportChange: setViewport,\n        itemRefCallback,\n        selectedItem,\n        onItemLeave: handleItemLeave,\n        itemTextRefCallback,\n        focusSelectedItem,\n        selectedItemText,\n        position,\n        isPositioned,\n        searchRef,\n        children: /* @__PURE__ */ jsx(RemoveScroll, { as: Slot, allowPinchZoom: true, children: /* @__PURE__ */ jsx(\n          FocusScope,\n          {\n            asChild: true,\n            trapped: context.open,\n            onMountAutoFocus: (event) => {\n              event.preventDefault();\n            },\n            onUnmountAutoFocus: composeEventHandlers(onCloseAutoFocus, (event) => {\n              context.trigger?.focus({ preventScroll: true });\n              event.preventDefault();\n            }),\n            children: /* @__PURE__ */ jsx(\n              DismissableLayer,\n              {\n                asChild: true,\n                disableOutsidePointerEvents: true,\n                onEscapeKeyDown,\n                onPointerDownOutside,\n                onFocusOutside: (event) => event.preventDefault(),\n                onDismiss: () => context.onOpenChange(false),\n                children: /* @__PURE__ */ jsx(\n                  SelectPosition,\n                  {\n                    role: \"listbox\",\n                    id: context.contentId,\n                    \"data-state\": context.open ? \"open\" : \"closed\",\n                    dir: context.dir,\n                    onContextMenu: (event) => event.preventDefault(),\n                    ...contentProps,\n                    ...popperContentProps,\n                    onPlaced: () => setIsPositioned(true),\n                    ref: composedRefs,\n                    style: {\n                      // flex layout so we can place the scroll buttons properly\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      // reset the outline by default as the content MAY get focused\n                      outline: \"none\",\n                      ...contentProps.style\n                    },\n                    onKeyDown: composeEventHandlers(contentProps.onKeyDown, (event) => {\n                      const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n                      if (event.key === \"Tab\") event.preventDefault();\n                      if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);\n                      if ([\"ArrowUp\", \"ArrowDown\", \"Home\", \"End\"].includes(event.key)) {\n                        const items = getItems().filter((item) => !item.disabled);\n                        let candidateNodes = items.map((item) => item.ref.current);\n                        if ([\"ArrowUp\", \"End\"].includes(event.key)) {\n                          candidateNodes = candidateNodes.slice().reverse();\n                        }\n                        if ([\"ArrowUp\", \"ArrowDown\"].includes(event.key)) {\n                          const currentElement = event.target;\n                          const currentIndex = candidateNodes.indexOf(currentElement);\n                          candidateNodes = candidateNodes.slice(currentIndex + 1);\n                        }\n                        setTimeout(() => focusFirst(candidateNodes));\n                        event.preventDefault();\n                      }\n                    })\n                  }\n                )\n              }\n            )\n          }\n        ) })\n      }\n    );\n  }\n);\nSelectContentImpl.displayName = CONTENT_IMPL_NAME;\nvar ITEM_ALIGNED_POSITION_NAME = \"SelectItemAlignedPosition\";\nvar SelectItemAlignedPosition = React.forwardRef((props, forwardedRef) => {\n  const { __scopeSelect, onPlaced, ...popperProps } = props;\n  const context = useSelectContext(CONTENT_NAME, __scopeSelect);\n  const contentContext = useSelectContentContext(CONTENT_NAME, __scopeSelect);\n  const [contentWrapper, setContentWrapper] = React.useState(null);\n  const [content, setContent] = React.useState(null);\n  const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n  const getItems = useCollection(__scopeSelect);\n  const shouldExpandOnScrollRef = React.useRef(false);\n  const shouldRepositionRef = React.useRef(true);\n  const { viewport, selectedItem, selectedItemText, focusSelectedItem } = contentContext;\n  const position = React.useCallback(() => {\n    if (context.trigger && context.valueNode && contentWrapper && content && viewport && selectedItem && selectedItemText) {\n      const triggerRect = context.trigger.getBoundingClientRect();\n      const contentRect = content.getBoundingClientRect();\n      const valueNodeRect = context.valueNode.getBoundingClientRect();\n      const itemTextRect = selectedItemText.getBoundingClientRect();\n      if (context.dir !== \"rtl\") {\n        const itemTextOffset = itemTextRect.left - contentRect.left;\n        const left = valueNodeRect.left - itemTextOffset;\n        const leftDelta = triggerRect.left - left;\n        const minContentWidth = triggerRect.width + leftDelta;\n        const contentWidth = Math.max(minContentWidth, contentRect.width);\n        const rightEdge = window.innerWidth - CONTENT_MARGIN;\n        const clampedLeft = clamp(left, [\n          CONTENT_MARGIN,\n          // Prevents the content from going off the starting edge of the\n          // viewport. It may still go off the ending edge, but this can be\n          // controlled by the user since they may want to manage overflow in a\n          // specific way.\n          // https://github.com/radix-ui/primitives/issues/2049\n          Math.max(CONTENT_MARGIN, rightEdge - contentWidth)\n        ]);\n        contentWrapper.style.minWidth = minContentWidth + \"px\";\n        contentWrapper.style.left = clampedLeft + \"px\";\n      } else {\n        const itemTextOffset = contentRect.right - itemTextRect.right;\n        const right = window.innerWidth - valueNodeRect.right - itemTextOffset;\n        const rightDelta = window.innerWidth - triggerRect.right - right;\n        const minContentWidth = triggerRect.width + rightDelta;\n        const contentWidth = Math.max(minContentWidth, contentRect.width);\n        const leftEdge = window.innerWidth - CONTENT_MARGIN;\n        const clampedRight = clamp(right, [\n          CONTENT_MARGIN,\n          Math.max(CONTENT_MARGIN, leftEdge - contentWidth)\n        ]);\n        contentWrapper.style.minWidth = minContentWidth + \"px\";\n        contentWrapper.style.right = clampedRight + \"px\";\n      }\n      const items = getItems();\n      const availableHeight = window.innerHeight - CONTENT_MARGIN * 2;\n      const itemsHeight = viewport.scrollHeight;\n      const contentStyles = window.getComputedStyle(content);\n      const contentBorderTopWidth = parseInt(contentStyles.borderTopWidth, 10);\n      const contentPaddingTop = parseInt(contentStyles.paddingTop, 10);\n      const contentBorderBottomWidth = parseInt(contentStyles.borderBottomWidth, 10);\n      const contentPaddingBottom = parseInt(contentStyles.paddingBottom, 10);\n      const fullContentHeight = contentBorderTopWidth + contentPaddingTop + itemsHeight + contentPaddingBottom + contentBorderBottomWidth;\n      const minContentHeight = Math.min(selectedItem.offsetHeight * 5, fullContentHeight);\n      const viewportStyles = window.getComputedStyle(viewport);\n      const viewportPaddingTop = parseInt(viewportStyles.paddingTop, 10);\n      const viewportPaddingBottom = parseInt(viewportStyles.paddingBottom, 10);\n      const topEdgeToTriggerMiddle = triggerRect.top + triggerRect.height / 2 - CONTENT_MARGIN;\n      const triggerMiddleToBottomEdge = availableHeight - topEdgeToTriggerMiddle;\n      const selectedItemHalfHeight = selectedItem.offsetHeight / 2;\n      const itemOffsetMiddle = selectedItem.offsetTop + selectedItemHalfHeight;\n      const contentTopToItemMiddle = contentBorderTopWidth + contentPaddingTop + itemOffsetMiddle;\n      const itemMiddleToContentBottom = fullContentHeight - contentTopToItemMiddle;\n      const willAlignWithoutTopOverflow = contentTopToItemMiddle <= topEdgeToTriggerMiddle;\n      if (willAlignWithoutTopOverflow) {\n        const isLastItem = items.length > 0 && selectedItem === items[items.length - 1].ref.current;\n        contentWrapper.style.bottom = \"0px\";\n        const viewportOffsetBottom = content.clientHeight - viewport.offsetTop - viewport.offsetHeight;\n        const clampedTriggerMiddleToBottomEdge = Math.max(\n          triggerMiddleToBottomEdge,\n          selectedItemHalfHeight + // viewport might have padding bottom, include it to avoid a scrollable viewport\n          (isLastItem ? viewportPaddingBottom : 0) + viewportOffsetBottom + contentBorderBottomWidth\n        );\n        const height = contentTopToItemMiddle + clampedTriggerMiddleToBottomEdge;\n        contentWrapper.style.height = height + \"px\";\n      } else {\n        const isFirstItem = items.length > 0 && selectedItem === items[0].ref.current;\n        contentWrapper.style.top = \"0px\";\n        const clampedTopEdgeToTriggerMiddle = Math.max(\n          topEdgeToTriggerMiddle,\n          contentBorderTopWidth + viewport.offsetTop + // viewport might have padding top, include it to avoid a scrollable viewport\n          (isFirstItem ? viewportPaddingTop : 0) + selectedItemHalfHeight\n        );\n        const height = clampedTopEdgeToTriggerMiddle + itemMiddleToContentBottom;\n        contentWrapper.style.height = height + \"px\";\n        viewport.scrollTop = contentTopToItemMiddle - topEdgeToTriggerMiddle + viewport.offsetTop;\n      }\n      contentWrapper.style.margin = `${CONTENT_MARGIN}px 0`;\n      contentWrapper.style.minHeight = minContentHeight + \"px\";\n      contentWrapper.style.maxHeight = availableHeight + \"px\";\n      onPlaced?.();\n      requestAnimationFrame(() => shouldExpandOnScrollRef.current = true);\n    }\n  }, [\n    getItems,\n    context.trigger,\n    context.valueNode,\n    contentWrapper,\n    content,\n    viewport,\n    selectedItem,\n    selectedItemText,\n    context.dir,\n    onPlaced\n  ]);\n  useLayoutEffect(() => position(), [position]);\n  const [contentZIndex, setContentZIndex] = React.useState();\n  useLayoutEffect(() => {\n    if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n  }, [content]);\n  const handleScrollButtonChange = React.useCallback(\n    (node) => {\n      if (node && shouldRepositionRef.current === true) {\n        position();\n        focusSelectedItem?.();\n        shouldRepositionRef.current = false;\n      }\n    },\n    [position, focusSelectedItem]\n  );\n  return /* @__PURE__ */ jsx(\n    SelectViewportProvider,\n    {\n      scope: __scopeSelect,\n      contentWrapper,\n      shouldExpandOnScrollRef,\n      onScrollButtonChange: handleScrollButtonChange,\n      children: /* @__PURE__ */ jsx(\n        \"div\",\n        {\n          ref: setContentWrapper,\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            position: \"fixed\",\n            zIndex: contentZIndex\n          },\n          children: /* @__PURE__ */ jsx(\n            Primitive.div,\n            {\n              ...popperProps,\n              ref: composedRefs,\n              style: {\n                // When we get the height of the content, it includes borders. If we were to set\n                // the height without having `boxSizing: 'border-box'` it would be too big.\n                boxSizing: \"border-box\",\n                // We need to ensure the content doesn't get taller than the wrapper\n                maxHeight: \"100%\",\n                ...popperProps.style\n              }\n            }\n          )\n        }\n      )\n    }\n  );\n});\nSelectItemAlignedPosition.displayName = ITEM_ALIGNED_POSITION_NAME;\nvar POPPER_POSITION_NAME = \"SelectPopperPosition\";\nvar SelectPopperPosition = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeSelect,\n    align = \"start\",\n    collisionPadding = CONTENT_MARGIN,\n    ...popperProps\n  } = props;\n  const popperScope = usePopperScope(__scopeSelect);\n  return /* @__PURE__ */ jsx(\n    PopperPrimitive.Content,\n    {\n      ...popperScope,\n      ...popperProps,\n      ref: forwardedRef,\n      align,\n      collisionPadding,\n      style: {\n        // Ensure border-box for floating-ui calculations\n        boxSizing: \"border-box\",\n        ...popperProps.style,\n        // re-namespace exposed content custom properties\n        ...{\n          \"--radix-select-content-transform-origin\": \"var(--radix-popper-transform-origin)\",\n          \"--radix-select-content-available-width\": \"var(--radix-popper-available-width)\",\n          \"--radix-select-content-available-height\": \"var(--radix-popper-available-height)\",\n          \"--radix-select-trigger-width\": \"var(--radix-popper-anchor-width)\",\n          \"--radix-select-trigger-height\": \"var(--radix-popper-anchor-height)\"\n        }\n      }\n    }\n  );\n});\nSelectPopperPosition.displayName = POPPER_POSITION_NAME;\nvar [SelectViewportProvider, useSelectViewportContext] = createSelectContext(CONTENT_NAME, {});\nvar VIEWPORT_NAME = \"SelectViewport\";\nvar SelectViewport = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSelect, nonce, ...viewportProps } = props;\n    const contentContext = useSelectContentContext(VIEWPORT_NAME, __scopeSelect);\n    const viewportContext = useSelectViewportContext(VIEWPORT_NAME, __scopeSelect);\n    const composedRefs = useComposedRefs(forwardedRef, contentContext.onViewportChange);\n    const prevScrollTopRef = React.useRef(0);\n    return /* @__PURE__ */ jsxs(Fragment, { children: [\n      /* @__PURE__ */ jsx(\n        \"style\",\n        {\n          dangerouslySetInnerHTML: {\n            __html: `[data-radix-select-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-select-viewport]::-webkit-scrollbar{display:none}`\n          },\n          nonce\n        }\n      ),\n      /* @__PURE__ */ jsx(Collection.Slot, { scope: __scopeSelect, children: /* @__PURE__ */ jsx(\n        Primitive.div,\n        {\n          \"data-radix-select-viewport\": \"\",\n          role: \"presentation\",\n          ...viewportProps,\n          ref: composedRefs,\n          style: {\n            // we use position: 'relative' here on the `viewport` so that when we call\n            // `selectedItem.offsetTop` in calculations, the offset is relative to the viewport\n            // (independent of the scrollUpButton).\n            position: \"relative\",\n            flex: 1,\n            // Viewport should only be scrollable in the vertical direction.\n            // This won't work in vertical writing modes, so we'll need to\n            // revisit this if/when that is supported\n            // https://developer.chrome.com/blog/vertical-form-controls\n            overflow: \"hidden auto\",\n            ...viewportProps.style\n          },\n          onScroll: composeEventHandlers(viewportProps.onScroll, (event) => {\n            const viewport = event.currentTarget;\n            const { contentWrapper, shouldExpandOnScrollRef } = viewportContext;\n            if (shouldExpandOnScrollRef?.current && contentWrapper) {\n              const scrolledBy = Math.abs(prevScrollTopRef.current - viewport.scrollTop);\n              if (scrolledBy > 0) {\n                const availableHeight = window.innerHeight - CONTENT_MARGIN * 2;\n                const cssMinHeight = parseFloat(contentWrapper.style.minHeight);\n                const cssHeight = parseFloat(contentWrapper.style.height);\n                const prevHeight = Math.max(cssMinHeight, cssHeight);\n                if (prevHeight < availableHeight) {\n                  const nextHeight = prevHeight + scrolledBy;\n                  const clampedNextHeight = Math.min(availableHeight, nextHeight);\n                  const heightDiff = nextHeight - clampedNextHeight;\n                  contentWrapper.style.height = clampedNextHeight + \"px\";\n                  if (contentWrapper.style.bottom === \"0px\") {\n                    viewport.scrollTop = heightDiff > 0 ? heightDiff : 0;\n                    contentWrapper.style.justifyContent = \"flex-end\";\n                  }\n                }\n              }\n            }\n            prevScrollTopRef.current = viewport.scrollTop;\n          })\n        }\n      ) })\n    ] });\n  }\n);\nSelectViewport.displayName = VIEWPORT_NAME;\nvar GROUP_NAME = \"SelectGroup\";\nvar [SelectGroupContextProvider, useSelectGroupContext] = createSelectContext(GROUP_NAME);\nvar SelectGroup = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSelect, ...groupProps } = props;\n    const groupId = useId();\n    return /* @__PURE__ */ jsx(SelectGroupContextProvider, { scope: __scopeSelect, id: groupId, children: /* @__PURE__ */ jsx(Primitive.div, { role: \"group\", \"aria-labelledby\": groupId, ...groupProps, ref: forwardedRef }) });\n  }\n);\nSelectGroup.displayName = GROUP_NAME;\nvar LABEL_NAME = \"SelectLabel\";\nvar SelectLabel = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSelect, ...labelProps } = props;\n    const groupContext = useSelectGroupContext(LABEL_NAME, __scopeSelect);\n    return /* @__PURE__ */ jsx(Primitive.div, { id: groupContext.id, ...labelProps, ref: forwardedRef });\n  }\n);\nSelectLabel.displayName = LABEL_NAME;\nvar ITEM_NAME = \"SelectItem\";\nvar [SelectItemContextProvider, useSelectItemContext] = createSelectContext(ITEM_NAME);\nvar SelectItem = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeSelect,\n      value,\n      disabled = false,\n      textValue: textValueProp,\n      ...itemProps\n    } = props;\n    const context = useSelectContext(ITEM_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ITEM_NAME, __scopeSelect);\n    const isSelected = context.value === value;\n    const [textValue, setTextValue] = React.useState(textValueProp ?? \"\");\n    const [isFocused, setIsFocused] = React.useState(false);\n    const composedRefs = useComposedRefs(\n      forwardedRef,\n      (node) => contentContext.itemRefCallback?.(node, value, disabled)\n    );\n    const textId = useId();\n    const pointerTypeRef = React.useRef(\"touch\");\n    const handleSelect = () => {\n      if (!disabled) {\n        context.onValueChange(value);\n        context.onOpenChange(false);\n      }\n    };\n    if (value === \"\") {\n      throw new Error(\n        \"A <Select.Item /> must have a value prop that is not an empty string. This is because the Select value can be set to an empty string to clear the selection and show the placeholder.\"\n      );\n    }\n    return /* @__PURE__ */ jsx(\n      SelectItemContextProvider,\n      {\n        scope: __scopeSelect,\n        value,\n        disabled,\n        textId,\n        isSelected,\n        onItemTextChange: React.useCallback((node) => {\n          setTextValue((prevTextValue) => prevTextValue || (node?.textContent ?? \"\").trim());\n        }, []),\n        children: /* @__PURE__ */ jsx(\n          Collection.ItemSlot,\n          {\n            scope: __scopeSelect,\n            value,\n            disabled,\n            textValue,\n            children: /* @__PURE__ */ jsx(\n              Primitive.div,\n              {\n                role: \"option\",\n                \"aria-labelledby\": textId,\n                \"data-highlighted\": isFocused ? \"\" : void 0,\n                \"aria-selected\": isSelected && isFocused,\n                \"data-state\": isSelected ? \"checked\" : \"unchecked\",\n                \"aria-disabled\": disabled || void 0,\n                \"data-disabled\": disabled ? \"\" : void 0,\n                tabIndex: disabled ? void 0 : -1,\n                ...itemProps,\n                ref: composedRefs,\n                onFocus: composeEventHandlers(itemProps.onFocus, () => setIsFocused(true)),\n                onBlur: composeEventHandlers(itemProps.onBlur, () => setIsFocused(false)),\n                onClick: composeEventHandlers(itemProps.onClick, () => {\n                  if (pointerTypeRef.current !== \"mouse\") handleSelect();\n                }),\n                onPointerUp: composeEventHandlers(itemProps.onPointerUp, () => {\n                  if (pointerTypeRef.current === \"mouse\") handleSelect();\n                }),\n                onPointerDown: composeEventHandlers(itemProps.onPointerDown, (event) => {\n                  pointerTypeRef.current = event.pointerType;\n                }),\n                onPointerMove: composeEventHandlers(itemProps.onPointerMove, (event) => {\n                  pointerTypeRef.current = event.pointerType;\n                  if (disabled) {\n                    contentContext.onItemLeave?.();\n                  } else if (pointerTypeRef.current === \"mouse\") {\n                    event.currentTarget.focus({ preventScroll: true });\n                  }\n                }),\n                onPointerLeave: composeEventHandlers(itemProps.onPointerLeave, (event) => {\n                  if (event.currentTarget === document.activeElement) {\n                    contentContext.onItemLeave?.();\n                  }\n                }),\n                onKeyDown: composeEventHandlers(itemProps.onKeyDown, (event) => {\n                  const isTypingAhead = contentContext.searchRef?.current !== \"\";\n                  if (isTypingAhead && event.key === \" \") return;\n                  if (SELECTION_KEYS.includes(event.key)) handleSelect();\n                  if (event.key === \" \") event.preventDefault();\n                })\n              }\n            )\n          }\n        )\n      }\n    );\n  }\n);\nSelectItem.displayName = ITEM_NAME;\nvar ITEM_TEXT_NAME = \"SelectItemText\";\nvar SelectItemText = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSelect, className, style, ...itemTextProps } = props;\n    const context = useSelectContext(ITEM_TEXT_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ITEM_TEXT_NAME, __scopeSelect);\n    const itemContext = useSelectItemContext(ITEM_TEXT_NAME, __scopeSelect);\n    const nativeOptionsContext = useSelectNativeOptionsContext(ITEM_TEXT_NAME, __scopeSelect);\n    const [itemTextNode, setItemTextNode] = React.useState(null);\n    const composedRefs = useComposedRefs(\n      forwardedRef,\n      (node) => setItemTextNode(node),\n      itemContext.onItemTextChange,\n      (node) => contentContext.itemTextRefCallback?.(node, itemContext.value, itemContext.disabled)\n    );\n    const textContent = itemTextNode?.textContent;\n    const nativeOption = React.useMemo(\n      () => /* @__PURE__ */ jsx(\"option\", { value: itemContext.value, disabled: itemContext.disabled, children: textContent }, itemContext.value),\n      [itemContext.disabled, itemContext.value, textContent]\n    );\n    const { onNativeOptionAdd, onNativeOptionRemove } = nativeOptionsContext;\n    useLayoutEffect(() => {\n      onNativeOptionAdd(nativeOption);\n      return () => onNativeOptionRemove(nativeOption);\n    }, [onNativeOptionAdd, onNativeOptionRemove, nativeOption]);\n    return /* @__PURE__ */ jsxs(Fragment, { children: [\n      /* @__PURE__ */ jsx(Primitive.span, { id: itemContext.textId, ...itemTextProps, ref: composedRefs }),\n      itemContext.isSelected && context.valueNode && !context.valueNodeHasChildren ? ReactDOM.createPortal(itemTextProps.children, context.valueNode) : null\n    ] });\n  }\n);\nSelectItemText.displayName = ITEM_TEXT_NAME;\nvar ITEM_INDICATOR_NAME = \"SelectItemIndicator\";\nvar SelectItemIndicator = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSelect, ...itemIndicatorProps } = props;\n    const itemContext = useSelectItemContext(ITEM_INDICATOR_NAME, __scopeSelect);\n    return itemContext.isSelected ? /* @__PURE__ */ jsx(Primitive.span, { \"aria-hidden\": true, ...itemIndicatorProps, ref: forwardedRef }) : null;\n  }\n);\nSelectItemIndicator.displayName = ITEM_INDICATOR_NAME;\nvar SCROLL_UP_BUTTON_NAME = \"SelectScrollUpButton\";\nvar SelectScrollUpButton = React.forwardRef((props, forwardedRef) => {\n  const contentContext = useSelectContentContext(SCROLL_UP_BUTTON_NAME, props.__scopeSelect);\n  const viewportContext = useSelectViewportContext(SCROLL_UP_BUTTON_NAME, props.__scopeSelect);\n  const [canScrollUp, setCanScrollUp] = React.useState(false);\n  const composedRefs = useComposedRefs(forwardedRef, viewportContext.onScrollButtonChange);\n  useLayoutEffect(() => {\n    if (contentContext.viewport && contentContext.isPositioned) {\n      let handleScroll2 = function() {\n        const canScrollUp2 = viewport.scrollTop > 0;\n        setCanScrollUp(canScrollUp2);\n      };\n      var handleScroll = handleScroll2;\n      const viewport = contentContext.viewport;\n      handleScroll2();\n      viewport.addEventListener(\"scroll\", handleScroll2);\n      return () => viewport.removeEventListener(\"scroll\", handleScroll2);\n    }\n  }, [contentContext.viewport, contentContext.isPositioned]);\n  return canScrollUp ? /* @__PURE__ */ jsx(\n    SelectScrollButtonImpl,\n    {\n      ...props,\n      ref: composedRefs,\n      onAutoScroll: () => {\n        const { viewport, selectedItem } = contentContext;\n        if (viewport && selectedItem) {\n          viewport.scrollTop = viewport.scrollTop - selectedItem.offsetHeight;\n        }\n      }\n    }\n  ) : null;\n});\nSelectScrollUpButton.displayName = SCROLL_UP_BUTTON_NAME;\nvar SCROLL_DOWN_BUTTON_NAME = \"SelectScrollDownButton\";\nvar SelectScrollDownButton = React.forwardRef((props, forwardedRef) => {\n  const contentContext = useSelectContentContext(SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);\n  const viewportContext = useSelectViewportContext(SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);\n  const [canScrollDown, setCanScrollDown] = React.useState(false);\n  const composedRefs = useComposedRefs(forwardedRef, viewportContext.onScrollButtonChange);\n  useLayoutEffect(() => {\n    if (contentContext.viewport && contentContext.isPositioned) {\n      let handleScroll2 = function() {\n        const maxScroll = viewport.scrollHeight - viewport.clientHeight;\n        const canScrollDown2 = Math.ceil(viewport.scrollTop) < maxScroll;\n        setCanScrollDown(canScrollDown2);\n      };\n      var handleScroll = handleScroll2;\n      const viewport = contentContext.viewport;\n      handleScroll2();\n      viewport.addEventListener(\"scroll\", handleScroll2);\n      return () => viewport.removeEventListener(\"scroll\", handleScroll2);\n    }\n  }, [contentContext.viewport, contentContext.isPositioned]);\n  return canScrollDown ? /* @__PURE__ */ jsx(\n    SelectScrollButtonImpl,\n    {\n      ...props,\n      ref: composedRefs,\n      onAutoScroll: () => {\n        const { viewport, selectedItem } = contentContext;\n        if (viewport && selectedItem) {\n          viewport.scrollTop = viewport.scrollTop + selectedItem.offsetHeight;\n        }\n      }\n    }\n  ) : null;\n});\nSelectScrollDownButton.displayName = SCROLL_DOWN_BUTTON_NAME;\nvar SelectScrollButtonImpl = React.forwardRef((props, forwardedRef) => {\n  const { __scopeSelect, onAutoScroll, ...scrollIndicatorProps } = props;\n  const contentContext = useSelectContentContext(\"SelectScrollButton\", __scopeSelect);\n  const autoScrollTimerRef = React.useRef(null);\n  const getItems = useCollection(__scopeSelect);\n  const clearAutoScrollTimer = React.useCallback(() => {\n    if (autoScrollTimerRef.current !== null) {\n      window.clearInterval(autoScrollTimerRef.current);\n      autoScrollTimerRef.current = null;\n    }\n  }, []);\n  React.useEffect(() => {\n    return () => clearAutoScrollTimer();\n  }, [clearAutoScrollTimer]);\n  useLayoutEffect(() => {\n    const activeItem = getItems().find((item) => item.ref.current === document.activeElement);\n    activeItem?.ref.current?.scrollIntoView({ block: \"nearest\" });\n  }, [getItems]);\n  return /* @__PURE__ */ jsx(\n    Primitive.div,\n    {\n      \"aria-hidden\": true,\n      ...scrollIndicatorProps,\n      ref: forwardedRef,\n      style: { flexShrink: 0, ...scrollIndicatorProps.style },\n      onPointerDown: composeEventHandlers(scrollIndicatorProps.onPointerDown, () => {\n        if (autoScrollTimerRef.current === null) {\n          autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);\n        }\n      }),\n      onPointerMove: composeEventHandlers(scrollIndicatorProps.onPointerMove, () => {\n        contentContext.onItemLeave?.();\n        if (autoScrollTimerRef.current === null) {\n          autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);\n        }\n      }),\n      onPointerLeave: composeEventHandlers(scrollIndicatorProps.onPointerLeave, () => {\n        clearAutoScrollTimer();\n      })\n    }\n  );\n});\nvar SEPARATOR_NAME = \"SelectSeparator\";\nvar SelectSeparator = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSelect, ...separatorProps } = props;\n    return /* @__PURE__ */ jsx(Primitive.div, { \"aria-hidden\": true, ...separatorProps, ref: forwardedRef });\n  }\n);\nSelectSeparator.displayName = SEPARATOR_NAME;\nvar ARROW_NAME = \"SelectArrow\";\nvar SelectArrow = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSelect, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopeSelect);\n    const context = useSelectContext(ARROW_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ARROW_NAME, __scopeSelect);\n    return context.open && contentContext.position === \"popper\" ? /* @__PURE__ */ jsx(PopperPrimitive.Arrow, { ...popperScope, ...arrowProps, ref: forwardedRef }) : null;\n  }\n);\nSelectArrow.displayName = ARROW_NAME;\nvar BUBBLE_INPUT_NAME = \"SelectBubbleInput\";\nvar SelectBubbleInput = React.forwardRef(\n  ({ __scopeSelect, value, ...props }, forwardedRef) => {\n    const ref = React.useRef(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const prevValue = usePrevious(value);\n    React.useEffect(() => {\n      const select = ref.current;\n      if (!select) return;\n      const selectProto = window.HTMLSelectElement.prototype;\n      const descriptor = Object.getOwnPropertyDescriptor(\n        selectProto,\n        \"value\"\n      );\n      const setValue = descriptor.set;\n      if (prevValue !== value && setValue) {\n        const event = new Event(\"change\", { bubbles: true });\n        setValue.call(select, value);\n        select.dispatchEvent(event);\n      }\n    }, [prevValue, value]);\n    return /* @__PURE__ */ jsx(\n      Primitive.select,\n      {\n        ...props,\n        style: { ...VISUALLY_HIDDEN_STYLES, ...props.style },\n        ref: composedRefs,\n        defaultValue: value\n      }\n    );\n  }\n);\nSelectBubbleInput.displayName = BUBBLE_INPUT_NAME;\nfunction shouldShowPlaceholder(value) {\n  return value === \"\" || value === void 0;\n}\nfunction useTypeaheadSearch(onSearchChange) {\n  const handleSearchChange = useCallbackRef(onSearchChange);\n  const searchRef = React.useRef(\"\");\n  const timerRef = React.useRef(0);\n  const handleTypeaheadSearch = React.useCallback(\n    (key) => {\n      const search = searchRef.current + key;\n      handleSearchChange(search);\n      (function updateSearch(value) {\n        searchRef.current = value;\n        window.clearTimeout(timerRef.current);\n        if (value !== \"\") timerRef.current = window.setTimeout(() => updateSearch(\"\"), 1e3);\n      })(search);\n    },\n    [handleSearchChange]\n  );\n  const resetTypeahead = React.useCallback(() => {\n    searchRef.current = \"\";\n    window.clearTimeout(timerRef.current);\n  }, []);\n  React.useEffect(() => {\n    return () => window.clearTimeout(timerRef.current);\n  }, []);\n  return [searchRef, handleTypeaheadSearch, resetTypeahead];\n}\nfunction findNextItem(items, search, currentItem) {\n  const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);\n  const normalizedSearch = isRepeated ? search[0] : search;\n  const currentItemIndex = currentItem ? items.indexOf(currentItem) : -1;\n  let wrappedItems = wrapArray(items, Math.max(currentItemIndex, 0));\n  const excludeCurrentItem = normalizedSearch.length === 1;\n  if (excludeCurrentItem) wrappedItems = wrappedItems.filter((v) => v !== currentItem);\n  const nextItem = wrappedItems.find(\n    (item) => item.textValue.toLowerCase().startsWith(normalizedSearch.toLowerCase())\n  );\n  return nextItem !== currentItem ? nextItem : void 0;\n}\nfunction wrapArray(array, startIndex) {\n  return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\nvar Root2 = Select;\nvar Trigger = SelectTrigger;\nvar Value = SelectValue;\nvar Icon = SelectIcon;\nvar Portal = SelectPortal;\nvar Content2 = SelectContent;\nvar Viewport = SelectViewport;\nvar Group = SelectGroup;\nvar Label = SelectLabel;\nvar Item = SelectItem;\nvar ItemText = SelectItemText;\nvar ItemIndicator = SelectItemIndicator;\nvar ScrollUpButton = SelectScrollUpButton;\nvar ScrollDownButton = SelectScrollDownButton;\nvar Separator = SelectSeparator;\nvar Arrow2 = SelectArrow;\nexport {\n  Arrow2 as Arrow,\n  Content2 as Content,\n  Group,\n  Icon,\n  Item,\n  ItemIndicator,\n  ItemText,\n  Label,\n  Portal,\n  Root2 as Root,\n  ScrollDownButton,\n  ScrollUpButton,\n  Select,\n  SelectArrow,\n  SelectContent,\n  SelectGroup,\n  SelectIcon,\n  SelectItem,\n  SelectItemIndicator,\n  SelectItemText,\n  SelectLabel,\n  SelectPortal,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n  SelectViewport,\n  Separator,\n  Trigger,\n  Value,\n  Viewport,\n  createSelectScope\n};\n//# sourceMappingURL=index.mjs.map\n","'use client';\n\nimport * as React from 'react';\nimport * as SelectPrimitive from '@radix-ui/react-select';\nimport { Check, ChevronDown, ChevronUp } from 'lucide-react';\n\nimport { cn } from '../../lib/utils';\n\nconst Select = SelectPrimitive.Root;\n\nconst SelectGroup = SelectPrimitive.Group;\n\nconst SelectValue = SelectPrimitive.Value;\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      'flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1',\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n));\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName;\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn('flex cursor-default items-center justify-center py-1', className)}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n));\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName;\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn('flex cursor-default items-center justify-center py-1', className)}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n));\nSelectScrollDownButton.displayName = SelectPrimitive.ScrollDownButton.displayName;\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = 'popper', ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        'relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n        position === 'popper' &&\n          'data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1',\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          'p-1',\n          position === 'popper' &&\n            'h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]'\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n));\nSelectContent.displayName = SelectPrimitive.Content.displayName;\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn('py-1.5 pl-8 pr-2 text-sm font-semibold', className)}\n    {...props}\n  />\n));\nSelectLabel.displayName = SelectPrimitive.Label.displayName;\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      'relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n));\nSelectItem.displayName = SelectPrimitive.Item.displayName;\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn('-mx-1 my-1 h-px bg-muted', className)}\n    {...props}\n  />\n));\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName;\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n};\n","import * as React from 'react';\n\nimport { cn } from '../../lib/utils';\n\nconst Table = React.forwardRef<HTMLTableElement, React.HTMLAttributes<HTMLTableElement>>(\n  ({ className, ...props }, ref) => (\n    <div className=\"relative w-full overflow-auto\">\n      <table ref={ref} className={cn('w-full caption-bottom text-sm', className)} {...props} />\n    </div>\n  )\n);\nTable.displayName = 'Table';\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn('[&_tr]:border-b', className)} {...props} />\n));\nTableHeader.displayName = 'TableHeader';\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody ref={ref} className={cn('[&_tr:last-child]:border-0', className)} {...props} />\n));\nTableBody.displayName = 'TableBody';\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot ref={ref} className={cn('border-t bg-muted/50 font-medium', className)} {...props} />\n));\nTableFooter.displayName = 'TableFooter';\n\nconst TableRow = React.forwardRef<HTMLTableRowElement, React.HTMLAttributes<HTMLTableRowElement>>(\n  ({ className, ...props }, ref) => (\n    <tr\n      ref={ref}\n      className={cn(\n        'border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted',\n        className\n      )}\n      {...props}\n    />\n  )\n);\nTableRow.displayName = 'TableRow';\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      'h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0',\n      className\n    )}\n    {...props}\n  />\n));\nTableHead.displayName = 'TableHead';\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn('p-4 align-middle [&:has([role=checkbox])]:pr-0', className)}\n    {...props}\n  />\n));\nTableCell.displayName = 'TableCell';\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption ref={ref} className={cn('mt-4 text-sm text-muted-foreground', className)} {...props} />\n));\nTableCaption.displayName = 'TableCaption';\n\nexport { Table, TableHeader, TableBody, TableFooter, TableHead, TableRow, TableCell, TableCaption };\n","import React, { useEffect, useState } from 'react';\r\nimport { Routes, Route, Link, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { useManagerDealsData } from '../../hooks/useDealsData';\r\nimport { Card, CardHeader, CardTitle, CardContent, CardFooter } from '../../components/ui/card';\r\nimport { Button } from '../../components/ui/button';\r\nimport {\r\n  Users,\r\n  Calculator,\r\n  BarChart,\r\n  Calendar,\r\n  FileText,\r\n  Activity,\r\n  Target,\r\n  LineChart,\r\n  Medal,\r\n  DollarSign,\r\n  Car,\r\n  TrendingUp,\r\n  Percent,\r\n  ArrowUp,\r\n  ArrowDown,\r\n  ChevronLeft,\r\n  ChevronRight,\r\n  CalendarClock,\r\n  ChevronUp,\r\n  ChevronDown,\r\n  ArrowUpDown,\r\n  Edit,\r\n  Save,\r\n  AlertTriangle,\r\n  Loader2,\r\n  Lightbulb,\r\n} from 'lucide-react';\r\nimport { DealLogEditor } from '../manager/DealLogEditor';\r\nimport { ScheduleEditor } from '../manager/ScheduleEditor';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n} from '../../components/ui/dialog';\r\nimport { Input } from '../../components/ui/input';\r\nimport { Label } from '../../components/ui/label';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '../../components/ui/select';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from '../../components/ui/table';\r\n\r\n// Sample data - would be fetched from API in real implementation\r\nconst dealershipData = {\r\n  totalGross: 125600,\r\n  frontEndGross: 82400,\r\n  financeGross: 43200,\r\n  totalUnits: 86,\r\n  newCars: 52,\r\n  usedCars: 34,\r\n  salesGoal: 100,\r\n  salesPerformance: 86,\r\n  avgPerDeal: 1460,\r\n  avgFrontGross: 958,\r\n  avgFinanceGross: 502,\r\n  lastMonthComparison: {\r\n    totalGross: 8.5,\r\n    frontEndGross: 6.2,\r\n    financeGross: 12.4,\r\n    totalUnits: 9.3,\r\n    avgPerDeal: 4.8,\r\n  },\r\n};\r\n\r\n// Sample schedule data\r\nconst SCHEDULE_DATA = [\r\n  {\r\n    day: 'Monday',\r\n    date: '12',\r\n    shifts: [\r\n      { team: 'Team A', hours: '9am-6pm', members: 'SJ, MC, DR' },\r\n      { team: 'Team B', hours: 'Off', members: '' },\r\n    ],\r\n  },\r\n  {\r\n    day: 'Tuesday',\r\n    date: '13',\r\n    shifts: [\r\n      { team: 'Team A', hours: '9am-6pm', members: 'SJ, MC, DR' },\r\n      { team: 'Team B', hours: 'Off', members: '' },\r\n    ],\r\n  },\r\n  {\r\n    day: 'Wednesday',\r\n    date: '14',\r\n    shifts: [\r\n      { team: 'Team A', hours: '10am-7pm', members: 'SJ, MC, DR' },\r\n      { team: 'Team B', hours: 'Off', members: '' },\r\n    ],\r\n  },\r\n  {\r\n    day: 'Thursday',\r\n    date: '15',\r\n    shifts: [\r\n      { team: 'Team A', hours: 'Off', members: '' },\r\n      { team: 'Team B', hours: '9am-6pm', members: 'AW, RJ, KS' },\r\n    ],\r\n  },\r\n  {\r\n    day: 'Friday',\r\n    date: '16',\r\n    shifts: [\r\n      { team: 'Team A', hours: 'Off', members: '' },\r\n      { team: 'Team B', hours: '11am-8pm', members: 'AW, RJ, KS' },\r\n    ],\r\n  },\r\n  {\r\n    day: 'Saturday',\r\n    date: '17',\r\n    shifts: [\r\n      { team: 'Team A', hours: '9am-5pm', members: 'SJ, MC, DR' },\r\n      { team: 'Team B', hours: '9am-5pm', members: 'AW, RJ, KS' },\r\n    ],\r\n  },\r\n  {\r\n    day: 'Sunday',\r\n    date: '18',\r\n    shifts: [\r\n      { team: 'Team A', hours: 'Off', members: '' },\r\n      { team: 'Team B', hours: '10am-4pm', members: 'AW, RJ' },\r\n    ],\r\n  },\r\n];\r\n\r\n// Add a type for editable deal\r\ninterface EditableDeal {\r\n  id: string;\r\n  frontGross: number;\r\n  status: string;\r\n}\r\n\r\nconst SalesManagerDashboard = () => {\r\n  const { user, role, dealershipId } = useAuth();\r\n  const [data, setData] = useState(dealershipData);\r\n  const [selectedDeal, setSelectedDeal] = useState<EditableDeal | null>(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [timePeriod, setTimePeriod] = useState<string>('this-month');\r\n  const navigate = useNavigate();\r\n\r\n  // Use the manager deals hook\r\n  const {\r\n    dealData: managerDealData,\r\n    loading: dealDataLoading,\r\n    error: dealDataError,\r\n    refresh: refreshDealData,\r\n  } = useManagerDealsData(dealershipId, timePeriod);\r\n\r\n  useEffect(() => {\r\n    console.log('[SalesManagerDashboard] Rendering sales manager dashboard', {\r\n      userId: user?.id,\r\n      role,\r\n      dealershipId,\r\n      timestamp: new Date().toISOString(),\r\n    });\r\n\r\n    // In a real implementation, you would fetch data here\r\n    // Example: fetchDealershipData(dealershipId).then(data => setData(data));\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      console.log('[SalesManagerDashboard] Unmounting sales manager dashboard');\r\n    };\r\n  }, [user, role, dealershipId]);\r\n\r\n  // Format currency\r\n  const formatCurrency = amount => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 0,\r\n    }).format(amount);\r\n  };\r\n\r\n  // Helper to check if a day is today\r\n  const isToday = (day: string) => {\r\n    const today = new Date().getDay();\r\n    // Convert day name to day number (0 = Sunday, 1 = Monday, etc.)\r\n    const dayMap: { [key: string]: number } = {\r\n      Sunday: 0,\r\n      Monday: 1,\r\n      Tuesday: 2,\r\n      Wednesday: 3,\r\n      Thursday: 4,\r\n      Friday: 5,\r\n      Saturday: 6,\r\n    };\r\n    return dayMap[day] === today;\r\n  };\r\n\r\n  // Generate schedule data starting with today and the next 6 days\r\n  const generateScheduleData = () => {\r\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    const today = new Date();\r\n    const currentDayIndex = today.getDay(); // 0 = Sunday, 1 = Monday, etc.\r\n\r\n    return Array.from({ length: 7 }, (_, i) => {\r\n      const dayIndex = (currentDayIndex + i) % 7;\r\n      const date = new Date(today);\r\n      date.setDate(today.getDate() + i);\r\n      const dateNum = date.getDate();\r\n\r\n      // Find the corresponding data from the sample data to maintain the shift information\r\n      const sampleDataIndex = SCHEDULE_DATA.findIndex(d => d.day === days[dayIndex]);\r\n      const shiftsData =\r\n        sampleDataIndex >= 0\r\n          ? SCHEDULE_DATA[sampleDataIndex].shifts\r\n          : [\r\n              { team: 'Team A', hours: 'Off', members: '' },\r\n              { team: 'Team B', hours: 'Off', members: '' },\r\n            ];\r\n\r\n      return {\r\n        day: days[dayIndex],\r\n        date: dateNum.toString(),\r\n        shifts: shiftsData,\r\n        isToday: i === 0,\r\n      };\r\n    });\r\n  };\r\n\r\n  const currentScheduleData = generateScheduleData();\r\n\r\n  // Handle front gross change\r\n  const handleFrontGrossChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (selectedDeal) {\r\n      const value = parseFloat(e.target.value) || 0;\r\n      setSelectedDeal({ ...selectedDeal, frontGross: value });\r\n    }\r\n  };\r\n\r\n  // Handle status change\r\n  const handleStatusChange = (status: string) => {\r\n    if (selectedDeal) {\r\n      setSelectedDeal({ ...selectedDeal, status });\r\n    }\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (selectedDeal) {\r\n      setIsSaving(true);\r\n      // Simulate API call\r\n      setTimeout(() => {\r\n        // In a real implementation, this would be a call to update the data in your database\r\n\r\n        // For demo purposes, we'll just close the dialog and show success\r\n        setIsSaving(false);\r\n        setIsEditing(false);\r\n        setSelectedDeal(null);\r\n\r\n        // You would typically refresh the data here\r\n        console.log('Deal updated:', selectedDeal);\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  // Get period label for display\r\n  const getPeriodLabel = (period: string): string => {\r\n    const today = new Date();\r\n    const month = today.toLocaleString('default', { month: 'long' });\r\n    const year = today.getFullYear();\r\n\r\n    switch (period) {\r\n      case 'this-month':\r\n        return `${month} ${year}`;\r\n      case 'last-month':\r\n        const lastMonth =\r\n          today.getMonth() === 0\r\n            ? 'December'\r\n            : new Date(today.getFullYear(), today.getMonth() - 1, 1).toLocaleString('default', {\r\n                month: 'long',\r\n              });\r\n        const lastMonthYear =\r\n          today.getMonth() === 0 ? today.getFullYear() - 1 : today.getFullYear();\r\n        return `${lastMonth} ${lastMonthYear}`;\r\n      case 'last-quarter':\r\n        const currentQuarter = Math.floor(today.getMonth() / 3);\r\n        return `Q${currentQuarter === 0 ? 4 : currentQuarter} ${\r\n          currentQuarter === 0 ? year - 1 : year\r\n        }`;\r\n      case 'ytd':\r\n        return `Year to Date ${year}`;\r\n      case 'last-year':\r\n        return `${year - 1}`;\r\n      default:\r\n        return `${month} ${year}`;\r\n    }\r\n  };\r\n\r\n  // Handle time period change\r\n  const handleTimePeriodChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setTimePeriod(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container py-6\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <div className=\"flex-grow\">\r\n          <h1 className=\"text-3xl font-bold\">Sales Manager Dashboard</h1>\r\n          {/* Best Practices Quote */}\r\n          <div className=\"bg-blue-50 p-2 rounded-md mt-2 border border-blue-100\">\r\n            <p className=\"text-xs italic text-blue-800\">\r\n              <Lightbulb className=\"h-3 w-3 inline-block mr-1\" />\r\n              <strong>Management Tip:</strong>{' '}\r\n              {\r\n                [\r\n                  \"Great managers don't just set goals; they remove obstacles for their team members.\",\r\n                  'Feedback is a gift. Deliver it with respect, receive it with gratitude.',\r\n                  'Celebrate small wins to build momentum toward big victories.',\r\n                  'Know your numbers, but remember that your people drive those numbers.',\r\n                  'The best way to predict the future is to create it through coaching and development.',\r\n                  'The quality of your leadership determines the quality of your team.',\r\n                  \"Your team doesn't care how much you know until they know how much you care.\",\r\n                ][new Date().getDay()]\r\n              }\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Dashboard Header with Month/Year and Time Period Filter */}\r\n      <div className=\"mb-6\">\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n          <div className=\"flex flex-row items-center gap-4\">\r\n            <h2 className=\"text-3xl font-bold text-gray-900\">{getPeriodLabel(timePeriod)}</h2>\r\n            <div className=\"flex items-center\">\r\n              <Calendar className=\"h-5 w-5 text-gray-500 mr-1\" />\r\n              <select\r\n                value={timePeriod}\r\n                onChange={handleTimePeriodChange}\r\n                className=\"p-2 border rounded-md shadow-sm\"\r\n              >\r\n                <option value=\"this-month\">This Month</option>\r\n                <option value=\"last-month\">Last Month</option>\r\n                <option value=\"last-quarter\">Last Quarter</option>\r\n                <option value=\"ytd\">Year to Date</option>\r\n                <option value=\"last-year\">Last Year</option>\r\n              </select>\r\n            </div>\r\n            <p className=\"text-gray-500\">Sales Performance Dashboard</p>\r\n          </div>\r\n\r\n          <div className=\"flex items-center\">\r\n            <div className=\"text-lg font-medium text-gray-700\">Mike Johnson</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Error Display */}\r\n      {dealDataError && (\r\n        <div className=\"mb-6\">\r\n          <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\r\n            <div className=\"flex\">\r\n              <AlertTriangle className=\"h-5 w-5 text-red-400 mr-2 mt-0.5\" />\r\n              <div>\r\n                <h3 className=\"text-sm font-medium text-red-800\">Deal Data Warning</h3>\r\n                <p className=\"text-sm text-red-700 mt-1\">{dealDataError}</p>\r\n                <p className=\"text-xs text-red-600 mt-1\">\r\n                  Showing fallback data. New deals will update automatically.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Loading Indicator */}\r\n      {dealDataLoading && (\r\n        <div className=\"mb-6\">\r\n          <div className=\"bg-blue-50 border border-blue-200 rounded-md p-4\">\r\n            <div className=\"flex items-center\">\r\n              <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600 mr-2\"></div>\r\n              <p className=\"text-sm text-blue-700\">Loading deal data...</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-4 mb-6\">\r\n        {/* Box 1: Gross Profits */}\r\n        <Card className=\"border-l-4 border-l-green-500\">\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium flex items-center\">\r\n              <DollarSign className=\"mr-2 h-4 w-4 text-green-500\" />\r\n              Gross Profit\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">\r\n              {formatCurrency(managerDealData?.metrics?.totalGross || data.totalGross)}\r\n            </div>\r\n            <div className=\"mt-2 space-y-1\">\r\n              <div className=\"flex justify-between items-center text-sm\">\r\n                <span className=\"text-gray-500\">Front End Gross:</span>\r\n                <span className=\"font-medium\">\r\n                  {formatCurrency(managerDealData?.metrics?.totalFrontGross || data.frontEndGross)}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center text-sm\">\r\n                <span className=\"text-gray-500\">Finance Gross:</span>\r\n                <span className=\"font-medium\">\r\n                  {formatCurrency(managerDealData?.metrics?.totalBackGross || data.financeGross)}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-center pt-2 text-xs\">\r\n              <span\r\n                className={`flex items-center ${\r\n                  data.lastMonthComparison.totalGross >= 0 ? 'text-green-500' : 'text-red-500'\r\n                }`}\r\n              >\r\n                {data.lastMonthComparison.totalGross >= 0 ? (\r\n                  <ArrowUp className=\"h-3 w-3 mr-1\" />\r\n                ) : (\r\n                  <ArrowDown className=\"h-3 w-3 mr-1\" />\r\n                )}\r\n                {Math.abs(data.lastMonthComparison.totalGross)}% from last month\r\n              </span>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Box 2: Units Sold with New/Used Breakdown */}\r\n        <Card className=\"border-l-4 border-l-blue-500\">\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium flex items-center\">\r\n              <Car className=\"mr-2 h-4 w-4 text-blue-500\" />\r\n              Total Units\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">\r\n              {managerDealData?.metrics?.totalDeals || data.totalUnits}\r\n            </div>\r\n            <div className=\"mt-2 space-y-1\">\r\n              <div className=\"flex justify-between items-center text-sm\">\r\n                <span className=\"text-gray-500\">New Cars:</span>\r\n                <span className=\"font-medium\">\r\n                  {managerDealData?.metrics?.newVehicleDeals || data.newCars}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center text-sm\">\r\n                <span className=\"text-gray-500\">Used Cars:</span>\r\n                <span className=\"font-medium\">\r\n                  {managerDealData?.metrics?.usedVehicleDeals || data.usedCars}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-center pt-2 text-xs\">\r\n              <span\r\n                className={`flex items-center ${\r\n                  data.lastMonthComparison.totalUnits >= 0 ? 'text-green-500' : 'text-red-500'\r\n                }`}\r\n              >\r\n                {data.lastMonthComparison.totalUnits >= 0 ? (\r\n                  <ArrowUp className=\"h-3 w-3 mr-1\" />\r\n                ) : (\r\n                  <ArrowDown className=\"h-3 w-3 mr-1\" />\r\n                )}\r\n                {Math.abs(data.lastMonthComparison.totalUnits)}% from last month\r\n              </span>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Box 3: Sales Performance */}\r\n        <Card className=\"border-l-4 border-l-purple-500\">\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium flex items-center\">\r\n              <Target className=\"mr-2 h-4 w-4 text-purple-500\" />\r\n              Sales Performance\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">\r\n              {managerDealData?.metrics?.salesPerformance || data.salesPerformance}%\r\n            </div>\r\n            <div className=\"mt-2\">\r\n              <div className=\"flex justify-between items-center text-sm mb-1\">\r\n                <span className=\"text-gray-500\">\r\n                  Goal: {managerDealData?.metrics?.salesGoal || data.salesGoal} units\r\n                </span>\r\n                <span className=\"font-medium\">\r\n                  {managerDealData?.metrics?.totalDeals || data.totalUnits}/\r\n                  {managerDealData?.metrics?.salesGoal || data.salesGoal}\r\n                </span>\r\n              </div>\r\n              <div className=\"h-2 w-full bg-gray-100 rounded-full\">\r\n                <div\r\n                  className={`h-full rounded-full ${\r\n                    (managerDealData?.metrics?.salesPerformance || data.salesPerformance) >= 100\r\n                      ? 'bg-green-500'\r\n                      : (managerDealData?.metrics?.salesPerformance || data.salesPerformance) >= 80\r\n                      ? 'bg-yellow-500'\r\n                      : 'bg-red-500'\r\n                  }`}\r\n                  style={{\r\n                    width: `${Math.min(\r\n                      managerDealData?.metrics?.salesPerformance || data.salesPerformance,\r\n                      100\r\n                    )}%`,\r\n                  }}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-center pt-2 text-xs\">\r\n              <span className=\"text-gray-500\">\r\n                {(managerDealData?.metrics?.salesGoal || data.salesGoal) -\r\n                  (managerDealData?.metrics?.totalDeals || data.totalUnits) >\r\n                0\r\n                  ? `${\r\n                      (managerDealData?.metrics?.salesGoal || data.salesGoal) -\r\n                      (managerDealData?.metrics?.totalDeals || data.totalUnits)\r\n                    } more units to goal`\r\n                  : 'Goal achieved!'}\r\n              </span>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Box 4: Average Per Deal */}\r\n        <Card className=\"border-l-4 border-l-amber-500\">\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium flex items-center\">\r\n              <Calculator className=\"mr-2 h-4 w-4 text-amber-500\" />\r\n              Average Per Deal\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">\r\n              {formatCurrency(managerDealData?.metrics?.avgPerDeal || data.avgPerDeal)}\r\n            </div>\r\n            <div className=\"mt-2 space-y-1\">\r\n              <div className=\"flex justify-between items-center text-sm\">\r\n                <span className=\"text-gray-500\">Avg Front Gross:</span>\r\n                <span className=\"font-medium\">{formatCurrency(data.avgFrontGross)}</span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center text-sm\">\r\n                <span className=\"text-gray-500\">Avg F&I Gross:</span>\r\n                <span className=\"font-medium\">{formatCurrency(data.avgFinanceGross)}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-center pt-2 text-xs\">\r\n              <span\r\n                className={`flex items-center ${\r\n                  data.lastMonthComparison.avgPerDeal >= 0 ? 'text-green-500' : 'text-red-500'\r\n                }`}\r\n              >\r\n                {data.lastMonthComparison.avgPerDeal >= 0 ? (\r\n                  <ArrowUp className=\"h-3 w-3 mr-1\" />\r\n                ) : (\r\n                  <ArrowDown className=\"h-3 w-3 mr-1\" />\r\n                )}\r\n                {Math.abs(data.lastMonthComparison.avgPerDeal)}% from last month\r\n              </span>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Add schedule box before the leaderboard */}\r\n      <div className=\"mb-6\">\r\n        <Card className=\"border hover:shadow-md transition-shadow\">\r\n          <CardHeader className=\"py-2 px-4 border-b\">\r\n            <div className=\"flex justify-between items-center\">\r\n              <CardTitle className=\"text-sm font-medium flex items-center\">\r\n                <CalendarClock className=\"mr-2 h-4 w-4 text-indigo-500\" />\r\n                Team Schedule\r\n              </CardTitle>\r\n              <div className=\"flex items-center space-x-1\">\r\n                <Button variant=\"ghost\" size=\"sm\" className=\"h-8 w-8 p-0\">\r\n                  <ChevronLeft className=\"h-4 w-4\" />\r\n                </Button>\r\n                <span className=\"text-sm\">This Week</span>\r\n                <Button variant=\"ghost\" size=\"sm\" className=\"h-8 w-8 p-0\">\r\n                  <ChevronRight className=\"h-4 w-4\" />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </CardHeader>\r\n          <CardContent className=\"py-2 px-0 overflow-x-auto\">\r\n            <div className=\"min-w-full\">\r\n              <div className=\"grid grid-cols-7 text-center\">\r\n                {currentScheduleData.map((dayData, index) => (\r\n                  <div\r\n                    key={index}\r\n                    className={`p-2 ${\r\n                      dayData.isToday ? 'bg-blue-50 border-b-2 border-blue-500' : ''\r\n                    }`}\r\n                  >\r\n                    <div className=\"font-medium text-xs text-gray-800\">\r\n                      {dayData.day.substring(0, 3)}{' '}\r\n                      <span className=\"text-gray-500\">{dayData.date}</span>\r\n                    </div>\r\n\r\n                    <div className=\"mt-1 space-y-2\">\r\n                      {dayData.shifts.map((shift, shiftIndex) => (\r\n                        <div key={shiftIndex} className=\"text-xs\">\r\n                          {shift.hours !== 'Off' ? (\r\n                            <>\r\n                              <div className=\"font-medium text-blue-600\">{shift.team}</div>\r\n                              <div className=\"text-gray-700\">{shift.hours}</div>\r\n                              {shift.members && (\r\n                                <div className=\"text-gray-500 text-[10px]\">{shift.members}</div>\r\n                              )}\r\n                            </>\r\n                          ) : (\r\n                            <div className=\"text-gray-400 italic\">{shift.team}: Off</div>\r\n                          )}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      <div className=\"grid gap-6 md:grid-cols-3 mb-6\">\r\n        <Card className=\"md:col-span-2\">\r\n          <CardHeader>\r\n            <CardTitle>The Das Board</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            {/* Sortable Header - Performance View */}\r\n            <div className=\"flex items-center text-xs font-medium text-white border-b py-2 px-1 overflow-x-auto\">\r\n              <div className=\"w-10 text-center bg-gray-600 py-2 rounded-l-md\">#</div>\r\n              <div className=\"w-40 flex-shrink-0 bg-gray-600 py-2 px-2\">Salesperson</div>\r\n              <div className=\"w-28 text-center bg-purple-600 py-2 flex items-center justify-center cursor-pointer hover:bg-purple-700\">\r\n                PVR <ArrowUpDown className=\"ml-1 h-3 w-3\" />\r\n              </div>\r\n              <div className=\"w-36 text-center bg-green-600 py-2 flex items-center justify-center cursor-pointer hover:bg-green-700\">\r\n                Total Gross <ArrowUpDown className=\"ml-1 h-3 w-3\" />\r\n              </div>\r\n              <div className=\"w-28 text-center bg-blue-600 py-2 flex items-center justify-center cursor-pointer hover:bg-blue-700\">\r\n                Avg/Mo <ArrowUpDown className=\"ml-1 h-3 w-3\" />\r\n              </div>\r\n              <div className=\"w-28 text-center bg-blue-500 py-2 flex items-center justify-center cursor-pointer hover:bg-blue-600\">\r\n                Last Mo <ArrowUpDown className=\"ml-1 h-3 w-3\" />\r\n              </div>\r\n              <div className=\"w-28 text-center bg-blue-600 py-2 flex items-center justify-center cursor-pointer hover:bg-blue-700\">\r\n                YTD <ArrowUpDown className=\"ml-1 h-3 w-3\" />\r\n              </div>\r\n              <div className=\"w-28 text-center bg-blue-500 py-2 flex items-center justify-center cursor-pointer hover:bg-blue-600\">\r\n                Annual <ArrowUpDown className=\"ml-1 h-3 w-3\" />\r\n              </div>\r\n              <div className=\"w-24 text-center bg-green-600 py-2 flex items-center justify-center cursor-pointer hover:bg-green-700\">\r\n                New <ArrowUpDown className=\"ml-1 h-3 w-3\" />\r\n              </div>\r\n              <div className=\"w-24 text-center bg-amber-600 py-2 flex items-center justify-center cursor-pointer hover:bg-amber-700\">\r\n                Used <ArrowUpDown className=\"ml-1 h-3 w-3\" />\r\n              </div>\r\n              <div className=\"w-36 text-right bg-indigo-600 py-2 pr-3 flex items-center justify-end cursor-pointer hover:bg-indigo-700 font-semibold rounded-r-md\">\r\n                Current Month <ArrowUpDown className=\"ml-1 h-3 w-3\" />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Leaderboard Entries */}\r\n            <div className=\"overflow-x-auto\">\r\n              {[\r\n                {\r\n                  name: 'Sarah Johnson',\r\n                  units: 14,\r\n                  frontGross: 18200,\r\n                  backGross: 14300,\r\n                  totalGross: 32500,\r\n                  avgMonth: 12,\r\n                  lastMonth: 15,\r\n                  ytd: 82,\r\n                  annualPace: 144,\r\n                  newUnits: 9,\r\n                  usedUnits: 5,\r\n                  pvr: 2321,\r\n                },\r\n                {\r\n                  name: 'Michael Chen',\r\n                  units: 12,\r\n                  frontGross: 16400,\r\n                  backGross: 12500,\r\n                  totalGross: 28900,\r\n                  avgMonth: 10,\r\n                  lastMonth: 11,\r\n                  ytd: 65,\r\n                  annualPace: 120,\r\n                  newUnits: 7,\r\n                  usedUnits: 5,\r\n                  pvr: 2408,\r\n                },\r\n                {\r\n                  name: 'David Rodriguez',\r\n                  units: 11,\r\n                  frontGross: 14800,\r\n                  backGross: 11600,\r\n                  totalGross: 26400,\r\n                  avgMonth: 9,\r\n                  lastMonth: 10,\r\n                  ytd: 58,\r\n                  annualPace: 108,\r\n                  newUnits: 4,\r\n                  usedUnits: 7,\r\n                  pvr: 2400,\r\n                },\r\n                {\r\n                  name: 'Amanda Williams',\r\n                  units: 9,\r\n                  frontGross: 11900,\r\n                  backGross: 9800,\r\n                  totalGross: 21700,\r\n                  avgMonth: 8,\r\n                  lastMonth: 7,\r\n                  ytd: 48,\r\n                  annualPace: 96,\r\n                  newUnits: 5,\r\n                  usedUnits: 4,\r\n                  pvr: 2411,\r\n                },\r\n                {\r\n                  name: 'Robert Johnson',\r\n                  units: 8,\r\n                  frontGross: 10500,\r\n                  backGross: 8700,\r\n                  totalGross: 19200,\r\n                  avgMonth: 7,\r\n                  lastMonth: 9,\r\n                  ytd: 42,\r\n                  annualPace: 84,\r\n                  newUnits: 3,\r\n                  usedUnits: 5,\r\n                  pvr: 2400,\r\n                },\r\n              ].map((person, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`flex items-center py-2 px-1 ${\r\n                    index !== 4 ? 'border-b' : ''\r\n                  } border-gray-100 text-sm hover:bg-gray-50`}\r\n                >\r\n                  <div className=\"w-10 flex justify-center\">\r\n                    <div\r\n                      className={`w-5 h-5 rounded-full flex items-center justify-center\r\n                      ${\r\n                        index === 0\r\n                          ? 'bg-yellow-100 text-yellow-600'\r\n                          : index === 1\r\n                          ? 'bg-gray-100 text-gray-600'\r\n                          : index === 2\r\n                          ? 'bg-amber-100 text-amber-600'\r\n                          : 'bg-blue-50 text-blue-500'\r\n                      }`}\r\n                    >\r\n                      <span className=\"text-xs font-bold\">{index + 1}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"w-40 flex-shrink-0 font-medium truncate px-2\">{person.name}</div>\r\n                  <div className=\"w-28 text-center bg-purple-50\">${person.pvr}</div>\r\n                  <div className=\"w-36 text-center bg-green-50\">\r\n                    ${person.totalGross.toLocaleString()}\r\n                  </div>\r\n                  <div className=\"w-28 text-center bg-blue-50\">{person.avgMonth}</div>\r\n                  <div className=\"w-28 text-center\">{person.lastMonth}</div>\r\n                  <div className=\"w-28 text-center bg-blue-50\">{person.ytd}</div>\r\n                  <div className=\"w-28 text-center\">{person.annualPace}</div>\r\n                  <div className=\"w-24 text-center bg-green-50\">{person.newUnits}</div>\r\n                  <div className=\"w-24 text-center bg-amber-50\">{person.usedUnits}</div>\r\n                  <div className=\"w-36 text-right pr-3\">\r\n                    <span className=\"text-lg font-bold text-indigo-700\">{person.units}</span>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"mt-2 pt-2 text-center\">\r\n              <Button variant=\"ghost\" size=\"sm\" className=\"text-xs text-blue-600\">\r\n                View All Salespeople\r\n              </Button>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Quick Actions</CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"grid gap-4\">\r\n            <Button\r\n              className=\"w-full justify-start\"\r\n              onClick={() => navigate('/dashboard/sales-manager/team')}\r\n            >\r\n              <Users className=\"mr-2 h-4 w-4\" />\r\n              Team Management\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"w-full justify-start\"\r\n              onClick={() => navigate('/dashboard/sales-manager/goals')}\r\n            >\r\n              <Target className=\"mr-2 h-4 w-4\" />\r\n              Set Team Goals\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"w-full justify-start\"\r\n              onClick={() => navigate('/dashboard/sales-manager/schedule')}\r\n            >\r\n              <Calendar className=\"mr-2 h-4 w-4\" />\r\n              Schedule\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"w-full justify-start\"\r\n              onClick={() => navigate('/dashboard/sales-manager/sales-report')}\r\n            >\r\n              <LineChart className=\"mr-2 h-4 w-4\" />\r\n              Sales Reports\r\n            </Button>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Deals Log - Full Width */}\r\n      <Card className=\"mb-6 border hover:shadow-md transition-shadow\">\r\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2 border-b\">\r\n          <CardTitle className=\"text-lg font-medium flex items-center\">\r\n            <FileText className=\"mr-2 h-5 w-5 text-blue-500\" />\r\n            Deals Log\r\n          </CardTitle>\r\n          <Button variant=\"outline\" size=\"sm\" className=\"h-8 text-xs px-2\">\r\n            View All Deals\r\n          </Button>\r\n        </CardHeader>\r\n        <CardContent className=\"pt-4 px-0\">\r\n          {/* Sample deals - would be fetched from an API in real implementation */}\r\n          <div className=\"flex\">\r\n            <div className=\"flex-grow overflow-x-auto\">\r\n              <table className=\"w-full text-sm\">\r\n                <thead>\r\n                  <tr className=\"text-xs\">\r\n                    <th className=\"font-medium text-white py-2 pl-3 text-center bg-gray-600 w-12\">\r\n                      #\r\n                    </th>\r\n                    <th className=\"font-medium text-white py-2 pl-4 pr-2 text-left bg-blue-600\">\r\n                      Deal #\r\n                    </th>\r\n                    <th className=\"font-medium text-white py-2 px-2 text-left bg-gray-600\">\r\n                      Stock #\r\n                    </th>\r\n                    <th className=\"font-medium text-white py-2 px-2 text-left bg-gray-600\">\r\n                      Customer\r\n                    </th>\r\n                    <th className=\"font-medium text-white py-2 px-2 text-center bg-gray-600\">\r\n                      Date\r\n                    </th>\r\n                    <th className=\"font-medium text-white py-2 px-2 text-center bg-indigo-600\">\r\n                      N/U/CPO\r\n                    </th>\r\n                    <th className=\"font-medium text-white py-2 px-2 text-center bg-blue-600\">\r\n                      Salesperson\r\n                    </th>\r\n                    <th className=\"font-medium text-white py-2 px-2 text-right bg-green-600\">\r\n                      Front Gross\r\n                    </th>\r\n                    <th className=\"font-medium text-white py-2 px-2 text-right bg-purple-600\">\r\n                      Finance Gross\r\n                    </th>\r\n                    <th className=\"font-medium text-white py-2 px-2 text-right bg-amber-600\">\r\n                      Total Gross\r\n                    </th>\r\n                    <th className=\"font-medium text-white py-2 px-2 text-center bg-gray-600 w-20\">\r\n                      Status\r\n                    </th>\r\n                    <th className=\"font-medium text-white py-2 px-2 text-center bg-blue-600 w-20\">\r\n                      CSI Follow Up\r\n                    </th>\r\n                    <th className=\"font-medium text-white py-2 px-2 text-center bg-gray-600 rounded-tr-md\">\r\n                      Action\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {(\r\n                    managerDealData?.deals || [\r\n                      {\r\n                        id: 'D12345',\r\n                        stockNumber: 'S9876',\r\n                        customer: 'Johnson',\r\n                        vehicleType: 'N', // N for New\r\n                        date: '06/12/2023',\r\n                        salesperson: 'Sarah Johnson',\r\n                        initials: 'SJ',\r\n                        frontGross: 1850,\r\n                        financeGross: 1200,\r\n                        totalGross: 3050,\r\n                        status: 'Funded',\r\n                        csiFollowUp: true,\r\n                      },\r\n                      {\r\n                        id: 'D12346',\r\n                        stockNumber: 'S9452',\r\n                        customer: 'Williams',\r\n                        vehicleType: 'U', // U for Used\r\n                        date: '06/10/2023',\r\n                        salesperson: 'Michael Chen',\r\n                        initials: 'MC',\r\n                        frontGross: 1300,\r\n                        financeGross: 950,\r\n                        totalGross: 2250,\r\n                        status: 'Pending',\r\n                        csiFollowUp: false,\r\n                      },\r\n                      {\r\n                        id: 'D12347',\r\n                        stockNumber: 'S8765',\r\n                        customer: 'Martinez',\r\n                        vehicleType: 'C', // C for CPO\r\n                        date: '06/09/2023',\r\n                        salesperson: 'David Rodriguez',\r\n                        initials: 'DR',\r\n                        frontGross: 2100,\r\n                        financeGross: 1400,\r\n                        totalGross: 3500,\r\n                        status: 'Funded',\r\n                        csiFollowUp: true,\r\n                      },\r\n                      {\r\n                        id: 'D12348',\r\n                        stockNumber: 'S7620',\r\n                        customer: 'Taylor',\r\n                        vehicleType: 'U',\r\n                        date: '06/07/2023',\r\n                        salesperson: 'Amanda Williams',\r\n                        initials: 'AW',\r\n                        frontGross: 1750,\r\n                        financeGross: 1050,\r\n                        totalGross: 2800,\r\n                        status: 'Funded',\r\n                        csiFollowUp: true,\r\n                      },\r\n                      {\r\n                        id: 'D12349',\r\n                        stockNumber: 'S8452',\r\n                        customer: 'Garcia',\r\n                        vehicleType: 'N',\r\n                        date: '06/05/2023',\r\n                        salesperson: 'Robert Johnson',\r\n                        initials: 'RJ',\r\n                        frontGross: 1500,\r\n                        financeGross: 1100,\r\n                        totalGross: 2600,\r\n                        status: 'Pending',\r\n                        csiFollowUp: false,\r\n                      },\r\n                      {\r\n                        id: 'D12350',\r\n                        stockNumber: 'S9123',\r\n                        customer: 'Miller',\r\n                        vehicleType: 'C',\r\n                        date: '06/04/2023',\r\n                        salesperson: 'Sarah Johnson',\r\n                        initials: 'SJ',\r\n                        frontGross: 2250,\r\n                        financeGross: 1320,\r\n                        totalGross: 3570,\r\n                        status: 'Funded',\r\n                        csiFollowUp: true,\r\n                      },\r\n                      {\r\n                        id: 'D12351',\r\n                        stockNumber: 'S7845',\r\n                        customer: 'Davis',\r\n                        vehicleType: 'U',\r\n                        date: '06/03/2023',\r\n                        salesperson: 'Michael Chen',\r\n                        initials: 'MC',\r\n                        frontGross: 1420,\r\n                        financeGross: 980,\r\n                        totalGross: 2400,\r\n                        status: 'Funded',\r\n                        csiFollowUp: false,\r\n                      },\r\n                      {\r\n                        id: 'D12352',\r\n                        stockNumber: 'S8932',\r\n                        customer: 'Wilson',\r\n                        vehicleType: 'N',\r\n                        date: '06/02/2023',\r\n                        salesperson: 'David Rodriguez',\r\n                        initials: 'DR',\r\n                        frontGross: 1950,\r\n                        financeGross: 1250,\r\n                        totalGross: 3200,\r\n                        status: 'Unwound',\r\n                        csiFollowUp: false,\r\n                      },\r\n                      {\r\n                        id: 'D12353',\r\n                        stockNumber: 'S7534',\r\n                        customer: 'Thompson',\r\n                        vehicleType: 'C',\r\n                        date: '06/01/2023',\r\n                        salesperson: 'Amanda Williams',\r\n                        initials: 'AW',\r\n                        frontGross: 1650,\r\n                        financeGross: 1020,\r\n                        totalGross: 2670,\r\n                        status: 'Funded',\r\n                        csiFollowUp: true,\r\n                      },\r\n                      {\r\n                        id: 'D12354',\r\n                        stockNumber: 'S8721',\r\n                        customer: 'Anderson',\r\n                        vehicleType: 'N',\r\n                        date: '05/31/2023',\r\n                        salesperson: 'Robert Johnson',\r\n                        initials: 'RJ',\r\n                        frontGross: 2050,\r\n                        financeGross: 1350,\r\n                        totalGross: 3400,\r\n                        status: 'Funded',\r\n                        csiFollowUp: true,\r\n                      },\r\n                    ]\r\n                  )\r\n                    .slice(0, 10)\r\n                    .map((deal, index) => {\r\n                      // Status badge colors\r\n                      const statusColor =\r\n                        (deal.status || deal.dealStatus) === 'Funded'\r\n                          ? 'bg-green-100 text-green-800 border-green-200'\r\n                          : (deal.status || deal.dealStatus) === 'Unwound'\r\n                          ? 'bg-red-100 text-red-800 border-red-200'\r\n                          : 'bg-amber-100 text-amber-800 border-amber-200';\r\n\r\n                      // Calculate the reverse index (10, 9, 8, ..., 1)\r\n                      const reverseIndex = 10 - index;\r\n\r\n                      return (\r\n                        <tr\r\n                          key={deal.id || deal.dealNumber}\r\n                          className={`border-b ${\r\n                            index % 2 === 1 ? 'bg-gray-50' : ''\r\n                          } hover:bg-blue-50`}\r\n                        >\r\n                          <td className=\"py-2 px-2 text-center font-medium\">{reverseIndex}</td>\r\n                          <td className=\"py-2 pl-4 pr-2 text-left font-medium text-blue-600\">\r\n                            {deal.dealNumber || deal.id}\r\n                          </td>\r\n                          <td className=\"py-2 px-2 text-left\">{deal.stockNumber}</td>\r\n                          <td className=\"py-2 px-2 text-left font-medium\">\r\n                            {deal.customer || deal.lastName}\r\n                          </td>\r\n                          <td className=\"py-2 px-2 text-center text-gray-600\">\r\n                            {deal.date || deal.dealDate}\r\n                          </td>\r\n                          <td className=\"py-2 px-2 text-center\">\r\n                            <span\r\n                              className={`px-1.5 py-0.5 rounded text-xs font-medium ${\r\n                                deal.vehicleType === 'N'\r\n                                  ? 'bg-green-100 text-green-800'\r\n                                  : deal.vehicleType === 'U' || deal.vehicleType === 'C'\r\n                                  ? 'bg-amber-100 text-amber-800'\r\n                                  : 'bg-blue-100 text-blue-800'\r\n                              }`}\r\n                            >\r\n                              {deal.vehicleType || 'U'}\r\n                            </span>\r\n                          </td>\r\n                          <td className=\"py-2 px-2 text-center font-medium\">\r\n                            {deal.initials ||\r\n                              deal.salesperson?.substring(0, 2)?.toUpperCase() ||\r\n                              'SP'}\r\n                          </td>\r\n                          <td className=\"py-2 px-2 text-right\">\r\n                            ${(deal.frontGross || deal.frontEndGross || 0).toLocaleString()}\r\n                          </td>\r\n                          <td className=\"py-2 px-2 text-right\">\r\n                            $\r\n                            {(\r\n                              deal.financeGross ||\r\n                              deal.backEndGross ||\r\n                              deal.profit ||\r\n                              0\r\n                            ).toLocaleString()}\r\n                          </td>\r\n                          <td className=\"py-2 px-2 text-right font-medium text-green-600\">\r\n                            $\r\n                            {(\r\n                              deal.totalGross ||\r\n                              (deal.frontGross || deal.frontEndGross || 0) +\r\n                                (deal.financeGross || deal.backEndGross || deal.profit || 0)\r\n                            ).toLocaleString()}\r\n                          </td>\r\n                          <td className=\"py-2 px-2 text-center\">\r\n                            <span\r\n                              className={`px-2 py-1 rounded-full text-xs font-medium ${statusColor}`}\r\n                            >\r\n                              {deal.status || deal.dealStatus || 'Pending'}\r\n                            </span>\r\n                          </td>\r\n                          <td className=\"py-2 px-2 text-center\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              checked={deal.csiFollowUp || false}\r\n                              className=\"h-4 w-4 text-blue-600 rounded border-gray-300 focus:ring-blue-500\"\r\n                            />\r\n                          </td>\r\n                          <td className=\"py-2 px-2 text-center\">\r\n                            <Dialog\r\n                              open={isEditing && selectedDeal?.id === (deal.id || deal.dealNumber)}\r\n                              onOpenChange={open => {\r\n                                if (!open) setIsEditing(false);\r\n                              }}\r\n                            >\r\n                              <DialogTrigger asChild>\r\n                                <Button\r\n                                  variant=\"ghost\"\r\n                                  size=\"icon\"\r\n                                  className=\"h-7 w-7\"\r\n                                  onClick={() => {\r\n                                    setSelectedDeal({\r\n                                      id: deal.id || deal.dealNumber,\r\n                                      frontGross: deal.frontGross || deal.frontEndGross || 0,\r\n                                      status: deal.status || deal.dealStatus || 'Pending',\r\n                                    });\r\n                                    setIsEditing(true);\r\n                                  }}\r\n                                >\r\n                                  <Edit className=\"h-3.5 w-3.5\" />\r\n                                </Button>\r\n                              </DialogTrigger>\r\n                              <DialogContent className=\"sm:max-w-[425px]\">\r\n                                <DialogHeader>\r\n                                  <DialogTitle>Edit Deal</DialogTitle>\r\n                                  <DialogDescription>\r\n                                    Update deal information for {deal.customer || deal.lastName}\r\n                                  </DialogDescription>\r\n                                </DialogHeader>\r\n                                <form onSubmit={handleSubmit}>\r\n                                  <div className=\"grid gap-4 py-4\">\r\n                                    <div className=\"grid gap-2\">\r\n                                      <Label htmlFor=\"frontGross\">Front End Gross ($)</Label>\r\n                                      <Input\r\n                                        id=\"frontGross\"\r\n                                        type=\"number\"\r\n                                        value={selectedDeal?.frontGross || 0}\r\n                                        onChange={handleFrontGrossChange}\r\n                                      />\r\n                                    </div>\r\n                                    <div className=\"grid gap-2\">\r\n                                      <Label htmlFor=\"status\">Deal Status</Label>\r\n                                      <Select\r\n                                        value={selectedDeal?.status || 'Pending'}\r\n                                        onValueChange={handleStatusChange}\r\n                                      >\r\n                                        <SelectTrigger id=\"status\">\r\n                                          <SelectValue placeholder=\"Select status\" />\r\n                                        </SelectTrigger>\r\n                                        <SelectContent>\r\n                                          <SelectItem value=\"Pending\">Pending</SelectItem>\r\n                                          <SelectItem value=\"Funded\">Funded</SelectItem>\r\n                                          <SelectItem value=\"Unwound\">Unwound</SelectItem>\r\n                                        </SelectContent>\r\n                                      </Select>\r\n\r\n                                      {selectedDeal?.status === 'Unwound' && (\r\n                                        <p className=\"text-xs text-red-500 mt-1\">\r\n                                          Warning: Unwinding a deal may affect salesperson\r\n                                          commissions.\r\n                                        </p>\r\n                                      )}\r\n                                    </div>\r\n                                  </div>\r\n                                  <DialogFooter>\r\n                                    <Button type=\"submit\" disabled={isSaving}>\r\n                                      {isSaving ? (\r\n                                        <>\r\n                                          <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n                                          Saving\r\n                                        </>\r\n                                      ) : (\r\n                                        <>\r\n                                          <Save className=\"mr-2 h-4 w-4\" />\r\n                                          Save Changes\r\n                                        </>\r\n                                      )}\r\n                                    </Button>\r\n                                  </DialogFooter>\r\n                                </form>\r\n                              </DialogContent>\r\n                            </Dialog>\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                </tbody>\r\n                <tfoot>\r\n                  <tr className=\"bg-gray-100 border-t border-t-gray-200 font-medium\">\r\n                    <td colSpan={6} className=\"py-2 pl-4 text-left\">\r\n                      TOTALS\r\n                    </td>\r\n                    <td className=\"py-2 px-2 text-right\">\r\n                      $\r\n                      {[1850, 1300, 2100, 1750, 1500, 2250, 1420, 1950, 1650, 2050]\r\n                        .reduce((sum, value) => sum + value, 0)\r\n                        .toLocaleString()}\r\n                    </td>\r\n                    <td className=\"py-2 px-2 text-right\">\r\n                      $\r\n                      {[1200, 950, 1400, 1050, 1100, 1320, 980, 1250, 1020, 1350]\r\n                        .reduce((sum, value) => sum + value, 0)\r\n                        .toLocaleString()}\r\n                    </td>\r\n                    <td className=\"py-2 px-2 text-right text-green-600 font-medium\">\r\n                      $\r\n                      {[3050, 2250, 3500, 2800, 2600, 3570, 2400, 3200, 2670, 3400]\r\n                        .reduce((sum, value) => sum + value, 0)\r\n                        .toLocaleString()}\r\n                    </td>\r\n                    <td></td>\r\n                  </tr>\r\n                </tfoot>\r\n              </table>\r\n              {/* Information about current page */}\r\n              <div className=\"flex justify-between items-center px-4 py-3 border-t\">\r\n                <div className=\"text-sm text-gray-500\">Showing deals 1-10 of 45</div>\r\n                <div className=\"flex space-x-1\">\r\n                  <Button variant=\"outline\" size=\"sm\">\r\n                    Previous\r\n                  </Button>\r\n                  <Button variant=\"outline\" size=\"sm\">\r\n                    Next\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Scroll navigation buttons on the right */}\r\n            <div className=\"w-12 border-l bg-gray-50 flex flex-col items-center justify-between py-4\">\r\n              <div className=\"flex flex-col space-y-2\">\r\n                <Button variant=\"outline\" size=\"sm\" className=\"w-8 h-8 p-0\">\r\n                  <ChevronUp className=\"h-4 w-4\" />\r\n                </Button>\r\n                <Button variant=\"outline\" size=\"sm\" className=\"w-8 h-8 p-0\">\r\n                  <ChevronUp className=\"h-4 w-4\" />\r\n                </Button>\r\n              </div>\r\n              <div className=\"text-xs text-gray-500 text-center py-2\">10/45</div>\r\n              <div className=\"flex flex-col space-y-2\">\r\n                <Button variant=\"outline\" size=\"sm\" className=\"w-8 h-8 p-0\">\r\n                  <ChevronDown className=\"h-4 w-4\" />\r\n                </Button>\r\n                <Button variant=\"outline\" size=\"sm\" className=\"w-8 h-8 p-0\">\r\n                  <ChevronDown className=\"h-4 w-4\" />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Team Performance Metrics</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <Table>\r\n            <TableHeader>\r\n              <TableRow>\r\n                <TableHead>Salesperson</TableHead>\r\n                <TableHead>Team</TableHead>\r\n                <TableHead className=\"text-center\">Target Goal</TableHead>\r\n                <TableHead className=\"text-center\">Sold (MTD)</TableHead>\r\n                <TableHead className=\"text-right\">Avg Front</TableHead>\r\n                <TableHead className=\"text-right\">Avg Back End</TableHead>\r\n                <TableHead className=\"text-center\">CSI Follow Up</TableHead>\r\n                <TableHead className=\"text-right\">% of Goal</TableHead>\r\n              </TableRow>\r\n            </TableHeader>\r\n            <TableBody>\r\n              {[\r\n                {\r\n                  name: 'Sarah Johnson',\r\n                  initials: 'SJ',\r\n                  team: 'A',\r\n                  targetGoal: 30,\r\n                  actualDeals: 24,\r\n                  avgFront: 1850,\r\n                  avgBackEnd: 1200,\r\n                  csiFollowUp: 92,\r\n                  percentGoal: 80,\r\n                },\r\n                {\r\n                  name: 'Michael Chen',\r\n                  initials: 'MC',\r\n                  team: 'A',\r\n                  targetGoal: 25,\r\n                  actualDeals: 20,\r\n                  avgFront: 1320,\r\n                  avgBackEnd: 980,\r\n                  csiFollowUp: 85,\r\n                  percentGoal: 80,\r\n                },\r\n                {\r\n                  name: 'David Rodriguez',\r\n                  initials: 'DR',\r\n                  team: 'A',\r\n                  targetGoal: 22,\r\n                  actualDeals: 18,\r\n                  avgFront: 1950,\r\n                  avgBackEnd: 1250,\r\n                  csiFollowUp: 75,\r\n                  percentGoal: 82,\r\n                },\r\n                {\r\n                  name: 'Amanda Williams',\r\n                  initials: 'AW',\r\n                  team: 'B',\r\n                  targetGoal: 20,\r\n                  actualDeals: 16,\r\n                  avgFront: 1650,\r\n                  avgBackEnd: 1020,\r\n                  csiFollowUp: 95,\r\n                  percentGoal: 80,\r\n                },\r\n                {\r\n                  name: 'Robert Johnson',\r\n                  initials: 'RJ',\r\n                  team: 'B',\r\n                  targetGoal: 18,\r\n                  actualDeals: 15,\r\n                  avgFront: 2050,\r\n                  avgBackEnd: 1350,\r\n                  csiFollowUp: 88,\r\n                  percentGoal: 83,\r\n                },\r\n              ].map((person, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell className=\"font-medium\">{person.name}</TableCell>\r\n                  <TableCell className=\"text-center\">\r\n                    <span\r\n                      className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n                        person.team === 'A'\r\n                          ? 'bg-blue-100 text-blue-800'\r\n                          : 'bg-purple-100 text-purple-800'\r\n                      }`}\r\n                    >\r\n                      Team {person.team}\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell className=\"text-center\">{person.targetGoal}</TableCell>\r\n                  <TableCell className=\"text-center\">{person.actualDeals}</TableCell>\r\n                  <TableCell className=\"text-right\">${person.avgFront.toLocaleString()}</TableCell>\r\n                  <TableCell className=\"text-right\">\r\n                    ${person.avgBackEnd.toLocaleString()}\r\n                  </TableCell>\r\n                  <TableCell className=\"text-center\">\r\n                    <div className=\"flex items-center justify-center\">\r\n                      <span\r\n                        className={`text-xs font-medium px-2 py-1 rounded-full ${\r\n                          person.csiFollowUp >= 90\r\n                            ? 'bg-green-100 text-green-800'\r\n                            : person.csiFollowUp >= 80\r\n                            ? 'bg-blue-100 text-blue-800'\r\n                            : 'bg-amber-100 text-amber-800'\r\n                        }`}\r\n                      >\r\n                        {person.csiFollowUp}%\r\n                      </span>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell className=\"text-right\">\r\n                    <div className=\"flex items-center justify-end\">\r\n                      <div className=\"w-16 h-2 bg-gray-100 rounded-full mr-2 overflow-hidden\">\r\n                        <div\r\n                          className={`h-full rounded-full ${\r\n                            person.percentGoal >= 90\r\n                              ? 'bg-green-500'\r\n                              : person.percentGoal >= 70\r\n                              ? 'bg-blue-500'\r\n                              : person.percentGoal >= 50\r\n                              ? 'bg-amber-500'\r\n                              : 'bg-red-500'\r\n                          }`}\r\n                          style={{ width: `${Math.min(person.percentGoal, 100)}%` }}\r\n                        ></div>\r\n                      </div>\r\n                      <span className=\"text-xs font-medium\">{person.percentGoal}%</span>\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Placeholder components for the routes\r\nfunction TeamLeaderboard() {\r\n  return (\r\n    <Card className=\"p-6\">\r\n      <CardHeader>\r\n        <CardTitle>Team Leaderboard</CardTitle>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <p>The team leaderboard feature is coming soon.</p>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction PayCalculator() {\r\n  return (\r\n    <Card className=\"p-6\">\r\n      <CardHeader>\r\n        <CardTitle>Pay Calculator</CardTitle>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <p>The pay calculator feature is coming soon.</p>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction TeamAnalytics() {\r\n  return (\r\n    <Card className=\"p-6\">\r\n      <CardHeader>\r\n        <CardTitle>Team Analytics</CardTitle>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <p>The team analytics feature is coming soon.</p>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction GoalTracking() {\r\n  return (\r\n    <Card className=\"p-6\">\r\n      <CardHeader>\r\n        <CardTitle>Goal Tracking</CardTitle>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <p>The goal tracking feature is coming soon.</p>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default SalesManagerDashboard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '@/contexts/AuthContext';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardDescription,\r\n  CardFooter,\r\n} from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  BarChart,\r\n  FileText,\r\n  DollarSign,\r\n  TrendingUp,\r\n  Users,\r\n  Car,\r\n  CalendarClock,\r\n  Landmark,\r\n  PieChart,\r\n  Target,\r\n  Calculator,\r\n  ArrowUp,\r\n  ArrowDown,\r\n  Calendar,\r\n  Building,\r\n  ChevronDown,\r\n  BarChart3,\r\n  Percent,\r\n  ArrowUpDown,\r\n  User,\r\n  Activity,\r\n  Briefcase,\r\n  LineChart,\r\n  Info,\r\n  Trophy,\r\n} from 'lucide-react';\r\n\r\nconst GMDashboard = () => {\r\n  const { user, role, dealershipId } = useAuth();\r\n  const [timePeriod, setTimePeriod] = useState<string>('this-month');\r\n\r\n  // Sample data for dashboard\r\n  const dealershipData = {\r\n    totalGross: 125600,\r\n    frontEndGross: 82400,\r\n    financeGross: 43200,\r\n    totalUnits: 86,\r\n    newCars: 52,\r\n    usedCars: 34,\r\n    salesGoal: 100,\r\n    salesPerformance: 86,\r\n    avgPerDeal: 1460,\r\n    avgFrontGross: 958,\r\n    avgFinanceGross: 502,\r\n    lastMonthComparison: {\r\n      totalGross: 8.5,\r\n      frontEndGross: 6.2,\r\n      financeGross: 12.4,\r\n      totalUnits: 9.3,\r\n      avgPerDeal: 4.8,\r\n    },\r\n  };\r\n\r\n  const [data, setData] = useState(dealershipData);\r\n\r\n  useEffect(() => {\r\n    console.log('[GMDashboard] Rendering general manager dashboard', {\r\n      userId: user?.id,\r\n      role,\r\n      dealershipId,\r\n      timestamp: new Date().toISOString(),\r\n    });\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      console.log('[GMDashboard] Unmounting general manager dashboard');\r\n    };\r\n  }, [user, role, dealershipId]);\r\n\r\n  // Format currency\r\n  const formatCurrency = amount => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 0,\r\n    }).format(amount);\r\n  };\r\n\r\n  // Get period label for display\r\n  const getPeriodLabel = (period: string): string => {\r\n    const today = new Date();\r\n    const month = today.toLocaleString('default', { month: 'long' });\r\n    const year = today.getFullYear();\r\n\r\n    switch (period) {\r\n      case 'this-month':\r\n        return `${month} ${year}`;\r\n      case 'last-month':\r\n        const lastMonth =\r\n          today.getMonth() === 0\r\n            ? 'December'\r\n            : new Date(today.getFullYear(), today.getMonth() - 1, 1).toLocaleString('default', {\r\n                month: 'long',\r\n              });\r\n        const lastMonthYear =\r\n          today.getMonth() === 0 ? today.getFullYear() - 1 : today.getFullYear();\r\n        return `${lastMonth} ${lastMonthYear}`;\r\n      case 'last-quarter':\r\n        const currentQuarter = Math.floor(today.getMonth() / 3);\r\n        return `Q${currentQuarter === 0 ? 4 : currentQuarter} ${\r\n          currentQuarter === 0 ? year - 1 : year\r\n        }`;\r\n      case 'ytd':\r\n        return `Year to Date ${year}`;\r\n      case 'last-year':\r\n        return `${year - 1}`;\r\n      default:\r\n        return `${month} ${year}`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container py-6\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <div className=\"flex-grow\">\r\n          <h1 className=\"text-3xl font-bold\">General Manager Dashboard</h1>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Dashboard Header with Month/Year */}\r\n      <div className=\"mb-6\">\r\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n          <div className=\"flex flex-row items-center gap-4\">\r\n            <h2 className=\"text-3xl font-bold text-gray-900\">{getPeriodLabel(timePeriod)}</h2>\r\n            <div className=\"flex items-center\">\r\n              <Calendar className=\"h-5 w-5 text-gray-500 mr-1\" />\r\n              <select\r\n                value={timePeriod}\r\n                onChange={e => setTimePeriod(e.target.value)}\r\n                className=\"p-2 border rounded-md shadow-sm\"\r\n              >\r\n                <option value=\"this-month\">This Month</option>\r\n                <option value=\"last-month\">Last Month</option>\r\n                <option value=\"last-quarter\">Last Quarter</option>\r\n                <option value=\"ytd\">Year to Date</option>\r\n                <option value=\"last-year\">Last Year</option>\r\n              </select>\r\n            </div>\r\n            <p className=\"text-gray-500\">GM Performance Dashboard</p>\r\n          </div>\r\n\r\n          <div className=\"flex items-center\">\r\n            <div className=\"text-lg font-medium text-gray-700\">\r\n              {user?.email || 'General Manager'}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-4 mb-6\">\r\n        {/* Box 1: Gross Profits */}\r\n        <Card className=\"border-l-4 border-l-green-500\">\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium flex items-center\">\r\n              <DollarSign className=\"mr-2 h-4 w-4 text-green-500\" />\r\n              Gross Profit\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{formatCurrency(data.totalGross)}</div>\r\n            <div className=\"mt-2 space-y-1\">\r\n              <div className=\"flex justify-between items-center text-sm\">\r\n                <span className=\"text-gray-500\">Front End Gross:</span>\r\n                <span className=\"font-medium\">{formatCurrency(data.frontEndGross)}</span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center text-sm\">\r\n                <span className=\"text-gray-500\">Finance Gross:</span>\r\n                <span className=\"font-medium\">{formatCurrency(data.financeGross)}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-center pt-2 text-xs\">\r\n              <span\r\n                className={`flex items-center ${\r\n                  data.lastMonthComparison.totalGross >= 0 ? 'text-green-500' : 'text-red-500'\r\n                }`}\r\n              >\r\n                {data.lastMonthComparison.totalGross >= 0 ? (\r\n                  <ArrowUp className=\"h-3 w-3 mr-1\" />\r\n                ) : (\r\n                  <ArrowDown className=\"h-3 w-3 mr-1\" />\r\n                )}\r\n                {Math.abs(data.lastMonthComparison.totalGross)}% from last month\r\n              </span>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Box 2: Units Sold with New/Used Breakdown */}\r\n        <Card className=\"border-l-4 border-l-blue-500\">\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium flex items-center\">\r\n              <Car className=\"mr-2 h-4 w-4 text-blue-500\" />\r\n              Total Units\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{data.totalUnits}</div>\r\n            <div className=\"mt-2 space-y-1\">\r\n              <div className=\"flex justify-between items-center text-sm\">\r\n                <span className=\"text-gray-500\">New Cars:</span>\r\n                <span className=\"font-medium\">{data.newCars}</span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center text-sm\">\r\n                <span className=\"text-gray-500\">Used Cars:</span>\r\n                <span className=\"font-medium\">{data.usedCars}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-center pt-2 text-xs\">\r\n              <span\r\n                className={`flex items-center ${\r\n                  data.lastMonthComparison.totalUnits >= 0 ? 'text-green-500' : 'text-red-500'\r\n                }`}\r\n              >\r\n                {data.lastMonthComparison.totalUnits >= 0 ? (\r\n                  <ArrowUp className=\"h-3 w-3 mr-1\" />\r\n                ) : (\r\n                  <ArrowDown className=\"h-3 w-3 mr-1\" />\r\n                )}\r\n                {Math.abs(data.lastMonthComparison.totalUnits)}% from last month\r\n              </span>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Box 3: Sales Performance */}\r\n        <Card className=\"border-l-4 border-l-purple-500\">\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium flex items-center\">\r\n              <Target className=\"mr-2 h-4 w-4 text-purple-500\" />\r\n              Sales Performance\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{data.salesPerformance}%</div>\r\n            <div className=\"mt-2\">\r\n              <div className=\"flex justify-between items-center text-sm mb-1\">\r\n                <span className=\"text-gray-500\">Goal: {data.salesGoal} units</span>\r\n                <span className=\"font-medium\">\r\n                  {data.totalUnits}/{data.salesGoal}\r\n                </span>\r\n              </div>\r\n              <div className=\"h-2 w-full bg-gray-100 rounded-full\">\r\n                <div\r\n                  className={`h-full rounded-full ${\r\n                    data.salesPerformance >= 100\r\n                      ? 'bg-green-500'\r\n                      : data.salesPerformance >= 80\r\n                      ? 'bg-yellow-500'\r\n                      : 'bg-red-500'\r\n                  }`}\r\n                  style={{ width: `${Math.min(data.salesPerformance, 100)}%` }}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-center pt-2 text-xs\">\r\n              <span className=\"text-gray-500\">\r\n                {data.salesGoal - data.totalUnits > 0\r\n                  ? `${data.salesGoal - data.totalUnits} more units to goal`\r\n                  : 'Goal achieved!'}\r\n              </span>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Box 4: Average Per Deal */}\r\n        <Card className=\"border-l-4 border-l-amber-500\">\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium flex items-center\">\r\n              <Calculator className=\"mr-2 h-4 w-4 text-amber-500\" />\r\n              Average Per Deal\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{formatCurrency(data.avgPerDeal)}</div>\r\n            <div className=\"mt-2 space-y-1\">\r\n              <div className=\"flex justify-between items-center text-sm\">\r\n                <span className=\"text-gray-500\">Avg Front Gross:</span>\r\n                <span className=\"font-medium\">{formatCurrency(data.avgFrontGross)}</span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center text-sm\">\r\n                <span className=\"text-gray-500\">Avg F&I Gross:</span>\r\n                <span className=\"font-medium\">{formatCurrency(data.avgFinanceGross)}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-center pt-2 text-xs\">\r\n              <span\r\n                className={`flex items-center ${\r\n                  data.lastMonthComparison.avgPerDeal >= 0 ? 'text-green-500' : 'text-red-500'\r\n                }`}\r\n              >\r\n                {data.lastMonthComparison.avgPerDeal >= 0 ? (\r\n                  <ArrowUp className=\"h-3 w-3 mr-1\" />\r\n                ) : (\r\n                  <ArrowDown className=\"h-3 w-3 mr-1\" />\r\n                )}\r\n                {Math.abs(data.lastMonthComparison.avgPerDeal)}% from last month\r\n              </span>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Dashboards Section */}\r\n      <div className=\"grid grid-cols-12 gap-6 mb-6\">\r\n        {/* Finance Das Board (Left) */}\r\n        <Card className=\"col-span-12 md:col-span-6\">\r\n          <CardHeader className=\"bg-green-50 border-b border-green-100\">\r\n            <CardTitle className=\"text-lg font-semibold text-green-700 flex items-center\">\r\n              <Trophy className=\"mr-2 h-5 w-5 text-yellow-500\" />\r\n              Finance Das Board\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"p-0\">\r\n            <div className=\"overflow-x-auto\">\r\n              <div className=\"min-w-full\">\r\n                {/* Sortable Header */}\r\n                <div className=\"flex items-center text-xs font-medium text-white border-b py-2 px-1\">\r\n                  <div className=\"w-10 text-center bg-gray-600 py-2 rounded-l-md\">#</div>\r\n                  <div className=\"w-36 flex-shrink-0 bg-gray-600 py-2 px-2\">F&I Manager</div>\r\n                  <div className=\"w-28 text-center bg-purple-600 py-2 flex items-center justify-center cursor-pointer hover:bg-purple-700\">\r\n                    PVR <ChevronDown className=\"ml-1 h-3 w-3\" />\r\n                  </div>\r\n                  <div className=\"w-28 text-center bg-teal-600 py-2 flex items-center justify-center cursor-pointer hover:bg-teal-700\">\r\n                    VSC % <ChevronDown className=\"ml-1 h-3 w-3\" />\r\n                  </div>\r\n                  <div className=\"w-28 text-center bg-purple-600 py-2 flex items-center justify-center cursor-pointer hover:bg-purple-700\">\r\n                    PPM % <ChevronDown className=\"ml-1 h-3 w-3\" />\r\n                  </div>\r\n                  <div className=\"w-24 text-center bg-pink-600 py-2 flex items-center justify-center cursor-pointer hover:bg-pink-700\">\r\n                    PPD <ChevronDown className=\"ml-1 h-3 w-3\" />\r\n                  </div>\r\n                  <div className=\"w-36 text-right bg-indigo-600 py-2 pr-3 flex items-center justify-end cursor-pointer hover:bg-indigo-700 font-semibold rounded-r-md\">\r\n                    Profit <ChevronDown className=\"ml-1 h-3 w-3\" />\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Leaderboard Entries */}\r\n                <div>\r\n                  {[\r\n                    {\r\n                      name: 'Ashley Rodriguez',\r\n                      pvr: 2650,\r\n                      vscPen: 68,\r\n                      ppmPen: 54,\r\n                      ppd: 3.2,\r\n                      profit: 143200,\r\n                    },\r\n                    {\r\n                      name: 'Michael Parker',\r\n                      pvr: 2450,\r\n                      vscPen: 65,\r\n                      ppmPen: 48,\r\n                      ppd: 2.9,\r\n                      profit: 127500,\r\n                    },\r\n                    {\r\n                      name: 'Sophia Martinez',\r\n                      pvr: 2320,\r\n                      vscPen: 61,\r\n                      ppmPen: 45,\r\n                      ppd: 2.7,\r\n                      profit: 115300,\r\n                    },\r\n                    {\r\n                      name: 'James Wilson',\r\n                      pvr: 2200,\r\n                      vscPen: 58,\r\n                      ppmPen: 42,\r\n                      ppd: 2.5,\r\n                      profit: 96500,\r\n                    },\r\n                    {\r\n                      name: 'Emma Johnson',\r\n                      pvr: 2100,\r\n                      vscPen: 55,\r\n                      ppmPen: 38,\r\n                      ppd: 2.3,\r\n                      profit: 84200,\r\n                    },\r\n                  ].map((manager, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`flex items-center py-2 px-1 ${\r\n                        index !== 4 ? 'border-b' : ''\r\n                      } border-gray-100 text-sm hover:bg-gray-50`}\r\n                    >\r\n                      <div className=\"w-10 flex justify-center\">\r\n                        <div\r\n                          className={`w-5 h-5 rounded-full flex items-center justify-center\r\n                          ${\r\n                            index === 0\r\n                              ? 'bg-yellow-100 text-yellow-600'\r\n                              : index === 1\r\n                              ? 'bg-gray-100 text-gray-600'\r\n                              : index === 2\r\n                              ? 'bg-amber-100 text-amber-600'\r\n                              : 'bg-blue-50 text-blue-500'\r\n                          }`}\r\n                        >\r\n                          <span className=\"text-xs font-bold\">{index + 1}</span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"w-36 flex-shrink-0 font-medium px-2\">{manager.name}</div>\r\n                      <div className=\"w-28 text-center\">${manager.pvr}</div>\r\n                      <div className=\"w-28 text-center\">{manager.vscPen}%</div>\r\n                      <div className=\"w-28 text-center\">{manager.ppmPen}%</div>\r\n                      <div className=\"w-24 text-center\">{manager.ppd}</div>\r\n                      <div className=\"w-36 text-right pr-3 font-semibold text-green-700\">\r\n                        ${manager.profit.toLocaleString()}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Sales Manager Das Board */}\r\n        <Card className=\"col-span-12 md:col-span-6\">\r\n          <CardHeader className=\"bg-purple-50 border-b border-purple-100\">\r\n            <CardTitle className=\"text-lg font-semibold text-purple-700 flex items-center\">\r\n              <Users className=\"h-5 w-5 text-purple-600 mr-2\" />\r\n              Sales Manager Das Board\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"p-0\">\r\n            <div className=\"overflow-x-auto\">\r\n              <div className=\"min-w-full\">\r\n                <div className=\"flex items-center text-xs font-medium text-white border-b py-2 px-1\">\r\n                  <div className=\"w-10 text-center bg-gray-600 py-2 rounded-l-md\">#</div>\r\n                  <div className=\"w-40 flex-shrink-0 bg-gray-600 py-2 px-2\">Manager</div>\r\n                  <div className=\"w-28 text-center bg-blue-600 py-2\">Team Units</div>\r\n                  <div className=\"w-28 text-center bg-green-600 py-2\">Total Gross</div>\r\n                  <div className=\"w-28 text-center bg-purple-600 py-2\">Avg Front</div>\r\n                  <div className=\"w-28 text-center bg-indigo-600 py-2 rounded-r-md\">Avg Back</div>\r\n                </div>\r\n\r\n                {/* Sample data rows */}\r\n                {[\r\n                  {\r\n                    name: 'John Smith',\r\n                    units: 45,\r\n                    gross: 84500,\r\n                    avgFront: 1250,\r\n                    avgBack: 950,\r\n                  },\r\n                  {\r\n                    name: 'Jessica Lee',\r\n                    units: 41,\r\n                    gross: 78900,\r\n                    avgFront: 1180,\r\n                    avgBack: 920,\r\n                  },\r\n                ].map((manager, index) => (\r\n                  <div\r\n                    key={index}\r\n                    className={`flex items-center py-2 px-1 ${\r\n                      index !== 1 ? 'border-b' : ''\r\n                    } border-gray-100 text-sm hover:bg-gray-50`}\r\n                  >\r\n                    <div className=\"w-10 flex justify-center\">{index + 1}</div>\r\n                    <div className=\"w-40 flex-shrink-0 font-medium px-2\">{manager.name}</div>\r\n                    <div className=\"w-28 text-center\">{manager.units}</div>\r\n                    <div className=\"w-28 text-center\">${manager.gross.toLocaleString()}</div>\r\n                    <div className=\"w-28 text-center\">${manager.avgFront}</div>\r\n                    <div className=\"w-28 text-center\">${manager.avgBack}</div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Sales Person Das Board */}\r\n        <Card className=\"col-span-12\">\r\n          <CardHeader className=\"bg-blue-50 border-b border-blue-100\">\r\n            <CardTitle className=\"text-lg font-semibold text-blue-700 flex items-center\">\r\n              <Trophy className=\"h-5 w-5 text-yellow-500 mr-2\" />\r\n              The Das Board\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"p-0\">\r\n            <div className=\"overflow-x-auto\">\r\n              <div className=\"min-w-full\">\r\n                {/* Sortable Header - Performance View */}\r\n                <div className=\"flex items-center text-xs font-medium text-white border-b py-2 px-1\">\r\n                  <div className=\"w-10 text-center bg-gray-600 py-2 rounded-l-md\">#</div>\r\n                  <div className=\"w-40 flex-shrink-0 bg-gray-600 py-2 px-2\">Salesperson</div>\r\n                  <div className=\"w-28 text-center bg-purple-600 py-2 flex items-center justify-center cursor-pointer hover:bg-purple-700\">\r\n                    PVR <ChevronDown className=\"ml-1 h-3 w-3\" />\r\n                  </div>\r\n                  <div className=\"w-36 text-center bg-green-600 py-2 flex items-center justify-center cursor-pointer hover:bg-green-700\">\r\n                    Total Gross <ChevronDown className=\"ml-1 h-3 w-3\" />\r\n                  </div>\r\n                  <div className=\"w-28 text-center bg-blue-600 py-2 flex items-center justify-center cursor-pointer hover:bg-blue-700\">\r\n                    Avg/Mo <ChevronDown className=\"ml-1 h-3 w-3\" />\r\n                  </div>\r\n                  <div className=\"w-28 text-center bg-blue-500 py-2 flex items-center justify-center cursor-pointer hover:bg-blue-600\">\r\n                    Last Mo <ChevronDown className=\"ml-1 h-3 w-3\" />\r\n                  </div>\r\n                  <div className=\"w-28 text-center bg-blue-600 py-2 flex items-center justify-center cursor-pointer hover:bg-blue-700\">\r\n                    YTD <ChevronDown className=\"ml-1 h-3 w-3\" />\r\n                  </div>\r\n                  <div className=\"w-28 text-center bg-blue-500 py-2 flex items-center justify-center cursor-pointer hover:bg-blue-600\">\r\n                    Annual <ChevronDown className=\"ml-1 h-3 w-3\" />\r\n                  </div>\r\n                  <div className=\"w-24 text-center bg-green-600 py-2 flex items-center justify-center cursor-pointer hover:bg-green-700\">\r\n                    New <ChevronDown className=\"ml-1 h-3 w-3\" />\r\n                  </div>\r\n                  <div className=\"w-24 text-center bg-amber-600 py-2 flex items-center justify-center cursor-pointer hover:bg-amber-700\">\r\n                    Used <ChevronDown className=\"ml-1 h-3 w-3\" />\r\n                  </div>\r\n                  <div className=\"w-36 text-right bg-indigo-600 py-2 pr-3 flex items-center justify-end cursor-pointer hover:bg-indigo-700 font-semibold rounded-r-md\">\r\n                    Current Month <ChevronDown className=\"ml-1 h-3 w-3\" />\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Leaderboard Entries */}\r\n                <div>\r\n                  {[\r\n                    {\r\n                      name: 'Michael Scott',\r\n                      units: 14,\r\n                      frontGross: 18200,\r\n                      backGross: 14300,\r\n                      totalGross: 32500,\r\n                      avgMonth: 12,\r\n                      lastMonth: 15,\r\n                      ytd: 82,\r\n                      annualPace: 144,\r\n                      newUnits: 9,\r\n                      usedUnits: 5,\r\n                      pvr: 2321,\r\n                    },\r\n                    {\r\n                      name: 'Jim Halpert',\r\n                      units: 12,\r\n                      frontGross: 16400,\r\n                      backGross: 12500,\r\n                      totalGross: 28900,\r\n                      avgMonth: 10,\r\n                      lastMonth: 11,\r\n                      ytd: 65,\r\n                      annualPace: 120,\r\n                      newUnits: 7,\r\n                      usedUnits: 5,\r\n                      pvr: 2408,\r\n                    },\r\n                    {\r\n                      name: 'Dwight Schrute',\r\n                      units: 11,\r\n                      frontGross: 14800,\r\n                      backGross: 11600,\r\n                      totalGross: 26400,\r\n                      avgMonth: 9,\r\n                      lastMonth: 10,\r\n                      ytd: 58,\r\n                      annualPace: 108,\r\n                      newUnits: 4,\r\n                      usedUnits: 7,\r\n                      pvr: 2400,\r\n                    },\r\n                    {\r\n                      name: 'Pam Beesly',\r\n                      units: 9,\r\n                      frontGross: 11900,\r\n                      backGross: 9800,\r\n                      totalGross: 21700,\r\n                      avgMonth: 8,\r\n                      lastMonth: 7,\r\n                      ytd: 48,\r\n                      annualPace: 96,\r\n                      newUnits: 5,\r\n                      usedUnits: 4,\r\n                      pvr: 2411,\r\n                    },\r\n                    {\r\n                      name: 'Stanley Hudson',\r\n                      units: 8,\r\n                      frontGross: 10500,\r\n                      backGross: 8700,\r\n                      totalGross: 19200,\r\n                      avgMonth: 7,\r\n                      lastMonth: 9,\r\n                      ytd: 42,\r\n                      annualPace: 84,\r\n                      newUnits: 3,\r\n                      usedUnits: 5,\r\n                      pvr: 2400,\r\n                    },\r\n                  ].map((person, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`flex items-center py-2 px-1 ${\r\n                        index !== 4 ? 'border-b' : ''\r\n                      } border-gray-100 text-sm hover:bg-gray-50`}\r\n                    >\r\n                      <div className=\"w-10 flex justify-center\">\r\n                        <div\r\n                          className={`w-5 h-5 rounded-full flex items-center justify-center\r\n                          ${\r\n                            index === 0\r\n                              ? 'bg-yellow-100 text-yellow-600'\r\n                              : index === 1\r\n                              ? 'bg-gray-100 text-gray-600'\r\n                              : index === 2\r\n                              ? 'bg-amber-100 text-amber-600'\r\n                              : 'bg-blue-50 text-blue-500'\r\n                          }`}\r\n                        >\r\n                          <span className=\"text-xs font-bold\">{index + 1}</span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"w-40 flex-shrink-0 font-medium truncate px-2\">\r\n                        {person.name}\r\n                      </div>\r\n                      <div className=\"w-28 text-center bg-purple-50\">${person.pvr}</div>\r\n                      <div className=\"w-36 text-center bg-green-50\">\r\n                        ${person.totalGross.toLocaleString()}\r\n                      </div>\r\n                      <div className=\"w-28 text-center bg-blue-50\">{person.avgMonth}</div>\r\n                      <div className=\"w-28 text-center\">{person.lastMonth}</div>\r\n                      <div className=\"w-28 text-center bg-blue-50\">{person.ytd}</div>\r\n                      <div className=\"w-28 text-center\">{person.annualPace}</div>\r\n                      <div className=\"w-24 text-center bg-green-50\">{person.newUnits}</div>\r\n                      <div className=\"w-24 text-center bg-amber-50\">{person.usedUnits}</div>\r\n                      <div className=\"w-36 text-right pr-3\">\r\n                        <span className=\"text-lg font-bold text-indigo-700\">{person.units}</span>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Department Performance (moved down) */}\r\n      <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-7 mb-6\">\r\n        <Card className=\"col-span-4\">\r\n          <CardHeader>\r\n            <CardTitle>Department Performance</CardTitle>\r\n            <CardDescription>Overall business metrics for the current month</CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"pl-2\">\r\n            <div className=\"space-y-4\">\r\n              <div className=\"flex items-center\">\r\n                <div className=\"w-[100px] text-sm\">Sales</div>\r\n                <div className=\"flex-1\">\r\n                  <div className=\"bg-blue-500 h-2 w-[85%] rounded-full\"></div>\r\n                </div>\r\n                <div className=\"w-[50px] text-right text-sm\">85%</div>\r\n              </div>\r\n              <div className=\"flex items-center\">\r\n                <div className=\"w-[100px] text-sm\">Finance</div>\r\n                <div className=\"flex-1\">\r\n                  <div className=\"bg-green-500 h-2 w-[92%] rounded-full\"></div>\r\n                </div>\r\n                <div className=\"w-[50px] text-right text-sm\">92%</div>\r\n              </div>\r\n              <div className=\"flex items-center\">\r\n                <div className=\"w-[100px] text-sm\">Service</div>\r\n                <div className=\"flex-1\">\r\n                  <div className=\"bg-amber-500 h-2 w-[78%] rounded-full\"></div>\r\n                </div>\r\n                <div className=\"w-[50px] text-right text-sm\">78%</div>\r\n              </div>\r\n              <div className=\"flex items-center\">\r\n                <div className=\"w-[100px] text-sm\">Parts</div>\r\n                <div className=\"flex-1\">\r\n                  <div className=\"bg-purple-500 h-2 w-[68%] rounded-full\"></div>\r\n                </div>\r\n                <div className=\"w-[50px] text-right text-sm\">68%</div>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card className=\"col-span-3\">\r\n          <CardHeader>\r\n            <CardTitle>Quick Actions</CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"grid gap-4\">\r\n            <Button className=\"w-full justify-start\">\r\n              <FileText className=\"mr-2 h-4 w-4\" />\r\n              Dealership Reports\r\n            </Button>\r\n\r\n            <Button variant=\"outline\" className=\"w-full justify-start\">\r\n              <Users className=\"mr-2 h-4 w-4\" />\r\n              Staff Management\r\n            </Button>\r\n\r\n            <Button variant=\"outline\" className=\"w-full justify-start\">\r\n              <Building className=\"mr-2 h-4 w-4\" />\r\n              Inventory Overview\r\n            </Button>\r\n\r\n            <Button variant=\"outline\" className=\"w-full justify-start\">\r\n              <BarChart3 className=\"mr-2 h-4 w-4\" />\r\n              Financial Analysis\r\n            </Button>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GMDashboard;\r\n","import * as React from 'react';\nimport * as TabsPrimitive from '@radix-ui/react-tabs';\n\nimport { cn } from '../../lib/utils';\n\nconst Tabs = TabsPrimitive.Root;\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      'inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground',\n      className\n    )}\n    {...props}\n  />\n));\nTabsList.displayName = TabsPrimitive.List.displayName;\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      'inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow',\n      className\n    )}\n    {...props}\n  />\n));\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName;\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      'mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n      className\n    )}\n    {...props}\n  />\n));\nTabsContent.displayName = TabsPrimitive.Content.displayName;\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent };\n","\"use client\";\n\n// src/checkbox.tsx\nimport * as React from \"react\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { usePrevious } from \"@radix-ui/react-use-previous\";\nimport { useSize } from \"@radix-ui/react-use-size\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar CHECKBOX_NAME = \"Checkbox\";\nvar [createCheckboxContext, createCheckboxScope] = createContextScope(CHECKBOX_NAME);\nvar [CheckboxProvider, useCheckboxContext] = createCheckboxContext(CHECKBOX_NAME);\nvar Checkbox = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeCheckbox,\n      name,\n      checked: checkedProp,\n      defaultChecked,\n      required,\n      disabled,\n      value = \"on\",\n      onCheckedChange,\n      form,\n      ...checkboxProps\n    } = props;\n    const [button, setButton] = React.useState(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setButton(node));\n    const hasConsumerStoppedPropagationRef = React.useRef(false);\n    const isFormControl = button ? form || !!button.closest(\"form\") : true;\n    const [checked, setChecked] = useControllableState({\n      prop: checkedProp,\n      defaultProp: defaultChecked ?? false,\n      onChange: onCheckedChange,\n      caller: CHECKBOX_NAME\n    });\n    const initialCheckedStateRef = React.useRef(checked);\n    React.useEffect(() => {\n      const form2 = button?.form;\n      if (form2) {\n        const reset = () => setChecked(initialCheckedStateRef.current);\n        form2.addEventListener(\"reset\", reset);\n        return () => form2.removeEventListener(\"reset\", reset);\n      }\n    }, [button, setChecked]);\n    return /* @__PURE__ */ jsxs(CheckboxProvider, { scope: __scopeCheckbox, state: checked, disabled, children: [\n      /* @__PURE__ */ jsx(\n        Primitive.button,\n        {\n          type: \"button\",\n          role: \"checkbox\",\n          \"aria-checked\": isIndeterminate(checked) ? \"mixed\" : checked,\n          \"aria-required\": required,\n          \"data-state\": getState(checked),\n          \"data-disabled\": disabled ? \"\" : void 0,\n          disabled,\n          value,\n          ...checkboxProps,\n          ref: composedRefs,\n          onKeyDown: composeEventHandlers(props.onKeyDown, (event) => {\n            if (event.key === \"Enter\") event.preventDefault();\n          }),\n          onClick: composeEventHandlers(props.onClick, (event) => {\n            setChecked((prevChecked) => isIndeterminate(prevChecked) ? true : !prevChecked);\n            if (isFormControl) {\n              hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();\n              if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n            }\n          })\n        }\n      ),\n      isFormControl && /* @__PURE__ */ jsx(\n        CheckboxBubbleInput,\n        {\n          control: button,\n          bubbles: !hasConsumerStoppedPropagationRef.current,\n          name,\n          value,\n          checked,\n          required,\n          disabled,\n          form,\n          style: { transform: \"translateX(-100%)\" },\n          defaultChecked: isIndeterminate(defaultChecked) ? false : defaultChecked\n        }\n      )\n    ] });\n  }\n);\nCheckbox.displayName = CHECKBOX_NAME;\nvar INDICATOR_NAME = \"CheckboxIndicator\";\nvar CheckboxIndicator = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeCheckbox, forceMount, ...indicatorProps } = props;\n    const context = useCheckboxContext(INDICATOR_NAME, __scopeCheckbox);\n    return /* @__PURE__ */ jsx(Presence, { present: forceMount || isIndeterminate(context.state) || context.state === true, children: /* @__PURE__ */ jsx(\n      Primitive.span,\n      {\n        \"data-state\": getState(context.state),\n        \"data-disabled\": context.disabled ? \"\" : void 0,\n        ...indicatorProps,\n        ref: forwardedRef,\n        style: { pointerEvents: \"none\", ...props.style }\n      }\n    ) });\n  }\n);\nCheckboxIndicator.displayName = INDICATOR_NAME;\nvar BUBBLE_INPUT_NAME = \"CheckboxBubbleInput\";\nvar CheckboxBubbleInput = React.forwardRef(\n  ({\n    __scopeCheckbox,\n    control,\n    checked,\n    bubbles = true,\n    defaultChecked,\n    ...props\n  }, forwardedRef) => {\n    const ref = React.useRef(null);\n    const composedRefs = useComposedRefs(ref, forwardedRef);\n    const prevChecked = usePrevious(checked);\n    const controlSize = useSize(control);\n    React.useEffect(() => {\n      const input = ref.current;\n      if (!input) return;\n      const inputProto = window.HTMLInputElement.prototype;\n      const descriptor = Object.getOwnPropertyDescriptor(\n        inputProto,\n        \"checked\"\n      );\n      const setChecked = descriptor.set;\n      if (prevChecked !== checked && setChecked) {\n        const event = new Event(\"click\", { bubbles });\n        input.indeterminate = isIndeterminate(checked);\n        setChecked.call(input, isIndeterminate(checked) ? false : checked);\n        input.dispatchEvent(event);\n      }\n    }, [prevChecked, checked, bubbles]);\n    const defaultCheckedRef = React.useRef(isIndeterminate(checked) ? false : checked);\n    return /* @__PURE__ */ jsx(\n      Primitive.input,\n      {\n        type: \"checkbox\",\n        \"aria-hidden\": true,\n        defaultChecked: defaultChecked ?? defaultCheckedRef.current,\n        ...props,\n        tabIndex: -1,\n        ref: composedRefs,\n        style: {\n          ...props.style,\n          ...controlSize,\n          position: \"absolute\",\n          pointerEvents: \"none\",\n          opacity: 0,\n          margin: 0\n        }\n      }\n    );\n  }\n);\nCheckboxBubbleInput.displayName = BUBBLE_INPUT_NAME;\nfunction isIndeterminate(checked) {\n  return checked === \"indeterminate\";\n}\nfunction getState(checked) {\n  return isIndeterminate(checked) ? \"indeterminate\" : checked ? \"checked\" : \"unchecked\";\n}\nvar Root = Checkbox;\nvar Indicator = CheckboxIndicator;\nexport {\n  Checkbox,\n  CheckboxIndicator,\n  Indicator,\n  Root,\n  createCheckboxScope\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from 'react';\r\nimport * as CheckboxPrimitive from '@radix-ui/react-checkbox';\r\nimport { Check } from 'lucide-react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst Checkbox = React.forwardRef<\r\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\r\n>(({ className, ...props }, ref) => (\r\n  <CheckboxPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      'peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground',\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <CheckboxPrimitive.Indicator className={cn('flex items-center justify-center text-current')}>\r\n      <Check className=\"h-4 w-4\" />\r\n    </CheckboxPrimitive.Indicator>\r\n  </CheckboxPrimitive.Root>\r\n));\r\nCheckbox.displayName = CheckboxPrimitive.Root.displayName;\r\n\r\nexport { Checkbox };\r\n","// src/slot.tsx\nimport * as React from \"react\";\nimport { composeRefs } from \"@radix-ui/react-compose-refs\";\nimport { Fragment as Fragment2, jsx } from \"react/jsx-runtime\";\n// @__NO_SIDE_EFFECTS__\nfunction createSlot(ownerName) {\n  const SlotClone = /* @__PURE__ */ createSlotClone(ownerName);\n  const Slot2 = React.forwardRef((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    const childrenArray = React.Children.toArray(children);\n    const slottable = childrenArray.find(isSlottable);\n    if (slottable) {\n      const newElement = slottable.props.children;\n      const newChildren = childrenArray.map((child) => {\n        if (child === slottable) {\n          if (React.Children.count(newElement) > 1) return React.Children.only(null);\n          return React.isValidElement(newElement) ? newElement.props.children : null;\n        } else {\n          return child;\n        }\n      });\n      return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children: React.isValidElement(newElement) ? React.cloneElement(newElement, void 0, newChildren) : null });\n    }\n    return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children });\n  });\n  Slot2.displayName = `${ownerName}.Slot`;\n  return Slot2;\n}\nvar Slot = /* @__PURE__ */ createSlot(\"Slot\");\n// @__NO_SIDE_EFFECTS__\nfunction createSlotClone(ownerName) {\n  const SlotClone = React.forwardRef((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    if (React.isValidElement(children)) {\n      const childrenRef = getElementRef(children);\n      const props2 = mergeProps(slotProps, children.props);\n      if (children.type !== React.Fragment) {\n        props2.ref = forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef;\n      }\n      return React.cloneElement(children, props2);\n    }\n    return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n  });\n  SlotClone.displayName = `${ownerName}.SlotClone`;\n  return SlotClone;\n}\nvar SLOTTABLE_IDENTIFIER = Symbol(\"radix.slottable\");\n// @__NO_SIDE_EFFECTS__\nfunction createSlottable(ownerName) {\n  const Slottable2 = ({ children }) => {\n    return /* @__PURE__ */ jsx(Fragment2, { children });\n  };\n  Slottable2.displayName = `${ownerName}.Slottable`;\n  Slottable2.__radixId = SLOTTABLE_IDENTIFIER;\n  return Slottable2;\n}\nvar Slottable = /* @__PURE__ */ createSlottable(\"Slottable\");\nfunction isSlottable(child) {\n  return React.isValidElement(child) && typeof child.type === \"function\" && \"__radixId\" in child.type && child.type.__radixId === SLOTTABLE_IDENTIFIER;\n}\nfunction mergeProps(slotProps, childProps) {\n  const overrideProps = { ...childProps };\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args) => {\n          const result = childPropValue(...args);\n          slotPropValue(...args);\n          return result;\n        };\n      } else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    } else if (propName === \"style\") {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === \"className\") {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(\" \");\n    }\n  }\n  return { ...slotProps, ...overrideProps };\n}\nfunction getElementRef(element) {\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.ref;\n  }\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n  return element.props.ref || element.ref;\n}\nexport {\n  Slot as Root,\n  Slot,\n  Slottable,\n  createSlot,\n  createSlottable\n};\n//# sourceMappingURL=index.mjs.map\n","// src/primitive.tsx\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { createSlot } from \"@radix-ui/react-slot\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NODES = [\n  \"a\",\n  \"button\",\n  \"div\",\n  \"form\",\n  \"h2\",\n  \"h3\",\n  \"img\",\n  \"input\",\n  \"label\",\n  \"li\",\n  \"nav\",\n  \"ol\",\n  \"p\",\n  \"select\",\n  \"span\",\n  \"svg\",\n  \"ul\"\n];\nvar Primitive = NODES.reduce((primitive, node) => {\n  const Slot = createSlot(`Primitive.${node}`);\n  const Node = React.forwardRef((props, forwardedRef) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp = asChild ? Slot : node;\n    if (typeof window !== \"undefined\") {\n      window[Symbol.for(\"radix-ui\")] = true;\n    }\n    return /* @__PURE__ */ jsx(Comp, { ...primitiveProps, ref: forwardedRef });\n  });\n  Node.displayName = `Primitive.${node}`;\n  return { ...primitive, [node]: Node };\n}, {});\nfunction dispatchDiscreteCustomEvent(target, event) {\n  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));\n}\nvar Root = Primitive;\nexport {\n  Primitive,\n  Root,\n  dispatchDiscreteCustomEvent\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// src/switch.tsx\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { usePrevious } from \"@radix-ui/react-use-previous\";\nimport { useSize } from \"@radix-ui/react-use-size\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar SWITCH_NAME = \"Switch\";\nvar [createSwitchContext, createSwitchScope] = createContextScope(SWITCH_NAME);\nvar [SwitchProvider, useSwitchContext] = createSwitchContext(SWITCH_NAME);\nvar Switch = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeSwitch,\n      name,\n      checked: checkedProp,\n      defaultChecked,\n      required,\n      disabled,\n      value = \"on\",\n      onCheckedChange,\n      form,\n      ...switchProps\n    } = props;\n    const [button, setButton] = React.useState(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setButton(node));\n    const hasConsumerStoppedPropagationRef = React.useRef(false);\n    const isFormControl = button ? form || !!button.closest(\"form\") : true;\n    const [checked, setChecked] = useControllableState({\n      prop: checkedProp,\n      defaultProp: defaultChecked ?? false,\n      onChange: onCheckedChange,\n      caller: SWITCH_NAME\n    });\n    return /* @__PURE__ */ jsxs(SwitchProvider, { scope: __scopeSwitch, checked, disabled, children: [\n      /* @__PURE__ */ jsx(\n        Primitive.button,\n        {\n          type: \"button\",\n          role: \"switch\",\n          \"aria-checked\": checked,\n          \"aria-required\": required,\n          \"data-state\": getState(checked),\n          \"data-disabled\": disabled ? \"\" : void 0,\n          disabled,\n          value,\n          ...switchProps,\n          ref: composedRefs,\n          onClick: composeEventHandlers(props.onClick, (event) => {\n            setChecked((prevChecked) => !prevChecked);\n            if (isFormControl) {\n              hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();\n              if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n            }\n          })\n        }\n      ),\n      isFormControl && /* @__PURE__ */ jsx(\n        SwitchBubbleInput,\n        {\n          control: button,\n          bubbles: !hasConsumerStoppedPropagationRef.current,\n          name,\n          value,\n          checked,\n          required,\n          disabled,\n          form,\n          style: { transform: \"translateX(-100%)\" }\n        }\n      )\n    ] });\n  }\n);\nSwitch.displayName = SWITCH_NAME;\nvar THUMB_NAME = \"SwitchThumb\";\nvar SwitchThumb = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSwitch, ...thumbProps } = props;\n    const context = useSwitchContext(THUMB_NAME, __scopeSwitch);\n    return /* @__PURE__ */ jsx(\n      Primitive.span,\n      {\n        \"data-state\": getState(context.checked),\n        \"data-disabled\": context.disabled ? \"\" : void 0,\n        ...thumbProps,\n        ref: forwardedRef\n      }\n    );\n  }\n);\nSwitchThumb.displayName = THUMB_NAME;\nvar BUBBLE_INPUT_NAME = \"SwitchBubbleInput\";\nvar SwitchBubbleInput = React.forwardRef(\n  ({\n    __scopeSwitch,\n    control,\n    checked,\n    bubbles = true,\n    ...props\n  }, forwardedRef) => {\n    const ref = React.useRef(null);\n    const composedRefs = useComposedRefs(ref, forwardedRef);\n    const prevChecked = usePrevious(checked);\n    const controlSize = useSize(control);\n    React.useEffect(() => {\n      const input = ref.current;\n      if (!input) return;\n      const inputProto = window.HTMLInputElement.prototype;\n      const descriptor = Object.getOwnPropertyDescriptor(\n        inputProto,\n        \"checked\"\n      );\n      const setChecked = descriptor.set;\n      if (prevChecked !== checked && setChecked) {\n        const event = new Event(\"click\", { bubbles });\n        setChecked.call(input, checked);\n        input.dispatchEvent(event);\n      }\n    }, [prevChecked, checked, bubbles]);\n    return /* @__PURE__ */ jsx(\n      \"input\",\n      {\n        type: \"checkbox\",\n        \"aria-hidden\": true,\n        defaultChecked: checked,\n        ...props,\n        tabIndex: -1,\n        ref: composedRefs,\n        style: {\n          ...props.style,\n          ...controlSize,\n          position: \"absolute\",\n          pointerEvents: \"none\",\n          opacity: 0,\n          margin: 0\n        }\n      }\n    );\n  }\n);\nSwitchBubbleInput.displayName = BUBBLE_INPUT_NAME;\nfunction getState(checked) {\n  return checked ? \"checked\" : \"unchecked\";\n}\nvar Root = Switch;\nvar Thumb = SwitchThumb;\nexport {\n  Root,\n  Switch,\n  SwitchThumb,\n  Thumb,\n  createSwitchScope\n};\n//# sourceMappingURL=index.mjs.map\n","'use client';\r\n\r\nimport * as React from 'react';\r\nimport * as SwitchPrimitives from '@radix-ui/react-switch';\r\n\r\nimport { cn } from '../../lib/utils';\r\n\r\nconst Switch = React.forwardRef<\r\n  React.ElementRef<typeof SwitchPrimitives.Root>,\r\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\r\n>(({ className, ...props }, ref) => (\r\n  <SwitchPrimitives.Root\r\n    className={cn(\r\n      'peer inline-flex h-[24px] w-[44px] shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input',\r\n      className\r\n    )}\r\n    {...props}\r\n    ref={ref}\r\n  >\r\n    <SwitchPrimitives.Thumb\r\n      className={cn(\r\n        'pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0'\r\n      )}\r\n    />\r\n  </SwitchPrimitives.Root>\r\n));\r\nSwitch.displayName = SwitchPrimitives.Root.displayName;\r\n\r\nexport { Switch };\r\n","import * as React from 'react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nexport interface TextareaProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\r\n\r\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\r\n  ({ className, ...props }, ref) => {\r\n    return (\r\n      <textarea\r\n        className={cn(\r\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\nTextarea.displayName = 'Textarea';\r\n\r\nexport { Textarea };\r\n","// Enhanced Pay Plan Types and Interfaces\r\n\r\nexport interface PayPlanBase {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  role: string; // Restricted to specific roles\r\n  dealership_id: string;\r\n  created_by: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n  is_active: boolean;\r\n  plan_type: 'simple' | 'advanced'; // New field to determine complexity level\r\n}\r\n\r\n// Draw/Salary Structure\r\nexport interface DrawStructure {\r\n  enabled: boolean;\r\n  amount: number;\r\n  frequency: 'weekly' | 'bi-weekly' | 'monthly';\r\n  deducted_from_commissions: boolean;\r\n}\r\n\r\n// Tiered Commission Structure\r\nexport interface CommissionTier {\r\n  min_value: number;\r\n  max_value?: number;\r\n  percentage: number;\r\n  label: string;\r\n}\r\n\r\n// PVR (Per Vehicle Retail) Based Commissions\r\nexport interface PVRCommissionStructure {\r\n  enabled: boolean;\r\n  base_percentage: number;\r\n  tiers: CommissionTier[];\r\n  applies_to: 'front_end' | 'back_end' | 'total_fi_income';\r\n}\r\n\r\n// CIT (Credit/Interest/Term) Bonus Structure\r\nexport interface CITBonusStructure {\r\n  enabled: boolean;\r\n  cit_30_bonus: {\r\n    enabled: boolean;\r\n    tiers: {\r\n      min_deals: number;\r\n      max_deals?: number;\r\n      bonus_percentage: number;\r\n    }[];\r\n  };\r\n  cit_10_bonus: {\r\n    enabled: boolean;\r\n    tiers: {\r\n      min_deals: number;\r\n      max_deals?: number;\r\n      bonus_percentage: number;\r\n    }[];\r\n  };\r\n}\r\n\r\n// Penetration Bonus Structure\r\nexport interface PenetrationBonus {\r\n  enabled: boolean;\r\n  name: string;\r\n  tiers: {\r\n    min_percentage: number;\r\n    max_percentage?: number;\r\n    bonus_percentage: number;\r\n  }[];\r\n}\r\n\r\n// CSI and Review Bonuses\r\nexport interface CSIBonusStructure {\r\n  enabled: boolean;\r\n  preferred_lender_bonus: {\r\n    enabled: boolean;\r\n    tiers: {\r\n      min_percentage: number;\r\n      max_percentage?: number;\r\n      bonus_percentage: number;\r\n    }[];\r\n  };\r\n  google_reviews_bonus: {\r\n    enabled: boolean;\r\n    tiers: {\r\n      min_reviews: number;\r\n      max_reviews?: number;\r\n      bonus_percentage: number;\r\n    }[];\r\n  };\r\n}\r\n\r\n// Profit-based bonuses\r\nexport interface ProfitBonusStructure {\r\n  enabled: boolean;\r\n  deals_under_threshold: {\r\n    profit_threshold: number;\r\n    tiers: {\r\n      min_percentage: number;\r\n      max_percentage?: number;\r\n      bonus_percentage: number;\r\n    }[];\r\n  };\r\n}\r\n\r\n// EasyCare and Provider Bonuses\r\nexport interface ProviderBonusStructure {\r\n  enabled: boolean;\r\n  provider_name: string;\r\n  commission_percentage: number;\r\n  payment_frequency: 'monthly' | 'quarterly' | 'annually';\r\n  description: string;\r\n}\r\n\r\n// Vehicle Allowance Options\r\nexport interface VehicleAllowance {\r\n  enabled: boolean;\r\n  allowance_amount: number;\r\n  demo_privileges_available: boolean;\r\n  description: string;\r\n}\r\n\r\n// PTO Structure\r\nexport interface PTOStructure {\r\n  enabled: boolean;\r\n  annual_days: number;\r\n  prorated: boolean;\r\n  cash_value_per_day?: number;\r\n}\r\n\r\n// Unit-based flat rate structure\r\nexport interface UnitFlatStructure {\r\n  enabled: boolean;\r\n  tiers: {\r\n    min_units: number;\r\n    max_units?: number;\r\n    flat_amount: number;\r\n    label: string;\r\n    retroactive: boolean; // If true, applies to all units when tier is reached\r\n  }[];\r\n}\r\n\r\n// Used vehicle pack structure\r\nexport interface UsedVehiclePack {\r\n  enabled: boolean;\r\n  high_value_pack: {\r\n    threshold: number; // e.g., $10,000\r\n    pack_amount: number; // e.g., $10,000\r\n  };\r\n  low_value_pack: {\r\n    min_threshold: number; // e.g., $2,000\r\n    max_threshold: number; // e.g., $10,000\r\n    pack_amount: number; // e.g., $450\r\n  };\r\n}\r\n\r\n// Minimum unit guarantee structure\r\nexport interface MinimumUnitGuarantee {\r\n  enabled: boolean;\r\n  tiers: {\r\n    min_units: number;\r\n    max_units?: number;\r\n    guarantee_amount: number;\r\n    label: string;\r\n  }[];\r\n}\r\n\r\n// Enhanced CSI bonus for salespeople\r\nexport interface SalespersonCSIBonus {\r\n  enabled: boolean;\r\n  benchmark_bonus: {\r\n    enabled: boolean;\r\n    bonus_percentage: number; // e.g., 5% additional on back-end\r\n    description: string;\r\n  };\r\n}\r\n\r\n// Volume-based back-end percentage structure\r\nexport interface VolumeBasedBackEndStructure {\r\n  enabled: boolean;\r\n  base_percentage: number;\r\n  tiers: {\r\n    min_units: number;\r\n    max_units?: number;\r\n    percentage: number;\r\n    label: string;\r\n    retroactive: boolean; // If true, applies to all deals when tier is reached\r\n  }[];\r\n}\r\n\r\n// Enhanced Finance Manager Pay Plan\r\nexport interface AdvancedFinanceManagerPayPlan extends PayPlanBase {\r\n  role: 'finance_manager' | 'finance_director';\r\n  plan_type: 'advanced';\r\n\r\n  // Core commission structure\r\n  base_commission: PVRCommissionStructure;\r\n\r\n  // Draw/Salary\r\n  draw_structure: DrawStructure;\r\n\r\n  // Advanced bonuses\r\n  cit_bonuses?: CITBonusStructure;\r\n  penetration_bonuses: PenetrationBonus[];\r\n  profit_bonuses?: ProfitBonusStructure;\r\n  csi_bonuses?: CSIBonusStructure;\r\n\r\n  // Provider incentives\r\n  provider_bonuses: ProviderBonusStructure[];\r\n\r\n  // Benefits\r\n  vehicle_allowance: VehicleAllowance;\r\n  pto_structure: PTOStructure;\r\n\r\n  // Chargeback protection\r\n  chargeback_protection: {\r\n    enabled: boolean;\r\n    protection_period_days: number;\r\n  };\r\n\r\n  minimum_monthly_pay?: number;\r\n}\r\n\r\n// Simple Finance Manager Pay Plan (like Example 2)\r\nexport interface SimpleFinanceManagerPayPlan extends PayPlanBase {\r\n  role: 'finance_manager' | 'finance_director';\r\n  plan_type: 'simple';\r\n\r\n  // Simple PVR-based commission\r\n  commission_structure: {\r\n    base_fi_percentage: number;\r\n    pvr_tiers: CommissionTier[];\r\n  };\r\n\r\n  // Monthly draw\r\n  monthly_draw: number;\r\n\r\n  // Provider bonuses\r\n  provider_bonuses: ProviderBonusStructure[];\r\n\r\n  // Benefits\r\n  vehicle_allowance: VehicleAllowance;\r\n  pto_structure: PTOStructure;\r\n}\r\n\r\n// Unit-based flat rate structure\r\nexport interface UnitFlatStructure {\r\n  enabled: boolean;\r\n  tiers: {\r\n    min_units: number;\r\n    max_units?: number;\r\n    flat_amount: number;\r\n    label: string;\r\n    retroactive: boolean; // If true, applies to all units when tier is reached\r\n  }[];\r\n}\r\n\r\n// Used vehicle pack structure\r\nexport interface UsedVehiclePack {\r\n  enabled: boolean;\r\n  high_value_pack: {\r\n    threshold: number; // e.g., $10,000\r\n    pack_amount: number; // e.g., $10,000\r\n  };\r\n  low_value_pack: {\r\n    min_threshold: number; // e.g., $2,000\r\n    max_threshold: number; // e.g., $10,000\r\n    pack_amount: number; // e.g., $450\r\n  };\r\n}\r\n\r\n// Minimum unit guarantee structure\r\nexport interface MinimumUnitGuarantee {\r\n  enabled: boolean;\r\n  tiers: {\r\n    min_units: number;\r\n    max_units?: number;\r\n    guarantee_amount: number;\r\n    label: string;\r\n  }[];\r\n}\r\n\r\n// Enhanced CSI bonus for salespeople\r\nexport interface SalespersonCSIBonus {\r\n  enabled: boolean;\r\n  benchmark_bonus: {\r\n    enabled: boolean;\r\n    bonus_percentage: number; // e.g., 5% additional on back-end\r\n    description: string;\r\n  };\r\n}\r\n\r\n// Volume-based back-end percentage structure\r\nexport interface VolumeBasedBackEndStructure {\r\n  enabled: boolean;\r\n  base_percentage: number;\r\n  tiers: {\r\n    min_units: number;\r\n    max_units?: number;\r\n    percentage: number;\r\n    label: string;\r\n    retroactive: boolean; // If true, applies to all deals when tier is reached\r\n  }[];\r\n}\r\n\r\n// Enhanced Salesperson Pay Plan\r\nexport interface AdvancedSalespersonPayPlan extends PayPlanBase {\r\n  role: 'salesperson';\r\n  plan_type: 'advanced';\r\n\r\n  // Front-end commission structure\r\n  front_end_commission: {\r\n    gross_percentage: number; // e.g., 15%\r\n    unit_flat_structure: UnitFlatStructure;\r\n    take_higher: boolean; // Take higher of percentage or flat\r\n  };\r\n\r\n  // Back-end commission structure\r\n  back_end_commission: VolumeBasedBackEndStructure;\r\n\r\n  // Used vehicle pack deductions\r\n  used_vehicle_pack: UsedVehiclePack;\r\n\r\n  // CSI bonus structure\r\n  csi_bonus: SalespersonCSIBonus;\r\n\r\n  // Minimum unit guarantee\r\n  minimum_guarantee: MinimumUnitGuarantee;\r\n\r\n  // Additional conditions\r\n  conditions: {\r\n    no_prepaid_commission: boolean;\r\n    complete_paperwork_required: boolean;\r\n    trade_payoff_discrepancy_flat: boolean;\r\n    weekly_verification_required: boolean;\r\n  };\r\n\r\n  // Benefits\r\n  vehicle_allowance: VehicleAllowance;\r\n  pto_structure: PTOStructure;\r\n  draw_structure?: DrawStructure;\r\n}\r\n\r\n// Simple Salesperson Pay Plan\r\nexport interface SimpleSalespersonPayPlan extends PayPlanBase {\r\n  role: 'salesperson';\r\n  plan_type: 'simple';\r\n  front_end_gross_percentage: number;\r\n  back_end_gross_percentage: number;\r\n  minimum_monthly_pay: number;\r\n}\r\n\r\nexport interface SalesManagerPayPlan extends PayPlanBase {\r\n  role: 'sales_manager';\r\n  base_salary: number;\r\n\r\n  // Team performance bonuses\r\n  team_bonuses: {\r\n    unit_bonus_per_sale: number;\r\n    gross_percentage: number;\r\n  };\r\n\r\n  // Personal sales (if applicable)\r\n  personal_sales: {\r\n    enabled: boolean;\r\n    front_end_gross_percentage: number;\r\n    back_end_gross_percentage: number;\r\n  };\r\n\r\n  // CSI for team\r\n  team_csi_bonus: CSIBonusStructure;\r\n  vehicle_allowance: VehicleAllowance;\r\n  pto_structure: PTOStructure;\r\n}\r\n\r\nexport interface GeneralManagerPayPlan extends PayPlanBase {\r\n  role: 'general_manager';\r\n  base_salary: number;\r\n\r\n  // Dealership performance bonuses\r\n  dealership_bonuses: {\r\n    monthly_unit_threshold: number;\r\n    unit_bonus: number;\r\n    gross_profit_percentage: number;\r\n    csi_bonus_threshold: number;\r\n    csi_bonus_amount: number;\r\n  };\r\n\r\n  vehicle_allowance: VehicleAllowance;\r\n  pto_structure: PTOStructure;\r\n}\r\n\r\n// Union type for all pay plans\r\nexport type PayPlan =\r\n  | AdvancedFinanceManagerPayPlan\r\n  | SimpleFinanceManagerPayPlan\r\n  | AdvancedSalespersonPayPlan\r\n  | SimpleSalespersonPayPlan\r\n  | SalesManagerPayPlan\r\n  | GeneralManagerPayPlan;\r\n\r\n// Assignment interface\r\nexport interface PayPlanAssignment {\r\n  id: string;\r\n  user_id: string;\r\n  pay_plan_id: string;\r\n  assigned_by: string;\r\n  assigned_at: string;\r\n  effective_date: string;\r\n  end_date?: string;\r\n  is_active: boolean;\r\n}\r\n\r\n// Configuration options for dropdowns\r\nexport const PAY_PLAN_CONFIG = {\r\n  ROLES: [\r\n    { id: 'salesperson', name: 'Salesperson', category: 'sales' },\r\n    { id: 'finance_manager', name: 'Finance Manager', category: 'finance' },\r\n    { id: 'finance_director', name: 'Finance Director', category: 'finance' },\r\n    { id: 'sales_manager', name: 'Sales Manager', category: 'management' },\r\n    { id: 'general_manager', name: 'General Manager', category: 'management' },\r\n  ],\r\n\r\n  PLAN_TYPES: [\r\n    { id: 'simple', name: 'Simple Plan', description: 'Basic commission structure' },\r\n    {\r\n      id: 'advanced',\r\n      name: 'Advanced Plan',\r\n      description: 'Complex bonus structure with multiple tiers',\r\n    },\r\n  ],\r\n\r\n  PERCENTAGE_OPTIONS: [\r\n    { value: 8, label: '8%' },\r\n    { value: 10, label: '10%' },\r\n    { value: 12, label: '12%' },\r\n    { value: 13, label: '13%' },\r\n    { value: 13.5, label: '13.5%' },\r\n    { value: 14, label: '14%' },\r\n    { value: 14.5, label: '14.5%' },\r\n    { value: 15, label: '15%' },\r\n    { value: 20, label: '20%' },\r\n    { value: 25, label: '25%' },\r\n    { value: 30, label: '30%' },\r\n    { value: 35, label: '35%' },\r\n    { value: 40, label: '40%' },\r\n    { value: 45, label: '45%' },\r\n    { value: 50, label: '50%' },\r\n  ],\r\n\r\n  DRAW_AMOUNTS: [\r\n    { value: 1000, label: '$1,000' },\r\n    { value: 1500, label: '$1,500' },\r\n    { value: 2000, label: '$2,000' },\r\n    { value: 2500, label: '$2,500' },\r\n    { value: 3000, label: '$3,000' },\r\n    { value: 3500, label: '$3,500' },\r\n    { value: 4000, label: '$4,000' },\r\n    { value: 5000, label: '$5,000' },\r\n  ],\r\n\r\n  DRAW_FREQUENCIES: [\r\n    { value: 'weekly', label: 'Weekly' },\r\n    { value: 'bi-weekly', label: 'Bi-Weekly' },\r\n    { value: 'monthly', label: 'Monthly' },\r\n  ],\r\n\r\n  PVR_THRESHOLDS: [\r\n    { value: 999, label: '$999' },\r\n    { value: 1000, label: '$1,000' },\r\n    { value: 1100, label: '$1,100' },\r\n    { value: 1200, label: '$1,200' },\r\n    { value: 1300, label: '$1,300' },\r\n    { value: 1500, label: '$1,500' },\r\n    { value: 1800, label: '$1,800' },\r\n    { value: 2000, label: '$2,000' },\r\n    { value: 2200, label: '$2,200' },\r\n    { value: 2500, label: '$2,500' },\r\n  ],\r\n\r\n  PENETRATION_TYPES: [\r\n    { id: 'service_contract', name: 'Service Contract Penetration' },\r\n    { id: 'product_penetration', name: 'Product Penetration' },\r\n    { id: 'package_penetration', name: 'Package Penetration' },\r\n    { id: 'gap_penetration', name: 'GAP Penetration' },\r\n    { id: 'warranty_penetration', name: 'Warranty Penetration' },\r\n  ],\r\n\r\n  PROVIDER_OPTIONS: [\r\n    { id: 'easycare', name: 'EasyCare', commission: 10.99 },\r\n    { id: 'jm_family', name: 'JM Family', commission: 8.5 },\r\n    { id: 'protective', name: 'Protective', commission: 12.0 },\r\n    { id: 'cna', name: 'CNA', commission: 9.5 },\r\n  ],\r\n\r\n  CSI_THRESHOLDS: [\r\n    { value: 80, label: '80%' },\r\n    { value: 85, label: '85%' },\r\n    { value: 87, label: '87%' },\r\n    { value: 90, label: '90%' },\r\n    { value: 92, label: '92%' },\r\n    { value: 95, label: '95%' },\r\n  ],\r\n\r\n  UNIT_THRESHOLDS: [\r\n    { value: 8, label: '8 units' },\r\n    { value: 10, label: '10 units' },\r\n    { value: 12, label: '12 units' },\r\n    { value: 15, label: '15 units' },\r\n    { value: 18, label: '18 units' },\r\n    { value: 20, label: '20 units' },\r\n    { value: 25, label: '25 units' },\r\n  ],\r\n\r\n  UNIT_FLAT_AMOUNTS: [\r\n    { value: 14.5, label: '$14.50' },\r\n    { value: 19.5, label: '$19.50' },\r\n    { value: 25.0, label: '$25.00' },\r\n    { value: 50.0, label: '$50.00' },\r\n    { value: 75.0, label: '$75.00' },\r\n    { value: 100.0, label: '$100.00' },\r\n    { value: 125.0, label: '$125.00' },\r\n    { value: 150.0, label: '$150.00' },\r\n  ],\r\n\r\n  PACK_AMOUNTS: [\r\n    { value: 450, label: '$450' },\r\n    { value: 500, label: '$500' },\r\n    { value: 750, label: '$750' },\r\n    { value: 1000, label: '$1,000' },\r\n    { value: 5000, label: '$5,000' },\r\n    { value: 10000, label: '$10,000' },\r\n  ],\r\n\r\n  PACK_THRESHOLDS: [\r\n    { value: 2000, label: '$2,000' },\r\n    { value: 5000, label: '$5,000' },\r\n    { value: 10000, label: '$10,000' },\r\n    { value: 15000, label: '$15,000' },\r\n    { value: 20000, label: '$20,000' },\r\n  ],\r\n\r\n  MINIMUM_GUARANTEES: [\r\n    { value: 3000, label: '$3,000' },\r\n    { value: 4000, label: '$4,000' },\r\n    { value: 5000, label: '$5,000' },\r\n    { value: 6000, label: '$6,000' },\r\n    { value: 7500, label: '$7,500' },\r\n    { value: 10000, label: '$10,000' },\r\n    { value: 12500, label: '$12,500' },\r\n    { value: 15000, label: '$15,000' },\r\n  ],\r\n};\r\n\r\n// Validation functions\r\nexport const validatePayPlan = (payPlan: Partial<PayPlan>): string[] => {\r\n  const errors: string[] = [];\r\n\r\n  if (!payPlan.name?.trim()) {\r\n    errors.push('Pay plan name is required');\r\n  }\r\n\r\n  if (!payPlan.role) {\r\n    errors.push('Role selection is required');\r\n  }\r\n\r\n  if (!payPlan.plan_type) {\r\n    errors.push('Plan type selection is required');\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\n// Helper function to get role-specific fields\r\nexport const getRoleFields = (role: string, planType: string) => {\r\n  const baseFields = ['name', 'description', 'role', 'plan_type'];\r\n\r\n  switch (role) {\r\n    case 'salesperson':\r\n      if (planType === 'advanced') {\r\n        return [\r\n          ...baseFields,\r\n          'front_end_gross_percentage',\r\n          'back_end_gross_percentage',\r\n          'monthly_unit_bonuses',\r\n          'csi_bonus',\r\n          'draw_structure',\r\n          'vehicle_allowance',\r\n          'pto_structure',\r\n          'minimum_monthly_pay',\r\n        ];\r\n      } else {\r\n        return [\r\n          ...baseFields,\r\n          'front_end_gross_percentage',\r\n          'back_end_gross_percentage',\r\n          'minimum_monthly_pay',\r\n        ];\r\n      }\r\n    case 'finance_manager':\r\n    case 'finance_director':\r\n      if (planType === 'advanced') {\r\n        return [\r\n          ...baseFields,\r\n          'base_commission',\r\n          'draw_structure',\r\n          'cit_bonuses',\r\n          'penetration_bonuses',\r\n          'profit_bonuses',\r\n          'csi_bonuses',\r\n          'provider_bonuses',\r\n          'vehicle_allowance',\r\n          'pto_structure',\r\n          'chargeback_protection',\r\n        ];\r\n      } else {\r\n        return [\r\n          ...baseFields,\r\n          'commission_structure',\r\n          'monthly_draw',\r\n          'provider_bonuses',\r\n          'vehicle_allowance',\r\n          'pto_structure',\r\n        ];\r\n      }\r\n    case 'sales_manager':\r\n      return [\r\n        ...baseFields,\r\n        'base_salary',\r\n        'team_bonuses',\r\n        'personal_sales',\r\n        'team_csi_bonus',\r\n        'vehicle_allowance',\r\n        'pto_structure',\r\n      ];\r\n    case 'general_manager':\r\n      return [\r\n        ...baseFields,\r\n        'base_salary',\r\n        'dealership_bonuses',\r\n        'vehicle_allowance',\r\n        'pto_structure',\r\n      ];\r\n    default:\r\n      return baseFields;\r\n  }\r\n};\r\n\r\n// Helper function to create default structures\r\nexport const createDefaultStructures = () => ({\r\n  drawStructure: {\r\n    enabled: false,\r\n    amount: 2500,\r\n    frequency: 'monthly' as const,\r\n    deducted_from_commissions: true,\r\n  },\r\n\r\n  vehicleAllowance: {\r\n    enabled: false,\r\n    allowance_amount: 300,\r\n    demo_privileges_available: true,\r\n    description: 'Monthly vehicle allowance or demo privileges',\r\n  },\r\n\r\n  ptoStructure: {\r\n    enabled: true,\r\n    annual_days: 12,\r\n    prorated: true,\r\n    cash_value_per_day: 150,\r\n  },\r\n\r\n  chargebackProtection: {\r\n    enabled: true,\r\n    protection_period_days: 90,\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../ui/card';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '../ui/tabs';\r\nimport { Button } from '../ui/button';\r\nimport { Badge } from '../ui/badge';\r\nimport { Input } from '../ui/input';\r\nimport { Label } from '../ui/label';\r\nimport { Checkbox } from '../ui/checkbox';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../ui/select';\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '../ui/table';\r\nimport { Switch } from '../ui/switch';\r\nimport { Textarea } from '../ui/textarea';\r\nimport { useToast } from '../../hooks/use-toast';\r\nimport {\r\n  DollarSign,\r\n  Plus,\r\n  Edit,\r\n  Trash2,\r\n  Save,\r\n  Users,\r\n  TrendingUp,\r\n  Shield,\r\n  AlertTriangle,\r\n  Copy,\r\n  Settings,\r\n  Calculator,\r\n  Target,\r\n  Percent,\r\n  X,\r\n  ChevronDown,\r\n  ChevronUp,\r\n} from 'lucide-react';\r\nimport {\r\n  PayPlan,\r\n  AdvancedFinanceManagerPayPlan,\r\n  SimpleFinanceManagerPayPlan,\r\n  PayPlanAssignment,\r\n  PAY_PLAN_CONFIG,\r\n  validatePayPlan,\r\n  CommissionTier,\r\n  PenetrationBonus,\r\n  createDefaultStructures,\r\n} from '../../types/payPlan';\r\n\r\ninterface EnhancedPayPlanManagerProps {\r\n  dealershipId: string;\r\n  isGroupAdmin?: boolean;\r\n}\r\n\r\ninterface User {\r\n  id: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  email: string;\r\n  role: string;\r\n  current_pay_plan?: string;\r\n}\r\n\r\ninterface PayPlanFormData {\r\n  name: string;\r\n  description: string;\r\n  role: string;\r\n  plan_type: 'simple' | 'advanced';\r\n  is_active: boolean;\r\n\r\n  // Dynamic structure based on plan type and role\r\n  structure: any;\r\n}\r\n\r\nexport function EnhancedPayPlanManager({\r\n  dealershipId,\r\n  isGroupAdmin = false,\r\n}: EnhancedPayPlanManagerProps) {\r\n  const { toast } = useToast();\r\n\r\n  // State\r\n  const [payPlans, setPayPlans] = useState<PayPlan[]>([]);\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [assignments, setAssignments] = useState<PayPlanAssignment[]>([]);\r\n  const [selectedTab, setSelectedTab] = useState('overview');\r\n  const [editingPlan, setEditingPlan] = useState<PayPlan | null>(null);\r\n  const [showCreateForm, setShowCreateForm] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Enhanced form state\r\n  const [formData, setFormData] = useState<PayPlanFormData>({\r\n    name: '',\r\n    description: '',\r\n    role: 'finance_manager',\r\n    plan_type: 'simple',\r\n    is_active: true,\r\n    structure: {},\r\n  });\r\n\r\n  // Tier management state\r\n  const [activeTierEditor, setActiveTierEditor] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    fetchPayPlans();\r\n    fetchUsers();\r\n    fetchAssignments();\r\n  }, [dealershipId]);\r\n\r\n  const fetchPayPlans = async () => {\r\n    try {\r\n      // Mock enhanced pay plans data\r\n      const mockPlans: PayPlan[] = [\r\n        {\r\n          id: 'fm_advanced_1',\r\n          name: 'John Valentine Finance Plan',\r\n          description: 'Advanced F&I plan with CIT bonuses and penetration tiers',\r\n          role: 'finance_manager',\r\n          plan_type: 'advanced',\r\n          dealership_id: dealershipId,\r\n          created_by: 'admin',\r\n          created_at: '2024-01-01',\r\n          updated_at: '2024-01-01',\r\n          is_active: true,\r\n          base_commission: {\r\n            enabled: true,\r\n            base_percentage: 25,\r\n            tiers: [],\r\n            applies_to: 'total_fi_income',\r\n          },\r\n          draw_structure: {\r\n            enabled: true,\r\n            amount: 4000,\r\n            frequency: 'monthly',\r\n            deducted_from_commissions: true,\r\n          },\r\n          cit_bonuses: {\r\n            enabled: true,\r\n            cit_30_bonus: {\r\n              enabled: true,\r\n              tiers: [\r\n                { min_deals: 2, bonus_percentage: 0.5 },\r\n                { min_deals: 1, max_deals: 1, bonus_percentage: 0.25 },\r\n                { min_deals: 0, max_deals: 0, bonus_percentage: 0 },\r\n              ],\r\n            },\r\n            cit_10_bonus: {\r\n              enabled: true,\r\n              tiers: [\r\n                { min_deals: 3, bonus_percentage: 0.5 },\r\n                { min_deals: 1, max_deals: 2, bonus_percentage: 0.25 },\r\n                { min_deals: 0, max_deals: 0, bonus_percentage: 0 },\r\n              ],\r\n            },\r\n          },\r\n          penetration_bonuses: [\r\n            {\r\n              enabled: true,\r\n              name: 'Service Contract Penetration',\r\n              tiers: [\r\n                { min_percentage: 80, bonus_percentage: 3.5 },\r\n                { min_percentage: 70, max_percentage: 79.99, bonus_percentage: 3.0 },\r\n                { min_percentage: 60, max_percentage: 69.99, bonus_percentage: 2.5 },\r\n                { min_percentage: 50, max_percentage: 59.99, bonus_percentage: 2.0 },\r\n                { min_percentage: 40, max_percentage: 49.99, bonus_percentage: 1.5 },\r\n                { min_percentage: 30, max_percentage: 39.99, bonus_percentage: 1.0 },\r\n                { min_percentage: 0, max_percentage: 29.99, bonus_percentage: 0 },\r\n              ],\r\n            },\r\n          ],\r\n          provider_bonuses: [\r\n            {\r\n              enabled: true,\r\n              provider_name: 'EasyCare',\r\n              commission_percentage: 10.99,\r\n              payment_frequency: 'annually',\r\n              description: 'Year-end EasyCare commission',\r\n            },\r\n          ],\r\n          vehicle_allowance: {\r\n            enabled: true,\r\n            allowance_amount: 300,\r\n            demo_privileges_available: true,\r\n            description: 'Monthly vehicle allowance or demo privileges',\r\n          },\r\n          pto_structure: {\r\n            enabled: true,\r\n            annual_days: 12,\r\n            prorated: true,\r\n            cash_value_per_day: 150,\r\n          },\r\n          chargeback_protection: {\r\n            enabled: true,\r\n            protection_period_days: 90,\r\n          },\r\n        } as AdvancedFinanceManagerPayPlan,\r\n        {\r\n          id: 'fm_simple_1',\r\n          name: 'Lloyd Hatter Finance Plan',\r\n          description: 'Simple PVR-based commission structure',\r\n          role: 'finance_manager',\r\n          plan_type: 'simple',\r\n          dealership_id: dealershipId,\r\n          created_by: 'admin',\r\n          created_at: '2024-01-01',\r\n          updated_at: '2024-01-01',\r\n          is_active: true,\r\n          commission_structure: {\r\n            base_fi_percentage: 12,\r\n            pvr_tiers: [\r\n              { min_value: 999, max_value: 999, percentage: 12.0, label: '$999 or below' },\r\n              { min_value: 1000, max_value: 1099, percentage: 13.0, label: '$1,000 to $1,099' },\r\n              { min_value: 1100, max_value: 1199, percentage: 13.5, label: '$1,100 to $1,199' },\r\n              { min_value: 1200, max_value: 1299, percentage: 14.0, label: '$1,200 to $1,299' },\r\n              { min_value: 1300, percentage: 14.5, label: '$1,300 or more' },\r\n            ],\r\n          },\r\n          monthly_draw: 2500,\r\n          provider_bonuses: [\r\n            {\r\n              enabled: true,\r\n              provider_name: 'EasyCare',\r\n              commission_percentage: 10.99,\r\n              payment_frequency: 'annually',\r\n              description: 'Year-end EasyCare commission',\r\n            },\r\n          ],\r\n          vehicle_allowance: {\r\n            enabled: true,\r\n            allowance_amount: 300,\r\n            demo_privileges_available: true,\r\n            description: 'Monthly vehicle allowance or demo privileges',\r\n          },\r\n          pto_structure: {\r\n            enabled: true,\r\n            annual_days: 12,\r\n            prorated: true,\r\n          },\r\n        } as SimpleFinanceManagerPayPlan,\r\n      ];\r\n\r\n      setPayPlans(mockPlans);\r\n    } catch (error) {\r\n      console.error('Error fetching pay plans:', error);\r\n      toast({\r\n        title: 'Error',\r\n        description: 'Failed to fetch pay plans',\r\n        variant: 'destructive',\r\n      });\r\n    }\r\n  };\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      // Mock users data\r\n      const mockUsers: User[] = [\r\n        {\r\n          id: 'u1',\r\n          first_name: 'John',\r\n          last_name: 'Valentine',\r\n          email: 'john.valentine@dealership.com',\r\n          role: 'finance_manager',\r\n          current_pay_plan: 'fm_advanced_1',\r\n        },\r\n        {\r\n          id: 'u2',\r\n          first_name: 'Lloyd',\r\n          last_name: 'Hatter',\r\n          email: 'lloyd.hatter@dealership.com',\r\n          role: 'finance_manager',\r\n          current_pay_plan: 'fm_simple_1',\r\n        },\r\n      ];\r\n\r\n      setUsers(mockUsers);\r\n    } catch (error) {\r\n      console.error('Error fetching users:', error);\r\n    }\r\n  };\r\n\r\n  const fetchAssignments = async () => {\r\n    try {\r\n      // Mock assignments data\r\n      const mockAssignments: PayPlanAssignment[] = [\r\n        {\r\n          id: 'a1',\r\n          user_id: 'u1',\r\n          pay_plan_id: 'fm_advanced_1',\r\n          assigned_by: 'admin',\r\n          assigned_at: '2024-01-01',\r\n          effective_date: '2024-01-01',\r\n          is_active: true,\r\n        },\r\n        {\r\n          id: 'a2',\r\n          user_id: 'u2',\r\n          pay_plan_id: 'fm_simple_1',\r\n          assigned_by: 'admin',\r\n          assigned_at: '2024-01-01',\r\n          effective_date: '2024-01-01',\r\n          is_active: true,\r\n        },\r\n      ];\r\n\r\n      setAssignments(mockAssignments);\r\n    } catch (error) {\r\n      console.error('Error fetching assignments:', error);\r\n    }\r\n  };\r\n\r\n  const handleCreatePayPlan = async () => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      const errors = validatePayPlan(formData);\r\n      if (errors.length > 0) {\r\n        toast({\r\n          title: 'Validation Error',\r\n          description: errors.join(', '),\r\n          variant: 'destructive',\r\n        });\r\n        return;\r\n      }\r\n\r\n      const newPlan: Partial<PayPlan> = {\r\n        ...formData,\r\n        id: `plan_${Date.now()}`,\r\n        dealership_id: dealershipId,\r\n        created_by: 'current_user',\r\n        created_at: new Date().toISOString(),\r\n        updated_at: new Date().toISOString(),\r\n        ...formData.structure,\r\n      };\r\n\r\n      setPayPlans([...payPlans, newPlan as PayPlan]);\r\n      resetForm();\r\n      setShowCreateForm(false);\r\n\r\n      toast({\r\n        title: 'Success',\r\n        description: 'Pay plan created successfully',\r\n      });\r\n    } catch (error) {\r\n      console.error('Error creating pay plan:', error);\r\n      toast({\r\n        title: 'Error',\r\n        description: 'Failed to create pay plan',\r\n        variant: 'destructive',\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFormData({\r\n      name: '',\r\n      description: '',\r\n      role: 'finance_manager',\r\n      plan_type: 'simple',\r\n      is_active: true,\r\n      structure: {},\r\n    });\r\n  };\r\n\r\n  const handleAssignPayPlan = async (userId: string, payPlanId: string) => {\r\n    try {\r\n      const user = users.find(u => u.id === userId);\r\n      const payPlan = payPlans.find(p => p.id === payPlanId);\r\n\r\n      if (!user || !payPlan) {\r\n        toast({\r\n          title: 'Error',\r\n          description: 'User or pay plan not found',\r\n          variant: 'destructive',\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Critical validation: ensure role matches\r\n      if (user.role !== payPlan.role) {\r\n        toast({\r\n          title: 'Role Mismatch Error',\r\n          description: `Cannot assign ${payPlan.role} pay plan to ${user.role}. Roles must match for security.`,\r\n          variant: 'destructive',\r\n        });\r\n        return;\r\n      }\r\n\r\n      const newAssignment: PayPlanAssignment = {\r\n        id: `assignment_${Date.now()}`,\r\n        user_id: userId,\r\n        pay_plan_id: payPlanId,\r\n        assigned_by: 'current_user',\r\n        assigned_at: new Date().toISOString(),\r\n        effective_date: new Date().toISOString(),\r\n        is_active: true,\r\n      };\r\n\r\n      setAssignments([...assignments, newAssignment]);\r\n      setUsers(users.map(u => (u.id === userId ? { ...u, current_pay_plan: payPlanId } : u)));\r\n\r\n      toast({\r\n        title: 'Success',\r\n        description: `Pay plan assigned to ${user.first_name} ${user.last_name}`,\r\n      });\r\n    } catch (error) {\r\n      console.error('Error assigning pay plan:', error);\r\n      toast({\r\n        title: 'Error',\r\n        description: 'Failed to assign pay plan',\r\n        variant: 'destructive',\r\n      });\r\n    }\r\n  };\r\n\r\n  const getPayPlansByRole = (role: string) => {\r\n    return payPlans.filter(plan => plan.role === role && plan.is_active);\r\n  };\r\n\r\n  const getUsersByRole = (role: string) => {\r\n    return users.filter(user => user.role === role);\r\n  };\r\n\r\n  const formatCurrency = (amount: number) => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n      minimumFractionDigits: 0,\r\n    }).format(amount);\r\n  };\r\n\r\n  const addTier = (tierType: string) => {\r\n    // Add new tier logic based on tier type\r\n    console.log(`Adding new ${tierType} tier`);\r\n  };\r\n\r\n  const removeTier = (tierType: string, index: number) => {\r\n    // Remove tier logic\r\n    console.log(`Removing ${tierType} tier at index ${index}`);\r\n  };\r\n\r\n  const renderRoleSpecificForm = () => {\r\n    if (formData.role === 'finance_manager' || formData.role === 'finance_director') {\r\n      return <FinanceManagerForm formData={formData} setFormData={setFormData} />;\r\n    }\r\n    if (formData.role === 'salesperson') {\r\n      return <SalespersonForm formData={formData} setFormData={setFormData} />;\r\n    }\r\n    return (\r\n      <div className=\"space-y-4 border-t pt-4\">\r\n        <div className=\"text-center py-8 text-muted-foreground\">\r\n          <Settings className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\r\n          <p>Configuration form for {formData.role} role is coming soon.</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold tracking-tight flex items-center\">\r\n            <DollarSign className=\"w-6 h-6 mr-2\" />\r\n            Enhanced Pay Plan Management\r\n          </h2>\r\n          <p className=\"text-muted-foreground\">\r\n            Create complex compensation plans with multiple tiers and bonuses\r\n          </p>\r\n        </div>\r\n        <Button onClick={() => setShowCreateForm(true)}>\r\n          <Plus className=\"w-4 h-4 mr-2\" />\r\n          Create Pay Plan\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Critical Security Notice */}\r\n      <Card className=\"border-orange-200 bg-orange-50\">\r\n        <CardContent className=\"pt-6\">\r\n          <div className=\"flex items-center space-x-2 text-orange-800\">\r\n            <Shield className=\"w-5 h-5\" />\r\n            <span className=\"font-semibold\">Security Notice:</span>\r\n          </div>\r\n          <p className=\"text-orange-700 mt-2 text-sm\">\r\n            Pay plans can only be assigned to users with matching roles. The system prevents\r\n            accidental assignment of incorrect compensation structures.\r\n          </p>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Tabs value={selectedTab} onValueChange={setSelectedTab}>\r\n        <TabsList className=\"grid w-full grid-cols-4\">\r\n          <TabsTrigger value=\"overview\">Overview</TabsTrigger>\r\n          <TabsTrigger value=\"plans\">Pay Plans</TabsTrigger>\r\n          <TabsTrigger value=\"assignments\">Assignments</TabsTrigger>\r\n          <TabsTrigger value=\"calculator\">Calculator</TabsTrigger>\r\n        </TabsList>\r\n\r\n        {/* Overview Tab */}\r\n        <TabsContent value=\"overview\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Total Pay Plans</CardTitle>\r\n                <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">{payPlans.length}</div>\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  {payPlans.filter(p => p.is_active).length} active\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Advanced Plans</CardTitle>\r\n                <Settings className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">\r\n                  {payPlans.filter(p => p.plan_type === 'advanced').length}\r\n                </div>\r\n                <p className=\"text-xs text-muted-foreground\">Complex bonus structures</p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Simple Plans</CardTitle>\r\n                <Calculator className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">\r\n                  {payPlans.filter(p => p.plan_type === 'simple').length}\r\n                </div>\r\n                <p className=\"text-xs text-muted-foreground\">Basic commission structures</p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Assigned Users</CardTitle>\r\n                <Users className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">\r\n                  {assignments.filter(a => a.is_active).length}\r\n                </div>\r\n                <p className=\"text-xs text-muted-foreground\">Out of {users.length} total users</p>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        {/* Pay Plans Tab */}\r\n        <TabsContent value=\"plans\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>All Pay Plans</CardTitle>\r\n              <CardDescription>Manage compensation structures for different roles</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <Table>\r\n                <TableHeader>\r\n                  <TableRow>\r\n                    <TableHead>Name</TableHead>\r\n                    <TableHead>Role</TableHead>\r\n                    <TableHead>Type</TableHead>\r\n                    <TableHead>Status</TableHead>\r\n                    <TableHead>Assigned Users</TableHead>\r\n                    <TableHead>Actions</TableHead>\r\n                  </TableRow>\r\n                </TableHeader>\r\n                <TableBody>\r\n                  {payPlans.map(plan => {\r\n                    const assignedCount = assignments.filter(\r\n                      a => a.pay_plan_id === plan.id && a.is_active\r\n                    ).length;\r\n\r\n                    return (\r\n                      <TableRow key={plan.id}>\r\n                        <TableCell>\r\n                          <div>\r\n                            <div className=\"font-medium\">{plan.name}</div>\r\n                            <div className=\"text-sm text-muted-foreground\">{plan.description}</div>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Badge variant=\"outline\">\r\n                            {PAY_PLAN_CONFIG.ROLES.find(r => r.id === plan.role)?.name || plan.role}\r\n                          </Badge>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Badge variant={plan.plan_type === 'advanced' ? 'default' : 'secondary'}>\r\n                            {plan.plan_type === 'advanced' ? 'Advanced' : 'Simple'}\r\n                          </Badge>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Badge variant={plan.is_active ? 'default' : 'secondary'}>\r\n                            {plan.is_active ? 'Active' : 'Inactive'}\r\n                          </Badge>\r\n                        </TableCell>\r\n                        <TableCell>{assignedCount} users</TableCell>\r\n                        <TableCell>\r\n                          <div className=\"flex items-center space-x-2\">\r\n                            <Button variant=\"outline\" size=\"sm\">\r\n                              <Edit className=\"w-4 h-4\" />\r\n                            </Button>\r\n                            <Button variant=\"outline\" size=\"sm\">\r\n                              <Copy className=\"w-4 h-4\" />\r\n                            </Button>\r\n                          </div>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Assignments Tab */}\r\n        <TabsContent value=\"assignments\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Pay Plan Assignments</CardTitle>\r\n              <CardDescription>Assign pay plans to users (roles must match)</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <Table>\r\n                <TableHeader>\r\n                  <TableRow>\r\n                    <TableHead>User</TableHead>\r\n                    <TableHead>Role</TableHead>\r\n                    <TableHead>Current Pay Plan</TableHead>\r\n                    <TableHead>Plan Type</TableHead>\r\n                    <TableHead>Actions</TableHead>\r\n                  </TableRow>\r\n                </TableHeader>\r\n                <TableBody>\r\n                  {users.map(user => {\r\n                    const currentAssignment = assignments.find(\r\n                      a => a.user_id === user.id && a.is_active\r\n                    );\r\n                    const currentPlan = currentAssignment\r\n                      ? payPlans.find(p => p.id === currentAssignment.pay_plan_id)\r\n                      : null;\r\n                    const availablePlans = getPayPlansByRole(user.role);\r\n\r\n                    return (\r\n                      <TableRow key={user.id}>\r\n                        <TableCell>\r\n                          <div>\r\n                            <div className=\"font-medium\">\r\n                              {user.first_name} {user.last_name}\r\n                            </div>\r\n                            <div className=\"text-sm text-muted-foreground\">{user.email}</div>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Badge variant=\"outline\">{user.role}</Badge>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {currentPlan ? (\r\n                            <Badge variant=\"default\">{currentPlan.name}</Badge>\r\n                          ) : (\r\n                            <Badge variant=\"destructive\">No Plan Assigned</Badge>\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {currentPlan && (\r\n                            <Badge\r\n                              variant={\r\n                                currentPlan.plan_type === 'advanced' ? 'default' : 'secondary'\r\n                              }\r\n                            >\r\n                              {currentPlan.plan_type === 'advanced' ? 'Advanced' : 'Simple'}\r\n                            </Badge>\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Select onValueChange={value => handleAssignPayPlan(user.id, value)}>\r\n                            <SelectTrigger className=\"w-48\">\r\n                              <SelectValue placeholder=\"Assign Plan\" />\r\n                            </SelectTrigger>\r\n                            <SelectContent>\r\n                              {availablePlans.map(plan => (\r\n                                <SelectItem key={plan.id} value={plan.id}>\r\n                                  {plan.name} ({plan.plan_type})\r\n                                </SelectItem>\r\n                              ))}\r\n                            </SelectContent>\r\n                          </Select>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Calculator Tab */}\r\n        <TabsContent value=\"calculator\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Pay Calculator</CardTitle>\r\n              <CardDescription>\r\n                Real-time pay calculations based on assigned pay plans\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-center py-8 text-muted-foreground\">\r\n                <Calculator className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\r\n                <p>Pay calculator will integrate with deal data</p>\r\n                <p className=\"text-sm\">\r\n                  Enter deal information to calculate real-time estimated pay\r\n                </p>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n\r\n      {/* Create Pay Plan Dialog */}\r\n      {showCreateForm && (\r\n        <div className=\"fixed inset-0 z-50 bg-black/80 backdrop-blur\">\r\n          <div className=\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-full max-w-4xl max-h-[90vh] overflow-y-auto\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <CardTitle>Create New Pay Plan</CardTitle>\r\n                    <CardDescription>\r\n                      Configure comprehensive compensation structure\r\n                    </CardDescription>\r\n                  </div>\r\n                  <Button variant=\"ghost\" size=\"sm\" onClick={() => setShowCreateForm(false)}>\r\n                    <X className=\"w-4 h-4\" />\r\n                  </Button>\r\n                </div>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                {/* Basic Info */}\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"name\">Plan Name</Label>\r\n                    <Input\r\n                      id=\"name\"\r\n                      value={formData.name}\r\n                      onChange={e => setFormData({ ...formData, name: e.target.value })}\r\n                      placeholder=\"e.g., Senior Finance Manager Plan\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"role\">Role</Label>\r\n                    <Select\r\n                      value={formData.role}\r\n                      onValueChange={value => setFormData({ ...formData, role: value })}\r\n                    >\r\n                      <SelectTrigger>\r\n                        <SelectValue />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        {PAY_PLAN_CONFIG.ROLES.map(role => (\r\n                          <SelectItem key={role.id} value={role.id}>\r\n                            {role.name}\r\n                          </SelectItem>\r\n                        ))}\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 gap-4\">\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"plan_type\">Plan Type</Label>\r\n                    <Select\r\n                      value={formData.plan_type}\r\n                      onValueChange={(value: 'simple' | 'advanced') =>\r\n                        setFormData({ ...formData, plan_type: value })\r\n                      }\r\n                    >\r\n                      <SelectTrigger>\r\n                        <SelectValue />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        {PAY_PLAN_CONFIG.PLAN_TYPES.map(type => (\r\n                          <SelectItem key={type.id} value={type.id}>\r\n                            <div>\r\n                              <div className=\"font-medium\">{type.name}</div>\r\n                              <div className=\"text-sm text-muted-foreground\">\r\n                                {type.description}\r\n                              </div>\r\n                            </div>\r\n                          </SelectItem>\r\n                        ))}\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"description\">Description</Label>\r\n                  <Textarea\r\n                    id=\"description\"\r\n                    value={formData.description}\r\n                    onChange={e => setFormData({ ...formData, description: e.target.value })}\r\n                    placeholder=\"Brief description of this pay plan\"\r\n                    rows={3}\r\n                  />\r\n                </div>\r\n\r\n                {/* Role-specific form */}\r\n                {renderRoleSpecificForm()}\r\n\r\n                <div className=\"flex justify-end space-x-2 pt-4 border-t\">\r\n                  <Button variant=\"outline\" onClick={() => setShowCreateForm(false)}>\r\n                    Cancel\r\n                  </Button>\r\n                  <Button onClick={handleCreatePayPlan} disabled={loading}>\r\n                    {loading ? 'Creating...' : 'Create Pay Plan'}\r\n                  </Button>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Enhanced Finance Manager Form Component\r\nfunction FinanceManagerForm({\r\n  formData,\r\n  setFormData,\r\n}: {\r\n  formData: PayPlanFormData;\r\n  setFormData: (data: PayPlanFormData) => void;\r\n}) {\r\n  const [expandedSections, setExpandedSections] = useState<string[]>(['basic']);\r\n\r\n  const toggleSection = (section: string) => {\r\n    setExpandedSections(prev =>\r\n      prev.includes(section) ? prev.filter(s => s !== section) : [...prev, section]\r\n    );\r\n  };\r\n\r\n  const isExpanded = (section: string) => expandedSections.includes(section);\r\n\r\n  if (formData.plan_type === 'simple') {\r\n    return (\r\n      <div className=\"space-y-4 border-t pt-4\">\r\n        <h4 className=\"font-medium\">Simple Finance Manager Plan</h4>\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div className=\"space-y-2\">\r\n            <Label>Base F&I Commission %</Label>\r\n            <Select>\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Select base percentage\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                {PAY_PLAN_CONFIG.PERCENTAGE_OPTIONS.map(option => (\r\n                  <SelectItem key={option.value} value={option.value.toString()}>\r\n                    {option.label}\r\n                  </SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            <Label>Monthly Draw</Label>\r\n            <Select>\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Select draw amount\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                {PAY_PLAN_CONFIG.DRAW_AMOUNTS.map(option => (\r\n                  <SelectItem key={option.value} value={option.value.toString()}>\r\n                    {option.label}\r\n                  </SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n        </div>\r\n\r\n        {/* PVR Tiers */}\r\n        <Card>\r\n          <CardHeader className=\"pb-3\">\r\n            <CardTitle className=\"text-sm\">PVR Commission Tiers</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"space-y-3\">\r\n              <Button variant=\"outline\" size=\"sm\">\r\n                <Plus className=\"w-4 h-4 mr-2\" />\r\n                Add PVR Tier\r\n              </Button>\r\n              <div className=\"text-sm text-muted-foreground\">\r\n                Configure commission percentages based on PVR thresholds\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Advanced plan configuration\r\n  return (\r\n    <div className=\"space-y-4 border-t pt-4\">\r\n      <h4 className=\"font-medium\">Advanced Finance Manager Plan Configuration</h4>\r\n\r\n      {/* Basic Commission Section */}\r\n      <Card>\r\n        <CardHeader className=\"pb-3 cursor-pointer\" onClick={() => toggleSection('basic')}>\r\n          <div className=\"flex items-center justify-between\">\r\n            <CardTitle className=\"text-sm\">Base Commission Structure</CardTitle>\r\n            {isExpanded('basic') ? (\r\n              <ChevronUp className=\"w-4 h-4\" />\r\n            ) : (\r\n              <ChevronDown className=\"w-4 h-4\" />\r\n            )}\r\n          </div>\r\n        </CardHeader>\r\n        {isExpanded('basic') && (\r\n          <CardContent>\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div className=\"space-y-2\">\r\n                <Label>Base F&I Commission %</Label>\r\n                <Select>\r\n                  <SelectTrigger>\r\n                    <SelectValue placeholder=\"Select base percentage\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    {PAY_PLAN_CONFIG.PERCENTAGE_OPTIONS.map(option => (\r\n                      <SelectItem key={option.value} value={option.value.toString()}>\r\n                        {option.label}\r\n                      </SelectItem>\r\n                    ))}\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <Label>Applies To</Label>\r\n                <Select>\r\n                  <SelectTrigger>\r\n                    <SelectValue placeholder=\"Commission applies to...\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"total_fi_income\">Total F&I Income</SelectItem>\r\n                    <SelectItem value=\"front_end\">Front End Only</SelectItem>\r\n                    <SelectItem value=\"back_end\">Back End Only</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        )}\r\n      </Card>\r\n\r\n      {/* Draw Structure Section */}\r\n      <Card>\r\n        <CardHeader className=\"pb-3 cursor-pointer\" onClick={() => toggleSection('draw')}>\r\n          <div className=\"flex items-center justify-between\">\r\n            <CardTitle className=\"text-sm\">Draw Structure</CardTitle>\r\n            {isExpanded('draw') ? (\r\n              <ChevronUp className=\"w-4 h-4\" />\r\n            ) : (\r\n              <ChevronDown className=\"w-4 h-4\" />\r\n            )}\r\n          </div>\r\n        </CardHeader>\r\n        {isExpanded('draw') && (\r\n          <CardContent>\r\n            <div className=\"grid grid-cols-3 gap-4\">\r\n              <div className=\"space-y-2\">\r\n                <Label>Draw Amount</Label>\r\n                <Select>\r\n                  <SelectTrigger>\r\n                    <SelectValue placeholder=\"Select amount\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    {PAY_PLAN_CONFIG.DRAW_AMOUNTS.map(option => (\r\n                      <SelectItem key={option.value} value={option.value.toString()}>\r\n                        {option.label}\r\n                      </SelectItem>\r\n                    ))}\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <Label>Frequency</Label>\r\n                <Select>\r\n                  <SelectTrigger>\r\n                    <SelectValue placeholder=\"Select frequency\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    {PAY_PLAN_CONFIG.DRAW_FREQUENCIES.map(option => (\r\n                      <SelectItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                      </SelectItem>\r\n                    ))}\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <Label>Deducted from Commissions</Label>\r\n                <div className=\"flex items-center space-x-2 pt-2\">\r\n                  <Switch defaultChecked />\r\n                  <span className=\"text-sm\">Yes</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        )}\r\n      </Card>\r\n\r\n      {/* CIT Bonuses Section */}\r\n      <Card>\r\n        <CardHeader className=\"pb-3 cursor-pointer\" onClick={() => toggleSection('cit')}>\r\n          <div className=\"flex items-center justify-between\">\r\n            <CardTitle className=\"text-sm\">CIT Deal Bonuses</CardTitle>\r\n            {isExpanded('cit') ? (\r\n              <ChevronUp className=\"w-4 h-4\" />\r\n            ) : (\r\n              <ChevronDown className=\"w-4 h-4\" />\r\n            )}\r\n          </div>\r\n        </CardHeader>\r\n        {isExpanded('cit') && (\r\n          <CardContent>\r\n            <div className=\"space-y-4\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Switch />\r\n                <Label>Enable CIT Deal Bonuses</Label>\r\n              </div>\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div className=\"space-y-3\">\r\n                  <h5 className=\"font-medium text-sm\">30+ CIT Bonus</h5>\r\n                  <Button variant=\"outline\" size=\"sm\">\r\n                    <Plus className=\"w-4 h-4 mr-2\" />\r\n                    Add 30+ CIT Tier\r\n                  </Button>\r\n                </div>\r\n                <div className=\"space-y-3\">\r\n                  <h5 className=\"font-medium text-sm\">10+ CIT Bonus</h5>\r\n                  <Button variant=\"outline\" size=\"sm\">\r\n                    <Plus className=\"w-4 h-4 mr-2\" />\r\n                    Add 10+ CIT Tier\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        )}\r\n      </Card>\r\n\r\n      {/* Penetration Bonuses Section */}\r\n      <Card>\r\n        <CardHeader className=\"pb-3 cursor-pointer\" onClick={() => toggleSection('penetration')}>\r\n          <div className=\"flex items-center justify-between\">\r\n            <CardTitle className=\"text-sm\">Penetration Bonuses</CardTitle>\r\n            {isExpanded('penetration') ? (\r\n              <ChevronUp className=\"w-4 h-4\" />\r\n            ) : (\r\n              <ChevronDown className=\"w-4 h-4\" />\r\n            )}\r\n          </div>\r\n        </CardHeader>\r\n        {isExpanded('penetration') && (\r\n          <CardContent>\r\n            <div className=\"space-y-4\">\r\n              <Button variant=\"outline\" size=\"sm\">\r\n                <Plus className=\"w-4 h-4 mr-2\" />\r\n                Add Penetration Bonus\r\n              </Button>\r\n              <div className=\"text-sm text-muted-foreground\">\r\n                Configure bonuses based on product penetration rates (Service Contracts, GAP,\r\n                Warranties, etc.)\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        )}\r\n      </Card>\r\n\r\n      {/* Provider Bonuses Section */}\r\n      <Card>\r\n        <CardHeader className=\"pb-3 cursor-pointer\" onClick={() => toggleSection('providers')}>\r\n          <div className=\"flex items-center justify-between\">\r\n            <CardTitle className=\"text-sm\">Provider Bonuses</CardTitle>\r\n            {isExpanded('providers') ? (\r\n              <ChevronUp className=\"w-4 h-4\" />\r\n            ) : (\r\n              <ChevronDown className=\"w-4 h-4\" />\r\n            )}\r\n          </div>\r\n        </CardHeader>\r\n        {isExpanded('providers') && (\r\n          <CardContent>\r\n            <div className=\"space-y-4\">\r\n              <Button variant=\"outline\" size=\"sm\">\r\n                <Plus className=\"w-4 h-4 mr-2\" />\r\n                Add Provider Bonus\r\n              </Button>\r\n              <div className=\"grid grid-cols-1 gap-3\">\r\n                {PAY_PLAN_CONFIG.PROVIDER_OPTIONS.map(provider => (\r\n                  <div\r\n                    key={provider.id}\r\n                    className=\"flex items-center justify-between p-3 border rounded\"\r\n                  >\r\n                    <div>\r\n                      <span className=\"font-medium\">{provider.name}</span>\r\n                      <span className=\"text-sm text-muted-foreground ml-2\">\r\n                        ({provider.commission}% default)\r\n                      </span>\r\n                    </div>\r\n                    <Switch />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        )}\r\n      </Card>\r\n\r\n      {/* Benefits Section */}\r\n      <Card>\r\n        <CardHeader className=\"pb-3 cursor-pointer\" onClick={() => toggleSection('benefits')}>\r\n          <div className=\"flex items-center justify-between\">\r\n            <CardTitle className=\"text-sm\">Benefits & Allowances</CardTitle>\r\n            {isExpanded('benefits') ? (\r\n              <ChevronUp className=\"w-4 h-4\" />\r\n            ) : (\r\n              <ChevronDown className=\"w-4 h-4\" />\r\n            )}\r\n          </div>\r\n        </CardHeader>\r\n        {isExpanded('benefits') && (\r\n          <CardContent>\r\n            <div className=\"space-y-4\">\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div className=\"space-y-2\">\r\n                  <Label>Vehicle Allowance</Label>\r\n                  <Input placeholder=\"$300\" />\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label>Annual PTO Days</Label>\r\n                  <Input placeholder=\"12\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Switch />\r\n                <Label>Demo Vehicle Privileges Available</Label>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        )}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Salesperson Form Component\r\nfunction SalespersonForm({\r\n  formData,\r\n  setFormData,\r\n}: {\r\n  formData: PayPlanFormData;\r\n  setFormData: (data: PayPlanFormData) => void;\r\n}) {\r\n  const [expandedSections, setExpandedSections] = useState<string[]>(['basic']);\r\n\r\n  const toggleSection = (section: string) => {\r\n    setExpandedSections(prev =>\r\n      prev.includes(section) ? prev.filter(s => s !== section) : [...prev, section]\r\n    );\r\n  };\r\n\r\n  const isExpanded = (section: string) => expandedSections.includes(section);\r\n\r\n  if (formData.plan_type === 'simple') {\r\n    return (\r\n      <div className=\"space-y-4 border-t pt-4\">\r\n        <h4 className=\"font-medium\">Simple Salesperson Plan</h4>\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div className=\"space-y-2\">\r\n            <Label>Front-End Commission %</Label>\r\n            <Select>\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Select front-end percentage\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                {PAY_PLAN_CONFIG.PERCENTAGE_OPTIONS.map(option => (\r\n                  <SelectItem key={option.value} value={option.value.toString()}>\r\n                    {option.label}\r\n                  </SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            <Label>Back-End Commission %</Label>\r\n            <Select>\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Select back-end percentage\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                {PAY_PLAN_CONFIG.PERCENTAGE_OPTIONS.map(option => (\r\n                  <SelectItem key={option.value} value={option.value.toString()}>\r\n                    {option.label}\r\n                  </SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <Label>Minimum Monthly Pay</Label>\r\n          <Select>\r\n            <SelectTrigger>\r\n              <SelectValue placeholder=\"Select minimum guarantee\" />\r\n            </SelectTrigger>\r\n            <SelectContent>\r\n              {PAY_PLAN_CONFIG.MINIMUM_GUARANTEES.map(option => (\r\n                <SelectItem key={option.value} value={option.value.toString()}>\r\n                  {option.label}\r\n                </SelectItem>\r\n              ))}\r\n            </SelectContent>\r\n          </Select>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Advanced salesperson plan configuration\r\n  return (\r\n    <div className=\"space-y-4 border-t pt-4\">\r\n      <h4 className=\"font-medium\">Advanced Salesperson Plan Configuration</h4>\r\n\r\n      {/* Front-End Commission Section */}\r\n      <Card>\r\n        <CardHeader className=\"pb-3 cursor-pointer\" onClick={() => toggleSection('frontend')}>\r\n          <div className=\"flex items-center justify-between\">\r\n            <CardTitle className=\"text-sm\">Front-End Commission Structure</CardTitle>\r\n            {isExpanded('frontend') ? (\r\n              <ChevronUp className=\"w-4 h-4\" />\r\n            ) : (\r\n              <ChevronDown className=\"w-4 h-4\" />\r\n            )}\r\n          </div>\r\n        </CardHeader>\r\n        {isExpanded('frontend') && (\r\n          <CardContent>\r\n            <div className=\"space-y-4\">\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div className=\"space-y-2\">\r\n                  <Label>Gross Profit Percentage</Label>\r\n                  <Select>\r\n                    <SelectTrigger>\r\n                      <SelectValue placeholder=\"Select percentage\" />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      {PAY_PLAN_CONFIG.PERCENTAGE_OPTIONS.map(option => (\r\n                        <SelectItem key={option.value} value={option.value.toString()}>\r\n                          {option.label}\r\n                        </SelectItem>\r\n                      ))}\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2 pt-6\">\r\n                  <Checkbox id=\"take-higher\" />\r\n                  <Label htmlFor=\"take-higher\" className=\"text-sm\">\r\n                    Take higher of percentage or unit flat\r\n                  </Label>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Unit Flat Structure */}\r\n              <div className=\"space-y-3\">\r\n                <Label className=\"text-sm font-medium\">Unit Flat Rate Tiers</Label>\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"grid grid-cols-4 gap-2 text-xs font-medium text-muted-foreground\">\r\n                    <span>Min Units</span>\r\n                    <span>Max Units</span>\r\n                    <span>Flat Amount</span>\r\n                    <span>Retroactive</span>\r\n                  </div>\r\n                  <div className=\"grid grid-cols-4 gap-2\">\r\n                    <Input placeholder=\"0\" />\r\n                    <Input placeholder=\"14\" />\r\n                    <Select>\r\n                      <SelectTrigger>\r\n                        <SelectValue placeholder=\"Amount\" />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        {PAY_PLAN_CONFIG.UNIT_FLAT_AMOUNTS.map(option => (\r\n                          <SelectItem key={option.value} value={option.value.toString()}>\r\n                            {option.label}\r\n                          </SelectItem>\r\n                        ))}\r\n                      </SelectContent>\r\n                    </Select>\r\n                    <div className=\"flex items-center justify-center\">\r\n                      <Checkbox />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <Button variant=\"outline\" size=\"sm\">\r\n                  <Plus className=\"w-4 h-4 mr-2\" />\r\n                  Add Tier\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        )}\r\n      </Card>\r\n\r\n      {/* Back-End Commission Section */}\r\n      <Card>\r\n        <CardHeader className=\"pb-3 cursor-pointer\" onClick={() => toggleSection('backend')}>\r\n          <div className=\"flex items-center justify-between\">\r\n            <CardTitle className=\"text-sm\">Back-End Commission Structure</CardTitle>\r\n            {isExpanded('backend') ? (\r\n              <ChevronUp className=\"w-4 h-4\" />\r\n            ) : (\r\n              <ChevronDown className=\"w-4 h-4\" />\r\n            )}\r\n          </div>\r\n        </CardHeader>\r\n        {isExpanded('backend') && (\r\n          <CardContent>\r\n            <div className=\"space-y-4\">\r\n              <div className=\"space-y-2\">\r\n                <Label>Base Back-End Percentage</Label>\r\n                <Select>\r\n                  <SelectTrigger>\r\n                    <SelectValue placeholder=\"Select base percentage\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    {PAY_PLAN_CONFIG.PERCENTAGE_OPTIONS.map(option => (\r\n                      <SelectItem key={option.value} value={option.value.toString()}>\r\n                        {option.label}\r\n                      </SelectItem>\r\n                    ))}\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n\r\n              {/* Volume-Based Tiers */}\r\n              <div className=\"space-y-3\">\r\n                <Label className=\"text-sm font-medium\">Volume-Based Percentage Tiers</Label>\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"grid grid-cols-4 gap-2 text-xs font-medium text-muted-foreground\">\r\n                    <span>Min Units</span>\r\n                    <span>Max Units</span>\r\n                    <span>Percentage</span>\r\n                    <span>Retroactive</span>\r\n                  </div>\r\n                  <div className=\"grid grid-cols-4 gap-2\">\r\n                    <Input placeholder=\"0\" />\r\n                    <Input placeholder=\"14\" />\r\n                    <Select>\r\n                      <SelectTrigger>\r\n                        <SelectValue placeholder=\"%\" />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        {PAY_PLAN_CONFIG.PERCENTAGE_OPTIONS.map(option => (\r\n                          <SelectItem key={option.value} value={option.value.toString()}>\r\n                            {option.label}\r\n                          </SelectItem>\r\n                        ))}\r\n                      </SelectContent>\r\n                    </Select>\r\n                    <div className=\"flex items-center justify-center\">\r\n                      <Checkbox />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <Button variant=\"outline\" size=\"sm\">\r\n                  <Plus className=\"w-4 h-4 mr-2\" />\r\n                  Add Tier\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        )}\r\n      </Card>\r\n\r\n      {/* Used Vehicle Pack Section */}\r\n      <Card>\r\n        <CardHeader className=\"pb-3 cursor-pointer\" onClick={() => toggleSection('pack')}>\r\n          <div className=\"flex items-center justify-between\">\r\n            <CardTitle className=\"text-sm\">Used Vehicle Pack Deductions</CardTitle>\r\n            {isExpanded('pack') ? (\r\n              <ChevronUp className=\"w-4 h-4\" />\r\n            ) : (\r\n              <ChevronDown className=\"w-4 h-4\" />\r\n            )}\r\n          </div>\r\n        </CardHeader>\r\n        {isExpanded('pack') && (\r\n          <CardContent>\r\n            <div className=\"space-y-4\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Checkbox id=\"enable-pack\" />\r\n                <Label htmlFor=\"enable-pack\">Enable used vehicle pack deductions</Label>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div className=\"space-y-2\">\r\n                  <Label>High Value Pack (≥$10,000)</Label>\r\n                  <div className=\"grid grid-cols-2 gap-2\">\r\n                    <Select>\r\n                      <SelectTrigger>\r\n                        <SelectValue placeholder=\"Threshold\" />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        {PAY_PLAN_CONFIG.PACK_THRESHOLDS.map(option => (\r\n                          <SelectItem key={option.value} value={option.value.toString()}>\r\n                            {option.label}\r\n                          </SelectItem>\r\n                        ))}\r\n                      </SelectContent>\r\n                    </Select>\r\n                    <Select>\r\n                      <SelectTrigger>\r\n                        <SelectValue placeholder=\"Pack Amount\" />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        {PAY_PLAN_CONFIG.PACK_AMOUNTS.map(option => (\r\n                          <SelectItem key={option.value} value={option.value.toString()}>\r\n                            {option.label}\r\n                          </SelectItem>\r\n                        ))}\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <Label>Low Value Pack ($2,000-$10,000)</Label>\r\n                  <div className=\"grid grid-cols-2 gap-2\">\r\n                    <Select>\r\n                      <SelectTrigger>\r\n                        <SelectValue placeholder=\"Min Threshold\" />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        {PAY_PLAN_CONFIG.PACK_THRESHOLDS.map(option => (\r\n                          <SelectItem key={option.value} value={option.value.toString()}>\r\n                            {option.label}\r\n                          </SelectItem>\r\n                        ))}\r\n                      </SelectContent>\r\n                    </Select>\r\n                    <Select>\r\n                      <SelectTrigger>\r\n                        <SelectValue placeholder=\"Pack Amount\" />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        {PAY_PLAN_CONFIG.PACK_AMOUNTS.map(option => (\r\n                          <SelectItem key={option.value} value={option.value.toString()}>\r\n                            {option.label}\r\n                          </SelectItem>\r\n                        ))}\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        )}\r\n      </Card>\r\n\r\n      {/* CSI Bonus Section */}\r\n      <Card>\r\n        <CardHeader className=\"pb-3 cursor-pointer\" onClick={() => toggleSection('csi')}>\r\n          <div className=\"flex items-center justify-between\">\r\n            <CardTitle className=\"text-sm\">CSI Bonus Structure</CardTitle>\r\n            {isExpanded('csi') ? (\r\n              <ChevronUp className=\"w-4 h-4\" />\r\n            ) : (\r\n              <ChevronDown className=\"w-4 h-4\" />\r\n            )}\r\n          </div>\r\n        </CardHeader>\r\n        {isExpanded('csi') && (\r\n          <CardContent>\r\n            <div className=\"space-y-4\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Checkbox id=\"enable-csi\" />\r\n                <Label htmlFor=\"enable-csi\">Enable CSI benchmark bonus</Label>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div className=\"space-y-2\">\r\n                  <Label>Bonus Percentage</Label>\r\n                  <Select>\r\n                    <SelectTrigger>\r\n                      <SelectValue placeholder=\"Select bonus %\" />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      {PAY_PLAN_CONFIG.PERCENTAGE_OPTIONS.filter(opt => opt.value <= 10).map(\r\n                        option => (\r\n                          <SelectItem key={option.value} value={option.value.toString()}>\r\n                            {option.label}\r\n                          </SelectItem>\r\n                        )\r\n                      )}\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label>Description</Label>\r\n                  <Input placeholder=\"e.g., Additional 5% on back-end if CSI above benchmark\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        )}\r\n      </Card>\r\n\r\n      {/* Minimum Guarantee Section */}\r\n      <Card>\r\n        <CardHeader className=\"pb-3 cursor-pointer\" onClick={() => toggleSection('guarantee')}>\r\n          <div className=\"flex items-center justify-between\">\r\n            <CardTitle className=\"text-sm\">Minimum Unit Guarantee</CardTitle>\r\n            {isExpanded('guarantee') ? (\r\n              <ChevronUp className=\"w-4 h-4\" />\r\n            ) : (\r\n              <ChevronDown className=\"w-4 h-4\" />\r\n            )}\r\n          </div>\r\n        </CardHeader>\r\n        {isExpanded('guarantee') && (\r\n          <CardContent>\r\n            <div className=\"space-y-4\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Checkbox id=\"enable-guarantee\" />\r\n                <Label htmlFor=\"enable-guarantee\">Enable minimum unit guarantees</Label>\r\n              </div>\r\n\r\n              <div className=\"space-y-3\">\r\n                <Label className=\"text-sm font-medium\">Guarantee Tiers</Label>\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"grid grid-cols-3 gap-2 text-xs font-medium text-muted-foreground\">\r\n                    <span>Min Units</span>\r\n                    <span>Max Units</span>\r\n                    <span>Guarantee Amount</span>\r\n                  </div>\r\n                  <div className=\"grid grid-cols-3 gap-2\">\r\n                    <Input placeholder=\"15\" />\r\n                    <Input placeholder=\"19\" />\r\n                    <Select>\r\n                      <SelectTrigger>\r\n                        <SelectValue placeholder=\"Amount\" />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        {PAY_PLAN_CONFIG.MINIMUM_GUARANTEES.map(option => (\r\n                          <SelectItem key={option.value} value={option.value.toString()}>\r\n                            {option.label}\r\n                          </SelectItem>\r\n                        ))}\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n                <Button variant=\"outline\" size=\"sm\">\r\n                  <Plus className=\"w-4 h-4 mr-2\" />\r\n                  Add Guarantee Tier\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        )}\r\n      </Card>\r\n\r\n      {/* Benefits Section */}\r\n      <Card>\r\n        <CardHeader className=\"pb-3 cursor-pointer\" onClick={() => toggleSection('benefits')}>\r\n          <div className=\"flex items-center justify-between\">\r\n            <CardTitle className=\"text-sm\">Benefits & Allowances</CardTitle>\r\n            {isExpanded('benefits') ? (\r\n              <ChevronUp className=\"w-4 h-4\" />\r\n            ) : (\r\n              <ChevronDown className=\"w-4 h-4\" />\r\n            )}\r\n          </div>\r\n        </CardHeader>\r\n        {isExpanded('benefits') && (\r\n          <CardContent>\r\n            <div className=\"space-y-4\">\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div className=\"space-y-2\">\r\n                  <Label>Vehicle Allowance</Label>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <Checkbox id=\"vehicle-allowance\" />\r\n                    <Label htmlFor=\"vehicle-allowance\" className=\"text-sm\">\r\n                      Enable\r\n                    </Label>\r\n                  </div>\r\n                  <Input placeholder=\"Monthly allowance amount\" />\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label>PTO Structure</Label>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <Checkbox id=\"pto\" />\r\n                    <Label htmlFor=\"pto\" className=\"text-sm\">\r\n                      Enable\r\n                    </Label>\r\n                  </div>\r\n                  <Input placeholder=\"Annual PTO days\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        )}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../ui/card';\r\nimport { Button } from '../ui/button';\r\nimport { Input } from '../ui/input';\r\nimport { Label } from '../ui/label';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../ui/select';\r\nimport { Checkbox } from '../ui/checkbox';\r\nimport { Badge } from '../ui/badge';\r\nimport { Calculator, DollarSign, TrendingUp } from 'lucide-react';\r\nimport { PayPlan, AdvancedSalespersonPayPlan } from '../../types/payPlan';\r\n\r\ninterface PayCalculatorProps {\r\n  payPlans: PayPlan[];\r\n}\r\n\r\ninterface CalculationInputs {\r\n  selectedPayPlanId: string;\r\n  unitsSold: number;\r\n  frontEndGrossProfit: number;\r\n  backEndGrossProfit: number;\r\n  vehicleType: 'new' | 'used';\r\n  vehicleValue: number;\r\n  csiAboveBenchmark: boolean;\r\n}\r\n\r\ninterface CalculationResults {\r\n  frontEndCommission: number;\r\n  backEndCommission: number;\r\n  csiBonus: number;\r\n  totalCommission: number;\r\n  minimumGuarantee: number;\r\n  finalPayout: number;\r\n  packDeduction: number;\r\n  unitFlatAmount: number;\r\n  percentageAmount: number;\r\n  usedHigherAmount: boolean;\r\n}\r\n\r\nexport function PayCalculator({ payPlans }: PayCalculatorProps) {\r\n  const [inputs, setInputs] = useState<CalculationInputs>({\r\n    selectedPayPlanId: '',\r\n    unitsSold: 0,\r\n    frontEndGrossProfit: 0,\r\n    backEndGrossProfit: 0,\r\n    vehicleType: 'new',\r\n    vehicleValue: 0,\r\n    csiAboveBenchmark: false,\r\n  });\r\n\r\n  const [results, setResults] = useState<CalculationResults | null>(null);\r\n\r\n  const selectedPlan = payPlans.find(plan => plan.id === inputs.selectedPayPlanId);\r\n\r\n  const calculatePay = () => {\r\n    if (!selectedPlan || selectedPlan.role !== 'salesperson') {\r\n      return;\r\n    }\r\n\r\n    if (selectedPlan.plan_type === 'simple') {\r\n      // Simple calculation\r\n      const simplePlan = selectedPlan as any;\r\n      const frontEndCommission =\r\n        inputs.frontEndGrossProfit * (simplePlan.front_end_gross_percentage / 100);\r\n      const backEndCommission =\r\n        inputs.backEndGrossProfit * (simplePlan.back_end_gross_percentage / 100);\r\n      const totalCommission = frontEndCommission + backEndCommission;\r\n      const finalPayout = Math.max(totalCommission, simplePlan.minimum_monthly_pay || 0);\r\n\r\n      setResults({\r\n        frontEndCommission,\r\n        backEndCommission,\r\n        csiBonus: 0,\r\n        totalCommission,\r\n        minimumGuarantee: simplePlan.minimum_monthly_pay || 0,\r\n        finalPayout,\r\n        packDeduction: 0,\r\n        unitFlatAmount: 0,\r\n        percentageAmount: frontEndCommission,\r\n        usedHigherAmount: false,\r\n      });\r\n    } else {\r\n      // Advanced calculation\r\n      const advancedPlan = selectedPlan as AdvancedSalespersonPayPlan;\r\n\r\n      // Calculate pack deduction for used vehicles\r\n      let packDeduction = 0;\r\n      if (inputs.vehicleType === 'used' && advancedPlan.used_vehicle_pack.enabled) {\r\n        if (inputs.vehicleValue >= advancedPlan.used_vehicle_pack.high_value_pack.threshold) {\r\n          packDeduction = advancedPlan.used_vehicle_pack.high_value_pack.pack_amount;\r\n        } else if (\r\n          inputs.vehicleValue >= advancedPlan.used_vehicle_pack.low_value_pack.min_threshold &&\r\n          inputs.vehicleValue < advancedPlan.used_vehicle_pack.low_value_pack.max_threshold\r\n        ) {\r\n          packDeduction = advancedPlan.used_vehicle_pack.low_value_pack.pack_amount;\r\n        }\r\n      }\r\n\r\n      // Calculate front-end commission\r\n      const adjustedFrontEndProfit = inputs.frontEndGrossProfit - packDeduction;\r\n      const percentageAmount =\r\n        adjustedFrontEndProfit * (advancedPlan.front_end_commission.gross_percentage / 100);\r\n\r\n      // Find unit flat amount based on units sold\r\n      let unitFlatAmount = 0;\r\n      if (advancedPlan.front_end_commission.unit_flat_structure.enabled) {\r\n        const flatTier = advancedPlan.front_end_commission.unit_flat_structure.tiers\r\n          .reverse()\r\n          .find(tier => inputs.unitsSold >= tier.min_units);\r\n        if (flatTier) {\r\n          unitFlatAmount = flatTier.retroactive\r\n            ? flatTier.flat_amount * inputs.unitsSold\r\n            : flatTier.flat_amount;\r\n        }\r\n      }\r\n\r\n      const usedHigherAmount = unitFlatAmount > percentageAmount;\r\n      const frontEndCommission = advancedPlan.front_end_commission.take_higher\r\n        ? Math.max(percentageAmount, unitFlatAmount)\r\n        : percentageAmount;\r\n\r\n      // Calculate back-end commission\r\n      let backEndPercentage = advancedPlan.back_end_commission.base_percentage;\r\n      if (advancedPlan.back_end_commission.enabled) {\r\n        const backEndTier = advancedPlan.back_end_commission.tiers\r\n          .reverse()\r\n          .find(tier => inputs.unitsSold >= tier.min_units);\r\n        if (backEndTier) {\r\n          backEndPercentage = backEndTier.percentage;\r\n        }\r\n      }\r\n\r\n      let backEndCommission = inputs.backEndGrossProfit * (backEndPercentage / 100);\r\n\r\n      // Calculate CSI bonus\r\n      let csiBonus = 0;\r\n      if (\r\n        inputs.csiAboveBenchmark &&\r\n        advancedPlan.csi_bonus.enabled &&\r\n        advancedPlan.csi_bonus.benchmark_bonus.enabled\r\n      ) {\r\n        csiBonus =\r\n          inputs.backEndGrossProfit *\r\n          (advancedPlan.csi_bonus.benchmark_bonus.bonus_percentage / 100);\r\n        backEndCommission += csiBonus;\r\n      }\r\n\r\n      const totalCommission = frontEndCommission + backEndCommission;\r\n\r\n      // Check minimum guarantee\r\n      let minimumGuarantee = 0;\r\n      if (advancedPlan.minimum_guarantee.enabled) {\r\n        const guaranteeTier = advancedPlan.minimum_guarantee.tiers\r\n          .reverse()\r\n          .find(tier => inputs.unitsSold >= tier.min_units);\r\n        if (guaranteeTier) {\r\n          minimumGuarantee = guaranteeTier.guarantee_amount;\r\n        }\r\n      }\r\n\r\n      const finalPayout = Math.max(totalCommission, minimumGuarantee);\r\n\r\n      setResults({\r\n        frontEndCommission,\r\n        backEndCommission: backEndCommission - csiBonus,\r\n        csiBonus,\r\n        totalCommission,\r\n        minimumGuarantee,\r\n        finalPayout,\r\n        packDeduction,\r\n        unitFlatAmount,\r\n        percentageAmount,\r\n        usedHigherAmount,\r\n      });\r\n    }\r\n  };\r\n\r\n  const formatCurrency = (amount: number) => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n      minimumFractionDigits: 2,\r\n    }).format(amount);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle className=\"flex items-center\">\r\n          <Calculator className=\"w-5 h-5 mr-2\" />\r\n          Pay Calculator\r\n        </CardTitle>\r\n        <CardDescription>\r\n          Calculate commission based on selected pay plan and deal details\r\n        </CardDescription>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-6\">\r\n        {/* Pay Plan Selection */}\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"payPlan\">Select Pay Plan</Label>\r\n          <Select\r\n            value={inputs.selectedPayPlanId}\r\n            onValueChange={value => setInputs({ ...inputs, selectedPayPlanId: value })}\r\n          >\r\n            <SelectTrigger id=\"payPlan\">\r\n              <SelectValue placeholder=\"Choose a pay plan\" />\r\n            </SelectTrigger>\r\n            <SelectContent>\r\n              {payPlans\r\n                .filter(plan => plan.role === 'salesperson' && plan.is_active)\r\n                .map(plan => (\r\n                  <SelectItem key={plan.id} value={plan.id}>\r\n                    <div className=\"flex flex-col\">\r\n                      <span>{plan.name}</span>\r\n                      <span className=\"text-xs text-muted-foreground\">{plan.description}</span>\r\n                    </div>\r\n                  </SelectItem>\r\n                ))}\r\n            </SelectContent>\r\n          </Select>\r\n        </div>\r\n\r\n        {selectedPlan && (\r\n          <>\r\n            {/* Input Fields */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"units\">Units Sold</Label>\r\n                <Input\r\n                  id=\"units\"\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  value={inputs.unitsSold}\r\n                  onChange={e => setInputs({ ...inputs, unitsSold: parseInt(e.target.value) || 0 })}\r\n                  placeholder=\"0\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"frontEnd\">Front-End Gross Profit</Label>\r\n                <Input\r\n                  id=\"frontEnd\"\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  step=\"0.01\"\r\n                  value={inputs.frontEndGrossProfit}\r\n                  onChange={e =>\r\n                    setInputs({ ...inputs, frontEndGrossProfit: parseFloat(e.target.value) || 0 })\r\n                  }\r\n                  placeholder=\"0.00\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"backEnd\">Back-End Gross Profit</Label>\r\n                <Input\r\n                  id=\"backEnd\"\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  step=\"0.01\"\r\n                  value={inputs.backEndGrossProfit}\r\n                  onChange={e =>\r\n                    setInputs({ ...inputs, backEndGrossProfit: parseFloat(e.target.value) || 0 })\r\n                  }\r\n                  placeholder=\"0.00\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"vehicleType\">Vehicle Type</Label>\r\n                <Select\r\n                  value={inputs.vehicleType}\r\n                  onValueChange={value =>\r\n                    setInputs({ ...inputs, vehicleType: value as 'new' | 'used' })\r\n                  }\r\n                >\r\n                  <SelectTrigger id=\"vehicleType\">\r\n                    <SelectValue />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"new\">New Vehicle</SelectItem>\r\n                    <SelectItem value=\"used\">Used Vehicle</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n\r\n              {inputs.vehicleType === 'used' && (\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"vehicleValue\">Vehicle Value</Label>\r\n                  <Input\r\n                    id=\"vehicleValue\"\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    step=\"0.01\"\r\n                    value={inputs.vehicleValue}\r\n                    onChange={e =>\r\n                      setInputs({ ...inputs, vehicleValue: parseFloat(e.target.value) || 0 })\r\n                    }\r\n                    placeholder=\"0.00\"\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Checkbox\r\n                  id=\"csi\"\r\n                  checked={inputs.csiAboveBenchmark}\r\n                  onCheckedChange={checked =>\r\n                    setInputs({ ...inputs, csiAboveBenchmark: !!checked })\r\n                  }\r\n                />\r\n                <Label htmlFor=\"csi\">CSI Above Benchmark</Label>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Calculate Button */}\r\n            <Button onClick={calculatePay} className=\"w-full\">\r\n              <Calculator className=\"w-4 h-4 mr-2\" />\r\n              Calculate Commission\r\n            </Button>\r\n\r\n            {/* Results */}\r\n            {results && (\r\n              <div className=\"space-y-4 p-4 bg-muted rounded-lg\">\r\n                <h3 className=\"font-semibold flex items-center\">\r\n                  <TrendingUp className=\"w-4 h-4 mr-2\" />\r\n                  Calculation Results\r\n                </h3>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  {selectedPlan.plan_type === 'advanced' && (\r\n                    <>\r\n                      <div className=\"space-y-2\">\r\n                        <div className=\"flex justify-between\">\r\n                          <span>Pack Deduction:</span>\r\n                          <span className=\"text-red-600\">\r\n                            -{formatCurrency(results.packDeduction)}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"flex justify-between\">\r\n                          <span>Percentage Amount:</span>\r\n                          <span>{formatCurrency(results.percentageAmount)}</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between\">\r\n                          <span>Unit Flat Amount:</span>\r\n                          <span>{formatCurrency(results.unitFlatAmount)}</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span>Used Higher Amount:</span>\r\n                          <Badge variant={results.usedHigherAmount ? 'default' : 'secondary'}>\r\n                            {results.usedHigherAmount ? 'Unit Flat' : 'Percentage'}\r\n                          </Badge>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n\r\n                  <div className=\"space-y-2\">\r\n                    <div className=\"flex justify-between\">\r\n                      <span>Front-End Commission:</span>\r\n                      <span className=\"font-medium\">\r\n                        {formatCurrency(results.frontEndCommission)}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span>Back-End Commission:</span>\r\n                      <span className=\"font-medium\">\r\n                        {formatCurrency(results.backEndCommission)}\r\n                      </span>\r\n                    </div>\r\n                    {results.csiBonus > 0 && (\r\n                      <div className=\"flex justify-between\">\r\n                        <span>CSI Bonus:</span>\r\n                        <span className=\"font-medium text-green-600\">\r\n                          +{formatCurrency(results.csiBonus)}\r\n                        </span>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"flex justify-between\">\r\n                      <span>Total Commission:</span>\r\n                      <span className=\"font-medium\">{formatCurrency(results.totalCommission)}</span>\r\n                    </div>\r\n                    {results.minimumGuarantee > 0 && (\r\n                      <div className=\"flex justify-between\">\r\n                        <span>Minimum Guarantee:</span>\r\n                        <span className=\"font-medium\">\r\n                          {formatCurrency(results.minimumGuarantee)}\r\n                        </span>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"pt-4 border-t\">\r\n                  <div className=\"flex justify-between items-center text-lg font-bold\">\r\n                    <span>Final Payout:</span>\r\n                    <span className=\"flex items-center text-green-600\">\r\n                      <DollarSign className=\"w-5 h-5 mr-1\" />\r\n                      {formatCurrency(results.finalPayout)}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { Card, CardHeader, CardTitle, CardContent, CardDescription } from '../ui/card';\nimport { Button } from '../ui/button';\nimport { Badge } from '../ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '../ui/tabs';\nimport { Input } from '../ui/input';\nimport { Label } from '../ui/label';\nimport { Checkbox } from '../ui/checkbox';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../ui/select';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '../ui/table';\nimport { useToast } from '../../lib/use-toast';\nimport { supabase } from '../../lib/supabase';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Users,\n  UserCheck,\n  Shield,\n  Crown,\n  Calculator,\n  Car,\n  TrendingUp,\n  Plus,\n  Edit,\n  Trash,\n  X,\n  Save,\n  Loader2,\n  Eye,\n  EyeOff,\n  Building,\n  Target,\n  BarChart3,\n  Settings,\n  Clock,\n  Info,\n} from 'lucide-react';\nimport { EnhancedPayPlanManager } from '../payplan/EnhancedPayPlanManager';\nimport { PayPlan } from '../../types/payPlan';\nimport { PayCalculator } from '../payplan/PayCalculator';\n\n// User roles configuration\nconst USER_ROLES = [\n  { id: 'salesperson', name: 'Salesperson', category: 'sales' },\n  { id: 'finance_manager', name: 'Finance Manager', category: 'finance' },\n  { id: 'finance_director', name: 'Finance Director', category: 'finance' },\n  { id: 'sales_manager', name: 'Sales Manager', category: 'management' },\n  { id: 'general_manager', name: 'General Manager', category: 'management' },\n  { id: 'gsm', name: 'GSM', category: 'management' },\n  { id: 'dealership_admin', name: 'Dealership Admin', category: 'admin' },\n];\n\n// Employment status options\nconst EMPLOYMENT_STATUS = [\n  { id: 'employed', name: 'Employed', color: 'bg-green-100 text-green-800' },\n  { id: 'suspended', name: 'Suspended', color: 'bg-yellow-100 text-yellow-800' },\n  { id: 'terminated', name: 'Terminated', color: 'bg-red-100 text-red-800' },\n];\n\n// Interfaces\ninterface User {\n  id: string;\n  first_name: string;\n  last_name: string;\n  email: string;\n  role: string;\n  role_id: string;\n  employment_status?: string;\n  created_at: string;\n  start_date?: string;\n  isEditing?: boolean;\n}\n\ninterface UserFormData {\n  firstName: string;\n  lastName: string;\n  email: string;\n  roleId: string;\n  startDate: string;\n  tempPassword: string;\n  payPlanId: string;\n}\n\ninterface StaffCounts {\n  salesperson: number;\n  finance_manager: number;\n  sales_manager: number;\n  general_manager: number;\n  gsm: number;\n  total: number;\n}\n\nexport function AdminDashboard() {\n  const { user } = useAuth();\n  const { toast } = useToast();\n  const navigate = useNavigate();\n\n  // Check for direct auth if Supabase auth is not available\n  const directAuthData = localStorage.getItem('directauth_user');\n  const directUser = directAuthData ? JSON.parse(directAuthData) : null;\n\n  // Use direct auth user if Supabase user is not available\n  const currentUser = user || directUser;\n\n  // Extract dealershipId from current user\n  const dealershipId = currentUser?.dealership_id || currentUser?.dealershipId || null;\n\n  // Debug logging\n  console.log('[AdminDashboard] Component rendering', {\n    supabaseUser: user?.email,\n    directUser: directUser?.email,\n    currentUser: currentUser?.email,\n    dealershipId: dealershipId,\n  });\n\n  // State\n  const [users, setUsers] = useState<User[]>([]);\n  const [payPlans, setPayPlans] = useState<PayPlan[]>([]);\n  const [staffCounts, setStaffCounts] = useState<StaffCounts>({\n    salesperson: 0,\n    finance_manager: 0,\n    sales_manager: 0,\n    general_manager: 0,\n    gsm: 0,\n    total: 0,\n  });\n  const [selectedTab, setSelectedTab] = useState('salesperson');\n  const [editingUserId, setEditingUserId] = useState<string | null>(null);\n  const [userLoading, setUserLoading] = useState(false);\n\n  // Form state\n  const [userForm, setUserForm] = useState<UserFormData>({\n    firstName: '',\n    lastName: '',\n    email: '',\n    roleId: 'salesperson',\n    startDate: '',\n    tempPassword: '',\n    payPlanId: '',\n  });\n\n  // Generate temporary password function\n  const generateTempPassword = () => {\n    const tempPassword =\n      Math.random().toString(36).slice(-8) + Math.random().toString(36).toUpperCase().slice(-4);\n    setUserForm({ ...userForm, tempPassword });\n  };\n\n  // Fetch data when component mounts\n  useEffect(() => {\n    console.log('[AdminDashboard] useEffect running - currentUser:', currentUser?.email);\n\n    if (currentUser) {\n      fetchUsers();\n    } else {\n      // If no user, just log it but still show the dashboard\n      console.log('[AdminDashboard] No current user, showing dashboard anyway');\n    }\n\n    // Generate initial temporary password\n    if (!userForm.tempPassword) {\n      generateTempPassword();\n    }\n  }, [currentUser]);\n\n  // Calculate staff counts when users change\n  useEffect(() => {\n    const counts = users.reduce(\n      (acc, user) => {\n        const role = user.role || user.role_id;\n        if (role in acc) {\n          acc[role as keyof StaffCounts]++;\n        }\n        acc.total++;\n        return acc;\n      },\n      {\n        salesperson: 0,\n        finance_manager: 0,\n        sales_manager: 0,\n        general_manager: 0,\n        gsm: 0,\n        total: 0,\n      }\n    );\n    setStaffCounts(counts);\n  }, [users]);\n\n  // Fetch users function\n  const fetchUsers = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('profiles')\n        .select('id, email, role, created_at, start_date, first_name, last_name, employment_status')\n        .order('created_at', { ascending: false });\n\n      if (error) {\n        console.error('Error fetching users:', error);\n        toast({\n          title: 'Error',\n          description: 'Failed to fetch users',\n          variant: 'destructive',\n        });\n        return;\n      }\n\n      // Map the data to match our User interface\n      const mappedUsers =\n        data?.map(user => ({\n          id: user.id,\n          first_name: user.first_name || user.email.split('@')[0].split('.')[0] || 'User',\n          last_name: user.last_name || user.email.split('@')[0].split('.')[1] || '',\n          email: user.email,\n          role: user.role || 'viewer',\n          role_id: user.role || 'viewer',\n          employment_status: user.employment_status,\n          created_at: user.created_at,\n          start_date: user.start_date,\n        })) || [];\n\n      setUsers(mappedUsers);\n      console.log('Fetched users:', mappedUsers);\n\n      // Fetch pay plans after fetching users\n      await fetchPayPlans();\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      toast({\n        title: 'Error',\n        description: 'Failed to fetch users',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  // Fetch pay plans function\n  const fetchPayPlans = async () => {\n    try {\n      // For now, use mock data since we don't have Supabase tables yet\n      const mockPayPlans: PayPlan[] = [\n        {\n          id: '1',\n          name: 'John Valentine Advanced Plan',\n          description: 'Advanced F&I plan with complex bonus structures',\n          role: 'finance_manager',\n          dealership_id: dealershipId || 'demo',\n          created_by: 'admin',\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString(),\n          is_active: true,\n          plan_type: 'advanced',\n          base_commission: {\n            enabled: true,\n            base_percentage: 25,\n            tiers: [],\n            applies_to: 'total_fi_income',\n          },\n          draw_structure: {\n            enabled: true,\n            amount: 2500,\n            frequency: 'monthly',\n            deducted_from_commissions: true,\n          },\n          penetration_bonuses: [],\n          provider_bonuses: [],\n          vehicle_allowance: {\n            enabled: true,\n            allowance_amount: 300,\n            demo_privileges_available: true,\n            description: '$300 vehicle allowance or demo privileges',\n          },\n          pto_structure: {\n            enabled: true,\n            annual_days: 12,\n            prorated: true,\n          },\n          chargeback_protection: {\n            enabled: true,\n            protection_period_days: 90,\n          },\n        } as PayPlan,\n        {\n          id: '2',\n          name: 'Lloyd Hatter Simple Plan',\n          description: 'Simple PVR-based F&I plan',\n          role: 'finance_manager',\n          dealership_id: dealershipId || 'demo',\n          created_by: 'admin',\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString(),\n          is_active: true,\n          plan_type: 'simple',\n          commission_structure: {\n            base_fi_percentage: 12,\n            pvr_tiers: [\n              { min_value: 0, max_value: 999, percentage: 12, label: '$999 or below' },\n              { min_value: 1000, max_value: 1199, percentage: 13, label: '$1,000 - $1,199' },\n              { min_value: 1200, max_value: 1299, percentage: 14, label: '$1,200 - $1,299' },\n              { min_value: 1300, percentage: 14.5, label: '$1,300+' },\n            ],\n          },\n          monthly_draw: 2500,\n          provider_bonuses: [],\n          vehicle_allowance: {\n            enabled: true,\n            allowance_amount: 300,\n            demo_privileges_available: true,\n            description: '$300 vehicle allowance or demo privileges',\n          },\n          pto_structure: {\n            enabled: true,\n            annual_days: 12,\n            prorated: true,\n          },\n        } as PayPlan,\n        {\n          id: '3',\n          name: 'Basic Salesperson Plan',\n          description: 'Standard salesperson compensation',\n          role: 'salesperson',\n          dealership_id: dealershipId || 'demo',\n          created_by: 'admin',\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString(),\n          is_active: true,\n          plan_type: 'simple',\n          front_end_gross_percentage: 25,\n          back_end_gross_percentage: 10,\n          minimum_monthly_pay: 3000,\n        } as PayPlan,\n        {\n          id: '4',\n          name: 'Advanced Salesperson Plan',\n          description:\n            'Complex salesperson plan with unit flats, pack deductions, and minimum guarantees',\n          role: 'salesperson',\n          dealership_id: dealershipId || 'demo',\n          created_by: 'admin',\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString(),\n          is_active: true,\n          plan_type: 'advanced',\n          front_end_commission: {\n            gross_percentage: 15,\n            unit_flat_structure: {\n              enabled: true,\n              tiers: [\n                {\n                  min_units: 0,\n                  max_units: 14,\n                  flat_amount: 14.5,\n                  label: '0-14 units: $14.50',\n                  retroactive: true,\n                },\n                {\n                  min_units: 15,\n                  max_units: 19,\n                  flat_amount: 19.5,\n                  label: '15-19 units: $19.50',\n                  retroactive: true,\n                },\n                { min_units: 20, flat_amount: 25.0, label: '20+ units: $25.00', retroactive: true },\n              ],\n            },\n            take_higher: true,\n          },\n          back_end_commission: {\n            enabled: true,\n            base_percentage: 10,\n            tiers: [\n              {\n                min_units: 0,\n                max_units: 14,\n                percentage: 10,\n                label: '0-14 units: 10%',\n                retroactive: true,\n              },\n              {\n                min_units: 15,\n                max_units: 19,\n                percentage: 12.5,\n                label: '15-19 units: 12.5%',\n                retroactive: true,\n              },\n              { min_units: 20, percentage: 15, label: '20+ units: 15%', retroactive: true },\n            ],\n          },\n          used_vehicle_pack: {\n            enabled: true,\n            high_value_pack: {\n              threshold: 10000,\n              pack_amount: 10000,\n            },\n            low_value_pack: {\n              min_threshold: 2000,\n              max_threshold: 10000,\n              pack_amount: 450,\n            },\n          },\n          csi_bonus: {\n            enabled: true,\n            benchmark_bonus: {\n              enabled: true,\n              bonus_percentage: 5,\n              description: 'Additional 5% on back-end if CSI above benchmark',\n            },\n          },\n          minimum_guarantee: {\n            enabled: true,\n            tiers: [\n              {\n                min_units: 15,\n                max_units: 19,\n                guarantee_amount: 5000,\n                label: '15-19 units: $5,000',\n              },\n              {\n                min_units: 20,\n                max_units: 24,\n                guarantee_amount: 7500,\n                label: '20-24 units: $7,500',\n              },\n              { min_units: 25, guarantee_amount: 10000, label: '25+ units: $10,000' },\n            ],\n          },\n          conditions: {\n            no_prepaid_commission: true,\n            complete_paperwork_required: true,\n            trade_payoff_discrepancy_flat: true,\n            weekly_verification_required: true,\n          },\n          vehicle_allowance: {\n            enabled: false,\n            allowance_amount: 0,\n            demo_privileges_available: false,\n            description: 'No vehicle allowance',\n          },\n          pto_structure: {\n            enabled: true,\n            annual_days: 10,\n            prorated: true,\n          },\n        } as PayPlan,\n      ];\n\n      setPayPlans(mockPayPlans);\n    } catch (error) {\n      console.error('Error fetching pay plans:', error);\n      toast({\n        title: 'Error',\n        description: 'Failed to fetch pay plans',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  // Handle user form submission\n  const handleUserSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setUserLoading(true);\n\n    try {\n      // Use temporary password from form state\n      const tempPassword =\n        userForm.tempPassword ||\n        Math.random().toString(36).slice(-8) + Math.random().toString(36).toUpperCase().slice(-4);\n\n      // Use standard signup API\n      const { data, error } = await supabase.auth.signUp({\n        email: userForm.email,\n        password: tempPassword,\n        options: {\n          data: {\n            role: userForm.roleId || 'viewer',\n            dealership_id: dealershipId,\n          },\n        },\n      });\n\n      if (error) throw error;\n\n      // Insert profile record directly if needed\n      const { error: profileError } = await supabase.from('profiles').upsert({\n        id: data?.user?.id,\n        email: userForm.email,\n        role: userForm.roleId || 'viewer',\n        dealership_id: dealershipId,\n        first_name: userForm.firstName,\n        last_name: userForm.lastName,\n        start_date: userForm.startDate,\n      });\n\n      if (profileError) {\n        console.error('Error updating profile:', profileError);\n        throw profileError;\n      }\n\n      // Show success message with temp password\n      toast({\n        title: 'Success',\n        description: `User created successfully. Temporary password: ${tempPassword}`,\n      });\n\n      // Reset form and refresh user list\n      setUserForm({\n        firstName: '',\n        lastName: '',\n        email: '',\n        roleId: 'salesperson',\n        startDate: '',\n        tempPassword: '',\n        payPlanId: '',\n      });\n\n      // Generate new password for next user\n      generateTempPassword();\n\n      await fetchUsers();\n    } catch (error) {\n      console.error('Error creating user:', error);\n      toast({\n        title: 'Error',\n        description: error instanceof Error ? error.message : 'Failed to create user',\n        variant: 'destructive',\n      });\n    } finally {\n      setUserLoading(false);\n    }\n  };\n\n  // Update user role\n  const updateUserRole = async (userId: string, newRole: string) => {\n    try {\n      const { error } = await supabase.from('profiles').update({ role: newRole }).eq('id', userId);\n\n      if (error) throw error;\n\n      toast({\n        title: 'Success',\n        description: 'User role updated successfully',\n      });\n\n      setEditingUserId(null);\n      await fetchUsers();\n    } catch (error) {\n      console.error('Error updating user role:', error);\n      toast({\n        title: 'Error',\n        description: 'Failed to update user role',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  // Update user employment status\n  const updateEmploymentStatus = async (userId: string, status: string) => {\n    try {\n      const { error } = await supabase\n        .from('profiles')\n        .update({ employment_status: status })\n        .eq('id', userId);\n\n      if (error) throw error;\n\n      toast({\n        title: 'Success',\n        description: `Employment status updated to ${status}`,\n      });\n\n      await fetchUsers();\n    } catch (error) {\n      console.error('Error updating employment status:', error);\n      toast({\n        title: 'Error',\n        description: 'Failed to update employment status',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  // Toggle edit mode\n  const toggleEditMode = (userId: string) => {\n    setEditingUserId(editingUserId === userId ? null : userId);\n  };\n\n  // Filter users by role and sort by employment status\n  const getUsersByRole = (role: string) => {\n    const filteredUsers = users.filter(user => (user.role || user.role_id) === role);\n\n    // Sort by employment status: employed first, then suspended, then terminated\n    return filteredUsers.sort((a, b) => {\n      const statusOrder = { employed: 0, suspended: 1, terminated: 2 };\n      const statusA = a.employment_status || 'employed';\n      const statusB = b.employment_status || 'employed';\n      return statusOrder[statusA] - statusOrder[statusB];\n    });\n  };\n\n  // Get status badge styling\n  const getStatusBadge = (status: string = 'employed') => {\n    const statusConfig = EMPLOYMENT_STATUS.find(s => s.id === status) || EMPLOYMENT_STATUS[0];\n    return <Badge className={statusConfig.color}>{statusConfig.name}</Badge>;\n  };\n\n  // Format currency\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(amount);\n  };\n\n  return (\n    <div className=\"container mx-auto p-6 space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">Dealership Admin</h1>\n          <p className=\"text-muted-foreground\">Manage your dealership staff and operations</p>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Badge variant=\"outline\" className=\"px-3 py-1\">\n            <Building className=\"w-4 h-4 mr-1\" />\n            Admin Dashboard\n          </Badge>\n        </div>\n      </div>\n\n      {/* Top Metrics Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        {/* Total Salespeople */}\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Salespeople</CardTitle>\n            <Users className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{staffCounts.salesperson}</div>\n            <p className=\"text-xs text-muted-foreground\">Active sales staff members</p>\n          </CardContent>\n        </Card>\n\n        {/* Finance Managers */}\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Finance Managers</CardTitle>\n            <Calculator className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{staffCounts.finance_manager}</div>\n            <p className=\"text-xs text-muted-foreground\">F&I department staff</p>\n          </CardContent>\n        </Card>\n\n        {/* Sales Managers */}\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Sales Managers</CardTitle>\n            <Target className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{staffCounts.sales_manager}</div>\n            <p className=\"text-xs text-muted-foreground\">Sales management team</p>\n          </CardContent>\n        </Card>\n\n        {/* GM/GSM */}\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">GM/GSM</CardTitle>\n            <Crown className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {staffCounts.general_manager + staffCounts.gsm}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">Executive management</p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Staff Management Section */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center\">\n            <Users className=\"w-5 h-5 mr-2\" />\n            Staff Management\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <Tabs value={selectedTab} onValueChange={setSelectedTab} className=\"w-full\">\n            <TabsList className=\"grid w-full grid-cols-5\">\n              <TabsTrigger value=\"salesperson\">Sales People</TabsTrigger>\n              <TabsTrigger value=\"finance_manager\">Finance Managers</TabsTrigger>\n              <TabsTrigger value=\"sales_manager\">Sales Managers</TabsTrigger>\n              <TabsTrigger value=\"scheduler\">Scheduler</TabsTrigger>\n              <TabsTrigger value=\"payplans\">Pay Plans</TabsTrigger>\n            </TabsList>\n\n            {/* Sales People Tab */}\n            <TabsContent value=\"salesperson\" className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-lg font-semibold\">Sales Team ({staffCounts.salesperson})</h3>\n              </div>\n\n              <div className=\"border rounded-lg\">\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Name</TableHead>\n                      <TableHead>Email</TableHead>\n                      <TableHead>Start Date</TableHead>\n                      <TableHead>Status</TableHead>\n                      <TableHead className=\"w-[100px]\">Actions</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {getUsersByRole('salesperson').map(user => (\n                      <TableRow key={user.id}>\n                        <TableCell className=\"font-medium\">\n                          {user.first_name} {user.last_name}\n                        </TableCell>\n                        <TableCell>{user.email}</TableCell>\n                        <TableCell>\n                          {user.start_date\n                            ? new Date(user.start_date).toLocaleDateString()\n                            : 'Not set'}\n                        </TableCell>\n                        <TableCell>{getStatusBadge(user.employment_status)}</TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center space-x-2\">\n                            <Select\n                              value={user.employment_status || 'employed'}\n                              onValueChange={value => updateEmploymentStatus(user.id, value)}\n                            >\n                              <SelectTrigger className=\"w-32\">\n                                <SelectValue />\n                              </SelectTrigger>\n                              <SelectContent>\n                                {EMPLOYMENT_STATUS.map(status => (\n                                  <SelectItem key={status.id} value={status.id}>\n                                    {status.name}\n                                  </SelectItem>\n                                ))}\n                              </SelectContent>\n                            </Select>\n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => toggleEditMode(user.id)}\n                            >\n                              <Edit className=\"h-4 w-4\" />\n                            </Button>\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </div>\n            </TabsContent>\n\n            {/* Finance Managers Tab */}\n            <TabsContent value=\"finance_manager\" className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-lg font-semibold\">\n                  Finance Team ({staffCounts.finance_manager})\n                </h3>\n              </div>\n\n              <div className=\"border rounded-lg\">\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Name</TableHead>\n                      <TableHead>Email</TableHead>\n                      <TableHead>Start Date</TableHead>\n                      <TableHead>Status</TableHead>\n                      <TableHead className=\"w-[100px]\">Actions</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {getUsersByRole('finance_manager').map(user => (\n                      <TableRow key={user.id}>\n                        <TableCell className=\"font-medium\">\n                          {user.first_name} {user.last_name}\n                        </TableCell>\n                        <TableCell>{user.email}</TableCell>\n                        <TableCell>\n                          {user.start_date\n                            ? new Date(user.start_date).toLocaleDateString()\n                            : 'Not set'}\n                        </TableCell>\n                        <TableCell>{getStatusBadge(user.employment_status)}</TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center space-x-2\">\n                            <Select\n                              value={user.employment_status || 'employed'}\n                              onValueChange={value => updateEmploymentStatus(user.id, value)}\n                            >\n                              <SelectTrigger className=\"w-32\">\n                                <SelectValue />\n                              </SelectTrigger>\n                              <SelectContent>\n                                {EMPLOYMENT_STATUS.map(status => (\n                                  <SelectItem key={status.id} value={status.id}>\n                                    {status.name}\n                                  </SelectItem>\n                                ))}\n                              </SelectContent>\n                            </Select>\n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => toggleEditMode(user.id)}\n                            >\n                              <Edit className=\"h-4 w-4\" />\n                            </Button>\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </div>\n            </TabsContent>\n\n            {/* Sales Managers Tab */}\n            <TabsContent value=\"sales_manager\" className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-lg font-semibold\">\n                  Management Team ({staffCounts.sales_manager})\n                </h3>\n              </div>\n\n              <div className=\"border rounded-lg\">\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Name</TableHead>\n                      <TableHead>Email</TableHead>\n                      <TableHead>Start Date</TableHead>\n                      <TableHead>Status</TableHead>\n                      <TableHead className=\"w-[100px]\">Actions</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {getUsersByRole('sales_manager').map(user => (\n                      <TableRow key={user.id}>\n                        <TableCell className=\"font-medium\">\n                          {user.first_name} {user.last_name}\n                        </TableCell>\n                        <TableCell>{user.email}</TableCell>\n                        <TableCell>\n                          {user.start_date\n                            ? new Date(user.start_date).toLocaleDateString()\n                            : 'Not set'}\n                        </TableCell>\n                        <TableCell>{getStatusBadge(user.employment_status)}</TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center space-x-2\">\n                            <Select\n                              value={user.employment_status || 'employed'}\n                              onValueChange={value => updateEmploymentStatus(user.id, value)}\n                            >\n                              <SelectTrigger className=\"w-32\">\n                                <SelectValue />\n                              </SelectTrigger>\n                              <SelectContent>\n                                {EMPLOYMENT_STATUS.map(status => (\n                                  <SelectItem key={status.id} value={status.id}>\n                                    {status.name}\n                                  </SelectItem>\n                                ))}\n                              </SelectContent>\n                            </Select>\n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => toggleEditMode(user.id)}\n                            >\n                              <Edit className=\"h-4 w-4\" />\n                            </Button>\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </div>\n            </TabsContent>\n\n            {/* Scheduler Tab */}\n            <TabsContent value=\"scheduler\" className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-lg font-semibold flex items-center\">\n                  <Clock className=\"w-5 h-5 mr-2\" />\n                  Dealership Schedule & Hours\n                </h3>\n                <Button\n                  onClick={() => {\n                    navigate('/dashboard/sales-manager/schedule');\n                  }}\n                  variant=\"outline\"\n                  className=\"flex items-center\"\n                >\n                  <Edit className=\"w-4 h-4 mr-2\" />\n                  Advanced Scheduler\n                </Button>\n              </div>\n\n              {/* Dealership Hours Configuration */}\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <Building className=\"w-5 h-5 mr-2\" />\n                    Dealership Operating Hours\n                  </CardTitle>\n                  <CardDescription>\n                    Set the standard operating hours for your dealership. These hours will be used\n                    as the base for staff scheduling.\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid gap-4\">\n                    {[\n                      { day: 'Monday', key: 'monday' },\n                      { day: 'Tuesday', key: 'tuesday' },\n                      { day: 'Wednesday', key: 'wednesday' },\n                      { day: 'Thursday', key: 'thursday' },\n                      { day: 'Friday', key: 'friday' },\n                      { day: 'Saturday', key: 'saturday' },\n                      { day: 'Sunday', key: 'sunday' },\n                    ].map(({ day, key }) => (\n                      <div\n                        key={key}\n                        className=\"flex items-center justify-between p-3 border rounded-lg\"\n                      >\n                        <div className=\"flex items-center space-x-3\">\n                          <div className=\"w-20 font-medium\">{day}</div>\n                          <div className=\"flex items-center space-x-2\">\n                            <Input\n                              type=\"time\"\n                              defaultValue=\"09:00\"\n                              className=\"w-24\"\n                              placeholder=\"Open\"\n                            />\n                            <span className=\"text-muted-foreground\">to</span>\n                            <Input\n                              type=\"time\"\n                              defaultValue=\"20:00\"\n                              className=\"w-24\"\n                              placeholder=\"Close\"\n                            />\n                          </div>\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                          <Checkbox id={`closed-${key}`} />\n                          <Label\n                            htmlFor={`closed-${key}`}\n                            className=\"text-sm text-muted-foreground\"\n                          >\n                            Closed\n                          </Label>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                  <div className=\"flex justify-end mt-4\">\n                    <Button>\n                      <Save className=\"w-4 h-4 mr-2\" />\n                      Save Hours\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Current Week Schedule Overview */}\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <Users className=\"w-5 h-5 mr-2\" />\n                    This Week's Schedule\n                  </CardTitle>\n                  <CardDescription>\n                    Overview of staff schedules for the current week. Click \"Advanced Scheduler\"\n                    above for full editing capabilities.\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid grid-cols-7 gap-2 text-center\">\n                    {/* Week header */}\n                    {['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'].map(day => (\n                      <div key={day} className=\"font-semibold p-2 bg-muted rounded\">\n                        {day}\n                      </div>\n                    ))}\n\n                    {/* Schedule data - simplified view */}\n                    {Array.from({ length: 7 }, (_, i) => (\n                      <div key={i} className=\"p-2 border rounded min-h-[100px]\">\n                        <div className=\"text-xs space-y-1\">\n                          <div className=\"bg-blue-100 text-blue-800 px-2 py-1 rounded text-xs\">\n                            Team A: 9am-6pm\n                          </div>\n                          <div className=\"bg-green-100 text-green-800 px-2 py-1 rounded text-xs\">\n                            Team B: 11am-8pm\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n\n                  <div className=\"mt-4 p-4 bg-blue-50 rounded-lg\">\n                    <div className=\"flex items-center text-blue-800\">\n                      <Info className=\"w-4 h-4 mr-2\" />\n                      <span className=\"text-sm font-medium\">Schedule Management</span>\n                    </div>\n                    <p className=\"text-sm text-blue-700 mt-1\">\n                      Sales Managers can edit team schedules from their dashboard. Use the \"Advanced\n                      Scheduler\" button above for detailed schedule management.\n                    </p>\n                  </div>\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            {/* Pay Plans Tab */}\n            <TabsContent value=\"payplans\" className=\"space-y-4\">\n              <div className=\"grid gap-6\">\n                {/* Pay Plan Management */}\n                <EnhancedPayPlanManager\n                  dealershipId={dealershipId || 'demo'}\n                  isGroupAdmin={false}\n                />\n\n                {/* Pay Calculator */}\n                <PayCalculator payPlans={payPlans} />\n              </div>\n            </TabsContent>\n          </Tabs>\n        </CardContent>\n      </Card>\n\n      {/* Add New User Form */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center\">\n            <Plus className=\"w-5 h-5 mr-2\" />\n            Add New Staff Member\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <form onSubmit={handleUserSubmit} className=\"space-y-4\">\n            <div className=\"grid md:grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"firstName\">First Name</Label>\n                <Input\n                  id=\"firstName\"\n                  value={userForm.firstName}\n                  onChange={e => setUserForm({ ...userForm, firstName: e.target.value })}\n                  placeholder=\"John\"\n                  required\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"lastName\">Last Name</Label>\n                <Input\n                  id=\"lastName\"\n                  value={userForm.lastName}\n                  onChange={e => setUserForm({ ...userForm, lastName: e.target.value })}\n                  placeholder=\"Doe\"\n                  required\n                />\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"email\">Email Address</Label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                value={userForm.email}\n                onChange={e => setUserForm({ ...userForm, email: e.target.value })}\n                placeholder=\"john.doe@dealership.com\"\n                required\n              />\n            </div>\n\n            {/* Role and Start Date on same line */}\n            <div className=\"grid md:grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"role\">Role</Label>\n                <Select\n                  value={userForm.roleId}\n                  onValueChange={value => setUserForm({ ...userForm, roleId: value })}\n                >\n                  <SelectTrigger id=\"role\">\n                    <SelectValue placeholder=\"Select a role\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {USER_ROLES.map(role => (\n                      <SelectItem key={role.id} value={role.id}>\n                        {role.name}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"startDate\">Start Date</Label>\n                <Input\n                  id=\"startDate\"\n                  type=\"date\"\n                  value={userForm.startDate}\n                  onChange={e => setUserForm({ ...userForm, startDate: e.target.value })}\n                  required\n                />\n              </div>\n            </div>\n\n            {/* Temporary Password Field */}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"tempPassword\">Temporary Password</Label>\n              <div className=\"flex gap-2\">\n                <Input\n                  id=\"tempPassword\"\n                  type=\"text\"\n                  value={userForm.tempPassword}\n                  onChange={e => setUserForm({ ...userForm, tempPassword: e.target.value })}\n                  placeholder=\"Auto-generated password\"\n                  required\n                />\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  onClick={generateTempPassword}\n                  className=\"shrink-0\"\n                >\n                  Generate\n                </Button>\n              </div>\n              <p className=\"text-xs text-muted-foreground\">\n                User will be required to change their password on first login.\n              </p>\n            </div>\n\n            {/* Pay Plan Selection */}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"payPlan\">Pay Plan</Label>\n              <Select\n                value={userForm.payPlanId}\n                onValueChange={value => setUserForm({ ...userForm, payPlanId: value })}\n              >\n                <SelectTrigger id=\"payPlan\">\n                  <SelectValue placeholder=\"Select a pay plan\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {payPlans\n                    .filter(plan => plan.role === userForm.roleId && plan.is_active)\n                    .map(plan => (\n                      <SelectItem key={plan.id} value={plan.id}>\n                        <div className=\"flex flex-col\">\n                          <span>{plan.name}</span>\n                          <span className=\"text-xs text-muted-foreground\">{plan.description}</span>\n                        </div>\n                      </SelectItem>\n                    ))}\n                  {payPlans.filter(plan => plan.role === userForm.roleId && plan.is_active)\n                    .length === 0 && (\n                    <SelectItem value=\"no-plans\" disabled>\n                      No active pay plans for this role\n                    </SelectItem>\n                  )}\n                </SelectContent>\n              </Select>\n              <p className=\"text-xs text-muted-foreground\">\n                Pay plan determines the compensation structure for this employee. You can create new\n                pay plans in the Pay Plans tab above.\n              </p>\n            </div>\n\n            <Button type=\"submit\" disabled={userLoading} className=\"w-full\">\n              {userLoading ? (\n                <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n              ) : (\n                <Plus className=\"mr-2 h-4 w-4\" />\n              )}\n              Add Staff Member\n            </Button>\n          </form>\n        </CardContent>\n      </Card>\n\n      {/* Team Overview Section */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center\">\n            <BarChart3 className=\"w-5 h-5 mr-2\" />\n            Team Overview\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            {/* Sales Team */}\n            <div className=\"space-y-3\">\n              <h4 className=\"font-semibold text-sm text-muted-foreground uppercase tracking-wide\">\n                Sales Team\n              </h4>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between items-center\">\n                  <span>Salespeople</span>\n                  <Badge variant=\"outline\">{staffCounts.salesperson}</Badge>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span>Sales Managers</span>\n                  <Badge variant=\"outline\">{staffCounts.sales_manager}</Badge>\n                </div>\n              </div>\n            </div>\n\n            {/* Finance Team */}\n            <div className=\"space-y-3\">\n              <h4 className=\"font-semibold text-sm text-muted-foreground uppercase tracking-wide\">\n                Finance Team\n              </h4>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between items-center\">\n                  <span>Finance Managers</span>\n                  <Badge variant=\"outline\">{staffCounts.finance_manager}</Badge>\n                </div>\n              </div>\n            </div>\n\n            {/* Management */}\n            <div className=\"space-y-3\">\n              <h4 className=\"font-semibold text-sm text-muted-foreground uppercase tracking-wide\">\n                Executive Team\n              </h4>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between items-center\">\n                  <span>General Managers</span>\n                  <Badge variant=\"outline\">{staffCounts.general_manager}</Badge>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span>GSM</span>\n                  <Badge variant=\"outline\">{staffCounts.gsm}</Badge>\n                </div>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","import React from 'react';\nimport DashboardLayout from '../components/layout/DashboardLayout';\nimport { AdminDashboard } from '../components/admin/AdminDashboard';\nimport { useAuth } from '../contexts/AuthContext';\n\nexport default function AdminDashboardPage() {\n  const { user } = useAuth();\n\n  console.log('[AdminDashboardPage] Rendering with user:', user?.email);\n\n  return (\n    <DashboardLayout title=\"Admin Dashboard\">\n      <AdminDashboard />\n    </DashboardLayout>\n  );\n}\n","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Car,\r\n  Hash,\r\n  User,\r\n  DollarSign,\r\n  Shield,\r\n  Calendar,\r\n  Activity,\r\n  Zap,\r\n  Package,\r\n  Briefcase,\r\n  CreditCard,\r\n  PieChart,\r\n  TrendingUp,\r\n  Users,\r\n  Percent,\r\n  AlertTriangle,\r\n  ArrowLeft,\r\n} from 'lucide-react';\r\n\r\nconst LENDERS = [\r\n  'Ally Bank',\r\n  'American Credit Acceptance',\r\n  'Americredit',\r\n  'Bank of America',\r\n  'Capital One',\r\n  'Chase',\r\n  'Chrysler Capital',\r\n  'Crescent Bank',\r\n  'Exeter',\r\n  'First Help Financial',\r\n  'Ford Motor Credit',\r\n  'Global Lending Services',\r\n  'Huntington National Bank',\r\n  'Hyundai Financial',\r\n  'Navy Federal',\r\n  'Other',\r\n  'PNC Bank',\r\n  'Prestige Financial Services',\r\n  'Regional Acceptance',\r\n  'Santander',\r\n  'Stellantis',\r\n  'TD Auto',\r\n  'Tesla',\r\n  'Toyota Credit',\r\n  'Truist',\r\n  'US Bank',\r\n  'USAA',\r\n  'Wells Fargo',\r\n  'Westlake Financial Services',\r\n];\r\n\r\nconst DEAL_TYPES = ['Finance', 'Lease', 'Cash'];\r\n\r\nconst DEAL_STATUSES = ['Pending', 'Funded', 'Unwound', 'Dead Deal'];\r\n\r\n// Add vehicle types constant\r\nconst VEHICLE_TYPES = [\r\n  { value: 'N', label: 'New' },\r\n  { value: 'U', label: 'Used' },\r\n  { value: 'C', label: 'CPO' },\r\n];\r\n\r\n// Example salesperson data - would be populated from admin\r\nconst SALESPEOPLE = [\r\n  { id: 1, initials: 'JD', firstName: 'John', lastName: 'Doe' },\r\n  { id: 2, initials: 'TS', firstName: 'Thomas', lastName: 'Smith' },\r\n  { id: 3, initials: 'MR', firstName: 'Maria', lastName: 'Rodriguez' },\r\n  { id: 4, initials: 'AK', firstName: 'Anna', lastName: 'Kim' },\r\n  { id: 5, initials: 'BH', firstName: 'Brandon', lastName: 'Harris' },\r\n];\r\n\r\ninterface DealLogFormData {\r\n  dealNumber: string;\r\n  stockNumber: string;\r\n  vinLast8: string;\r\n  vehicleType: string;\r\n  lastName: string;\r\n  dealType: string;\r\n  frontEndGross: string;\r\n  vscProfit: string;\r\n  ppmProfit: string;\r\n  gapProfit: string;\r\n  tireAndWheelProfit: string;\r\n  appearanceProfit: string;\r\n  otherProfit: string;\r\n  reserveFlat: string;\r\n  backEndGross: string;\r\n  totalGross: string;\r\n  lender: string;\r\n  salespersonId: string;\r\n  salesManagerId: string;\r\n  isSplitDeal: boolean;\r\n  secondSalespersonId: string;\r\n  dealStatus: string;\r\n  outsideFunding: boolean;\r\n  dealDate: string;\r\n}\r\n\r\ninterface DealLogPageProps {\r\n  dashboardType?: 'finance' | 'single-finance';\r\n}\r\n\r\nconst DealLogPage: React.FC<DealLogPageProps> = ({ dashboardType = 'finance' }) => {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState<DealLogFormData>({\r\n    dealNumber: '',\r\n    stockNumber: '',\r\n    vinLast8: '',\r\n    vehicleType: 'N',\r\n    lastName: '',\r\n    dealType: '',\r\n    frontEndGross: '',\r\n    vscProfit: '',\r\n    ppmProfit: '',\r\n    gapProfit: '',\r\n    tireAndWheelProfit: '',\r\n    appearanceProfit: '',\r\n    otherProfit: '',\r\n    reserveFlat: '',\r\n    backEndGross: '',\r\n    totalGross: '',\r\n    lender: '',\r\n    salespersonId: '',\r\n    salesManagerId: '',\r\n    isSplitDeal: false,\r\n    secondSalespersonId: '',\r\n    dealStatus: 'Pending',\r\n    outsideFunding: false,\r\n    dealDate: new Date().toISOString().split('T')[0],\r\n  });\r\n\r\n  const handleBackToDashboard = () => {\r\n    if (dashboardType === 'single-finance') {\r\n      navigate('/dashboard/single-finance');\r\n    } else {\r\n      navigate('/dashboard/finance');\r\n    }\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    const { name, value, type } = e.target as HTMLInputElement;\r\n\r\n    // Handle checkbox for outsideFunding\r\n    if (type === 'checkbox') {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        [name]: (e.target as HTMLInputElement).checked,\r\n      }));\r\n      return;\r\n    }\r\n\r\n    // Convert Stock Number and VIN to uppercase\r\n    if (name === 'stockNumber' || name === 'vinLast8') {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        [name]: value.toUpperCase(),\r\n      }));\r\n      return;\r\n    }\r\n\r\n    // Clear lender when Cash is selected\r\n    if (name === 'dealType' && value === 'Cash') {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        [name]: value,\r\n        lender: '',\r\n      }));\r\n    } else {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Calculate back end gross (sum of all product profits + reserve/flat)\r\n  useEffect(() => {\r\n    const calculateBackEndGross = () => {\r\n      const vsc = parseFloat(formData.vscProfit) || 0;\r\n      const ppm = parseFloat(formData.ppmProfit) || 0;\r\n      const gap = parseFloat(formData.gapProfit) || 0;\r\n      const tireAndWheel = parseFloat(formData.tireAndWheelProfit) || 0;\r\n      const appearance = parseFloat(formData.appearanceProfit) || 0;\r\n      const other = parseFloat(formData.otherProfit) || 0;\r\n      const reserveFlat = parseFloat(formData.reserveFlat) || 0;\r\n\r\n      const backEndGross = vsc + ppm + gap + tireAndWheel + appearance + other + reserveFlat;\r\n      return backEndGross.toFixed(2);\r\n    };\r\n\r\n    // Calculate total gross (front + back)\r\n    const calculateTotalGross = () => {\r\n      const frontEnd = parseFloat(formData.frontEndGross) || 0;\r\n      const backEnd = parseFloat(calculateBackEndGross()) || 0;\r\n\r\n      const totalGross = frontEnd + backEnd;\r\n      return totalGross.toFixed(2);\r\n    };\r\n\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      backEndGross: calculateBackEndGross(),\r\n      totalGross: calculateTotalGross(),\r\n    }));\r\n  }, [\r\n    formData.vscProfit,\r\n    formData.ppmProfit,\r\n    formData.gapProfit,\r\n    formData.tireAndWheelProfit,\r\n    formData.appearanceProfit,\r\n    formData.otherProfit,\r\n    formData.reserveFlat,\r\n    formData.frontEndGross,\r\n  ]);\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    console.log('Form submitted:', formData);\r\n\r\n    // Generate a random deal ID with format D1234\r\n    const dealId = `D${Math.floor(1000 + Math.random() * 9000)}`;\r\n\r\n    // Get current date for sale date if not provided\r\n    const currentDate = formData.dealDate || new Date().toISOString().split('T')[0]; // Use the form's deal date\r\n\r\n    // Get salesperson initials\r\n    const salesperson = SALESPEOPLE.find(s => s.id.toString() === formData.salespersonId);\r\n    const salespersonInitials = salesperson ? salesperson.initials : '';\r\n\r\n    // Get second salesperson initials if it's a split deal\r\n    let secondSalespersonInitials = '';\r\n    if (formData.isSplitDeal && formData.secondSalespersonId) {\r\n      const secondSalesperson = SALESPEOPLE.find(\r\n        s => s.id.toString() === formData.secondSalespersonId\r\n      );\r\n      secondSalespersonInitials = secondSalesperson ? secondSalesperson.initials : '';\r\n    }\r\n\r\n    // Format the salesperson display for the deal log\r\n    const salespersonDisplay =\r\n      formData.isSplitDeal && secondSalespersonInitials\r\n        ? `${salespersonInitials}/${secondSalespersonInitials} (Split)`\r\n        : salespersonInitials;\r\n\r\n    // Calculate profit values\r\n    const backEndGross = parseFloat(formData.backEndGross) || 0;\r\n    const frontEndGross = parseFloat(formData.frontEndGross) || 0;\r\n    const totalGross = parseFloat(formData.totalGross) || 0;\r\n\r\n    // Determine which products were sold based on non-zero profit values\r\n    const products = [];\r\n    if (parseFloat(formData.vscProfit) > 0) products.push('Extended Warranty');\r\n    if (parseFloat(formData.gapProfit) > 0) products.push('GAP Insurance');\r\n    if (parseFloat(formData.appearanceProfit) > 0) products.push('Paint and Fabric Protection');\r\n    if (parseFloat(formData.tireAndWheelProfit) > 0) products.push('Tire & Wheel');\r\n    if (parseFloat(formData.ppmProfit) > 0) products.push('PPM');\r\n    if (parseFloat(formData.otherProfit) > 0) products.push('Other');\r\n\r\n    // Create a new deal object in the format expected by the deal mapper\r\n    const newDeal = {\r\n      // Use dealId as the primary identifier\r\n      id: dealId,\r\n\r\n      // Original form data (what the deal mapper expects)\r\n      dealNumber: formData.dealNumber || dealId,\r\n      stockNumber: formData.stockNumber,\r\n      vinLast8: formData.vinLast8,\r\n      vehicleType: formData.vehicleType,\r\n      lastName: formData.lastName,\r\n      dealType: formData.dealType,\r\n      frontEndGross: parseFloat(formData.frontEndGross) || 0,\r\n      vscProfit: parseFloat(formData.vscProfit) || 0,\r\n      ppmProfit: parseFloat(formData.ppmProfit) || 0,\r\n      gapProfit: parseFloat(formData.gapProfit) || 0,\r\n      tireAndWheelProfit: parseFloat(formData.tireAndWheelProfit) || 0,\r\n      appearanceProfit: parseFloat(formData.appearanceProfit) || 0,\r\n      otherProfit: parseFloat(formData.otherProfit) || 0,\r\n      reserveFlat: parseFloat(formData.reserveFlat) || 0,\r\n      backEndGross: parseFloat(formData.backEndGross) || 0,\r\n      totalGross: parseFloat(formData.totalGross) || 0,\r\n      lender: formData.lender,\r\n      salespersonId: formData.salespersonId,\r\n      salesManagerId: formData.salesManagerId,\r\n      isSplitDeal: formData.isSplitDeal,\r\n      secondSalespersonId: formData.isSplitDeal ? formData.secondSalespersonId : null,\r\n      dealStatus: formData.dealStatus,\r\n      outsideFunding: formData.outsideFunding,\r\n      dealDate: currentDate,\r\n\r\n      // Calculated/derived fields\r\n      salesperson: salespersonDisplay,\r\n      products: products,\r\n\r\n      // Metadata\r\n      created_at: new Date().toISOString(),\r\n\r\n      // Legacy compatibility fields (for backward compatibility with existing dashboards)\r\n      customer: formData.lastName,\r\n      vehicle: `${\r\n        formData.vehicleType === 'N' ? 'New' : formData.vehicleType === 'U' ? 'Used' : 'CPO'\r\n      } - Stock #${formData.stockNumber}`,\r\n      vin: formData.vinLast8,\r\n      saleDate: currentDate,\r\n      amount: totalGross,\r\n      status: formData.dealStatus,\r\n      profit: backEndGross,\r\n    };\r\n\r\n    // Save to localStorage - first get existing deals\r\n    // Use the correct storage key based on dashboard type\r\n    const storageKey = dashboardType === 'single-finance' ? 'singleFinanceDeals' : 'financeDeals';\r\n\r\n    try {\r\n      const existingDealsJson = localStorage.getItem(storageKey);\r\n      const existingDeals = existingDealsJson ? JSON.parse(existingDealsJson) : [];\r\n\r\n      // Add new deal to the beginning of the array\r\n      const updatedDeals = [newDeal, ...existingDeals];\r\n\r\n      // Save back to localStorage\r\n      localStorage.setItem(storageKey, JSON.stringify(updatedDeals));\r\n\r\n      // Show success message\r\n      alert(`Deal ${dealId} successfully logged!`);\r\n\r\n      // Navigate back to the appropriate dashboard after submission\r\n      if (dashboardType === 'single-finance') {\r\n        navigate('/dashboard/single-finance');\r\n      } else {\r\n        navigate('/dashboard/finance');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving deal to localStorage:', error);\r\n      alert('Failed to save deal. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Get selected salesperson initials\r\n  const getSelectedSalespersonInitials = () => {\r\n    if (!formData.salespersonId) return '';\r\n    const salesperson = SALESPEOPLE.find(s => s.id.toString() === formData.salespersonId);\r\n    const initials = salesperson ? salesperson.initials : '';\r\n\r\n    if (formData.isSplitDeal && formData.secondSalespersonId) {\r\n      const secondSalesperson = SALESPEOPLE.find(\r\n        s => s.id.toString() === formData.secondSalespersonId\r\n      );\r\n      const secondInitials = secondSalesperson ? secondSalesperson.initials : '';\r\n      return secondInitials ? `${initials}/${secondInitials} (Split)` : initials;\r\n    }\r\n\r\n    return initials;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto py-6\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <div className=\"flex items-center\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleBackToDashboard}\r\n            className=\"mr-4 flex items-center px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n          >\r\n            <ArrowLeft className=\"w-4 h-4 mr-2\" />\r\n            Back to Dashboard\r\n          </button>\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">Log New Deal</h1>\r\n        </div>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Deal Information Card */}\r\n        <div className=\"bg-white rounded-lg shadow mb-6\">\r\n          <div className=\"bg-blue-50 border-b border-blue-100 px-6 py-4 rounded-t-lg flex items-center justify-between\">\r\n            <div className=\"flex items-center\">\r\n              <Car className=\"h-5 w-5 text-blue-500 mr-2\" />\r\n              <h2 className=\"text-lg font-semibold text-blue-700\">Deal Information</h2>\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"bg-green-600 hover:bg-green-700 border border-transparent rounded-md shadow-sm py-2 px-6 text-base font-medium text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\"\r\n            >\r\n              Log Deal\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"p-6\">\r\n            {/* First row: Deal #, Deal Date, Stock #, VIN, Deal Type */}\r\n            <div className=\"grid grid-cols-12 gap-4 mb-6\">\r\n              <div className=\"col-span-2\">\r\n                <label\r\n                  htmlFor=\"dealNumber\"\r\n                  className=\"flex items-center text-base font-bold text-gray-700 mb-2\"\r\n                >\r\n                  <Hash className=\"h-4 w-4 mr-2 text-gray-500\" />\r\n                  Deal #\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"dealNumber\"\r\n                  name=\"dealNumber\"\r\n                  value={formData.dealNumber}\r\n                  onChange={handleChange}\r\n                  maxLength={8}\r\n                  className=\"w-full h-10 px-4 rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-base\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"col-span-2\">\r\n                <label\r\n                  htmlFor=\"dealDate\"\r\n                  className=\"flex items-center text-base font-bold text-gray-700 mb-2\"\r\n                >\r\n                  <Calendar className=\"h-4 w-4 mr-2 text-gray-500\" />\r\n                  Deal Date\r\n                </label>\r\n                <input\r\n                  type=\"date\"\r\n                  id=\"dealDate\"\r\n                  name=\"dealDate\"\r\n                  value={formData.dealDate || new Date().toISOString().split('T')[0]}\r\n                  onChange={handleChange}\r\n                  className=\"w-full h-10 px-4 rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-base\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"col-span-2\">\r\n                <label\r\n                  htmlFor=\"stockNumber\"\r\n                  className=\"flex items-center text-base font-bold text-gray-700 mb-2\"\r\n                >\r\n                  <Hash className=\"h-4 w-4 mr-2 text-gray-500\" />\r\n                  Stock #\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"stockNumber\"\r\n                  name=\"stockNumber\"\r\n                  value={formData.stockNumber}\r\n                  onChange={handleChange}\r\n                  required\r\n                  maxLength={8}\r\n                  className=\"w-full h-10 px-4 rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-base\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"col-span-2\">\r\n                <label\r\n                  htmlFor=\"vinLast8\"\r\n                  className=\"flex items-center text-base font-bold text-gray-700 mb-2\"\r\n                >\r\n                  <Car className=\"h-4 w-4 mr-2 text-gray-500\" />\r\n                  Last 8 of VIN\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"vinLast8\"\r\n                  name=\"vinLast8\"\r\n                  value={formData.vinLast8}\r\n                  onChange={handleChange}\r\n                  required\r\n                  maxLength={8}\r\n                  className=\"w-full h-10 px-4 rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-base\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"col-span-2\">\r\n                <label\r\n                  htmlFor=\"vehicleType\"\r\n                  className=\"flex items-center text-base font-bold text-gray-700 mb-2\"\r\n                >\r\n                  <Car className=\"h-4 w-4 mr-2 text-gray-500\" />\r\n                  Vehicle Type\r\n                </label>\r\n                <select\r\n                  id=\"vehicleType\"\r\n                  name=\"vehicleType\"\r\n                  value={formData.vehicleType}\r\n                  onChange={handleChange}\r\n                  required\r\n                  className=\"w-full h-10 px-4 rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-base\"\r\n                >\r\n                  {VEHICLE_TYPES.map(type => (\r\n                    <option key={type.value} value={type.value}>\r\n                      {type.label}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"col-span-2\">\r\n                <label\r\n                  htmlFor=\"dealType\"\r\n                  className=\"flex items-center text-base font-bold text-gray-700 mb-2\"\r\n                >\r\n                  <Briefcase className=\"h-4 w-4 mr-2 text-gray-500\" />\r\n                  Deal Type\r\n                </label>\r\n                <select\r\n                  id=\"dealType\"\r\n                  name=\"dealType\"\r\n                  value={formData.dealType}\r\n                  onChange={handleChange}\r\n                  required\r\n                  className=\"w-full h-10 px-4 rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-base\"\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  {DEAL_TYPES.map(type => (\r\n                    <option key={type} value={type}>\r\n                      {type}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Second row: Customer Name, Salesperson, Lender and Deal Status */}\r\n            <div className=\"grid grid-cols-12 gap-4\">\r\n              <div className=\"col-span-3\">\r\n                <label\r\n                  htmlFor=\"lastName\"\r\n                  className=\"flex items-center text-base font-bold text-gray-700 mb-2\"\r\n                >\r\n                  <User className=\"h-4 w-4 mr-2 text-gray-500\" />\r\n                  Last Name\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"lastName\"\r\n                  name=\"lastName\"\r\n                  value={formData.lastName}\r\n                  onChange={handleChange}\r\n                  required\r\n                  className=\"w-full h-10 px-4 rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-base\"\r\n                />\r\n              </div>\r\n              <div className=\"col-span-2\">\r\n                <div className=\"flex items-center justify-between mb-2\">\r\n                  <label\r\n                    htmlFor=\"salespersonId\"\r\n                    className=\"flex items-center text-base font-bold text-gray-700\"\r\n                  >\r\n                    <User className=\"h-4 w-4 mr-2 text-gray-500\" />\r\n                    Salesperson\r\n                  </label>\r\n                  <div className=\"flex items-center\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"isSplitDeal\"\r\n                      name=\"isSplitDeal\"\r\n                      checked={formData.isSplitDeal}\r\n                      onChange={handleChange}\r\n                      className=\"h-3 w-3 text-blue-600 rounded border-gray-300 focus:ring-blue-500\"\r\n                    />\r\n                    <label htmlFor=\"isSplitDeal\" className=\"ml-1 text-xs text-gray-500\">\r\n                      Split Deal\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n\r\n                {!formData.isSplitDeal ? (\r\n                  <>\r\n                    <select\r\n                      id=\"salespersonId\"\r\n                      name=\"salespersonId\"\r\n                      value={formData.salespersonId}\r\n                      onChange={handleChange}\r\n                      required\r\n                      className=\"w-full h-10 px-4 rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-base\"\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      {SALESPEOPLE.map(person => (\r\n                        <option key={person.id} value={person.id}>\r\n                          {person.firstName} {person.lastName}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </>\r\n                ) : (\r\n                  <div className=\"grid grid-cols-2 gap-2\">\r\n                    <select\r\n                      id=\"salespersonId\"\r\n                      name=\"salespersonId\"\r\n                      value={formData.salespersonId}\r\n                      onChange={handleChange}\r\n                      required\r\n                      className=\"w-full h-10 px-2 text-sm rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                    >\r\n                      <option value=\"\">Select Primary</option>\r\n                      {SALESPEOPLE.map(person => (\r\n                        <option key={person.id} value={person.id}>\r\n                          {person.firstName} {person.lastName}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    <select\r\n                      id=\"secondSalespersonId\"\r\n                      name=\"secondSalespersonId\"\r\n                      value={formData.secondSalespersonId}\r\n                      onChange={handleChange}\r\n                      required={formData.isSplitDeal}\r\n                      className=\"w-full h-10 px-2 text-sm rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                    >\r\n                      <option value=\"\">Select Secondary</option>\r\n                      {SALESPEOPLE.filter(p => p.id.toString() !== formData.salespersonId).map(\r\n                        person => (\r\n                          <option key={person.id} value={person.id}>\r\n                            {person.firstName} {person.lastName}\r\n                          </option>\r\n                        )\r\n                      )}\r\n                    </select>\r\n                  </div>\r\n                )}\r\n\r\n                {(formData.salespersonId ||\r\n                  (formData.isSplitDeal && formData.secondSalespersonId)) && (\r\n                  <div className=\"mt-1 text-xs text-gray-500\">\r\n                    Will display as: {getSelectedSalespersonInitials()}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"col-span-3\">\r\n                <div className=\"flex items-center justify-between mb-2\">\r\n                  <label\r\n                    htmlFor=\"lender\"\r\n                    className=\"flex items-center text-base font-bold text-gray-700\"\r\n                  >\r\n                    <CreditCard className=\"h-4 w-4 mr-2 text-gray-500\" />\r\n                    Lender\r\n                  </label>\r\n                  <div className=\"flex items-center\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"outsideFunding\"\r\n                      name=\"outsideFunding\"\r\n                      checked={formData.outsideFunding}\r\n                      onChange={handleChange}\r\n                      className=\"h-3 w-3 text-blue-600 rounded border-gray-300 focus:ring-blue-500\"\r\n                    />\r\n                    <label htmlFor=\"outsideFunding\" className=\"ml-1 text-xs text-gray-500\">\r\n                      Outside Funding\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <select\r\n                  id=\"lender\"\r\n                  name=\"lender\"\r\n                  value={formData.lender}\r\n                  onChange={handleChange}\r\n                  required={formData.dealType === 'Finance' || formData.dealType === 'Lease'}\r\n                  disabled={formData.dealType === 'Cash'}\r\n                  className={`w-full h-10 px-4 rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-base ${\r\n                    formData.dealType === 'Cash' ? 'bg-gray-100' : ''\r\n                  }`}\r\n                >\r\n                  <option value=\"\">Select Lender</option>\r\n                  {LENDERS.map(lender => (\r\n                    <option key={lender} value={lender}>\r\n                      {lender}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"col-span-2\">\r\n                <label\r\n                  htmlFor=\"dealStatus\"\r\n                  className=\"flex items-center text-base font-bold text-gray-700 mb-2\"\r\n                >\r\n                  <AlertTriangle className=\"h-4 w-4 mr-2 text-gray-500\" />\r\n                  Deal Status\r\n                </label>\r\n                <select\r\n                  id=\"dealStatus\"\r\n                  name=\"dealStatus\"\r\n                  value={formData.dealStatus}\r\n                  onChange={handleChange}\r\n                  required\r\n                  className=\"w-full h-10 px-4 rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-base\"\r\n                >\r\n                  {DEAL_STATUSES.map(status => (\r\n                    <option key={status} value={status}>\r\n                      {status}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"col-span-2\">\r\n                <label\r\n                  htmlFor=\"salesManagerId\"\r\n                  className=\"flex items-center text-base font-bold text-gray-700 mb-2\"\r\n                >\r\n                  <Users className=\"h-4 w-4 mr-2 text-gray-500\" />\r\n                  Sales Manager\r\n                </label>\r\n                <select\r\n                  id=\"salesManagerId\"\r\n                  name=\"salesManagerId\"\r\n                  onChange={handleChange}\r\n                  className=\"w-full h-10 px-4 rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-base\"\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  {SALESPEOPLE.map(person => (\r\n                    <option key={person.id} value={person.id}>\r\n                      {person.firstName} {person.lastName}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          {/* Left Column - Products */}\r\n          <div>\r\n            {/* Products */}\r\n            <div className=\"bg-white rounded-lg shadow h-full\">\r\n              <div className=\"bg-purple-50 border-b border-purple-100 px-6 py-4 rounded-t-lg flex items-center\">\r\n                <Package className=\"h-5 w-5 text-purple-500 mr-2\" />\r\n                <h2 className=\"text-lg font-semibold text-purple-700\">Product Profits</h2>\r\n              </div>\r\n\r\n              <div className=\"p-6 grid grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"vscProfit\"\r\n                    className=\"flex items-center text-base font-bold text-gray-700 mb-2\"\r\n                  >\r\n                    <Shield className=\"h-4 w-4 mr-2 text-red-500\" />\r\n                    VSC Profit\r\n                  </label>\r\n                  <div className=\"relative\">\r\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                      <span className=\"text-gray-500 text-lg\">$</span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"vscProfit\"\r\n                      name=\"vscProfit\"\r\n                      value={formData.vscProfit}\r\n                      onChange={handleChange}\r\n                      placeholder=\"0.00\"\r\n                      className=\"w-full h-10 pl-8 pr-4 rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-base\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"ppmProfit\"\r\n                    className=\"flex items-center text-base font-bold text-gray-700 mb-2\"\r\n                  >\r\n                    <Calendar className=\"h-4 w-4 mr-2 text-amber-500\" />\r\n                    PPM Profit\r\n                  </label>\r\n                  <div className=\"relative\">\r\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                      <span className=\"text-gray-500 text-lg\">$</span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"ppmProfit\"\r\n                      name=\"ppmProfit\"\r\n                      value={formData.ppmProfit}\r\n                      onChange={handleChange}\r\n                      placeholder=\"0.00\"\r\n                      className=\"w-full h-10 pl-8 pr-4 rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-base\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"gapProfit\"\r\n                    className=\"flex items-center text-base font-bold text-gray-700 mb-2\"\r\n                  >\r\n                    <Activity className=\"h-4 w-4 mr-2 text-cyan-500\" />\r\n                    GAP Profit\r\n                  </label>\r\n                  <div className=\"relative\">\r\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                      <span className=\"text-gray-500 text-lg\">$</span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"gapProfit\"\r\n                      name=\"gapProfit\"\r\n                      value={formData.gapProfit}\r\n                      onChange={handleChange}\r\n                      placeholder=\"0.00\"\r\n                      className=\"w-full h-10 pl-8 pr-4 rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-base\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"tireAndWheelProfit\"\r\n                    className=\"flex items-center text-base font-bold text-gray-700 mb-2\"\r\n                  >\r\n                    <Zap className=\"h-4 w-4 mr-2 text-yellow-500\" />\r\n                    T&W/Bundle Profit\r\n                  </label>\r\n                  <div className=\"relative\">\r\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                      <span className=\"text-gray-500 text-lg\">$</span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"tireAndWheelProfit\"\r\n                      name=\"tireAndWheelProfit\"\r\n                      value={formData.tireAndWheelProfit}\r\n                      onChange={handleChange}\r\n                      placeholder=\"0.00\"\r\n                      className=\"w-full h-10 pl-8 pr-4 rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-base\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"appearanceProfit\"\r\n                    className=\"flex items-center text-base font-bold text-gray-700 mb-2\"\r\n                  >\r\n                    <Package className=\"h-4 w-4 mr-2 text-emerald-500\" />\r\n                    Paint and Fabric Profit\r\n                  </label>\r\n                  <div className=\"relative\">\r\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                      <span className=\"text-gray-500 text-lg\">$</span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"appearanceProfit\"\r\n                      name=\"appearanceProfit\"\r\n                      value={formData.appearanceProfit}\r\n                      onChange={handleChange}\r\n                      placeholder=\"0.00\"\r\n                      className=\"w-full h-10 pl-8 pr-4 rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-base\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"otherProfit\"\r\n                    className=\"flex items-center text-base font-bold text-gray-700 mb-2\"\r\n                  >\r\n                    <Package className=\"h-4 w-4 mr-2 text-gray-500\" />\r\n                    Other Profit\r\n                  </label>\r\n                  <div className=\"relative\">\r\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                      <span className=\"text-gray-500 text-lg\">$</span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"otherProfit\"\r\n                      name=\"otherProfit\"\r\n                      value={formData.otherProfit}\r\n                      onChange={handleChange}\r\n                      placeholder=\"0.00\"\r\n                      className=\"w-full h-10 pl-8 pr-4 rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-base\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Right Column */}\r\n          <div>\r\n            {/* Deal Profit & Summary combined */}\r\n            <div className=\"bg-white rounded-lg shadow h-full\">\r\n              <div className=\"bg-green-50 border-b border-green-100 px-6 py-4 rounded-t-lg flex items-center\">\r\n                <DollarSign className=\"h-5 w-5 text-green-500 mr-2\" />\r\n                <h2 className=\"text-lg font-semibold text-green-700\">Deal Profit</h2>\r\n              </div>\r\n\r\n              <div className=\"p-6 space-y-4\">\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"frontEndGross\"\r\n                    className=\"flex items-center text-base font-bold text-gray-700 mb-2\"\r\n                  >\r\n                    <TrendingUp className=\"h-4 w-4 mr-2 text-blue-500\" />\r\n                    Front End Profit\r\n                  </label>\r\n                  <div className=\"relative\">\r\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                      <span className=\"text-gray-500 text-lg\">$</span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"frontEndGross\"\r\n                      name=\"frontEndGross\"\r\n                      value={formData.frontEndGross}\r\n                      onChange={handleChange}\r\n                      placeholder=\"0.00\"\r\n                      className=\"w-full h-10 pl-8 pr-4 rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-base\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"reserveFlat\"\r\n                    className=\"flex items-center text-base font-bold text-gray-700 mb-2\"\r\n                  >\r\n                    <Percent className=\"h-4 w-4 mr-2 text-orange-500\" />\r\n                    Reserve/Flat Amount\r\n                  </label>\r\n                  <div className=\"relative\">\r\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                      <span className=\"text-gray-500 text-lg\">$</span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"reserveFlat\"\r\n                      name=\"reserveFlat\"\r\n                      value={formData.reserveFlat}\r\n                      onChange={handleChange}\r\n                      placeholder=\"0.00\"\r\n                      className=\"w-full h-10 pl-8 pr-4 rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-base\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"pt-6 border-t border-gray-200\">\r\n                  <label\r\n                    htmlFor=\"backEndGross\"\r\n                    className=\"flex items-center text-base font-bold text-gray-700 mb-2\"\r\n                  >\r\n                    <PieChart className=\"h-4 w-4 mr-2 text-indigo-500\" />\r\n                    Back End Gross (Auto-calculated)\r\n                  </label>\r\n                  <div className=\"relative\">\r\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                      <span className=\"text-gray-500 text-lg\">$</span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"backEndGross\"\r\n                      name=\"backEndGross\"\r\n                      value={formData.backEndGross}\r\n                      readOnly\r\n                      className=\"w-full h-10 pl-8 pr-4 rounded-md border border-gray-200 bg-gray-50 shadow-sm text-base font-semibold\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"totalGross\"\r\n                    className=\"flex items-center text-base font-bold text-gray-700 mb-2\"\r\n                  >\r\n                    <DollarSign className=\"h-4 w-4 mr-2 text-green-500\" />\r\n                    Total Gross (Auto-calculated)\r\n                  </label>\r\n                  <div className=\"relative\">\r\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                      <span className=\"text-gray-500 text-lg\">$</span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"totalGross\"\r\n                      name=\"totalGross\"\r\n                      value={formData.totalGross}\r\n                      readOnly\r\n                      className=\"w-full h-10 pl-8 pr-4 rounded-md border border-gray-200 bg-gray-50 shadow-sm text-base font-semibold\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DealLogPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Routes, Route, Link, Navigate, useLocation, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { isAuthenticated, getCurrentUser } from '../../lib/directAuth';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../ui/card';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '../ui/tabs';\r\nimport { Button } from '../ui/button';\r\nimport { Badge } from '../ui/badge';\r\nimport { Input } from '../ui/input';\r\nimport { Label } from '../ui/label';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../ui/select';\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '../ui/table';\r\nimport { useToast } from '../../hooks/use-toast';\r\nimport {\r\n  DollarSign,\r\n  Calculator,\r\n  FileText,\r\n  TrendingUp,\r\n  PieChart,\r\n  Percent,\r\n  ChevronUp,\r\n  ChevronDown,\r\n  BarChart4,\r\n  CreditCard,\r\n  PlusCircle,\r\n  Lightbulb,\r\n  Users,\r\n  Target,\r\n  Building2,\r\n  Calendar,\r\n  Edit,\r\n  Eye,\r\n  Settings,\r\n  Trophy,\r\n  Clock,\r\n  Building,\r\n  UserCheck,\r\n  ArrowRight,\r\n  Filter,\r\n  MoreVertical,\r\n  Star,\r\n  TrendingDown,\r\n  AlertTriangle,\r\n  CheckCircle2,\r\n  MapPin,\r\n  Phone,\r\n  Mail,\r\n  ToggleLeft,\r\n  ToggleRight,\r\n  Goal,\r\n  UserPlus,\r\n  ClipboardList,\r\n  BarChart3,\r\n  LineChart,\r\n  Activity,\r\n} from 'lucide-react';\r\nimport DealLogPage from '../../pages/DealLogPage';\r\n\r\ninterface Dealership {\r\n  id: string;\r\n  name: string;\r\n  location: string;\r\n  general_manager: string;\r\n  phone: string;\r\n  email: string;\r\n  status: 'active' | 'inactive';\r\n  monthly_goal: number;\r\n  ytd_units: number;\r\n  mtd_units: number;\r\n  front_gross: number;\r\n  back_gross: number;\r\n  total_gross: number;\r\n  new_units: number;\r\n  used_units: number;\r\n  cpo_units: number;\r\n  front_pvr: number;\r\n  back_pvr: number;\r\n  performance_rating: 'excellent' | 'good' | 'needs_improvement';\r\n}\r\n\r\ninterface DistrictMetrics {\r\n  total_dealerships: number;\r\n  active_dealerships: number;\r\n  total_gross_profit: number;\r\n  total_units: number;\r\n  district_front_pvr: number;\r\n  district_back_pvr: number;\r\n  goal_achievement: number;\r\n  top_performer: string;\r\n  mtd_growth: number;\r\n}\r\n\r\ninterface TeamMember {\r\n  id: string;\r\n  name: string;\r\n  role: 'salesperson' | 'finance_manager';\r\n  dealership: string;\r\n  deals_processed: number;\r\n  revenue: number;\r\n  performance_rating: 'excellent' | 'good' | 'needs_improvement';\r\n  schedule: string;\r\n  goals: {\r\n    monthly_deals: number;\r\n    current_deals: number;\r\n    monthly_revenue: number;\r\n    current_revenue: number;\r\n  };\r\n}\r\n\r\nconst AVPDashboard = () => {\r\n  const { user, role, dealershipId } = useAuth();\r\n  const { toast } = useToast();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [selectedTab, setSelectedTab] = useState('overview');\r\n  const [selectedDealership, setSelectedDealership] = useState<string>('all');\r\n  const [showSalesBoard, setShowSalesBoard] = useState(true);\r\n  const [timePeriod, setTimePeriod] = useState<string>('this-month');\r\n\r\n  // Mock data - replace with actual API calls\r\n  const [districtMetrics, setDistrictMetrics] = useState<DistrictMetrics>({\r\n    total_dealerships: 5,\r\n    active_dealerships: 5,\r\n    total_gross_profit: 2450000,\r\n    total_units: 1247,\r\n    district_front_pvr: 2850,\r\n    district_back_pvr: 1420,\r\n    goal_achievement: 87.5,\r\n    top_performer: 'Downtown Toyota',\r\n    mtd_growth: 15.2,\r\n  });\r\n\r\n  const [dealerships, setDealerships] = useState<Dealership[]>([\r\n    {\r\n      id: 'deal1',\r\n      name: 'Downtown Toyota',\r\n      location: 'Downtown District',\r\n      general_manager: 'Michael Johnson',\r\n      phone: '(555) 123-4567',\r\n      email: 'mjohnson@downtowntoyota.com',\r\n      status: 'active',\r\n      monthly_goal: 250,\r\n      ytd_units: 2847,\r\n      mtd_units: 247,\r\n      front_gross: 485000,\r\n      back_gross: 245000,\r\n      total_gross: 730000,\r\n      new_units: 147,\r\n      used_units: 85,\r\n      cpo_units: 15,\r\n      front_pvr: 2950,\r\n      back_pvr: 1485,\r\n      performance_rating: 'excellent',\r\n    },\r\n    {\r\n      id: 'deal2',\r\n      name: 'Westside Honda',\r\n      location: 'West District',\r\n      general_manager: 'Sarah Williams',\r\n      phone: '(555) 234-5678',\r\n      email: 'swilliams@westsidehonda.com',\r\n      status: 'active',\r\n      monthly_goal: 200,\r\n      ytd_units: 2156,\r\n      mtd_units: 189,\r\n      front_gross: 378000,\r\n      back_gross: 189000,\r\n      total_gross: 567000,\r\n      new_units: 112,\r\n      used_units: 65,\r\n      cpo_units: 12,\r\n      front_pvr: 2750,\r\n      back_pvr: 1350,\r\n      performance_rating: 'good',\r\n    },\r\n    {\r\n      id: 'deal3',\r\n      name: 'Northside Ford',\r\n      location: 'North District',\r\n      general_manager: 'David Chen',\r\n      phone: '(555) 345-6789',\r\n      email: 'dchen@northsideford.com',\r\n      status: 'active',\r\n      monthly_goal: 180,\r\n      ytd_units: 1987,\r\n      mtd_units: 165,\r\n      front_gross: 342000,\r\n      back_gross: 171000,\r\n      total_gross: 513000,\r\n      new_units: 98,\r\n      used_units: 55,\r\n      cpo_units: 12,\r\n      front_pvr: 2650,\r\n      back_pvr: 1285,\r\n      performance_rating: 'good',\r\n    },\r\n    {\r\n      id: 'deal4',\r\n      name: 'Southside Chevrolet',\r\n      location: 'South District',\r\n      general_manager: 'Lisa Rodriguez',\r\n      phone: '(555) 456-7890',\r\n      email: 'lrodriguez@southsidechevy.com',\r\n      status: 'active',\r\n      monthly_goal: 220,\r\n      ytd_units: 2398,\r\n      mtd_units: 198,\r\n      front_gross: 425000,\r\n      back_gross: 212000,\r\n      total_gross: 637000,\r\n      new_units: 118,\r\n      used_units: 68,\r\n      cpo_units: 12,\r\n      front_pvr: 2800,\r\n      back_pvr: 1395,\r\n      performance_rating: 'excellent',\r\n    },\r\n    {\r\n      id: 'deal5',\r\n      name: 'Eastside Nissan',\r\n      location: 'East District',\r\n      general_manager: 'Robert Taylor',\r\n      phone: '(555) 567-8901',\r\n      email: 'rtaylor@eastsidenissan.com',\r\n      status: 'active',\r\n      monthly_goal: 160,\r\n      ytd_units: 1756,\r\n      mtd_units: 148,\r\n      front_gross: 298000,\r\n      back_gross: 149000,\r\n      total_gross: 447000,\r\n      new_units: 88,\r\n      used_units: 48,\r\n      cpo_units: 12,\r\n      front_pvr: 2550,\r\n      back_pvr: 1245,\r\n      performance_rating: 'needs_improvement',\r\n    },\r\n  ]);\r\n\r\n  const [teamMembers, setTeamMembers] = useState<TeamMember[]>([\r\n    {\r\n      id: 'tm1',\r\n      name: 'John Smith',\r\n      role: 'salesperson',\r\n      dealership: 'Downtown Toyota',\r\n      deals_processed: 28,\r\n      revenue: 84000,\r\n      performance_rating: 'excellent',\r\n      schedule: '9am - 6pm',\r\n      goals: {\r\n        monthly_deals: 30,\r\n        current_deals: 28,\r\n        monthly_revenue: 90000,\r\n        current_revenue: 84000,\r\n      },\r\n    },\r\n    {\r\n      id: 'tm2',\r\n      name: 'Jane Valentine',\r\n      role: 'finance_manager',\r\n      dealership: 'Downtown Toyota',\r\n      deals_processed: 32,\r\n      revenue: 45000,\r\n      performance_rating: 'excellent',\r\n      schedule: '9am - 6pm',\r\n      goals: {\r\n        monthly_deals: 35,\r\n        current_deals: 32,\r\n        monthly_revenue: 50000,\r\n        current_revenue: 45000,\r\n      },\r\n    },\r\n    // Add more team members as needed\r\n  ]);\r\n\r\n  const getPeriodLabel = (period: string): string => {\r\n    const today = new Date();\r\n    const month = today.toLocaleString('default', { month: 'long' });\r\n    const year = today.getFullYear();\r\n\r\n    switch (period) {\r\n      case 'this-month':\r\n        return `${month} ${year}`;\r\n      case 'last-month':\r\n        const lastMonth =\r\n          today.getMonth() === 0\r\n            ? 'December'\r\n            : new Date(today.getFullYear(), today.getMonth() - 1, 1).toLocaleString('default', {\r\n                month: 'long',\r\n              });\r\n        const lastMonthYear =\r\n          today.getMonth() === 0 ? today.getFullYear() - 1 : today.getFullYear();\r\n        return `${lastMonth} ${lastMonthYear}`;\r\n      case 'last-quarter':\r\n        const currentQuarter = Math.floor(today.getMonth() / 3);\r\n        return `Q${currentQuarter === 0 ? 4 : currentQuarter} ${\r\n          currentQuarter === 0 ? year - 1 : year\r\n        }`;\r\n      case 'ytd':\r\n        return `Year to Date ${year}`;\r\n      case 'last-year':\r\n        return `${year - 1}`;\r\n      default:\r\n        return `${month} ${year}`;\r\n    }\r\n  };\r\n\r\n  const getPerformanceBadge = (performance: string) => {\r\n    switch (performance) {\r\n      case 'excellent':\r\n        return <Badge className=\"bg-green-100 text-green-800\">Excellent</Badge>;\r\n      case 'good':\r\n        return <Badge className=\"bg-blue-100 text-blue-800\">Good</Badge>;\r\n      case 'needs_improvement':\r\n        return <Badge className=\"bg-yellow-100 text-yellow-800\">Needs Improvement</Badge>;\r\n      default:\r\n        return <Badge variant=\"secondary\">Unknown</Badge>;\r\n    }\r\n  };\r\n\r\n  const getGoalProgress = (current: number, target: number) => {\r\n    const percentage = Math.min((current / target) * 100, 100);\r\n    return (\r\n      <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n        <div\r\n          className={`h-2 rounded-full ${\r\n            percentage >= 90 ? 'bg-green-500' : percentage >= 70 ? 'bg-yellow-500' : 'bg-red-500'\r\n          }`}\r\n          style={{ width: `${percentage}%` }}\r\n        ></div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container py-4\">\r\n      {/* Dashboard header */}\r\n      <div className=\"flex justify-between items-start mb-6\">\r\n        <div className=\"flex-grow\">\r\n          <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-2\">\r\n            <div>\r\n              <h1 className=\"text-3xl font-bold flex items-center\">\r\n                <Building2 className=\"w-8 h-8 mr-3 text-blue-600\" />\r\n                Area Vice President Dashboard\r\n              </h1>\r\n              <p className=\"text-gray-600 mt-1\">\r\n                AVP: {user?.email?.split('@')[0] || 'Not Assigned'} | District Overview\r\n              </p>\r\n            </div>\r\n\r\n            {/* Leadership Tip */}\r\n            <div className=\"bg-blue-50 p-2 rounded-md mt-2 md:mt-0 border border-blue-100 max-w-2xl\">\r\n              <p className=\"text-xs italic text-blue-800\">\r\n                <Lightbulb className=\"h-3 w-3 inline-block mr-1\" />\r\n                <strong>Leadership Tip:</strong> Focus on developing your General Managers - their\r\n                success drives district performance.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Period selector and Quick Actions */}\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <div className=\"flex items-center\">\r\n          <h2 className=\"text-2xl font-bold mr-3\">{getPeriodLabel(timePeriod)}</h2>\r\n          <select\r\n            value={timePeriod}\r\n            onChange={e => setTimePeriod(e.target.value)}\r\n            className=\"p-2 border rounded-md shadow-sm\"\r\n          >\r\n            <option value=\"this-month\">This Month</option>\r\n            <option value=\"last-month\">Last Month</option>\r\n            <option value=\"last-quarter\">Last Quarter</option>\r\n            <option value=\"ytd\">Year to Date</option>\r\n            <option value=\"last-year\">Last Year</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"flex items-center space-x-2\">\r\n          <Button variant=\"outline\" size=\"sm\">\r\n            <Goal className=\"mr-2 h-4 w-4\" />\r\n            Set Goals\r\n          </Button>\r\n          <Button variant=\"outline\" size=\"sm\">\r\n            <Calendar className=\"mr-2 h-4 w-4\" />\r\n            Schedules\r\n          </Button>\r\n          <Button variant=\"outline\" size=\"sm\">\r\n            <BarChart3 className=\"mr-2 h-4 w-4\" />\r\n            Reports\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <Tabs value={selectedTab} onValueChange={setSelectedTab} className=\"space-y-6\">\r\n        <TabsList className=\"grid w-full grid-cols-7\">\r\n          <TabsTrigger value=\"overview\">District View</TabsTrigger>\r\n          <TabsTrigger value=\"dealerships\">Dealerships</TabsTrigger>\r\n          <TabsTrigger value=\"leaderboard\">DAS Board</TabsTrigger>\r\n          <TabsTrigger value=\"schedules\">Schedules</TabsTrigger>\r\n          <TabsTrigger value=\"deals\">Deal Log</TabsTrigger>\r\n          <TabsTrigger value=\"metrics\">Team Metrics</TabsTrigger>\r\n          <TabsTrigger value=\"actions\">Quick Actions</TabsTrigger>\r\n        </TabsList>\r\n\r\n        {/* District Overview Tab */}\r\n        <TabsContent value=\"overview\" className=\"space-y-6\">\r\n          {/* District Metrics Cards */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Total Gross Profit</CardTitle>\r\n                <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">\r\n                  ${districtMetrics.total_gross_profit.toLocaleString()}\r\n                </div>\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  <span className=\"text-green-600 flex items-center\">\r\n                    <TrendingUp className=\"w-3 h-3 mr-1\" />+{districtMetrics.mtd_growth}%\r\n                  </span>\r\n                  from last month\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Total Units</CardTitle>\r\n                <BarChart4 className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">{districtMetrics.total_units}</div>\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  Across {districtMetrics.active_dealerships} dealerships\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">District Front PVR</CardTitle>\r\n                <Calculator className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">${districtMetrics.district_front_pvr}</div>\r\n                <p className=\"text-xs text-muted-foreground\">Average across district</p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">District Back PVR</CardTitle>\r\n                <CreditCard className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">${districtMetrics.district_back_pvr}</div>\r\n                <p className=\"text-xs text-muted-foreground\">F&I average</p>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Goal Achievement and Top Performer */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center\">\r\n                  <Target className=\"w-5 h-5 mr-2\" />\r\n                  District Goal Achievement\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-3xl font-bold mb-2\">{districtMetrics.goal_achievement}%</div>\r\n                {getGoalProgress(districtMetrics.goal_achievement, 100)}\r\n                <p className=\"text-sm text-muted-foreground mt-2\">\r\n                  {districtMetrics.goal_achievement >= 90\r\n                    ? 'Exceeding expectations'\r\n                    : districtMetrics.goal_achievement >= 70\r\n                    ? 'On track'\r\n                    : 'Needs attention'}\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center\">\r\n                  <Trophy className=\"w-5 h-5 mr-2 text-yellow-500\" />\r\n                  Top Performing Store\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold mb-2\">{districtMetrics.top_performer}</div>\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  Leading in overall performance this month\r\n                </p>\r\n                <Button variant=\"outline\" size=\"sm\" className=\"mt-2\">\r\n                  View Details\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Dealership Performance Overview */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center\">\r\n                <Building className=\"w-5 h-5 mr-2\" />\r\n                Dealership Performance Overview\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                {dealerships.map(dealership => (\r\n                  <div key={dealership.id} className=\"p-4 border rounded-lg\">\r\n                    <div className=\"flex items-center justify-between mb-2\">\r\n                      <h4 className=\"font-semibold\">{dealership.name}</h4>\r\n                      {getPerformanceBadge(dealership.performance_rating)}\r\n                    </div>\r\n                    <div className=\"space-y-1 text-sm\">\r\n                      <div className=\"flex justify-between\">\r\n                        <span>GM:</span>\r\n                        <span className=\"font-medium\">{dealership.general_manager}</span>\r\n                      </div>\r\n                      <div className=\"flex justify-between\">\r\n                        <span>MTD Units:</span>\r\n                        <span className=\"font-medium\">{dealership.mtd_units}</span>\r\n                      </div>\r\n                      <div className=\"flex justify-between\">\r\n                        <span>Goal:</span>\r\n                        <span className=\"font-medium\">{dealership.monthly_goal}</span>\r\n                      </div>\r\n                      <div className=\"flex justify-between\">\r\n                        <span>Total Gross:</span>\r\n                        <span className=\"font-medium\">\r\n                          ${dealership.total_gross.toLocaleString()}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"mt-2\">\r\n                        <div className=\"text-xs text-muted-foreground mb-1\">Goal Progress</div>\r\n                        {getGoalProgress(dealership.mtd_units, dealership.monthly_goal)}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Individual Dealerships Tab */}\r\n        <TabsContent value=\"dealerships\" className=\"space-y-6\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <h3 className=\"text-lg font-semibold\">Individual Dealership Performance</h3>\r\n            <Select value={selectedDealership} onValueChange={setSelectedDealership}>\r\n              <SelectTrigger className=\"w-64\">\r\n                <SelectValue placeholder=\"Select dealership\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"all\">All Dealerships</SelectItem>\r\n                {dealerships.map(dealership => (\r\n                  <SelectItem key={dealership.id} value={dealership.id}>\r\n                    {dealership.name}\r\n                  </SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          <Card>\r\n            <CardContent className=\"p-6\">\r\n              <Table>\r\n                <TableHeader>\r\n                  <TableRow>\r\n                    <TableHead>Dealership</TableHead>\r\n                    <TableHead>General Manager</TableHead>\r\n                    <TableHead>Location</TableHead>\r\n                    <TableHead className=\"text-right\">MTD Units</TableHead>\r\n                    <TableHead className=\"text-right\">Goal</TableHead>\r\n                    <TableHead className=\"text-right\">Front Gross</TableHead>\r\n                    <TableHead className=\"text-right\">Back Gross</TableHead>\r\n                    <TableHead className=\"text-right\">Front PVR</TableHead>\r\n                    <TableHead className=\"text-right\">Back PVR</TableHead>\r\n                    <TableHead className=\"text-right\">Performance</TableHead>\r\n                    <TableHead className=\"text-right\">Actions</TableHead>\r\n                  </TableRow>\r\n                </TableHeader>\r\n                <TableBody>\r\n                  {dealerships\r\n                    .filter(d => selectedDealership === 'all' || d.id === selectedDealership)\r\n                    .map(dealership => (\r\n                      <TableRow key={dealership.id}>\r\n                        <TableCell className=\"font-medium\">{dealership.name}</TableCell>\r\n                        <TableCell>{dealership.general_manager}</TableCell>\r\n                        <TableCell>{dealership.location}</TableCell>\r\n                        <TableCell className=\"text-right font-medium\">\r\n                          {dealership.mtd_units}\r\n                        </TableCell>\r\n                        <TableCell className=\"text-right\">{dealership.monthly_goal}</TableCell>\r\n                        <TableCell className=\"text-right font-medium\">\r\n                          ${dealership.front_gross.toLocaleString()}\r\n                        </TableCell>\r\n                        <TableCell className=\"text-right font-medium\">\r\n                          ${dealership.back_gross.toLocaleString()}\r\n                        </TableCell>\r\n                        <TableCell className=\"text-right\">${dealership.front_pvr}</TableCell>\r\n                        <TableCell className=\"text-right\">${dealership.back_pvr}</TableCell>\r\n                        <TableCell className=\"text-right\">\r\n                          {getPerformanceBadge(dealership.performance_rating)}\r\n                        </TableCell>\r\n                        <TableCell className=\"text-right\">\r\n                          <div className=\"flex items-center justify-end space-x-2\">\r\n                            <Button variant=\"outline\" size=\"sm\">\r\n                              <Eye className=\"w-4 h-4\" />\r\n                            </Button>\r\n                            <Button variant=\"outline\" size=\"sm\">\r\n                              <Edit className=\"w-4 h-4\" />\r\n                            </Button>\r\n                          </div>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n              </Table>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* DAS Board Tab */}\r\n        <TabsContent value=\"leaderboard\" className=\"space-y-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <h3 className=\"text-lg font-semibold\">District Performance Board</h3>\r\n            <div className=\"flex items-center space-x-2\">\r\n              <span className=\"text-sm\">Sales</span>\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                onClick={() => setShowSalesBoard(!showSalesBoard)}\r\n                className=\"p-2\"\r\n              >\r\n                {showSalesBoard ? (\r\n                  <ToggleLeft className=\"w-4 h-4\" />\r\n                ) : (\r\n                  <ToggleRight className=\"w-4 h-4\" />\r\n                )}\r\n              </Button>\r\n              <span className=\"text-sm\">F&I</span>\r\n            </div>\r\n          </div>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center\">\r\n                <Trophy className=\"w-5 h-5 mr-2 text-yellow-500\" />\r\n                {showSalesBoard ? 'Sales Team' : 'F&I Team'} Leaderboard\r\n              </CardTitle>\r\n              <CardDescription>\r\n                Top performers across all dealerships for {getPeriodLabel(timePeriod)}\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <Table>\r\n                <TableHeader>\r\n                  <TableRow>\r\n                    <TableHead className=\"w-12\">Rank</TableHead>\r\n                    <TableHead>Name</TableHead>\r\n                    <TableHead>Dealership</TableHead>\r\n                    <TableHead className=\"text-right\">Deals</TableHead>\r\n                    <TableHead className=\"text-right\">Revenue</TableHead>\r\n                    <TableHead className=\"text-right\">Goal Progress</TableHead>\r\n                    <TableHead className=\"text-right\">Performance</TableHead>\r\n                  </TableRow>\r\n                </TableHeader>\r\n                <TableBody>\r\n                  {teamMembers\r\n                    .filter(member =>\r\n                      showSalesBoard\r\n                        ? member.role === 'salesperson'\r\n                        : member.role === 'finance_manager'\r\n                    )\r\n                    .sort((a, b) => b.revenue - a.revenue)\r\n                    .map((member, index) => (\r\n                      <TableRow key={member.id}>\r\n                        <TableCell>\r\n                          <div className=\"flex items-center\">\r\n                            {index === 0 && <Trophy className=\"w-4 h-4 text-yellow-500 mr-1\" />}\r\n                            {index === 1 && <Trophy className=\"w-4 h-4 text-gray-400 mr-1\" />}\r\n                            {index === 2 && <Trophy className=\"w-4 h-4 text-amber-600 mr-1\" />}\r\n                            <span className=\"font-medium\">#{index + 1}</span>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell className=\"font-medium\">{member.name}</TableCell>\r\n                        <TableCell>{member.dealership}</TableCell>\r\n                        <TableCell className=\"text-right\">{member.deals_processed}</TableCell>\r\n                        <TableCell className=\"text-right\">\r\n                          ${member.revenue.toLocaleString()}\r\n                        </TableCell>\r\n                        <TableCell className=\"text-right\">\r\n                          <div className=\"w-20\">\r\n                            {getGoalProgress(\r\n                              member.goals.current_deals,\r\n                              member.goals.monthly_deals\r\n                            )}\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell className=\"text-right\">\r\n                          {getPerformanceBadge(member.performance_rating)}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n              </Table>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Team Schedules Tab */}\r\n        <TabsContent value=\"schedules\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center\">\r\n                <Calendar className=\"w-5 h-5 mr-2\" />\r\n                District Team Schedules\r\n              </CardTitle>\r\n              <CardDescription>View and manage schedules across all dealerships</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-6\">\r\n                {dealerships.map(dealership => (\r\n                  <div key={dealership.id} className=\"border rounded-lg p-4\">\r\n                    <div className=\"flex items-center justify-between mb-4\">\r\n                      <h4 className=\"font-semibold\">{dealership.name}</h4>\r\n                      <Button variant=\"outline\" size=\"sm\">\r\n                        <Edit className=\"w-4 h-4 mr-2\" />\r\n                        Manage Schedules\r\n                      </Button>\r\n                    </div>\r\n                    <div className=\"text-sm text-muted-foreground\">\r\n                      GM: {dealership.general_manager} | {dealership.location}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Deal Log Tab */}\r\n        <TabsContent value=\"deals\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center\">\r\n                <FileText className=\"w-5 h-5 mr-2\" />\r\n                District Deal Log\r\n              </CardTitle>\r\n              <CardDescription>\r\n                View and edit deals across all dealerships (Front Gross editable)\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <DealLogPage dashboardType=\"avp\" />\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Team Sales Metrics Tab */}\r\n        <TabsContent value=\"metrics\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center\">\r\n                <BarChart3 className=\"w-5 h-5 mr-2\" />\r\n                Team Sales Metrics\r\n              </CardTitle>\r\n              <CardDescription>\r\n                Comprehensive performance metrics across the district\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                {dealerships.map(dealership => (\r\n                  <div key={dealership.id} className=\"p-4 border rounded-lg\">\r\n                    <h4 className=\"font-semibold mb-3\">{dealership.name}</h4>\r\n                    <div className=\"space-y-2 text-sm\">\r\n                      <div className=\"flex justify-between\">\r\n                        <span>New Units:</span>\r\n                        <span className=\"font-medium\">{dealership.new_units}</span>\r\n                      </div>\r\n                      <div className=\"flex justify-between\">\r\n                        <span>Used Units:</span>\r\n                        <span className=\"font-medium\">{dealership.used_units}</span>\r\n                      </div>\r\n                      <div className=\"flex justify-between\">\r\n                        <span>CPO Units:</span>\r\n                        <span className=\"font-medium\">{dealership.cpo_units}</span>\r\n                      </div>\r\n                      <div className=\"flex justify-between\">\r\n                        <span>YTD Total:</span>\r\n                        <span className=\"font-medium\">{dealership.ytd_units}</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Quick Actions Tab */}\r\n        <TabsContent value=\"actions\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center\">\r\n                  <UserPlus className=\"w-5 h-5 mr-2\" />\r\n                  Team Management\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-2\">\r\n                <Button className=\"w-full\" variant=\"outline\">\r\n                  <Users className=\"w-4 h-4 mr-2\" />\r\n                  Manage Teams\r\n                </Button>\r\n                <Button className=\"w-full\" variant=\"outline\">\r\n                  <UserCheck className=\"w-4 h-4 mr-2\" />\r\n                  Performance Reviews\r\n                </Button>\r\n                <Button className=\"w-full\" variant=\"outline\">\r\n                  <Calendar className=\"w-4 h-4 mr-2\" />\r\n                  Schedule Management\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center\">\r\n                  <Goal className=\"w-5 h-5 mr-2\" />\r\n                  Goal Setting\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-2\">\r\n                <Button className=\"w-full\" variant=\"outline\">\r\n                  <Target className=\"w-4 h-4 mr-2\" />\r\n                  Set Team Goals\r\n                </Button>\r\n                <Button className=\"w-full\" variant=\"outline\">\r\n                  <Activity className=\"w-4 h-4 mr-2\" />\r\n                  Individual Goals\r\n                </Button>\r\n                <Button className=\"w-full\" variant=\"outline\">\r\n                  <TrendingUp className=\"w-4 h-4 mr-2\" />\r\n                  Track Progress\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center\">\r\n                  <ClipboardList className=\"w-5 h-5 mr-2\" />\r\n                  Reports & Analytics\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-2\">\r\n                <Button className=\"w-full\" variant=\"outline\">\r\n                  <BarChart3 className=\"w-4 h-4 mr-2\" />\r\n                  Sales Reports\r\n                </Button>\r\n                <Button className=\"w-full\" variant=\"outline\">\r\n                  <LineChart className=\"w-4 h-4 mr-2\" />\r\n                  Performance Analytics\r\n                </Button>\r\n                <Button className=\"w-full\" variant=\"outline\">\r\n                  <PieChart className=\"w-4 h-4 mr-2\" />\r\n                  District Summary\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AVPDashboard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../ui/card';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '../ui/tabs';\r\nimport { Button } from '../ui/button';\r\nimport { Badge } from '../ui/badge';\r\nimport { Input } from '../ui/input';\r\nimport { Label } from '../ui/label';\r\nimport { Checkbox } from '../ui/checkbox';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../ui/select';\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '../ui/table';\r\nimport { useToast } from '../../hooks/use-toast';\r\nimport { EnhancedPayPlanManager } from '../payplan/EnhancedPayPlanManager';\r\nimport {\r\n  Building2,\r\n  Users,\r\n  Car,\r\n  TrendingUp,\r\n  Settings,\r\n  ArrowLeft,\r\n  MapPin,\r\n  BarChart3,\r\n  UserCircle,\r\n  Calculator,\r\n  Target,\r\n  Crown,\r\n  Clock,\r\n  Plus,\r\n  Edit,\r\n  Save,\r\n  Building,\r\n  Info,\r\n  Loader2,\r\n} from 'lucide-react';\r\n\r\n// User roles configuration\r\nconst USER_ROLES = [\r\n  { id: 'salesperson', name: 'Salesperson', category: 'sales' },\r\n  { id: 'finance_manager', name: 'Finance Manager', category: 'finance' },\r\n  { id: 'finance_director', name: 'Finance Director', category: 'finance' },\r\n  { id: 'sales_manager', name: 'Sales Manager', category: 'management' },\r\n  { id: 'general_manager', name: 'General Manager', category: 'management' },\r\n  { id: 'gsm', name: 'GSM', category: 'management' },\r\n  { id: 'dealership_admin', name: 'Dealership Admin', category: 'admin' },\r\n];\r\n\r\n// Employment status options\r\nconst EMPLOYMENT_STATUS = [\r\n  { id: 'employed', name: 'Employed', color: 'bg-green-100 text-green-800' },\r\n  { id: 'suspended', name: 'Suspended', color: 'bg-yellow-100 text-yellow-800' },\r\n  { id: 'terminated', name: 'Terminated', color: 'bg-red-100 text-red-800' },\r\n];\r\n\r\n// Interfaces\r\ninterface User {\r\n  id: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  email: string;\r\n  role: string;\r\n  role_id: string;\r\n  employment_status?: string;\r\n  created_at: string;\r\n  start_date?: string;\r\n  dealership_id: string;\r\n}\r\n\r\ninterface Dealership {\r\n  id: string;\r\n  name: string;\r\n  location: string;\r\n  phone?: string;\r\n  email?: string;\r\n  created_at: string;\r\n  salespeople_count: number;\r\n  finance_count: number;\r\n  managers_count: number;\r\n  total_staff: number;\r\n  monthly_sales: number;\r\n  monthly_revenue: number;\r\n  // Configuration status\r\n  is_configured: boolean;\r\n}\r\n\r\ninterface GroupMetrics {\r\n  total_dealerships: number;\r\n  total_users: number;\r\n  monthly_vehicles_sold: number;\r\n  total_revenue: number;\r\n}\r\n\r\ninterface UserFormData {\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  roleId: string;\r\n  startDate: string;\r\n  tempPassword: string;\r\n  dealershipId: string;\r\n}\r\n\r\ninterface StaffCounts {\r\n  salesperson: number;\r\n  finance_manager: number;\r\n  sales_manager: number;\r\n  general_manager: number;\r\n  gsm: number;\r\n  total: number;\r\n}\r\n\r\nexport function GroupAdminDashboard() {\r\n  const { user } = useAuth();\r\n  const { toast } = useToast();\r\n  const navigate = useNavigate();\r\n\r\n  // Check for direct auth\r\n  const directAuthData = localStorage.getItem('directauth_user');\r\n  const directUser = directAuthData ? JSON.parse(directAuthData) : null;\r\n  const currentUser = user || directUser;\r\n\r\n  // State\r\n  const [dealerships, setDealerships] = useState<Dealership[]>([]);\r\n  const [groupMetrics, setGroupMetrics] = useState<GroupMetrics>({\r\n    total_dealerships: 0,\r\n    total_users: 0,\r\n    monthly_vehicles_sold: 0,\r\n    total_revenue: 0,\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Configuration state\r\n  const [selectedDealership, setSelectedDealership] = useState<Dealership | null>(null);\r\n  const [dealershipUsers, setDealershipUsers] = useState<User[]>([]);\r\n  const [staffCounts, setStaffCounts] = useState<StaffCounts>({\r\n    salesperson: 0,\r\n    finance_manager: 0,\r\n    sales_manager: 0,\r\n    general_manager: 0,\r\n    gsm: 0,\r\n    total: 0,\r\n  });\r\n\r\n  // User form state\r\n  const [userForm, setUserForm] = useState<UserFormData>({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    roleId: 'salesperson',\r\n    startDate: '',\r\n    tempPassword: '',\r\n    dealershipId: '',\r\n  });\r\n  const [userLoading, setUserLoading] = useState(false);\r\n  const [selectedTab, setSelectedTab] = useState('staff');\r\n\r\n  // Fetch data on component mount\r\n  useEffect(() => {\r\n    console.log('[GroupAdminDashboard] Component mounting - currentUser:', currentUser?.email);\r\n    if (currentUser) {\r\n      fetchDashboardData();\r\n    }\r\n  }, [currentUser]);\r\n\r\n  // Calculate staff counts when dealership users change\r\n  useEffect(() => {\r\n    if (selectedDealership && dealershipUsers.length > 0) {\r\n      const counts = dealershipUsers.reduce(\r\n        (acc, user) => {\r\n          const role = user.role || user.role_id;\r\n          if (role in acc) {\r\n            acc[role as keyof StaffCounts]++;\r\n          }\r\n          acc.total++;\r\n          return acc;\r\n        },\r\n        {\r\n          salesperson: 0,\r\n          finance_manager: 0,\r\n          sales_manager: 0,\r\n          general_manager: 0,\r\n          gsm: 0,\r\n          total: 0,\r\n        }\r\n      );\r\n      setStaffCounts(counts);\r\n    }\r\n  }, [dealershipUsers, selectedDealership]);\r\n\r\n  // Generate temporary password function\r\n  const generateTempPassword = () => {\r\n    const tempPassword =\r\n      Math.random().toString(36).slice(-8) + Math.random().toString(36).toUpperCase().slice(-4);\r\n    setUserForm({ ...userForm, tempPassword });\r\n  };\r\n\r\n  // Fetch all dashboard data\r\n  const fetchDashboardData = async () => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      // Mock data - these would come from the Master Admin's dealership creation\r\n      const mockDealerships: Dealership[] = [\r\n        {\r\n          id: '1',\r\n          name: 'Downtown Toyota',\r\n          location: 'Chicago, IL',\r\n          phone: '(312) 555-0123',\r\n          email: 'info@downtowntoyota.com',\r\n          created_at: '2024-01-15',\r\n          salespeople_count: 12,\r\n          finance_count: 3,\r\n          managers_count: 4,\r\n          total_staff: 19,\r\n          monthly_sales: 145,\r\n          monthly_revenue: 4350000,\r\n          is_configured: true,\r\n        },\r\n        {\r\n          id: '2',\r\n          name: 'Suburban Honda',\r\n          location: 'Naperville, IL',\r\n          phone: '(630) 555-0456',\r\n          email: 'contact@suburbanhonda.com',\r\n          created_at: '2024-02-01',\r\n          salespeople_count: 8,\r\n          finance_count: 2,\r\n          managers_count: 3,\r\n          total_staff: 13,\r\n          monthly_sales: 98,\r\n          monthly_revenue: 2940000,\r\n          is_configured: false, // Needs configuration\r\n        },\r\n        {\r\n          id: '3',\r\n          name: 'Metro Ford',\r\n          location: 'Aurora, IL',\r\n          phone: '(630) 555-0789',\r\n          email: 'hello@metroford.com',\r\n          created_at: '2024-01-20',\r\n          salespeople_count: 15,\r\n          finance_count: 4,\r\n          managers_count: 5,\r\n          total_staff: 24,\r\n          monthly_sales: 187,\r\n          monthly_revenue: 5610000,\r\n          is_configured: true,\r\n        },\r\n      ];\r\n\r\n      setDealerships(mockDealerships);\r\n\r\n      // Calculate group metrics\r\n      const metrics: GroupMetrics = {\r\n        total_dealerships: mockDealerships.length,\r\n        total_users: mockDealerships.reduce((sum, d) => sum + d.total_staff, 0),\r\n        monthly_vehicles_sold: mockDealerships.reduce((sum, d) => sum + d.monthly_sales, 0),\r\n        total_revenue: mockDealerships.reduce((sum, d) => sum + d.monthly_revenue, 0),\r\n      };\r\n\r\n      setGroupMetrics(metrics);\r\n      console.log('[GroupAdminDashboard] Data loaded successfully');\r\n    } catch (error) {\r\n      console.error('Error fetching dashboard data:', error);\r\n      toast({\r\n        title: 'Error',\r\n        description: 'Failed to fetch dashboard data',\r\n        variant: 'destructive',\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle dealership configuration\r\n  const handleConfigureDealership = async (dealership: Dealership) => {\r\n    setSelectedDealership(dealership);\r\n    setUserForm({ ...userForm, dealershipId: dealership.id });\r\n\r\n    // Generate initial password\r\n    if (!userForm.tempPassword) {\r\n      generateTempPassword();\r\n    }\r\n\r\n    // Fetch dealership users\r\n    await fetchDealershipUsers(dealership.id);\r\n  };\r\n\r\n  // Fetch users for a specific dealership\r\n  const fetchDealershipUsers = async (dealershipId: string) => {\r\n    try {\r\n      // Mock dealership users data\r\n      const mockUsers: User[] = [\r\n        {\r\n          id: 'u1',\r\n          first_name: 'John',\r\n          last_name: 'Smith',\r\n          email: 'john.smith@dealership.com',\r\n          role: 'salesperson',\r\n          role_id: 'salesperson',\r\n          employment_status: 'employed',\r\n          created_at: '2024-01-10',\r\n          start_date: '2024-01-15',\r\n          dealership_id: dealershipId,\r\n        },\r\n        {\r\n          id: 'u2',\r\n          first_name: 'Sarah',\r\n          last_name: 'Johnson',\r\n          email: 'sarah.johnson@dealership.com',\r\n          role: 'finance_manager',\r\n          role_id: 'finance_manager',\r\n          employment_status: 'employed',\r\n          created_at: '2024-01-12',\r\n          start_date: '2024-01-20',\r\n          dealership_id: dealershipId,\r\n        },\r\n      ];\r\n\r\n      setDealershipUsers(mockUsers);\r\n    } catch (error) {\r\n      console.error('Error fetching dealership users:', error);\r\n      toast({\r\n        title: 'Error',\r\n        description: 'Failed to fetch dealership staff',\r\n        variant: 'destructive',\r\n      });\r\n    }\r\n  };\r\n\r\n  // Handle adding new user to dealership\r\n  const handleUserSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setUserLoading(true);\r\n\r\n    try {\r\n      // Mock user creation\r\n      const newUser: User = {\r\n        id: `u${Date.now()}`,\r\n        first_name: userForm.firstName,\r\n        last_name: userForm.lastName,\r\n        email: userForm.email,\r\n        role: userForm.roleId,\r\n        role_id: userForm.roleId,\r\n        employment_status: 'employed',\r\n        created_at: new Date().toISOString(),\r\n        start_date: userForm.startDate,\r\n        dealership_id: userForm.dealershipId,\r\n      };\r\n\r\n      setDealershipUsers([...dealershipUsers, newUser]);\r\n\r\n      // Reset form\r\n      setUserForm({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        roleId: 'salesperson',\r\n        startDate: '',\r\n        tempPassword: '',\r\n        dealershipId: selectedDealership?.id || '',\r\n      });\r\n\r\n      generateTempPassword();\r\n\r\n      toast({\r\n        title: 'Success',\r\n        description: `${userForm.firstName} ${userForm.lastName} has been added to ${selectedDealership?.name}`,\r\n      });\r\n    } catch (error) {\r\n      console.error('Error adding user:', error);\r\n      toast({\r\n        title: 'Error',\r\n        description: 'Failed to add staff member',\r\n        variant: 'destructive',\r\n      });\r\n    } finally {\r\n      setUserLoading(false);\r\n    }\r\n  };\r\n\r\n  // Update employment status\r\n  const updateEmploymentStatus = async (userId: string, status: string) => {\r\n    try {\r\n      setDealershipUsers(\r\n        dealershipUsers.map(user =>\r\n          user.id === userId ? { ...user, employment_status: status } : user\r\n        )\r\n      );\r\n\r\n      toast({\r\n        title: 'Success',\r\n        description: `Employment status updated to ${status}`,\r\n      });\r\n    } catch (error) {\r\n      console.error('Error updating employment status:', error);\r\n      toast({\r\n        title: 'Error',\r\n        description: 'Failed to update employment status',\r\n        variant: 'destructive',\r\n      });\r\n    }\r\n  };\r\n\r\n  // Get users by role for the selected dealership\r\n  const getUsersByRole = (role: string) => {\r\n    const filteredUsers = dealershipUsers.filter(user => (user.role || user.role_id) === role);\r\n\r\n    // Sort by employment status\r\n    return filteredUsers.sort((a, b) => {\r\n      const statusOrder = { employed: 0, suspended: 1, terminated: 2 };\r\n      const statusA = a.employment_status || 'employed';\r\n      const statusB = b.employment_status || 'employed';\r\n      return statusOrder[statusA] - statusOrder[statusB];\r\n    });\r\n  };\r\n\r\n  // Get status badge styling\r\n  const getStatusBadge = (status: string = 'employed') => {\r\n    const statusConfig = EMPLOYMENT_STATUS.find(s => s.id === status) || EMPLOYMENT_STATUS[0];\r\n    return <Badge className={statusConfig.color}>{statusConfig.name}</Badge>;\r\n  };\r\n\r\n  // Back to dealership list\r\n  const handleBackToDealerships = () => {\r\n    setSelectedDealership(null);\r\n    setDealershipUsers([]);\r\n    setSelectedTab('staff');\r\n  };\r\n\r\n  // Format currency\r\n  const formatCurrency = (amount: number) => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 0,\r\n    }).format(amount);\r\n  };\r\n\r\n  // If a dealership is selected, show the configuration view\r\n  if (selectedDealership) {\r\n    return (\r\n      <div className=\"container mx-auto p-6 space-y-6\">\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-4\">\r\n            <Button variant=\"outline\" onClick={handleBackToDealerships}>\r\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\r\n              Back to Dealerships\r\n            </Button>\r\n            <div>\r\n              <h1 className=\"text-3xl font-bold tracking-tight\">\r\n                Configure {selectedDealership.name}\r\n              </h1>\r\n              <p className=\"text-muted-foreground flex items-center\">\r\n                <MapPin className=\"w-4 h-4 mr-1\" />\r\n                {selectedDealership.location}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Badge variant=\"outline\" className=\"px-3 py-1\">\r\n              <Settings className=\"w-4 h-4 mr-1\" />\r\n              Configuration\r\n            </Badge>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Configuration Tabs */}\r\n        <Tabs value={selectedTab} onValueChange={setSelectedTab} className=\"w-full\">\r\n          <TabsList className=\"grid w-full grid-cols-4\">\r\n            <TabsTrigger value=\"staff\">Staff Management</TabsTrigger>\r\n            <TabsTrigger value=\"hours\">Operating Hours</TabsTrigger>\r\n            <TabsTrigger value=\"payplans\">Pay Plans</TabsTrigger>\r\n            <TabsTrigger value=\"settings\">Settings</TabsTrigger>\r\n          </TabsList>\r\n\r\n          {/* Staff Management Tab */}\r\n          <TabsContent value=\"staff\" className=\"space-y-6\">\r\n            {/* Staff Overview */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n              <Card>\r\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                  <CardTitle className=\"text-sm font-medium\">Sales People</CardTitle>\r\n                  <UserCircle className=\"h-4 w-4 text-muted-foreground\" />\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"text-2xl font-bold\">{staffCounts.salesperson}</div>\r\n                </CardContent>\r\n              </Card>\r\n              <Card>\r\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                  <CardTitle className=\"text-sm font-medium\">Finance Managers</CardTitle>\r\n                  <Calculator className=\"h-4 w-4 text-muted-foreground\" />\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"text-2xl font-bold\">{staffCounts.finance_manager}</div>\r\n                </CardContent>\r\n              </Card>\r\n              <Card>\r\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                  <CardTitle className=\"text-sm font-medium\">Sales Managers</CardTitle>\r\n                  <Target className=\"h-4 w-4 text-muted-foreground\" />\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"text-2xl font-bold\">{staffCounts.sales_manager}</div>\r\n                </CardContent>\r\n              </Card>\r\n              <Card>\r\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                  <CardTitle className=\"text-sm font-medium\">Total Staff</CardTitle>\r\n                  <Users className=\"h-4 w-4 text-muted-foreground\" />\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"text-2xl font-bold\">{staffCounts.total}</div>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n\r\n            {/* Staff List */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Staff Members</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"border rounded-lg\">\r\n                  <Table>\r\n                    <TableHeader>\r\n                      <TableRow>\r\n                        <TableHead>Name</TableHead>\r\n                        <TableHead>Email</TableHead>\r\n                        <TableHead>Role</TableHead>\r\n                        <TableHead>Start Date</TableHead>\r\n                        <TableHead>Status</TableHead>\r\n                        <TableHead>Actions</TableHead>\r\n                      </TableRow>\r\n                    </TableHeader>\r\n                    <TableBody>\r\n                      {dealershipUsers.map(user => (\r\n                        <TableRow key={user.id}>\r\n                          <TableCell className=\"font-medium\">\r\n                            {user.first_name} {user.last_name}\r\n                          </TableCell>\r\n                          <TableCell>{user.email}</TableCell>\r\n                          <TableCell>\r\n                            <Badge variant=\"outline\">\r\n                              {USER_ROLES.find(r => r.id === user.role)?.name || user.role}\r\n                            </Badge>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {user.start_date\r\n                              ? new Date(user.start_date).toLocaleDateString()\r\n                              : 'Not set'}\r\n                          </TableCell>\r\n                          <TableCell>{getStatusBadge(user.employment_status)}</TableCell>\r\n                          <TableCell>\r\n                            <Select\r\n                              value={user.employment_status || 'employed'}\r\n                              onValueChange={value => updateEmploymentStatus(user.id, value)}\r\n                            >\r\n                              <SelectTrigger className=\"w-32\">\r\n                                <SelectValue />\r\n                              </SelectTrigger>\r\n                              <SelectContent>\r\n                                {EMPLOYMENT_STATUS.map(status => (\r\n                                  <SelectItem key={status.id} value={status.id}>\r\n                                    {status.name}\r\n                                  </SelectItem>\r\n                                ))}\r\n                              </SelectContent>\r\n                            </Select>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Add New Staff Form */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center\">\r\n                  <Plus className=\"w-5 h-5 mr-2\" />\r\n                  Add New Staff Member\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <form onSubmit={handleUserSubmit} className=\"space-y-4\">\r\n                  <div className=\"grid md:grid-cols-2 gap-4\">\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"firstName\">First Name</Label>\r\n                      <Input\r\n                        id=\"firstName\"\r\n                        value={userForm.firstName}\r\n                        onChange={e => setUserForm({ ...userForm, firstName: e.target.value })}\r\n                        placeholder=\"John\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"lastName\">Last Name</Label>\r\n                      <Input\r\n                        id=\"lastName\"\r\n                        value={userForm.lastName}\r\n                        onChange={e => setUserForm({ ...userForm, lastName: e.target.value })}\r\n                        placeholder=\"Doe\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"email\">Email Address</Label>\r\n                    <Input\r\n                      id=\"email\"\r\n                      type=\"email\"\r\n                      value={userForm.email}\r\n                      onChange={e => setUserForm({ ...userForm, email: e.target.value })}\r\n                      placeholder=\"john.doe@dealership.com\"\r\n                      required\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"grid md:grid-cols-2 gap-4\">\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"role\">Role</Label>\r\n                      <Select\r\n                        value={userForm.roleId}\r\n                        onValueChange={value => setUserForm({ ...userForm, roleId: value })}\r\n                      >\r\n                        <SelectTrigger id=\"role\">\r\n                          <SelectValue placeholder=\"Select a role\" />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          {USER_ROLES.map(role => (\r\n                            <SelectItem key={role.id} value={role.id}>\r\n                              {role.name}\r\n                            </SelectItem>\r\n                          ))}\r\n                        </SelectContent>\r\n                      </Select>\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"startDate\">Start Date</Label>\r\n                      <Input\r\n                        id=\"startDate\"\r\n                        type=\"date\"\r\n                        value={userForm.startDate}\r\n                        onChange={e => setUserForm({ ...userForm, startDate: e.target.value })}\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"tempPassword\">Temporary Password</Label>\r\n                    <div className=\"flex gap-2\">\r\n                      <Input\r\n                        id=\"tempPassword\"\r\n                        type=\"text\"\r\n                        value={userForm.tempPassword}\r\n                        onChange={e => setUserForm({ ...userForm, tempPassword: e.target.value })}\r\n                        placeholder=\"Auto-generated password\"\r\n                        required\r\n                      />\r\n                      <Button\r\n                        type=\"button\"\r\n                        variant=\"outline\"\r\n                        onClick={generateTempPassword}\r\n                        className=\"shrink-0\"\r\n                      >\r\n                        Generate\r\n                      </Button>\r\n                    </div>\r\n                    <p className=\"text-xs text-muted-foreground\">\r\n                      User will be required to change their password on first login.\r\n                    </p>\r\n                  </div>\r\n\r\n                  <Button type=\"submit\" disabled={userLoading} className=\"w-full\">\r\n                    {userLoading ? (\r\n                      <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n                    ) : (\r\n                      <Plus className=\"mr-2 h-4 w-4\" />\r\n                    )}\r\n                    Add Staff Member\r\n                  </Button>\r\n                </form>\r\n              </CardContent>\r\n            </Card>\r\n          </TabsContent>\r\n\r\n          {/* Operating Hours Tab */}\r\n          <TabsContent value=\"hours\" className=\"space-y-6\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center\">\r\n                  <Clock className=\"w-5 h-5 mr-2\" />\r\n                  Dealership Operating Hours\r\n                </CardTitle>\r\n                <CardDescription>\r\n                  Set the standard operating hours for this dealership. These hours will be used as\r\n                  the base for staff scheduling.\r\n                </CardDescription>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"grid gap-4\">\r\n                  {[\r\n                    { day: 'Monday', key: 'monday' },\r\n                    { day: 'Tuesday', key: 'tuesday' },\r\n                    { day: 'Wednesday', key: 'wednesday' },\r\n                    { day: 'Thursday', key: 'thursday' },\r\n                    { day: 'Friday', key: 'friday' },\r\n                    { day: 'Saturday', key: 'saturday' },\r\n                    { day: 'Sunday', key: 'sunday' },\r\n                  ].map(({ day, key }) => (\r\n                    <div\r\n                      key={key}\r\n                      className=\"flex items-center justify-between p-3 border rounded-lg\"\r\n                    >\r\n                      <div className=\"flex items-center space-x-3\">\r\n                        <div className=\"w-20 font-medium\">{day}</div>\r\n                        <div className=\"flex items-center space-x-2\">\r\n                          <Input\r\n                            type=\"time\"\r\n                            defaultValue=\"09:00\"\r\n                            className=\"w-24\"\r\n                            placeholder=\"Open\"\r\n                          />\r\n                          <span className=\"text-muted-foreground\">to</span>\r\n                          <Input\r\n                            type=\"time\"\r\n                            defaultValue=\"20:00\"\r\n                            className=\"w-24\"\r\n                            placeholder=\"Close\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <Checkbox id={`closed-${key}`} />\r\n                        <Label htmlFor={`closed-${key}`} className=\"text-sm text-muted-foreground\">\r\n                          Closed\r\n                        </Label>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div className=\"flex justify-end mt-4\">\r\n                  <Button>\r\n                    <Save className=\"w-4 h-4 mr-2\" />\r\n                    Save Hours\r\n                  </Button>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </TabsContent>\r\n\r\n          {/* Pay Plans Tab */}\r\n          <TabsContent value=\"payplans\" className=\"space-y-6\">\r\n            <EnhancedPayPlanManager dealershipId={selectedDealership.id} isGroupAdmin={true} />\r\n          </TabsContent>\r\n\r\n          {/* Settings Tab */}\r\n          <TabsContent value=\"settings\" className=\"space-y-6\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Dealership Information</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"grid md:grid-cols-2 gap-4\">\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"dealership-name\">Dealership Name</Label>\r\n                    <Input\r\n                      id=\"dealership-name\"\r\n                      defaultValue={selectedDealership.name}\r\n                      placeholder=\"Dealership Name\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"dealership-location\">Location</Label>\r\n                    <Input\r\n                      id=\"dealership-location\"\r\n                      defaultValue={selectedDealership.location}\r\n                      placeholder=\"City, State\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"dealership-phone\">Phone Number</Label>\r\n                    <Input\r\n                      id=\"dealership-phone\"\r\n                      defaultValue={selectedDealership.phone}\r\n                      placeholder=\"(555) 123-4567\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"dealership-email\">Email</Label>\r\n                    <Input\r\n                      id=\"dealership-email\"\r\n                      defaultValue={selectedDealership.email}\r\n                      placeholder=\"info@dealership.com\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <Button>\r\n                  <Save className=\"w-4 h-4 mr-2\" />\r\n                  Save Changes\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </TabsContent>\r\n        </Tabs>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Main dealership list view\r\n  return (\r\n    <div className=\"container mx-auto p-6 space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold tracking-tight\">Group Admin Dashboard</h1>\r\n          <p className=\"text-muted-foreground\">Manage and configure your dealership group</p>\r\n        </div>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <Badge variant=\"outline\" className=\"px-3 py-1\">\r\n            <Building2 className=\"w-4 h-4 mr-1\" />\r\n            Group Admin\r\n          </Badge>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Top Metrics Cards - 4 boxes as requested */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        {/* Box 1: Number of Dealerships */}\r\n        <Card>\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Number of Dealerships</CardTitle>\r\n            <Building2 className=\"h-4 w-4 text-muted-foreground\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{groupMetrics.total_dealerships}</div>\r\n            <p className=\"text-xs text-muted-foreground\">Active dealership locations</p>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Box 2: Total Users */}\r\n        <Card>\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Total Users</CardTitle>\r\n            <Users className=\"h-4 w-4 text-muted-foreground\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{groupMetrics.total_users}</div>\r\n            <p className=\"text-xs text-muted-foreground\">Staff across all dealerships</p>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Box 3: Total Vehicles Sold MTD */}\r\n        <Card>\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Total Vehicles Sold MTD</CardTitle>\r\n            <Car className=\"h-4 w-4 text-muted-foreground\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{groupMetrics.monthly_vehicles_sold}</div>\r\n            <p className=\"text-xs text-muted-foreground\">Month to date sales</p>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Box 4: TBD - Using Group Revenue for now */}\r\n        <Card>\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">TBD Metric</CardTitle>\r\n            <TrendingUp className=\"h-4 w-4 text-muted-foreground\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{formatCurrency(groupMetrics.total_revenue)}</div>\r\n            <p className=\"text-xs text-muted-foreground\">To be determined</p>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Dealership Configuration Cards */}\r\n      <div className=\"space-y-4\">\r\n        <h2 className=\"text-2xl font-semibold\">Dealership Configuration</h2>\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6\">\r\n          {dealerships.map(dealership => (\r\n            <Card key={dealership.id} className=\"hover:shadow-lg transition-shadow\">\r\n              <CardHeader>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <CardTitle className=\"text-lg flex items-center\">\r\n                      {dealership.name}\r\n                      {!dealership.is_configured && (\r\n                        <Badge variant=\"destructive\" className=\"ml-2 text-xs\">\r\n                          Needs Setup\r\n                        </Badge>\r\n                      )}\r\n                    </CardTitle>\r\n                    <CardDescription className=\"flex items-center\">\r\n                      <MapPin className=\"w-4 h-4 mr-1\" />\r\n                      {dealership.location}\r\n                    </CardDescription>\r\n                  </div>\r\n                  <Settings className=\"w-5 h-5 text-muted-foreground\" />\r\n                </div>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                {/* Staff Metrics */}\r\n                <div>\r\n                  <h4 className=\"text-sm font-medium mb-3 flex items-center\">\r\n                    <Users className=\"w-4 h-4 mr-1\" />\r\n                    Staff Breakdown\r\n                  </h4>\r\n                  <div className=\"grid grid-cols-2 gap-3\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <UserCircle className=\"w-4 h-4 text-blue-500\" />\r\n                      <div>\r\n                        <p className=\"text-sm text-muted-foreground\">Sales People</p>\r\n                        <p className=\"font-semibold\">{dealership.salespeople_count}</p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <Calculator className=\"w-4 h-4 text-green-500\" />\r\n                      <div>\r\n                        <p className=\"text-sm text-muted-foreground\">Finance People</p>\r\n                        <p className=\"font-semibold\">{dealership.finance_count}</p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <Target className=\"w-4 h-4 text-purple-500\" />\r\n                      <div>\r\n                        <p className=\"text-sm text-muted-foreground\">Sales Managers</p>\r\n                        <p className=\"font-semibold\">{dealership.managers_count}</p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <Crown className=\"w-4 h-4 text-yellow-500\" />\r\n                      <div>\r\n                        <p className=\"text-sm text-muted-foreground\">Total Staff</p>\r\n                        <p className=\"font-semibold\">{dealership.total_staff}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Performance Metrics */}\r\n                <div className=\"pt-3 border-t\">\r\n                  <h4 className=\"text-sm font-medium mb-3 flex items-center\">\r\n                    <BarChart3 className=\"w-4 h-4 mr-1\" />\r\n                    Monthly Performance\r\n                  </h4>\r\n                  <div className=\"space-y-2\">\r\n                    <div className=\"flex justify-between items-center\">\r\n                      <span className=\"text-sm text-muted-foreground\">Vehicles Sold:</span>\r\n                      <Badge variant=\"secondary\">{dealership.monthly_sales}</Badge>\r\n                    </div>\r\n                    <div className=\"flex justify-between items-center\">\r\n                      <span className=\"text-sm text-muted-foreground\">Revenue:</span>\r\n                      <Badge variant=\"secondary\">\r\n                        {formatCurrency(dealership.monthly_revenue)}\r\n                      </Badge>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Configuration Status and Actions */}\r\n                <div className=\"pt-3 border-t space-y-2\">\r\n                  {dealership.is_configured ? (\r\n                    <div className=\"flex items-center text-green-600 text-sm\">\r\n                      <Settings className=\"w-4 h-4 mr-1\" />\r\n                      Configuration Complete\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"flex items-center text-orange-600 text-sm\">\r\n                      <Settings className=\"w-4 h-4 mr-1\" />\r\n                      Requires Configuration\r\n                    </div>\r\n                  )}\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    size=\"sm\"\r\n                    className=\"w-full\"\r\n                    onClick={() => handleConfigureDealership(dealership)}\r\n                  >\r\n                    <Settings className=\"w-4 h-4 mr-2\" />\r\n                    Configure Dealership\r\n                  </Button>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { cva, type VariantProps } from 'class-variance-authority';\r\nimport { cn } from '../../lib/utils';\r\n\r\nconst alertVariants = cva(\r\n  'relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground',\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: 'bg-background text-foreground',\r\n        destructive:\r\n          'border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive',\r\n        warning:\r\n          'border-yellow-500/30 bg-yellow-500/10 text-yellow-700 dark:border-yellow-600 [&>svg]:text-yellow-600',\r\n        success:\r\n          'border-green-500/30 bg-green-500/10 text-green-700 dark:border-green-600 [&>svg]:text-green-600',\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: 'default',\r\n    },\r\n  }\r\n);\r\n\r\nconst Alert = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\r\n>(({ className, variant, ...props }, ref) => (\r\n  <div ref={ref} role=\"alert\" className={cn(alertVariants({ variant }), className)} {...props} />\r\n));\r\nAlert.displayName = 'Alert';\r\n\r\nconst AlertTitle = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLHeadingElement>>(\r\n  ({ className, ...props }, ref) => (\r\n    <h5\r\n      ref={ref}\r\n      className={cn('mb-1 font-medium leading-none tracking-tight', className)}\r\n      {...props}\r\n    />\r\n  )\r\n);\r\nAlertTitle.displayName = 'AlertTitle';\r\n\r\nconst AlertDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn('text-sm [&_p]:leading-relaxed', className)} {...props} />\r\n));\r\nAlertDescription.displayName = 'AlertDescription';\r\n\r\nexport { Alert, AlertTitle, AlertDescription };\r\n","import React, { useState, useEffect } from 'react';\r\nimport { supabase, isTestEmail } from '../lib/supabaseClient';\r\nimport { Button } from '../components/ui/button';\r\nimport { Input } from '../components/ui/input';\r\nimport { Card, CardContent, CardHeader, CardTitle, CardFooter } from '../components/ui/card';\r\nimport { Alert, AlertDescription } from '../components/ui/alert';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '../components/ui/tabs';\r\nimport { RefreshCw, Info, AlertCircle } from 'lucide-react';\r\n\r\n// Test account presets\r\nconst TEST_ACCOUNTS = [\r\n  {\r\n    name: 'Master Admin',\r\n    email: 'testadmin@example.com',\r\n    password: 'password123',\r\n    redirectPath: '/master-admin',\r\n    metadata: { role: 'admin', is_admin: true },\r\n  },\r\n  {\r\n    name: 'Group Admin',\r\n    email: 'group1.admin@exampletest.com',\r\n    password: 'password123',\r\n    redirectPath: '/group-admin',\r\n    metadata: { role: 'dealer_group_admin', is_group_admin: true },\r\n  },\r\n  {\r\n    name: 'Dealership Admin',\r\n    email: 'dealer1.admin@exampletest.com',\r\n    password: 'password123',\r\n    redirectPath: '/dashboard/admin',\r\n    metadata: { role: 'dealership_admin', dealership_id: 1 },\r\n  },\r\n  {\r\n    name: 'Sales Manager',\r\n    email: 'sales.manager@exampletest.com',\r\n    password: 'password123',\r\n    redirectPath: '/dashboard/sales-manager',\r\n    metadata: { role: 'sales_manager', dealership_id: 1 },\r\n  },\r\n  {\r\n    name: 'Salesperson',\r\n    email: 'sales@exampletest.com',\r\n    password: 'password123',\r\n    redirectPath: '/dashboard/sales',\r\n    metadata: { role: 'salesperson', dealership_id: 1 },\r\n  },\r\n];\r\n\r\n/**\r\n * Enhanced auth debug page that provides direct login functionality for test accounts\r\n */\r\nconst DebugAuthPage: React.FC = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [authStatus, setAuthStatus] = useState<any>(null);\r\n  const [selectedAccount, setSelectedAccount] = useState(0);\r\n\r\n  // Check current auth status on load\r\n  useEffect(() => {\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const checkAuth = async () => {\r\n    try {\r\n      setAuthStatus(null);\r\n      const { data, error } = await supabase.auth.getSession();\r\n      if (error) {\r\n        console.error('Auth check error:', error);\r\n        setAuthStatus({ error: error.message });\r\n      } else {\r\n        console.log('Auth check result:', data);\r\n        setAuthStatus(data);\r\n      }\r\n    } catch (err) {\r\n      console.error('Exception checking auth:', err);\r\n      setAuthStatus({ error: 'Exception checking auth status' });\r\n    }\r\n  };\r\n\r\n  // Direct login - enhanced version with metadata setting\r\n  const handleDirectLogin = async (usePreset = false) => {\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      setSuccess('');\r\n\r\n      // Get login details - either from form or preset\r\n      const loginEmail = usePreset ? TEST_ACCOUNTS[selectedAccount].email : email;\r\n      const loginPassword = usePreset ? TEST_ACCOUNTS[selectedAccount].password : password;\r\n      const metadata = usePreset ? TEST_ACCOUNTS[selectedAccount].metadata : null;\r\n      const redirectPath = usePreset ? TEST_ACCOUNTS[selectedAccount].redirectPath : null;\r\n\r\n      console.log(`Attempting login for ${loginEmail}`);\r\n\r\n      // Sign out first to ensure clean state\r\n      await supabase.auth.signOut();\r\n\r\n      // Perform login\r\n      const { data, error } = await supabase.auth.signInWithPassword({\r\n        email: loginEmail,\r\n        password: loginPassword,\r\n      });\r\n\r\n      if (error) {\r\n        console.error('Login error:', error);\r\n        setError(error.message);\r\n        return;\r\n      }\r\n\r\n      console.log('Login success:', data);\r\n\r\n      // Set user metadata if needed (mostly for test accounts)\r\n      if (metadata && data.user) {\r\n        try {\r\n          console.log('Setting user metadata:', metadata);\r\n          await supabase.auth.updateUser({ data: metadata });\r\n          setSuccess('User metadata updated successfully');\r\n        } catch (metadataError) {\r\n          console.error('Error setting user metadata:', metadataError);\r\n          // Continue anyway - the login was successful\r\n        }\r\n      }\r\n\r\n      setSuccess('Login successful! Redirecting...');\r\n\r\n      // Special handling for test accounts\r\n      if (isTestEmail(loginEmail)) {\r\n        // If testadmin@example.com - go to master admin\r\n        if (loginEmail === 'testadmin@example.com') {\r\n          setTimeout(() => (window.location.href = '/master-admin'), 1000);\r\n          return;\r\n        }\r\n\r\n        // If group admin - go to group admin\r\n        if (loginEmail.includes('group') && loginEmail.includes('@exampletest.com')) {\r\n          // Set session storage flag as fallback\r\n          sessionStorage.setItem('is_group_admin', 'true');\r\n          setTimeout(() => (window.location.href = '/group-admin'), 1000);\r\n          return;\r\n        }\r\n\r\n        // For other roles, use the redirect path or fall back to dashboard\r\n        setTimeout(() => (window.location.href = redirectPath || '/dashboard'), 1000);\r\n        return;\r\n      }\r\n\r\n      // For non-test accounts, redirect to dashboard\r\n      setTimeout(() => (window.location.href = '/dashboard'), 1000);\r\n    } catch (err) {\r\n      console.error('Login exception:', err);\r\n      setError('Unexpected error during login');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Force sign out and clear storage\r\n  const handleForceSignOut = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      setSuccess('');\r\n\r\n      // Sign out from Supabase\r\n      await supabase.auth.signOut();\r\n\r\n      // Clear all relevant storage\r\n      localStorage.removeItem(`sb-${import.meta.env.VITE_SUPABASE_PROJECT_ID}-auth-token`);\r\n      sessionStorage.removeItem('is_group_admin');\r\n\r\n      setSuccess('Signed out successfully');\r\n      setTimeout(() => window.location.reload(), 1000);\r\n    } catch (err) {\r\n      console.error('Sign out error:', err);\r\n      setError('Error signing out');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen p-4 bg-gray-50\">\r\n      <h1 className=\"text-2xl font-bold mb-2\">Auth Debug Page</h1>\r\n      <p className=\"text-gray-500 mb-8\">\r\n        Use this page to bypass the normal authentication flow for testing\r\n      </p>\r\n\r\n      <div className=\"w-full max-w-2xl mb-8\">\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center justify-between\">\r\n              <span>Current Auth Status</span>\r\n              <Button variant=\"ghost\" size=\"sm\" onClick={checkAuth} disabled={loading}>\r\n                <RefreshCw className=\"h-4 w-4 mr-2\" />\r\n                Refresh\r\n              </Button>\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            {authStatus ? (\r\n              <div className=\"bg-gray-100 p-3 rounded text-xs overflow-auto max-h-48\">\r\n                <pre>{JSON.stringify(authStatus, null, 2)}</pre>\r\n              </div>\r\n            ) : (\r\n              <p>Checking auth status...</p>\r\n            )}\r\n\r\n            {authStatus?.session && (\r\n              <Alert className=\"mt-4 bg-blue-50\">\r\n                <Info className=\"h-4 w-4\" />\r\n                <AlertDescription>\r\n                  You are currently logged in as <strong>{authStatus.session.user.email}</strong>\r\n                </AlertDescription>\r\n              </Alert>\r\n            )}\r\n\r\n            {!authStatus?.session && (\r\n              <Alert className=\"mt-4 bg-amber-50\">\r\n                <AlertCircle className=\"h-4 w-4\" />\r\n                <AlertDescription>You are currently not logged in</AlertDescription>\r\n              </Alert>\r\n            )}\r\n          </CardContent>\r\n          <CardFooter className=\"flex justify-end gap-2\">\r\n            <Button variant=\"outline\" onClick={handleForceSignOut} disabled={loading}>\r\n              Force Sign Out\r\n            </Button>\r\n          </CardFooter>\r\n        </Card>\r\n      </div>\r\n\r\n      <div className=\"w-full max-w-2xl\">\r\n        <Tabs defaultValue=\"presets\">\r\n          <TabsList className=\"grid grid-cols-2\">\r\n            <TabsTrigger value=\"presets\">Test Account Presets</TabsTrigger>\r\n            <TabsTrigger value=\"custom\">Custom Login</TabsTrigger>\r\n          </TabsList>\r\n\r\n          <TabsContent value=\"presets\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Login with Test Account</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium mb-2\">Select Test Account</label>\r\n                    <select\r\n                      className=\"w-full p-2 border border-gray-300 rounded-md\"\r\n                      value={selectedAccount}\r\n                      onChange={e => setSelectedAccount(Number(e.target.value))}\r\n                    >\r\n                      {TEST_ACCOUNTS.map((account, index) => (\r\n                        <option key={index} value={index}>\r\n                          {account.name} ({account.email})\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"bg-blue-50 p-3 rounded-md text-sm\">\r\n                    <p>\r\n                      <strong>Email:</strong> {TEST_ACCOUNTS[selectedAccount].email}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Password:</strong> {TEST_ACCOUNTS[selectedAccount].password}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Role:</strong> {TEST_ACCOUNTS[selectedAccount].metadata.role}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Redirects to:</strong> {TEST_ACCOUNTS[selectedAccount].redirectPath}\r\n                    </p>\r\n                  </div>\r\n\r\n                  {error && (\r\n                    <div className=\"bg-red-50 text-red-600 p-3 rounded-md text-sm\">{error}</div>\r\n                  )}\r\n                  {success && (\r\n                    <div className=\"bg-green-50 text-green-600 p-3 rounded-md text-sm\">\r\n                      {success}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </CardContent>\r\n              <CardFooter>\r\n                <Button\r\n                  onClick={() => handleDirectLogin(true)}\r\n                  disabled={loading}\r\n                  className=\"w-full\"\r\n                >\r\n                  {loading ? 'Logging in...' : 'Login with Selected Account'}\r\n                </Button>\r\n              </CardFooter>\r\n            </Card>\r\n          </TabsContent>\r\n\r\n          <TabsContent value=\"custom\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Custom Login</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium mb-1\">Email</label>\r\n                    <Input\r\n                      type=\"email\"\r\n                      value={email}\r\n                      onChange={e => setEmail(e.target.value)}\r\n                      placeholder=\"email@example.com\"\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium mb-1\">Password</label>\r\n                    <Input\r\n                      type=\"password\"\r\n                      value={password}\r\n                      onChange={e => setPassword(e.target.value)}\r\n                      placeholder=\"password\"\r\n                    />\r\n                  </div>\r\n                  {error && (\r\n                    <div className=\"bg-red-50 text-red-600 p-3 rounded-md text-sm\">{error}</div>\r\n                  )}\r\n                  {success && (\r\n                    <div className=\"bg-green-50 text-green-600 p-3 rounded-md text-sm\">\r\n                      {success}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </CardContent>\r\n              <CardFooter>\r\n                <Button\r\n                  onClick={() => handleDirectLogin(false)}\r\n                  disabled={loading}\r\n                  className=\"w-full\"\r\n                >\r\n                  {loading ? 'Logging in...' : 'Login Directly'}\r\n                </Button>\r\n              </CardFooter>\r\n            </Card>\r\n          </TabsContent>\r\n        </Tabs>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DebugAuthPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { supabase } from '../../lib/supabaseClient';\r\n\r\ninterface AuthDebugInfoProps {\r\n  show?: boolean;\r\n}\r\n\r\nexport const AuthDebugger: React.FC<AuthDebugInfoProps> = ({ show = true }) => {\r\n  const [showDebug, setShowDebug] = useState(show);\r\n  const [storedSession, setStoredSession] = useState<any>(null);\r\n  const [rawLocalStorage, setRawLocalStorage] = useState<string>('');\r\n  const [authLog, setAuthLog] = useState<string[]>([]);\r\n\r\n  const {\r\n    user,\r\n    role,\r\n    loading,\r\n    hasSession,\r\n    authCheckComplete,\r\n    dealershipId,\r\n    userRole,\r\n    isGroupAdmin,\r\n    error,\r\n  } = useAuth();\r\n\r\n  // Fetch session from localStorage on component mount\r\n  useEffect(() => {\r\n    try {\r\n      // Add log entry\r\n      setAuthLog(prev => [...prev, `AuthDebugger initialized at ${new Date().toISOString()}`]);\r\n\r\n      // Get raw localStorage content\r\n      const rawContent = {};\r\n      for (let i = 0; i < localStorage.length; i++) {\r\n        const key = localStorage.key(i);\r\n        if (key) {\r\n          try {\r\n            const value = localStorage.getItem(key);\r\n            rawContent[key] = value;\r\n          } catch (err) {\r\n            console.error(`Error reading localStorage key ${key}:`, err);\r\n          }\r\n        }\r\n      }\r\n      setRawLocalStorage(JSON.stringify(rawContent, null, 2));\r\n\r\n      // Try to get specific session data\r\n      const sb_session = localStorage.getItem(\r\n        'sb-' + import.meta.env.VITE_SUPABASE_PROJECT_ID + '-auth-token'\r\n      );\r\n      if (sb_session) {\r\n        try {\r\n          setStoredSession(JSON.parse(sb_session));\r\n          setAuthLog(prev => [...prev, `Found session data in localStorage`]);\r\n        } catch (err) {\r\n          console.error('Error parsing session data:', err);\r\n          setAuthLog(prev => [...prev, `Error parsing session data: ${err.message}`]);\r\n        }\r\n      } else {\r\n        setAuthLog(prev => [...prev, `No session found in localStorage`]);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error accessing localStorage:', err);\r\n      setAuthLog(prev => [...prev, `Error accessing localStorage: ${err.message}`]);\r\n    }\r\n  }, []);\r\n\r\n  // Log state changes\r\n  useEffect(() => {\r\n    setAuthLog(prev => [\r\n      ...prev,\r\n      `Auth state update at ${new Date().toISOString()} - loading: ${loading}, hasSession: ${hasSession}, authCheckComplete: ${authCheckComplete}`,\r\n    ]);\r\n  }, [loading, hasSession, authCheckComplete]);\r\n\r\n  if (!showDebug) {\r\n    return (\r\n      <div\r\n        className=\"fixed bottom-4 right-4 p-2 bg-yellow-100 rounded shadow cursor-pointer\"\r\n        onClick={() => setShowDebug(true)}\r\n      >\r\n        Show Auth Debug\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Function to fix auth issues\r\n  const forceAuthRecheck = async () => {\r\n    setAuthLog(prev => [...prev, `Forcing auth recheck at ${new Date().toISOString()}`]);\r\n\r\n    try {\r\n      // Get current session\r\n      const { data, error } = await supabase.auth.getSession();\r\n\r\n      if (error) {\r\n        setAuthLog(prev => [...prev, `Error getting session: ${error.message}`]);\r\n        return;\r\n      }\r\n\r\n      if (data?.session) {\r\n        setAuthLog(prev => [\r\n          ...prev,\r\n          `Session exists but not properly recognized by app, fixing...`,\r\n        ]);\r\n        // Manually set localStorage\r\n        const sessionString = JSON.stringify({\r\n          access_token: data.session.access_token,\r\n          refresh_token: data.session.refresh_token,\r\n          expires_at: Math.floor(Date.now() / 1000) + 3600,\r\n        });\r\n\r\n        // Directly set localStorage\r\n        localStorage.setItem(\r\n          'sb-' + import.meta.env.VITE_SUPABASE_PROJECT_ID + '-auth-token',\r\n          sessionString\r\n        );\r\n        setAuthLog(prev => [...prev, `Session manually updated in localStorage`]);\r\n\r\n        // Force reload\r\n        window.location.reload();\r\n      } else {\r\n        setAuthLog(prev => [...prev, `No active session found`]);\r\n      }\r\n    } catch (err) {\r\n      setAuthLog(prev => [...prev, `Error in auth recheck: ${err.message}`]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black/80 text-white p-4 z-50 overflow-auto\">\r\n      <div className=\"max-w-3xl mx-auto bg-gray-900 p-4 rounded-lg\">\r\n        <div className=\"flex justify-between mb-4\">\r\n          <h2 className=\"text-xl font-bold\">Authentication Debugger</h2>\r\n          <button\r\n            className=\"bg-gray-700 hover:bg-gray-600 px-3 py-1 rounded\"\r\n            onClick={() => setShowDebug(false)}\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n          <div className=\"bg-gray-800 p-3 rounded\">\r\n            <h3 className=\"font-bold mb-2\">Authentication State</h3>\r\n            <div className=\"space-y-1 text-sm\">\r\n              <p>\r\n                <span className=\"text-gray-400\">Loading:</span> {loading ? '✓' : '✗'}\r\n              </p>\r\n              <p>\r\n                <span className=\"text-gray-400\">Auth Check Complete:</span>{' '}\r\n                {authCheckComplete ? '✓' : '✗'}\r\n              </p>\r\n              <p>\r\n                <span className=\"text-gray-400\">Has Session:</span> {hasSession ? '✓' : '✗'}\r\n              </p>\r\n              <p>\r\n                <span className=\"text-gray-400\">User:</span> {user ? user.email : 'Not logged in'}\r\n              </p>\r\n              <p>\r\n                <span className=\"text-gray-400\">Role:</span> {role || 'Unknown'}\r\n              </p>\r\n              <p>\r\n                <span className=\"text-gray-400\">User Role:</span> {userRole || 'Unknown'}\r\n              </p>\r\n              <p>\r\n                <span className=\"text-gray-400\">Is Group Admin:</span> {isGroupAdmin ? '✓' : '✗'}\r\n              </p>\r\n              <p>\r\n                <span className=\"text-gray-400\">Dealership ID:</span> {dealershipId || 'None'}\r\n              </p>\r\n              <p>\r\n                <span className=\"text-gray-400\">Error:</span>\r\n                {error ? <span className=\"text-red-400\">{error.message}</span> : 'None'}\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-gray-800 p-3 rounded\">\r\n            <h3 className=\"font-bold mb-2\">Session Storage</h3>\r\n            <p className=\"mb-2 text-sm\">\r\n              {storedSession\r\n                ? `Session expires: ${new Date(\r\n                    storedSession.expires_at * 1000\r\n                  ).toLocaleTimeString()}`\r\n                : 'No session in localStorage'}\r\n            </p>\r\n            <button\r\n              className=\"bg-blue-700 hover:bg-blue-600 px-3 py-1 rounded text-sm\"\r\n              onClick={forceAuthRecheck}\r\n            >\r\n              Force Auth Recheck\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 gap-4\">\r\n          <div className=\"bg-gray-800 p-3 rounded\">\r\n            <h3 className=\"font-bold mb-2\">Auth Event Log</h3>\r\n            <div className=\"h-32 overflow-y-auto text-xs font-mono bg-black/50 p-2 rounded\">\r\n              {authLog.map((log, i) => (\r\n                <div key={i} className=\"mb-1\">\r\n                  {log}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-gray-800 p-3 rounded\">\r\n            <h3 className=\"font-bold mb-2\">Raw Local Storage</h3>\r\n            <pre className=\"h-32 overflow-auto text-xs bg-black/50 p-2 rounded\">\r\n              {rawLocalStorage}\r\n            </pre>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthDebugger;\r\n","import React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { supabase, isTestEmail } from '../../lib/supabaseClient';\nimport { isAuthenticated } from '../../lib/directAuth';\nimport { Loader2 } from 'lucide-react';\n\n/**\n * TestUserMiddleware checks if the current user is a test user\n * and handles routing and metadata appropriately to bypass\n * the regular authentication flow issues.\n */\nconst TestUserMiddleware: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [checking, setChecking] = useState(true);\n  const [isTestUser, setIsTestUser] = useState(false);\n  const [hasProcessed, setHasProcessed] = useState(false); // Prevent infinite loops\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // 🔑 EARLY EXIT – place right here, before the first useEffect\n  if (isAuthenticated()) {\n    return <>{children}</>;\n  }\n\n  // Add debug function to window for clearing processing flags\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      (window as any).clearTestUserProcessingFlags = () => {\n        const keys = Object.keys(localStorage).filter(key =>\n          key.startsWith('test_user_processed_')\n        );\n        keys.forEach(key => localStorage.removeItem(key));\n        console.log('[TestUserMiddleware] Cleared processing flags:', keys);\n      };\n    }\n  }, []);\n\n  useEffect(() => {\n    // Only run once and prevent infinite loops\n    if (hasProcessed) {\n      setChecking(false);\n      return;\n    }\n\n    const checkTestUser = async () => {\n      try {\n        console.log('[TestUserMiddleware] Checking for test user...');\n\n        // Check if direct auth is active - if so, bypass this middleware\n        if (isAuthenticated && isAuthenticated()) {\n          console.log('[TestUserMiddleware] Direct auth active, bypassing');\n          setChecking(false);\n          setHasProcessed(true);\n          return;\n        }\n\n        // Get current session\n        const { data: sessionData, error: sessionError } = await supabase.auth.getSession();\n\n        if (sessionError) {\n          console.error('[TestUserMiddleware] Session error:', sessionError);\n          setChecking(false);\n          setHasProcessed(true);\n          return;\n        }\n\n        if (!sessionData.session) {\n          console.log('[TestUserMiddleware] No active session');\n          setChecking(false);\n          setHasProcessed(true);\n          return;\n        }\n\n        const user = sessionData.session.user;\n        const userEmail = user?.email || '';\n\n        if (!isTestEmail(userEmail)) {\n          console.log('[TestUserMiddleware] Not a test user:', userEmail);\n          setChecking(false);\n          setHasProcessed(true);\n          return;\n        }\n\n        console.log('[TestUserMiddleware] Test user detected:', userEmail);\n\n        // Add specific debug for testfinance users\n        if (userEmail === 'testfinance@example.com' || userEmail === 'finance1@exampletest.com') {\n          console.warn('[TestUserMiddleware] FINANCE USER DETECTED:', {\n            email: userEmail,\n            currentPath: location.pathname,\n            shouldRedirectTo: '/dashboard/single-finance',\n          });\n        }\n\n        setIsTestUser(true);\n\n        // Check if we've already processed this user to prevent repeated updates\n        const processingKey = `test_user_processed_${userEmail}`;\n        if (typeof window !== 'undefined' && localStorage.getItem(processingKey)) {\n          console.log('[TestUserMiddleware] User already processed, skipping metadata update');\n          setChecking(false);\n          setHasProcessed(true);\n          return;\n        }\n\n        // Special handling for testadmin@example.com\n        if (userEmail === 'testadmin@example.com') {\n          console.log('[TestUserMiddleware] Master admin user detected');\n\n          // Update user metadata only once\n          try {\n            await supabase.auth.updateUser({\n              data: {\n                role: 'admin',\n                is_admin: true,\n              },\n            });\n            console.log('[TestUserMiddleware] Updated metadata for master admin');\n\n            // Mark as processed\n            if (typeof window !== 'undefined') {\n              localStorage.setItem(processingKey, 'true');\n            }\n          } catch (metadataError) {\n            console.error('[TestUserMiddleware] Error updating metadata:', metadataError);\n          }\n\n          // If not already on master-admin page, redirect\n          if (location.pathname !== '/master-admin') {\n            console.log('[TestUserMiddleware] Redirecting master admin to /master-admin');\n            navigate('/master-admin', { replace: true });\n          }\n        }\n        // Handle finance manager test users\n        else if (\n          userEmail.includes('finance') ||\n          userEmail === 'testfinance@example.com' ||\n          userEmail === 'finance1@exampletest.com'\n        ) {\n          console.log('[TestUserMiddleware] Finance manager user detected');\n\n          // Update user metadata only once\n          try {\n            await supabase.auth.updateUser({\n              data: {\n                role: 'single_finance_manager',\n                dealership_id: 1,\n              },\n            });\n            console.log('[TestUserMiddleware] Updated metadata for finance manager');\n\n            // Mark as processed\n            if (typeof window !== 'undefined') {\n              localStorage.setItem(processingKey, 'true');\n            }\n          } catch (metadataError) {\n            console.error('[TestUserMiddleware] Error updating metadata:', metadataError);\n          }\n\n          // If not already on single finance dashboard, redirect\n          if (location.pathname !== '/dashboard/single-finance') {\n            console.log(\n              '[TestUserMiddleware] Redirecting finance manager to /dashboard/single-finance'\n            );\n            navigate('/dashboard/single-finance', { replace: true });\n          }\n        }\n        // Handle group admin test users\n        else if (userEmail.includes('group') && userEmail.includes('@exampletest.com')) {\n          console.log('[TestUserMiddleware] Group admin user detected');\n\n          // Update user metadata only once\n          try {\n            await supabase.auth.updateUser({\n              data: {\n                role: 'dealer_group_admin',\n                is_group_admin: true,\n              },\n            });\n            console.log('[TestUserMiddleware] Updated metadata for group admin');\n\n            // Set session storage flag as fallback (check if available)\n            if (typeof window !== 'undefined' && window.sessionStorage) {\n              window.sessionStorage.setItem('is_group_admin', 'true');\n            }\n\n            // Mark as processed\n            if (typeof window !== 'undefined') {\n              localStorage.setItem(processingKey, 'true');\n            }\n          } catch (metadataError) {\n            console.error('[TestUserMiddleware] Error updating metadata:', metadataError);\n          }\n\n          // If not already on group-admin page, redirect\n          if (location.pathname !== '/group-admin') {\n            console.log('[TestUserMiddleware] Redirecting group admin to /group-admin');\n            navigate('/group-admin', { replace: true });\n          }\n        }\n        // Handle other test users based on email pattern\n        else if (userEmail.includes('admin') && userEmail.includes('@exampletest.com')) {\n          console.log('[TestUserMiddleware] Dealership admin user detected');\n\n          // Update user metadata only once\n          try {\n            await supabase.auth.updateUser({\n              data: {\n                role: 'dealership_admin',\n                dealership_id: 1,\n              },\n            });\n            console.log('[TestUserMiddleware] Updated metadata for dealership admin');\n\n            // Mark as processed\n            if (typeof window !== 'undefined') {\n              localStorage.setItem(processingKey, 'true');\n            }\n          } catch (metadataError) {\n            console.error('[TestUserMiddleware] Error updating metadata:', metadataError);\n          }\n\n          // If not already on admin dashboard, redirect\n          if (location.pathname !== '/dashboard/admin') {\n            console.log('[TestUserMiddleware] Redirecting dealership admin to /dashboard/admin');\n            navigate('/dashboard/admin', { replace: true });\n          }\n        }\n\n        setHasProcessed(true);\n        setChecking(false);\n      } catch (error) {\n        console.error('[TestUserMiddleware] Unexpected error:', error);\n        setHasProcessed(true);\n        setChecking(false);\n      }\n    };\n\n    checkTestUser();\n  }, [hasProcessed]); // Only depend on hasProcessed to prevent infinite loops\n\n  // If still checking and it's a test user that needs special handling, show loading\n  if (checking && isTestUser) {\n    return (\n      <div className=\"flex items-center justify-center h-screen\">\n        <div className=\"text-center\">\n          <Loader2 className=\"h-8 w-8 animate-spin mx-auto mb-4\" />\n          <p className=\"text-sm text-gray-500\">Configuring test user access...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Otherwise render children\n  return <>{children}</>;\n};\n\nexport default TestUserMiddleware;\n","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Card, CardHeader, CardTitle, CardContent, CardFooter } from '../components/ui/card';\r\nimport { Button } from '../components/ui/button';\r\nimport {\r\n  TEST_USERS,\r\n  loginWithTestAccount,\r\n  isAuthenticated,\r\n  getCurrentUser,\r\n  getRedirectPath,\r\n  logout,\r\n} from '../lib/directAuth';\r\n\r\nconst DirectLoginPage: React.FC = () => {\r\n  const [selectedUser, setSelectedUser] = useState(0);\r\n  const [message, setMessage] = useState('');\r\n  const [status, setStatus] = useState<'idle' | 'success' | 'error'>('idle');\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  // Check if already logged in\r\n  useEffect(() => {\r\n    if (isAuthenticated()) {\r\n      const user = getCurrentUser();\r\n      if (user) {\r\n        setMessage(`Already logged in as ${user.email}. Redirecting...`);\r\n        setStatus('success');\r\n\r\n        // Redirect after a short delay\r\n        const timer = setTimeout(() => {\r\n          navigate(getRedirectPath(user));\r\n        }, 1500);\r\n\r\n        return () => clearTimeout(timer);\r\n      }\r\n    }\r\n  }, [navigate]);\r\n\r\n  const handleLogin = () => {\r\n    setLoading(true);\r\n    setMessage('');\r\n    setStatus('idle');\r\n\r\n    const selectedEmail = TEST_USERS[selectedUser].email;\r\n    const result = loginWithTestAccount(selectedEmail);\r\n\r\n    if (result.success) {\r\n      setMessage(result.message + ' - Redirecting...');\r\n      setStatus('success');\r\n\r\n      // Get the user and find the correct redirect path\r\n      const user = getCurrentUser();\r\n      if (user) {\r\n        setTimeout(() => {\r\n          navigate(getRedirectPath(user));\r\n        }, 1500);\r\n      }\r\n    } else {\r\n      setMessage(result.message);\r\n      setStatus('error');\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    setMessage('Logged out successfully');\r\n    setStatus('success');\r\n    window.location.reload(); // Reload to clear any cached state\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-50 p-4\">\r\n      <div className=\"w-full max-w-md\">\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"text-2xl text-center\">Direct Login</CardTitle>\r\n            <p className=\"text-center text-gray-500 text-sm\">\r\n              Simplified login without Supabase authentication\r\n            </p>\r\n          </CardHeader>\r\n\r\n          <CardContent className=\"space-y-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-2\">Select Test Account</label>\r\n              <select\r\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\r\n                value={selectedUser}\r\n                onChange={e => setSelectedUser(Number(e.target.value))}\r\n                disabled={loading}\r\n              >\r\n                {TEST_USERS.map((user, index) => (\r\n                  <option key={index} value={index}>\r\n                    {user.name || user.email} ({user.role})\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"bg-gray-100 p-3 rounded text-sm\">\r\n              <div>\r\n                <strong>Email:</strong> {TEST_USERS[selectedUser].email}\r\n              </div>\r\n              <div>\r\n                <strong>Role:</strong> {TEST_USERS[selectedUser].role}\r\n              </div>\r\n              <div>\r\n                <strong>Redirects to:</strong> {getRedirectPath(TEST_USERS[selectedUser])}\r\n              </div>\r\n            </div>\r\n\r\n            {message && (\r\n              <div\r\n                className={`p-3 rounded text-sm ${\r\n                  status === 'success'\r\n                    ? 'bg-green-100 text-green-800'\r\n                    : status === 'error'\r\n                    ? 'bg-red-100 text-red-800'\r\n                    : 'bg-blue-100 text-blue-800'\r\n                }`}\r\n              >\r\n                {message}\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n\r\n          <CardFooter className=\"flex justify-between\">\r\n            <Button onClick={handleLogin} disabled={loading} className=\"w-full mr-2\">\r\n              {loading ? 'Logging in...' : 'Login as Selected User'}\r\n            </Button>\r\n\r\n            {isAuthenticated() && (\r\n              <Button onClick={handleLogout} variant=\"outline\" className=\"w-1/3\">\r\n                Log Out\r\n              </Button>\r\n            )}\r\n          </CardFooter>\r\n        </Card>\r\n\r\n        <div className=\"mt-4 text-center\">\r\n          <a href=\"/\" className=\"text-sm text-blue-600 hover:text-blue-800 hover:underline\">\r\n            Return to regular login\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DirectLoginPage;\r\n","import React, { useEffect, useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { isAuthenticated, getCurrentUser, getRedirectPath, logout } from '../../lib/directAuth';\n\n/**\n * DirectAuthProvider detects if the user is authenticated using the direct auth system\n * and redirects them to the appropriate dashboard.\n */\nconst DirectAuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [checking, setChecking] = useState(true);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    // Check if logout is in progress\n    const logoutInProgress = localStorage.getItem('logout_in_progress') === 'true';\n    if (logoutInProgress) {\n      console.log('[DirectAuthProvider] Logout in progress, skipping redirect');\n      setChecking(false);\n      return;\n    }\n\n    // Check for forced redirect from test login\n    const forceRedirectTo = localStorage.getItem('force_redirect_after_login');\n    const forceRedirectTimestamp = localStorage.getItem('force_redirect_timestamp');\n\n    // Only use the redirect if it was set in the last 10 seconds\n    const isRecentRedirect =\n      forceRedirectTimestamp && Date.now() - parseInt(forceRedirectTimestamp) < 10000;\n\n    if (forceRedirectTo && isRecentRedirect) {\n      console.log('[DirectAuthProvider] Force redirect detected, navigating to:', forceRedirectTo);\n      // Clear the flags to prevent redirect loops\n      localStorage.removeItem('force_redirect_after_login');\n      localStorage.removeItem('force_redirect_timestamp');\n\n      navigate(forceRedirectTo, { replace: true });\n      setChecking(false);\n      return;\n    }\n\n    // Skip the check if we're on a special page or path\n    const excludedPaths = [\n      '/direct-login',\n      '/force-login',\n      '/logout',\n      '/reset',\n      '/',\n      '/auth',\n      '/dashboard-selector',\n      '/deal-log',\n      '/finance-deal-log',\n      '/single-finance-deal-log',\n      '/finance-manager/log-deal',\n    ];\n    if (excludedPaths.includes(location.pathname)) {\n      console.log(`[DirectAuthProvider] Skipping redirect for excluded path: ${location.pathname}`);\n      setChecking(false);\n      return;\n    }\n\n    // Skip redirection if a special query parameter is present\n    const searchParams = new URLSearchParams(location.search);\n    if (\n      searchParams.has('noredirect') ||\n      searchParams.has('forcelogin') ||\n      searchParams.has('reset')\n    ) {\n      console.log('[DirectAuthProvider] Skipping redirect due to special parameter');\n      setChecking(false);\n      return;\n    }\n\n    // Check if we have a direct auth user\n    if (isAuthenticated()) {\n      const user = getCurrentUser();\n      if (user) {\n        console.log('[DirectAuthProvider] Direct auth user detected:', user.email);\n\n        // Check if this is a dashboard-selector originated session\n        const isDashboardSelectorSession = localStorage.getItem('directauth_timestamp') !== null;\n        if (isDashboardSelectorSession) {\n          console.log(\n            '[DirectAuthProvider] Dashboard selector session detected - allowing specific dashboard access'\n          );\n\n          // If we're trying to access a dashboard path or deal-log, allow it regardless of role\n          if (\n            location.pathname.startsWith('/dashboard/') ||\n            location.pathname === '/master-admin' ||\n            location.pathname === '/group-admin' ||\n            location.pathname === '/avp-full-dashboard' ||\n            location.pathname === '/deal-log'\n          ) {\n            console.log('[DirectAuthProvider] Allowing access to path:', location.pathname);\n            setChecking(false);\n            return;\n          }\n        }\n\n        // If we're accessing the regular login page or auth page, redirect to the appropriate dashboard\n        if (location.pathname === '/' || location.pathname === '/auth') {\n          console.log('[DirectAuthProvider] Redirecting to dashboard:', getRedirectPath(user));\n          navigate(getRedirectPath(user), { replace: true });\n        }\n        // If we're trying to access a protected route, check if it matches the user's role\n        else {\n          const correctPath = getRedirectPath(user);\n          // Consider /deal-log as a valid path for finance managers\n          const isFinanceManager = user.role?.toLowerCase() === 'finance_manager';\n          const isDealLogPath = location.pathname === '/deal-log';\n\n          // Allow deal-log path for finance managers\n          if (isFinanceManager && isDealLogPath) {\n            console.log('[DirectAuthProvider] Allowing finance manager to access deal-log path');\n            setChecking(false);\n            return;\n          }\n\n          // Allow both AVP dashboard paths for area_vice_president users\n          const isAreaVicePresident = user.role === 'area_vice_president';\n          const isAVPDashboardPath = location.pathname === '/avp-full-dashboard';\n\n          if (isAreaVicePresident && isAVPDashboardPath) {\n            console.log('[DirectAuthProvider] Allowing AVP user to access:', location.pathname);\n            setChecking(false);\n            return;\n          }\n\n          // Check if current path is the correct path OR a sub-route of the correct path\n          if (\n            location.pathname !== correctPath &&\n            !location.pathname.startsWith(correctPath + '/')\n          ) {\n            console.log(`[DirectAuthProvider] Current path doesn't match user role, redirecting:`, {\n              current: location.pathname,\n              correct: correctPath,\n            });\n            navigate(correctPath, { replace: true });\n          }\n        }\n      }\n    }\n\n    setChecking(false);\n  }, [navigate, location.pathname, location.search]);\n\n  // Show minimal loading state while checking\n  if (checking) {\n    return (\n      <div className=\"flex justify-center items-center h-screen\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900\"></div>\n      </div>\n    );\n  }\n\n  return <>{children}</>;\n};\n\nexport default DirectAuthProvider;\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardHeader, CardTitle, CardContent, CardFooter } from '../components/ui/card';\r\nimport { Button } from '../components/ui/button';\r\nimport { Alert, AlertDescription } from '../components/ui/alert';\r\nimport { AlertCircle, Info } from 'lucide-react';\r\nimport { TEST_USERS, loginWithTestAccount, getRedirectPath } from '../lib/directAuth';\r\n\r\n// Hard-coded auth tokens for testing - these won't be real tokens but will trick the app\r\nconst ACCESS_TOKEN =\r\n  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNhbXBsZSIsInJvbGUiOiJhdXRoZW50aWNhdGVkIiwiaWF0IjoxNjE2NDI4ODAwLCJleHAiOjE2MTY0NzIwMDB9.EXAMPLE';\r\nconst REFRESH_TOKEN = 'refresh-token-example';\r\n\r\n/**\r\n * This page forces authentication by directly manipulating localStorage\r\n * to inject tokens that Supabase will recognize as a valid session\r\n */\r\nconst ForceLoginPage: React.FC = () => {\r\n  const [selectedUser, setSelectedUser] = useState(0);\r\n  const [message, setMessage] = useState('');\r\n  const [status, setStatus] = useState<'idle' | 'success' | 'error'>('idle');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check URL for a special parameter to clear all auth data\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    if (searchParams.has('reset')) {\r\n      handleCompleteReset();\r\n    }\r\n  }, []);\r\n\r\n  const handleCompleteReset = () => {\r\n    try {\r\n      // Clear localStorage and sessionStorage\r\n      localStorage.clear();\r\n      sessionStorage.clear();\r\n\r\n      // Clear any cookies\r\n      document.cookie.split(';').forEach(cookie => {\r\n        const [name] = cookie.trim().split('=');\r\n        document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;\r\n      });\r\n\r\n      setMessage(\r\n        'All authentication data has been completely cleared. You can now use any login option.'\r\n      );\r\n      setStatus('success');\r\n    } catch (err) {\r\n      console.error('Reset error:', err);\r\n      setMessage('Error while resetting: ' + String(err));\r\n      setStatus('error');\r\n    }\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    try {\r\n      setLoading(true);\r\n      setMessage('');\r\n      setStatus('idle');\r\n\r\n      // 1. Log in with direct auth first\r\n      const userToLogin = TEST_USERS[selectedUser];\r\n      loginWithTestAccount(userToLogin.email);\r\n\r\n      // 2. Get storage key for Supabase\r\n      const projectRef = import.meta.env.VITE_SUPABASE_PROJECT_ID || 'dasboard';\r\n      const storageKey = `sb-${projectRef}-auth-token`;\r\n\r\n      // 3. Create fake session data\r\n      const fakeSession = {\r\n        access_token: ACCESS_TOKEN,\r\n        refresh_token: REFRESH_TOKEN,\r\n        expires_at: Date.now() + 3600 * 1000, // 1 hour from now\r\n        expires_in: 3600,\r\n        user: {\r\n          id: userToLogin.id,\r\n          email: userToLogin.email,\r\n          role: userToLogin.role,\r\n          user_metadata: {\r\n            name: userToLogin.name,\r\n            role: userToLogin.role,\r\n            is_admin: !!userToLogin.isAdmin,\r\n            is_group_admin: !!userToLogin.isGroupAdmin,\r\n            dealership_id: userToLogin.dealershipId,\r\n          },\r\n        },\r\n      };\r\n\r\n      // 4. Set the session in localStorage\r\n      localStorage.setItem(storageKey, JSON.stringify(fakeSession));\r\n\r\n      // 5. Show success message\r\n      setMessage(`Forced login successful for ${userToLogin.email}. You can now go to:`);\r\n      setStatus('success');\r\n    } catch (err) {\r\n      console.error('Force login error:', err);\r\n      setMessage('Error forcing login: ' + String(err));\r\n      setStatus('error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    try {\r\n      // Clear all localStorage\r\n      localStorage.clear();\r\n      sessionStorage.clear();\r\n\r\n      setMessage('All auth data cleared. You are now logged out.');\r\n      setStatus('success');\r\n\r\n      // Force reload to clear any cached state\r\n      setTimeout(() => window.location.reload(), 1500);\r\n    } catch (err) {\r\n      console.error('Logout error:', err);\r\n      setMessage('Error logging out: ' + String(err));\r\n      setStatus('error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-50 p-4\">\r\n      <div className=\"w-full max-w-md\">\r\n        <Card>\r\n          <CardHeader>\r\n            <div className=\"flex justify-between items-center mb-2\">\r\n              <CardTitle className=\"text-2xl text-center\">Force Login</CardTitle>\r\n              <Button variant=\"destructive\" size=\"sm\" onClick={handleCompleteReset}>\r\n                Reset All Auth\r\n              </Button>\r\n            </div>\r\n            <p className=\"text-center text-gray-500 text-sm\">\r\n              Force authentication by directly manipulating local storage\r\n            </p>\r\n          </CardHeader>\r\n\r\n          <CardContent className=\"space-y-4\">\r\n            <Alert variant=\"destructive\">\r\n              <AlertCircle className=\"h-4 w-4\" />\r\n              <AlertDescription>\r\n                This is an emergency bypass. Use only when all other login methods fail.\r\n              </AlertDescription>\r\n            </Alert>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-2\">Select Test Account</label>\r\n              <select\r\n                className=\"w-full p-2 border border-gray-300 rounded-md\"\r\n                value={selectedUser}\r\n                onChange={e => setSelectedUser(Number(e.target.value))}\r\n                disabled={loading}\r\n              >\r\n                {TEST_USERS.map((user, index) => (\r\n                  <option key={index} value={index}>\r\n                    {user.name || user.email} ({user.role})\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"bg-gray-100 p-3 rounded text-sm\">\r\n              <div>\r\n                <strong>Email:</strong> {TEST_USERS[selectedUser].email}\r\n              </div>\r\n              <div>\r\n                <strong>Role:</strong> {TEST_USERS[selectedUser].role}\r\n              </div>\r\n              <div>\r\n                <strong>Redirects to:</strong> {getRedirectPath(TEST_USERS[selectedUser])}\r\n              </div>\r\n            </div>\r\n\r\n            {message && (\r\n              <div\r\n                className={`p-3 rounded text-sm ${\r\n                  status === 'success'\r\n                    ? 'bg-green-100 text-green-800'\r\n                    : status === 'error'\r\n                    ? 'bg-red-100 text-red-800'\r\n                    : 'bg-blue-100 text-blue-800'\r\n                }`}\r\n              >\r\n                {message}\r\n\r\n                {status === 'success' && (\r\n                  <div className=\"mt-2\">\r\n                    <a\r\n                      href={getRedirectPath(TEST_USERS[selectedUser])}\r\n                      className=\"inline-block bg-green-600 text-white px-3 py-1 rounded mt-1 hover:bg-green-700\"\r\n                    >\r\n                      Go to Dashboard\r\n                    </a>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n\r\n          <CardFooter className=\"flex justify-between gap-2\">\r\n            <Button\r\n              onClick={handleLogin}\r\n              disabled={loading}\r\n              className=\"w-full\"\r\n              variant=\"destructive\"\r\n            >\r\n              {loading ? 'Forcing login...' : 'Force Login'}\r\n            </Button>\r\n\r\n            <Button onClick={handleLogout} variant=\"outline\" className=\"w-1/3\">\r\n              Clear All\r\n            </Button>\r\n          </CardFooter>\r\n        </Card>\r\n\r\n        <div className=\"mt-4 text-center space-y-2\">\r\n          <a\r\n            href=\"/direct-login\"\r\n            className=\"text-sm text-blue-600 hover:text-blue-800 hover:underline block\"\r\n          >\r\n            Try Regular Direct Login\r\n          </a>\r\n          <a href=\"/\" className=\"text-sm text-blue-600 hover:text-blue-800 hover:underline block\">\r\n            Return to Regular Login\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForceLoginPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { supabase } from '../lib/supabaseClient';\r\nimport { logout as directAuthLogout } from '../lib/directAuth';\r\nimport { Loader2 } from 'lucide-react';\r\nimport { signOut } from '../lib/apiService';\r\n\r\nconst LogoutPage: React.FC = () => {\r\n  const [message, setMessage] = useState('Signing you out...');\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [isComplete, setIsComplete] = useState(false);\r\n  const [logoutSteps, setLogoutSteps] = useState<string[]>([]);\r\n  const navigate = useNavigate();\r\n\r\n  // Helper function to add a logout step with timestamp\r\n  const addLogoutStep = (step: string) => {\r\n    const timestamp = new Date().toISOString();\r\n    const stepWithTime = `${timestamp} - ${step}`;\r\n    console.log(`[LogoutPage] ${step}`);\r\n    setLogoutSteps(prev => [...prev, stepWithTime]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Function to check Supabase session\r\n    const checkSession = async () => {\r\n      try {\r\n        const { data, error } = await supabase.auth.getSession();\r\n        const hasSession = !!data?.session;\r\n\r\n        console.log('[LogoutPage] Session check:', {\r\n          hasSession,\r\n          error: error?.message || null,\r\n          timestamp: new Date().toISOString(),\r\n          sessionExpiry: data?.session?.expires_at\r\n            ? new Date(data.session.expires_at * 1000).toISOString()\r\n            : null,\r\n        });\r\n\r\n        return hasSession;\r\n      } catch (e) {\r\n        console.error('[LogoutPage] Error checking session:', e);\r\n        return false;\r\n      }\r\n    };\r\n\r\n    // Function to clear all browser storage\r\n    const clearAllStorage = () => {\r\n      try {\r\n        addLogoutStep('Clearing all storage');\r\n\r\n        // Clear redirect flags first to prevent redirect loops\r\n        localStorage.removeItem('force_redirect_after_login');\r\n        localStorage.removeItem('force_redirect_timestamp');\r\n        localStorage.removeItem('logout_in_progress');\r\n\r\n        // Get localStorage keys for logging\r\n        const localStorageKeys = Object.keys(localStorage);\r\n        console.log('[LogoutPage] LocalStorage keys before clearing:', localStorageKeys);\r\n\r\n        // Clear localStorage\r\n        localStorage.clear();\r\n\r\n        // Clear sessionStorage\r\n        sessionStorage.clear();\r\n\r\n        // Clear cookies (non-HTTP only cookies)\r\n        const cookies = document.cookie.split(';');\r\n        console.log('[LogoutPage] Cookies before clearing:', cookies);\r\n\r\n        cookies.forEach(cookie => {\r\n          const [name] = cookie.trim().split('=');\r\n          document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;\r\n        });\r\n\r\n        addLogoutStep('All storage cleared successfully');\r\n        return true;\r\n      } catch (e) {\r\n        console.error('[LogoutPage] Error clearing storage:', e);\r\n        addLogoutStep(`Error clearing storage: ${e instanceof Error ? e.message : String(e)}`);\r\n        return false;\r\n      }\r\n    };\r\n\r\n    const performLogout = async () => {\r\n      try {\r\n        // First check if we have a session\r\n        addLogoutStep('Starting logout process');\r\n\r\n        const hasInitialSession = await checkSession();\r\n        addLogoutStep(\r\n          `Initial session check: ${\r\n            hasInitialSession ? 'Active session found' : 'No active session'\r\n          }`\r\n        );\r\n\r\n        if (!hasInitialSession) {\r\n          addLogoutStep('No active session found, just clearing storage');\r\n          clearAllStorage();\r\n          setMessage('No active session. Clearing data and redirecting...');\r\n          setIsComplete(true);\r\n\r\n          setTimeout(() => {\r\n            window.location.href = '/auth?forcelogin=true';\r\n          }, 1000);\r\n          return;\r\n        }\r\n\r\n        // 1. Set logout in progress flag\r\n        localStorage.setItem('logout_in_progress', 'true');\r\n        addLogoutStep('Set logout_in_progress flag');\r\n\r\n        // 2. Try to sign out from Supabase using apiService's signOut method first\r\n        try {\r\n          setMessage('Signing out from Supabase...');\r\n          addLogoutStep('Attempting signOut via apiService');\r\n\r\n          const startTime = Date.now();\r\n          await signOut();\r\n          const duration = Date.now() - startTime;\r\n\r\n          addLogoutStep(`apiService.signOut completed in ${duration}ms`);\r\n        } catch (e) {\r\n          addLogoutStep(\r\n            `Error with apiService.signOut: ${e instanceof Error ? e.message : String(e)}`\r\n          );\r\n\r\n          // Fallback to direct Supabase signOut\r\n          try {\r\n            addLogoutStep('Falling back to direct supabase.auth.signOut');\r\n            const startTime = Date.now();\r\n            const { error: supabaseError } = await supabase.auth.signOut();\r\n            const duration = Date.now() - startTime;\r\n\r\n            if (supabaseError) {\r\n              addLogoutStep(`Direct Supabase signOut error: ${supabaseError.message}`);\r\n            } else {\r\n              addLogoutStep(`Direct Supabase signOut successful in ${duration}ms`);\r\n            }\r\n          } catch (supabaseException) {\r\n            addLogoutStep(\r\n              `Exception during direct Supabase signOut: ${\r\n                supabaseException instanceof Error\r\n                  ? supabaseException.message\r\n                  : String(supabaseException)\r\n              }`\r\n            );\r\n          }\r\n        }\r\n\r\n        // 3. Verify session is gone\r\n        const hasSessionAfterSignOut = await checkSession();\r\n        addLogoutStep(\r\n          `Session check after signOut: ${\r\n            hasSessionAfterSignOut ? 'Session still exists!' : 'Session successfully removed'\r\n          }`\r\n        );\r\n\r\n        // 4. Clear direct auth state\r\n        setMessage('Clearing direct auth session...');\r\n        try {\r\n          directAuthLogout();\r\n          addLogoutStep('Direct auth logout successful');\r\n        } catch (e) {\r\n          addLogoutStep(\r\n            `Error during direct auth logout: ${e instanceof Error ? e.message : String(e)}`\r\n          );\r\n        }\r\n\r\n        // 5. Clear all storage\r\n        setMessage('Clearing browser storage...');\r\n        const storageCleared = clearAllStorage();\r\n        addLogoutStep(`All storage cleared: ${storageCleared ? 'success' : 'failed'}`);\r\n\r\n        // 6. Final check\r\n        const finalSessionCheck = await checkSession();\r\n        addLogoutStep(\r\n          `Final session check: ${\r\n            finalSessionCheck ? 'Session still exists! (unexpected)' : 'No session (expected)'\r\n          }`\r\n        );\r\n\r\n        // 7. Complete\r\n        setMessage('Logout successful! Redirecting...');\r\n        setIsComplete(true);\r\n\r\n        // 8. Redirect after successful logout with a slight delay to ensure UI updates\r\n        setTimeout(() => {\r\n          addLogoutStep('Redirecting to auth page');\r\n          // Force a full page reload to clear any remaining state\r\n          window.location.href = '/auth?forcelogin=true';\r\n        }, 1000);\r\n      } catch (error) {\r\n        console.error('[LogoutPage] Error during logout process:', error);\r\n        addLogoutStep(\r\n          `Logout process error: ${error instanceof Error ? error.message : String(error)}`\r\n        );\r\n\r\n        setError(`Logout failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n        setMessage('Error occurred during logout');\r\n\r\n        // Even if we encounter an error, try to redirect after a timeout\r\n        setTimeout(() => {\r\n          addLogoutStep('Redirecting after error');\r\n          window.location.href = '/auth?forcelogin=true';\r\n        }, 2000);\r\n      }\r\n    };\r\n\r\n    performLogout();\r\n\r\n    // Set a maximum timeout to ensure we don't get stuck indefinitely\r\n    const timeout = setTimeout(() => {\r\n      if (!isComplete) {\r\n        addLogoutStep('Logout timeout reached, forcing redirect');\r\n        setMessage('Logout taking too long, redirecting...');\r\n        window.location.href = '/auth?forcelogin=true';\r\n      }\r\n    }, 5000);\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [navigate]);\r\n\r\n  return (\r\n    <div className=\"flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-indigo-50 to-white p-4\">\r\n      <div className=\"w-full max-w-md space-y-8 rounded-xl bg-white p-8 shadow-xl\">\r\n        <div className=\"flex flex-col items-center justify-center space-y-4\">\r\n          {!isComplete && !error ? (\r\n            <Loader2 className=\"h-12 w-12 animate-spin text-indigo-600\" />\r\n          ) : error ? (\r\n            <div className=\"text-red-500\">⚠️</div>\r\n          ) : (\r\n            <div className=\"text-green-500\">✓</div>\r\n          )}\r\n\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">\r\n            {error ? 'Logout Failed' : isComplete ? 'Logged Out' : 'Logging Out'}\r\n          </h1>\r\n\r\n          <p className=\"text-center text-gray-600\">{message}</p>\r\n\r\n          {error && <p className=\"text-sm text-red-500\">{error}</p>}\r\n\r\n          <p className=\"text-sm text-gray-500\">\r\n            {isComplete\r\n              ? 'Redirecting to login page...'\r\n              : error\r\n              ? 'Trying to redirect to login page...'\r\n              : 'You will be redirected to the login page automatically.'}\r\n          </p>\r\n\r\n          {/* Show logout steps in development mode */}\r\n          {import.meta.env.DEV && (\r\n            <div className=\"mt-4 text-xs text-gray-500\">\r\n              <details>\r\n                <summary>Logout Steps Log</summary>\r\n                <ul className=\"mt-2 list-disc pl-5\">\r\n                  {logoutSteps.map((step, index) => (\r\n                    <li key={index}>{step}</li>\r\n                  ))}\r\n                </ul>\r\n              </details>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogoutPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Loader2 } from 'lucide-react';\r\n\r\n/**\r\n * Special component to handle test user redirects\r\n * This component is used as a bridge for test logins to ensure redirection works properly\r\n */\r\nconst TestLoginRedirect: React.FC = () => {\r\n  const { user, hasSession } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [countdown, setCountdown] = useState(5);\r\n  const [targetPath, setTargetPath] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    // Determine where to redirect based on user info\r\n    const determineRedirectPath = () => {\r\n      if (!user) {\r\n        return '/auth';\r\n      }\r\n\r\n      // Check for group admin\r\n      const isGroupAdmin =\r\n        user.user_metadata?.is_group_admin ||\r\n        (user.email?.toLowerCase().includes('group') &&\r\n          user.email?.toLowerCase().includes('@exampletest.com'));\r\n\r\n      if (isGroupAdmin) {\r\n        console.log('[TestLoginRedirect] User is a group admin, redirecting to /group-admin');\r\n        return '/group-admin';\r\n      }\r\n\r\n      // Check for master admin\r\n      if (user.email === 'testadmin@example.com' || user.email === 'testadmin@exampletest.com') {\r\n        console.log('[TestLoginRedirect] User is master admin, redirecting to /master-admin');\r\n        return '/master-admin';\r\n      }\r\n\r\n      // Default dashboard\r\n      return '/dashboard';\r\n    };\r\n\r\n    // Get the path\r\n    const path = determineRedirectPath();\r\n    setTargetPath(path);\r\n\r\n    // Set up the countdown\r\n    const timer = setInterval(() => {\r\n      setCountdown(prev => {\r\n        if (prev <= 1) {\r\n          clearInterval(timer);\r\n          // Force redirection using window.location.href for clean reload\r\n          console.log(`[TestLoginRedirect] Redirecting to ${path}`);\r\n          window.location.href = path;\r\n          return 0;\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [user, navigate, hasSession]);\r\n\r\n  return (\r\n    <div className=\"flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-indigo-50 to-white p-4\">\r\n      <div className=\"w-full max-w-md space-y-8 rounded-xl bg-white p-8 shadow-xl\">\r\n        <div className=\"flex flex-col items-center justify-center space-y-4\">\r\n          <Loader2 className=\"h-12 w-12 animate-spin text-indigo-600\" />\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">Redirecting...</h1>\r\n\r\n          <p className=\"text-center text-gray-600\">\r\n            {user ? <>Welcome, {user.email}!</> : <>No user detected, redirecting to login.</>}\r\n          </p>\r\n\r\n          {targetPath && (\r\n            <p className=\"text-center text-gray-600\">\r\n              You will be redirected to <span className=\"font-bold\">{targetPath}</span> in{' '}\r\n              {countdown} seconds...\r\n            </p>\r\n          )}\r\n\r\n          <div className=\"mt-4\">\r\n            <button\r\n              onClick={() => {\r\n                if (targetPath) window.location.href = targetPath;\r\n              }}\r\n              className=\"rounded bg-indigo-600 px-4 py-2 text-white hover:bg-indigo-700\"\r\n            >\r\n              Go Now\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestLoginRedirect;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Loader2 } from 'lucide-react';\r\nimport { supabase } from '../lib/supabaseClient';\r\n\r\n/**\r\n * This is a special page that provides direct authentication for group admin test users\r\n * It bypasses the regular flow and directly handles the auth + redirection\r\n */\r\nconst GroupAdminBypass: React.FC = () => {\r\n  const [status, setStatus] = useState<'idle' | 'loading' | 'success' | 'error'>('idle');\r\n  const [message, setMessage] = useState('Click the button to log in as group admin');\r\n  const [countdown, setCountdown] = useState(3);\r\n\r\n  // Auto-login if there's a query parameter\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(window.location.search);\r\n    if (params.get('auto') === 'true') {\r\n      handleGroupAdminLogin();\r\n    }\r\n  }, []);\r\n\r\n  // Countdown and redirect after successful login\r\n  useEffect(() => {\r\n    if (status !== 'success') return;\r\n\r\n    const timer = setInterval(() => {\r\n      setCountdown(prev => {\r\n        if (prev <= 1) {\r\n          clearInterval(timer);\r\n          window.location.href = '/group-admin';\r\n          return 0;\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [status]);\r\n\r\n  const handleGroupAdminLogin = async () => {\r\n    setStatus('loading');\r\n    setMessage('Logging in...');\r\n\r\n    try {\r\n      // First clear any existing session to prevent issues\r\n      await supabase.auth.signOut();\r\n      \r\n      // Clear localStorage\r\n      localStorage.clear();\r\n      \r\n      // Clear any existing direct auth\r\n      if ('logout' in window) {\r\n        try {\r\n          // @ts-ignore\r\n          window.logout();\r\n        } catch (e) {\r\n          console.error('Error calling direct logout:', e);\r\n        }\r\n      }\r\n      \r\n      // Set a flag to force redirect after login\r\n      localStorage.setItem('bypass_redirect', '/group-admin');\r\n      \r\n      // Wait a moment to ensure logout is complete\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n\r\n      // Now login with the test group admin credentials\r\n      const { data, error } = await supabase.auth.signInWithPassword({\r\n        email: 'group1.admin@exampletest.com',\r\n        password: 'password123', // Replace with the actual test password\r\n      });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      console.log('[GroupAdminBypass] Login successful:', data);\r\n      \r\n      // Add metadata for group admin\r\n      await supabase.auth.updateUser({\r\n        data: {\r\n          is_group_admin: true,\r\n          role: 'dealer_group_admin',\r\n        }\r\n      });\r\n      \r\n      // Update profile record\r\n      await supabase\r\n        .from('profiles')\r\n        .update({\r\n          is_group_admin: true,\r\n          role: 'dealer_group_admin',\r\n        })\r\n        .eq('id', data.user.id);\r\n\r\n      setStatus('success');\r\n      setMessage('Login successful! Redirecting to group admin dashboard...');\r\n      \r\n      // Force immediate redirect after 3 seconds\r\n      setTimeout(() => {\r\n        window.location.href = '/group-admin';\r\n      }, 3000);\r\n      \r\n    } catch (error) {\r\n      console.error('[GroupAdminBypass] Login error:', error);\r\n      setStatus('error');\r\n      setMessage(`Login failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-indigo-50 to-white p-4\">\r\n      <div className=\"w-full max-w-md space-y-8 rounded-xl bg-white p-8 shadow-xl\">\r\n        <div className=\"flex flex-col items-center justify-center space-y-4\">\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">Group Admin Login Bypass</h1>\r\n          \r\n          <p className=\"text-center text-gray-600\">{message}</p>\r\n          \r\n          {status === 'loading' && (\r\n            <Loader2 className=\"h-12 w-12 animate-spin text-indigo-600\" />\r\n          )}\r\n          \r\n          {status === 'success' && (\r\n            <p className=\"text-green-600 font-semibold\">\r\n              Redirecting in {countdown} seconds...\r\n            </p>\r\n          )}\r\n          \r\n          {status === 'error' && (\r\n            <p className=\"text-red-600\">\r\n              An error occurred. Please try again.\r\n            </p>\r\n          )}\r\n          \r\n          {status === 'idle' && (\r\n            <button\r\n              onClick={handleGroupAdminLogin}\r\n              className=\"rounded bg-indigo-600 px-4 py-2 text-white hover:bg-indigo-700\"\r\n            >\r\n              Login as Group Admin\r\n            </button>\r\n          )}\r\n          \r\n          {status === 'error' && (\r\n            <button\r\n              onClick={handleGroupAdminLogin}\r\n              className=\"rounded bg-indigo-600 px-4 py-2 text-white hover:bg-indigo-700\"\r\n            >\r\n              Try Again\r\n            </button>\r\n          )}\r\n          \r\n          <a \r\n            href=\"/\"\r\n            className=\"text-sm text-indigo-600 hover:underline\"\r\n          >\r\n            Back to regular login\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupAdminBypass; ","import React, { useState } from 'react';\r\nimport { supabase } from '../lib/supabaseClient';\r\n\r\n/**\r\n * This page provides direct access to any dashboard by bypassing the authentication flow\r\n * For development and testing purposes only\r\n */\r\nconst DashboardSelector: React.FC = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState('Select a dashboard to access');\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [useBypass, setUseBypass] = useState(true); // Default to bypass mode\r\n\r\n  const dashboards = [\r\n    { name: 'Master Admin', path: '/master-admin', email: 'testadmin@example.com', role: 'admin' },\r\n    {\r\n      name: 'Group Admin',\r\n      path: '/group-admin',\r\n      email: 'group1.admin@exampletest.com',\r\n      role: 'dealer_group_admin',\r\n    },\r\n    {\r\n      name: 'Dealership Admin',\r\n      path: '/dashboard/admin',\r\n      email: 'dealer1.admin@exampletest.com',\r\n      role: 'dealership_admin',\r\n    },\r\n    {\r\n      name: 'Finance Manager',\r\n      path: '/dashboard/finance',\r\n      email: 'finance@exampletest.com',\r\n      role: 'finance_manager',\r\n    },\r\n    {\r\n      name: 'Finance Director',\r\n      path: '/dashboard/finance-director',\r\n      email: 'finance.director@exampletest.com',\r\n      role: 'finance_director',\r\n    },\r\n    {\r\n      name: 'Single Finance Manager',\r\n      path: '/dashboard/single-finance',\r\n      email: 'testfinance@example.com',\r\n      role: 'single_finance_manager',\r\n    },\r\n    {\r\n      name: 'Sales Manager',\r\n      path: '/dashboard/sales-manager',\r\n      email: 'sales.manager@exampletest.com',\r\n      role: 'sales_manager',\r\n    },\r\n    {\r\n      name: 'General Manager',\r\n      path: '/dashboard/gm',\r\n      email: 'gm@exampletest.com',\r\n      role: 'general_manager',\r\n    },\r\n    {\r\n      name: 'Salesperson',\r\n      path: '/dashboard/sales',\r\n      email: 'sales@exampletest.com',\r\n      role: 'salesperson',\r\n    },\r\n    {\r\n      name: 'Area Vice President',\r\n      path: '/avp-full-dashboard',\r\n      email: 'avp@exampletest.com',\r\n      role: 'area_vice_president',\r\n    },\r\n  ];\r\n\r\n  // Direct bypass method - just store user info and redirect\r\n  const bypassAuth = (dashboard: (typeof dashboards)[0]) => {\r\n    try {\r\n      console.log(`[DashboardSelector] Using direct bypass for ${dashboard.name}`);\r\n\r\n      // First completely clear ALL authentication data\r\n      console.log('[DashboardSelector] Clearing all auth data');\r\n      localStorage.removeItem('direct_auth_user');\r\n      localStorage.removeItem('directauth_user');\r\n      localStorage.removeItem('directauth_timestamp');\r\n      localStorage.removeItem('supabase.auth.token');\r\n      localStorage.removeItem('supabase.auth.expires_at');\r\n      localStorage.removeItem('supabase.auth.expires_in');\r\n\r\n      // Store the user info in localStorage for direct auth\r\n      console.log('[DashboardSelector] Setting new auth data for', dashboard.email);\r\n      const userData = {\r\n        id: `${dashboard.role}-id-${Date.now()}`,\r\n        email: dashboard.email,\r\n        role: dashboard.role,\r\n        isAdmin: dashboard.role === 'admin',\r\n        isGroupAdmin: dashboard.role === 'dealer_group_admin',\r\n        name: dashboard.name,\r\n        dealershipId:\r\n          dashboard.role === 'dealership_admin' || dashboard.role === 'single_finance_manager'\r\n            ? 1\r\n            : undefined,\r\n      };\r\n\r\n      localStorage.setItem('directauth_user', JSON.stringify(userData));\r\n      localStorage.setItem('directauth_timestamp', Date.now().toString());\r\n\r\n      // Force an immediate redirect\r\n      console.log(`[DashboardSelector] Redirecting to ${dashboard.path}`);\r\n      window.location.href = dashboard.path;\r\n    } catch (err) {\r\n      console.error('[DashboardSelector] Bypass error:', err);\r\n      setError(`Bypass failed: ${err instanceof Error ? err.message : 'Unknown error'}`);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const accessDashboard = async (dashboard: (typeof dashboards)[0]) => {\r\n    if (useBypass) {\r\n      bypassAuth(dashboard);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    setMessage(`Accessing ${dashboard.name} dashboard...`);\r\n\r\n    try {\r\n      // 1. Clear existing session and storage\r\n      console.log('[DashboardSelector] Clearing existing session...');\r\n      await supabase.auth.signOut();\r\n      localStorage.clear();\r\n      // Use window.sessionStorage to fix linter error\r\n      window.sessionStorage.clear();\r\n\r\n      // 2. Login with the test account for this role - with better error handling\r\n      console.log(`[DashboardSelector] Signing in as ${dashboard.email}...`);\r\n      const { data, error } = await supabase.auth.signInWithPassword({\r\n        email: dashboard.email,\r\n        password: 'test123', // Default test password\r\n      });\r\n\r\n      if (error) {\r\n        console.error('[DashboardSelector] Sign in error:', error);\r\n        throw error;\r\n      }\r\n\r\n      if (!data || !data.user) {\r\n        console.error('[DashboardSelector] No user data returned from sign in');\r\n        throw new Error('Authentication failed - no user data returned');\r\n      }\r\n\r\n      console.log(`[DashboardSelector] Logged in as ${dashboard.email}`);\r\n\r\n      // Special case for fast routing - skip the metadata updates to avoid issues\r\n      if (dashboard.role === 'single_finance_manager' || dashboard.role === 'finance_manager') {\r\n        console.log(\r\n          '[DashboardSelector] Using direct navigation for Finance Manager:',\r\n          dashboard.role\r\n        );\r\n        // Force direct navigation instead of React Router to avoid auth redirects\r\n        window.location.href = dashboard.path;\r\n        return; // Exit early\r\n      }\r\n\r\n      // 3. Set appropriate role in user metadata\r\n      console.log(`[DashboardSelector] Updating user metadata with role: ${dashboard.role}`);\r\n      const userUpdateResult = await supabase.auth.updateUser({\r\n        data: {\r\n          role: dashboard.role,\r\n          is_group_admin: dashboard.role === 'dealer_group_admin',\r\n        },\r\n      });\r\n\r\n      if (userUpdateResult.error) {\r\n        console.error('[DashboardSelector] User metadata update error:', userUpdateResult.error);\r\n        // Continue anyway - this might not be critical\r\n      }\r\n\r\n      // 4. Update profile record - with better error handling\r\n      console.log(`[DashboardSelector] Updating profile record for user: ${data.user.id}`);\r\n      const profileUpdateResult = await supabase\r\n        .from('profiles')\r\n        .update({\r\n          role: dashboard.role,\r\n          is_group_admin: dashboard.role === 'dealer_group_admin',\r\n        })\r\n        .eq('id', data.user.id);\r\n\r\n      if (profileUpdateResult.error) {\r\n        console.error('[DashboardSelector] Profile update error:', profileUpdateResult.error);\r\n        // Continue anyway - this might not be critical\r\n      }\r\n\r\n      // 5. Force redirect to appropriate dashboard using direct browser navigation\r\n      // This bypasses React Router and any potential redirect loops\r\n      console.log(`[DashboardSelector] Redirecting to: ${dashboard.path}`);\r\n      window.location.href = dashboard.path;\r\n    } catch (err) {\r\n      console.error('[DashboardSelector] Error:', err);\r\n      setError(`Login failed: ${err instanceof Error ? err.message : 'Unknown error'}`);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-indigo-50 to-white p-4\">\r\n      <div className=\"w-full max-w-md space-y-8 rounded-xl bg-white p-8 shadow-xl\">\r\n        <div className=\"flex flex-col items-center justify-center space-y-4\">\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">Dashboard Direct Access</h1>\r\n          <p className=\"text-sm text-red-500 font-bold\">FOR DEVELOPMENT USE ONLY</p>\r\n\r\n          <div className=\"flex items-center mb-2 w-full justify-between\">\r\n            <span className=\"text-sm text-gray-700\">Authentication Method:</span>\r\n            <div className=\"flex gap-2\">\r\n              <button\r\n                onClick={() => setUseBypass(true)}\r\n                className={`px-3 py-1 text-xs rounded ${\r\n                  useBypass ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'\r\n                }`}\r\n              >\r\n                Quick Bypass\r\n              </button>\r\n              <button\r\n                onClick={() => setUseBypass(false)}\r\n                className={`px-3 py-1 text-xs rounded ${\r\n                  !useBypass ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'\r\n                }`}\r\n              >\r\n                Full Auth\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {error && (\r\n            <div className=\"p-4 rounded-md bg-red-50 text-red-800 w-full\">\r\n              <p>{error}</p>\r\n            </div>\r\n          )}\r\n\r\n          <p className=\"text-center text-gray-600\">{message}</p>\r\n\r\n          <div className=\"grid grid-cols-1 gap-3 w-full\">\r\n            {dashboards.map(dashboard => (\r\n              <button\r\n                key={dashboard.path}\r\n                onClick={() => accessDashboard(dashboard)}\r\n                disabled={loading}\r\n                className={`p-3 rounded-md text-white w-full\r\n                  ${loading ? 'bg-gray-400' : 'bg-blue-600 hover:bg-blue-700'}\r\n                  ${dashboard.name === 'Master Admin' ? 'bg-purple-700 hover:bg-purple-800' : ''}\r\n                  ${dashboard.name === 'Group Admin' ? 'bg-green-600 hover:bg-green-700' : ''}\r\n                  ${\r\n                    dashboard.name.includes('Finance Manager')\r\n                      ? 'bg-indigo-600 hover:bg-indigo-700'\r\n                      : ''\r\n                  }\r\n                `}\r\n              >\r\n                {dashboard.name}\r\n              </button>\r\n            ))}\r\n          </div>\r\n\r\n          {loading && (\r\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-700\"></div>\r\n          )}\r\n\r\n          <div className=\"mt-6 border-t border-gray-200 pt-4 w-full\">\r\n            <a href=\"/\" className=\"text-sm text-blue-600 hover:underline\">\r\n              Back to regular login\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardSelector;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardHeader, CardTitle, CardContent, CardFooter } from '../../components/ui/card';\r\nimport { Button } from '../../components/ui/button';\r\nimport { Input } from '../../components/ui/input';\r\nimport { Label } from '../../components/ui/label';\r\nimport { Checkbox } from '../../components/ui/checkbox';\r\nimport { Tabs, TabsList, TabsTrigger, TabsContent } from '../../components/ui/tabs';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '../../components/ui/select';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from '../../components/ui/table';\r\nimport {\r\n  Users,\r\n  UserPlus,\r\n  Trash2,\r\n  Edit,\r\n  ChevronLeft,\r\n  Search,\r\n  Mail,\r\n  Phone,\r\n  Award,\r\n  Activity,\r\n  RefreshCw,\r\n  CheckCircle,\r\n  AlertTriangle,\r\n  User,\r\n  Clock,\r\n} from 'lucide-react';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogTitle,\r\n} from '../../components/ui/dialog';\r\n\r\n// Sample team members data\r\nconst TEAM_MEMBERS = [\r\n  {\r\n    id: 1,\r\n    name: 'Sarah Johnson',\r\n    email: 'sarah.johnson@dealership.com',\r\n    phone: '(555) 123-4567',\r\n    role: 'Sales Associate',\r\n    team: 'Team A',\r\n    status: 'active',\r\n    performance: 'top',\r\n    joinDate: '2021-03-12',\r\n    deals: 24,\r\n    lastActivity: '2 hours ago',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Michael Chen',\r\n    email: 'michael.chen@dealership.com',\r\n    phone: '(555) 234-5678',\r\n    role: 'Sales Associate',\r\n    team: 'Team A',\r\n    status: 'active',\r\n    performance: 'high',\r\n    joinDate: '2021-06-15',\r\n    deals: 20,\r\n    lastActivity: '4 hours ago',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'David Rodriguez',\r\n    email: 'david.rodriguez@dealership.com',\r\n    phone: '(555) 345-6789',\r\n    role: 'Sales Associate',\r\n    team: 'Team A',\r\n    status: 'active',\r\n    performance: 'high',\r\n    joinDate: '2022-01-07',\r\n    deals: 18,\r\n    lastActivity: '35 minutes ago',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Amanda Williams',\r\n    email: 'amanda.williams@dealership.com',\r\n    phone: '(555) 456-7890',\r\n    role: 'Sales Associate',\r\n    team: 'Team B',\r\n    status: 'active',\r\n    performance: 'medium',\r\n    joinDate: '2022-03-28',\r\n    deals: 16,\r\n    lastActivity: '1 day ago',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Robert Johnson',\r\n    email: 'robert.johnson@dealership.com',\r\n    phone: '(555) 567-8901',\r\n    role: 'Sales Associate',\r\n    team: 'Team B',\r\n    status: 'active',\r\n    performance: 'medium',\r\n    joinDate: '2022-05-10',\r\n    deals: 15,\r\n    lastActivity: '3 hours ago',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Lisa Thompson',\r\n    email: 'lisa.thompson@dealership.com',\r\n    phone: '(555) 678-9012',\r\n    role: 'Sales Associate',\r\n    team: 'Team B',\r\n    status: 'inactive',\r\n    performance: 'low',\r\n    joinDate: '2022-08-22',\r\n    deals: 8,\r\n    lastActivity: '2 weeks ago',\r\n  },\r\n];\r\n\r\n// Performance metrics by team\r\nconst TEAM_PERFORMANCE = [\r\n  {\r\n    team: 'Team A',\r\n    members: 3,\r\n    dealsTotal: 62,\r\n    avgDealsPerMember: 20.7,\r\n    grossTotal: 87800,\r\n    avgGross: 1415.5,\r\n    closingRatio: 32,\r\n  },\r\n  {\r\n    team: 'Team B',\r\n    members: 3,\r\n    dealsTotal: 39,\r\n    avgDealsPerMember: 13,\r\n    grossTotal: 52600,\r\n    avgGross: 1348.7,\r\n    closingRatio: 28,\r\n  },\r\n];\r\n\r\nconst TeamManagementPage = () => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [selectedTeam, setSelectedTeam] = useState('all');\r\n  const [selectedTab, setSelectedTab] = useState('members');\r\n  const [editingMember, setEditingMember] = useState(null);\r\n  const [memberTeam, setMemberTeam] = useState('');\r\n  const [isAddTeamDialogOpen, setIsAddTeamDialogOpen] = useState(false);\r\n  const [newTeamName, setNewTeamName] = useState('');\r\n  const [teamColor, setTeamColor] = useState('#4f46e5'); // Default team color\r\n\r\n  // Filter team members based on search and selected team\r\n  const filteredMembers = TEAM_MEMBERS.filter(member => {\r\n    const matchesSearch =\r\n      member.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      member.email.toLowerCase().includes(searchQuery.toLowerCase());\r\n    const matchesTeam = selectedTeam === 'all' || member.team === selectedTeam;\r\n    return matchesSearch && matchesTeam;\r\n  });\r\n\r\n  // Handle opening the edit dialog\r\n  const handleEditMember = member => {\r\n    setEditingMember(member);\r\n    setMemberTeam(member.team);\r\n  };\r\n\r\n  // Handle saving team changes\r\n  const handleSaveTeamChange = () => {\r\n    // In production, this would be an API call\r\n    console.log(`Changed ${editingMember.name}'s team to ${memberTeam}`);\r\n    // Close the dialog\r\n    setEditingMember(null);\r\n  };\r\n\r\n  // Handle team creation\r\n  const handleCreateTeam = () => {\r\n    if (!newTeamName.trim()) {\r\n      alert('Please enter a team name');\r\n      return;\r\n    }\r\n\r\n    // In production, this would be an API call\r\n    console.log(`Created new team: ${newTeamName} with color ${teamColor}`);\r\n\r\n    // Reset and close dialog\r\n    setNewTeamName('');\r\n    setTeamColor('#4f46e5');\r\n    setIsAddTeamDialogOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container py-6\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <div className=\"flex items-center\">\r\n          <Button variant=\"ghost\" size=\"sm\" asChild className=\"mr-2\">\r\n            <Link to=\"/dashboard\">\r\n              <ChevronLeft className=\"h-4 w-4 mr-1\" />\r\n              Back to Dashboard\r\n            </Link>\r\n          </Button>\r\n          <h1 className=\"text-3xl font-bold\">Team Management</h1>\r\n        </div>\r\n        <div className=\"flex gap-2\">\r\n          <Button variant=\"outline\" onClick={() => setIsAddTeamDialogOpen(true)}>\r\n            <Users className=\"mr-2 h-4 w-4\" />\r\n            Add Team\r\n          </Button>\r\n          <Button>\r\n            <UserPlus className=\"mr-2 h-4 w-4\" />\r\n            Add Team Member\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Team Performance Summary */}\r\n      <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-4 mb-6\">\r\n        <Card>\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Total Team Members</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{TEAM_MEMBERS.length}</div>\r\n            <p className=\"text-xs text-muted-foreground mt-1\">\r\n              {TEAM_MEMBERS.filter(m => m.status === 'active').length} active members\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Total Deals (MTD)</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">\r\n              {TEAM_PERFORMANCE.reduce((total, team) => total + team.dealsTotal, 0)}\r\n            </div>\r\n            <p className=\"text-xs text-green-600 mt-1\">+8% from last month</p>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Avg Deals Per Person</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">\r\n              {(\r\n                TEAM_PERFORMANCE.reduce((total, team) => total + team.dealsTotal, 0) /\r\n                TEAM_MEMBERS.filter(m => m.status === 'active').length\r\n              ).toFixed(1)}\r\n            </div>\r\n            <p className=\"text-xs text-muted-foreground mt-1\">Target: 15 deals</p>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Avg Closing Ratio</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">\r\n              {(\r\n                TEAM_PERFORMANCE.reduce((sum, team) => sum + team.closingRatio * team.members, 0) /\r\n                TEAM_MEMBERS.filter(m => m.status === 'active').length\r\n              ).toFixed(1)}\r\n              %\r\n            </div>\r\n            <p className=\"text-xs text-green-600 mt-1\">+2.5% from last month</p>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Tabs for different sections */}\r\n      <Tabs value={selectedTab} onValueChange={setSelectedTab} className=\"mb-6\">\r\n        <TabsList>\r\n          <TabsTrigger value=\"members\">\r\n            <Users className=\"h-4 w-4 mr-2\" />\r\n            Team Members\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"performance\">\r\n            <Activity className=\"h-4 w-4 mr-2\" />\r\n            Performance\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"training\">\r\n            <Award className=\"h-4 w-4 mr-2\" />\r\n            Training & Development\r\n          </TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"members\" className=\"mt-6\">\r\n          <Card>\r\n            <CardHeader className=\"pb-4\">\r\n              <div className=\"flex justify-between flex-wrap gap-4\">\r\n                <CardTitle>Team Members</CardTitle>\r\n                <div className=\"flex gap-2\">\r\n                  <div className=\"relative\">\r\n                    <Search className=\"absolute left-2.5 top-2.5 h-4 w-4 text-gray-500\" />\r\n                    <Input\r\n                      type=\"search\"\r\n                      placeholder=\"Search members...\"\r\n                      className=\"w-64 pl-8\"\r\n                      value={searchQuery}\r\n                      onChange={e => setSearchQuery(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <Select value={selectedTeam} onValueChange={setSelectedTeam}>\r\n                    <SelectTrigger className=\"w-36\">\r\n                      <SelectValue placeholder=\"Select Team\" />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"all\">All Teams</SelectItem>\r\n                      <SelectItem value=\"Team A\">Team A</SelectItem>\r\n                      <SelectItem value=\"Team B\">Team B</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <Table>\r\n                <TableHeader>\r\n                  <TableRow>\r\n                    <TableHead>Name</TableHead>\r\n                    <TableHead>Role</TableHead>\r\n                    <TableHead>Team</TableHead>\r\n                    <TableHead>Deals (MTD)</TableHead>\r\n                    <TableHead>Status</TableHead>\r\n                    <TableHead>Last Activity</TableHead>\r\n                    <TableHead className=\"text-right\">Actions</TableHead>\r\n                  </TableRow>\r\n                </TableHeader>\r\n                <TableBody>\r\n                  {filteredMembers.map(member => (\r\n                    <TableRow key={member.id}>\r\n                      <TableCell className=\"font-medium\">\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <div className=\"w-8 h-8 rounded-full bg-gray-100 flex items-center justify-center\">\r\n                            <User className=\"h-4 w-4 text-gray-600\" />\r\n                          </div>\r\n                          <div>\r\n                            <div>{member.name}</div>\r\n                            <div className=\"text-xs text-gray-500\">{member.email}</div>\r\n                          </div>\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell>{member.role}</TableCell>\r\n                      <TableCell>{member.team}</TableCell>\r\n                      <TableCell>\r\n                        <div className=\"flex items-center\">\r\n                          <span\r\n                            className={`font-medium ${\r\n                              member.performance === 'top'\r\n                                ? 'text-green-600'\r\n                                : member.performance === 'high'\r\n                                ? 'text-blue-600'\r\n                                : member.performance === 'medium'\r\n                                ? 'text-amber-600'\r\n                                : 'text-gray-600'\r\n                            }`}\r\n                          >\r\n                            {member.deals}\r\n                          </span>\r\n                          {member.performance === 'top' && (\r\n                            <Award className=\"ml-1 h-4 w-4 text-green-600\" />\r\n                          )}\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <div className=\"flex items-center\">\r\n                          <Checkbox\r\n                            checked={member.status === 'active'}\r\n                            onCheckedChange={checked => {\r\n                              // Handle status change\r\n                              const newStatus = checked ? 'active' : 'inactive';\r\n                              // Update member status (this would be an API call in production)\r\n                              console.log(`Set ${member.name} to ${newStatus}`);\r\n\r\n                              // Show notification if setting to inactive\r\n                              if (newStatus === 'inactive') {\r\n                                alert(\r\n                                  `A notification has been sent to the Admin to delete ${member.name}.`\r\n                                );\r\n                                // In production, this would be an API call to send email\r\n                              }\r\n                            }}\r\n                            id={`active-status-${member.id}`}\r\n                          />\r\n                          <label htmlFor={`active-status-${member.id}`} className=\"ml-2 text-sm\">\r\n                            <span\r\n                              className={`px-2 py-1 rounded-full text-xs ${\r\n                                member.status === 'active'\r\n                                  ? 'bg-green-100 text-green-800'\r\n                                  : 'bg-gray-100 text-gray-800'\r\n                              }`}\r\n                            >\r\n                              {member.status === 'active' ? 'Active' : 'Inactive'}\r\n                            </span>\r\n                          </label>\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <div className=\"flex items-center text-gray-500 text-sm\">\r\n                          <Clock className=\"mr-1 h-3 w-3\" />\r\n                          {member.lastActivity}\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell className=\"text-right\">\r\n                        <div className=\"flex justify-end gap-2\">\r\n                          <Button\r\n                            variant=\"ghost\"\r\n                            size=\"sm\"\r\n                            onClick={() => handleEditMember(member)}\r\n                          >\r\n                            <Edit className=\"h-4 w-4\" />\r\n                          </Button>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"performance\" className=\"mt-6\">\r\n          <div className=\"grid gap-6 md:grid-cols-2\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Team Performance</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <Table>\r\n                  <TableHeader>\r\n                    <TableRow>\r\n                      <TableHead>Team</TableHead>\r\n                      <TableHead className=\"text-right\">Total Units</TableHead>\r\n                      <TableHead className=\"text-right\">New Units</TableHead>\r\n                      <TableHead className=\"text-right\">Used Units</TableHead>\r\n                      <TableHead className=\"text-right\">Total Gross</TableHead>\r\n                      <TableHead className=\"text-right\">PVR</TableHead>\r\n                    </TableRow>\r\n                  </TableHeader>\r\n                  <TableBody>\r\n                    {[\r\n                      {\r\n                        team: 'Team A',\r\n                        members: 3,\r\n                        totalUnits: 62,\r\n                        newUnits: 36,\r\n                        usedUnits: 26,\r\n                        totalGross: 124500,\r\n                        pvr: 2008,\r\n                        lastMonth: 58,\r\n                        ytd: 394,\r\n                        avgMonthly: 65.7,\r\n                        annualPace: 788,\r\n                        closingRatio: 32,\r\n                      },\r\n                      {\r\n                        team: 'Team B',\r\n                        members: 2,\r\n                        totalUnits: 38,\r\n                        newUnits: 22,\r\n                        usedUnits: 16,\r\n                        totalGross: 76000,\r\n                        pvr: 2000,\r\n                        lastMonth: 30,\r\n                        ytd: 224,\r\n                        avgMonthly: 37.3,\r\n                        annualPace: 448,\r\n                        closingRatio: 28,\r\n                      },\r\n                    ].map(team => (\r\n                      <TableRow key={team.team}>\r\n                        <TableCell className=\"font-medium\">{team.team}</TableCell>\r\n                        <TableCell className=\"text-right\">{team.totalUnits}</TableCell>\r\n                        <TableCell className=\"text-right\">{team.newUnits}</TableCell>\r\n                        <TableCell className=\"text-right\">{team.usedUnits}</TableCell>\r\n                        <TableCell className=\"text-right\">\r\n                          ${team.totalGross.toLocaleString()}\r\n                        </TableCell>\r\n                        <TableCell className=\"text-right\">${team.pvr}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n\r\n                <div className=\"mt-6\">\r\n                  <h3 className=\"text-sm font-medium mb-4\">Extended Metrics</h3>\r\n                  <Table>\r\n                    <TableHeader>\r\n                      <TableRow>\r\n                        <TableHead>Team</TableHead>\r\n                        <TableHead className=\"text-right\">Last Month</TableHead>\r\n                        <TableHead className=\"text-right\">YTD</TableHead>\r\n                        <TableHead className=\"text-right\">Avg/Month</TableHead>\r\n                        <TableHead className=\"text-right\">Annual Pace</TableHead>\r\n                      </TableRow>\r\n                    </TableHeader>\r\n                    <TableBody>\r\n                      {[\r\n                        {\r\n                          team: 'Team A',\r\n                          members: 3,\r\n                          totalUnits: 62,\r\n                          newUnits: 36,\r\n                          usedUnits: 26,\r\n                          totalGross: 124500,\r\n                          pvr: 2008,\r\n                          lastMonth: 58,\r\n                          ytd: 394,\r\n                          avgMonthly: 65.7,\r\n                          annualPace: 788,\r\n                          closingRatio: 32,\r\n                        },\r\n                        {\r\n                          team: 'Team B',\r\n                          members: 2,\r\n                          totalUnits: 38,\r\n                          newUnits: 22,\r\n                          usedUnits: 16,\r\n                          totalGross: 76000,\r\n                          pvr: 2000,\r\n                          lastMonth: 30,\r\n                          ytd: 224,\r\n                          avgMonthly: 37.3,\r\n                          annualPace: 448,\r\n                          closingRatio: 28,\r\n                        },\r\n                      ].map(team => (\r\n                        <TableRow key={team.team}>\r\n                          <TableCell className=\"font-medium\">{team.team}</TableCell>\r\n                          <TableCell className=\"text-right\">{team.lastMonth}</TableCell>\r\n                          <TableCell className=\"text-right\">{team.ytd}</TableCell>\r\n                          <TableCell className=\"text-right\">{team.avgMonthly.toFixed(1)}</TableCell>\r\n                          <TableCell className=\"text-right\">{team.annualPace}</TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Performance Indicators</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  <div>\r\n                    <div className=\"flex justify-between items-center mb-1\">\r\n                      <span className=\"text-sm font-medium\">Closing Ratio</span>\r\n                      <span className=\"text-sm font-medium text-green-600\">\r\n                        <CheckCircle className=\"inline-block h-4 w-4 mr-1\" />\r\n                        Good\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"h-2.5 w-full bg-gray-200 rounded-full overflow-hidden\">\r\n                      <div\r\n                        className=\"h-full bg-green-500 rounded-full\"\r\n                        style={{ width: '85%' }}\r\n                      ></div>\r\n                    </div>\r\n                    <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\r\n                      <span>Current: 30%</span>\r\n                      <span>Target: 25%</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <div className=\"flex justify-between items-center mb-1\">\r\n                      <span className=\"text-sm font-medium\">Deals Per Person</span>\r\n                      <span className=\"text-sm font-medium text-amber-600\">\r\n                        <AlertTriangle className=\"inline-block h-4 w-4 mr-1\" />\r\n                        Average\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"h-2.5 w-full bg-gray-200 rounded-full overflow-hidden\">\r\n                      <div\r\n                        className=\"h-full bg-amber-500 rounded-full\"\r\n                        style={{ width: '68%' }}\r\n                      ></div>\r\n                    </div>\r\n                    <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\r\n                      <span>Current: 12.2</span>\r\n                      <span>Target: 15</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <div className=\"flex justify-between items-center mb-1\">\r\n                      <span className=\"text-sm font-medium\">Customer Satisfaction</span>\r\n                      <span className=\"text-sm font-medium text-green-600\">\r\n                        <CheckCircle className=\"inline-block h-4 w-4 mr-1\" />\r\n                        Excellent\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"h-2.5 w-full bg-gray-200 rounded-full overflow-hidden\">\r\n                      <div\r\n                        className=\"h-full bg-green-500 rounded-full\"\r\n                        style={{ width: '92%' }}\r\n                      ></div>\r\n                    </div>\r\n                    <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\r\n                      <span>Current: 4.7/5</span>\r\n                      <span>Target: 4.5/5</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <div className=\"flex justify-between items-center mb-1\">\r\n                      <span className=\"text-sm font-medium\">Follow-up Completion</span>\r\n                      <span className=\"text-sm font-medium text-amber-600\">\r\n                        <AlertTriangle className=\"inline-block h-4 w-4 mr-1\" />\r\n                        Needs Improvement\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"h-2.5 w-full bg-gray-200 rounded-full overflow-hidden\">\r\n                      <div\r\n                        className=\"h-full bg-amber-500 rounded-full\"\r\n                        style={{ width: '65%' }}\r\n                      ></div>\r\n                    </div>\r\n                    <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\r\n                      <span>Current: 65%</span>\r\n                      <span>Target: 90%</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"training\" className=\"mt-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Training & Development</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-center py-12\">\r\n                <RefreshCw className=\"h-12 w-12 mx-auto text-gray-400 mb-4\" />\r\n                <h3 className=\"text-lg font-medium mb-2\">Training Module Coming Soon</h3>\r\n                <p className=\"text-gray-500 max-w-md mx-auto\">\r\n                  The training and development module is currently under development. Check back\r\n                  soon for updates on training courses, certifications, and skill development\r\n                  tracking.\r\n                </p>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n\r\n      {/* Add Team Dialog */}\r\n      <Dialog open={isAddTeamDialogOpen} onOpenChange={setIsAddTeamDialogOpen}>\r\n        <DialogContent>\r\n          <DialogHeader>\r\n            <DialogTitle>Add New Team</DialogTitle>\r\n            <DialogDescription>Create a new team to organize your salespeople.</DialogDescription>\r\n          </DialogHeader>\r\n\r\n          <div className=\"space-y-4 py-4\">\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"team-name\">Team Name</Label>\r\n              <Input\r\n                id=\"team-name\"\r\n                placeholder=\"Enter team name\"\r\n                value={newTeamName}\r\n                onChange={e => setNewTeamName(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"team-color\">Team Color</Label>\r\n              <div className=\"flex items-center gap-2\">\r\n                <input\r\n                  type=\"color\"\r\n                  id=\"team-color\"\r\n                  value={teamColor}\r\n                  onChange={e => setTeamColor(e.target.value)}\r\n                  className=\"p-0 h-9 w-9 border rounded cursor-pointer\"\r\n                />\r\n                <div className=\"text-sm\">{teamColor}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <DialogFooter>\r\n            <Button variant=\"outline\" onClick={() => setIsAddTeamDialogOpen(false)}>\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleCreateTeam}>Create Team</Button>\r\n          </DialogFooter>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Team Edit Dialog */}\r\n      {editingMember && (\r\n        <Dialog open={!!editingMember} onOpenChange={() => setEditingMember(null)}>\r\n          <DialogContent>\r\n            <DialogHeader>\r\n              <DialogTitle>Edit Team Assignment</DialogTitle>\r\n              <DialogDescription>\r\n                Change the team assignment for {editingMember.name}. Sales Managers can only modify\r\n                team assignments.\r\n              </DialogDescription>\r\n            </DialogHeader>\r\n\r\n            <div className=\"py-4\">\r\n              <Label htmlFor=\"team-select\">Team Assignment</Label>\r\n              <Select value={memberTeam} onValueChange={setMemberTeam}>\r\n                <SelectTrigger id=\"team-select\">\r\n                  <SelectValue placeholder=\"Select Team\" />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  <SelectItem value=\"Team A\">Team A</SelectItem>\r\n                  <SelectItem value=\"Team B\">Team B</SelectItem>\r\n                </SelectContent>\r\n              </Select>\r\n            </div>\r\n\r\n            <DialogFooter>\r\n              <Button variant=\"outline\" onClick={() => setEditingMember(null)}>\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={handleSaveTeamChange}>Save Changes</Button>\r\n            </DialogFooter>\r\n          </DialogContent>\r\n        </Dialog>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamManagementPage;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardHeader, CardTitle, CardContent, CardFooter } from '../../components/ui/card';\r\nimport { Button } from '../../components/ui/button';\r\nimport { Input } from '../../components/ui/input';\r\nimport { Label } from '../../components/ui/label';\r\nimport { Tabs, TabsList, TabsTrigger, TabsContent } from '../../components/ui/tabs';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '../../components/ui/select';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from '../../components/ui/table';\r\nimport {\r\n  ChevronLeft,\r\n  Target,\r\n  TrendingUp,\r\n  DollarSign,\r\n  Edit,\r\n  Save,\r\n  Car,\r\n  Users,\r\n  ArrowUp,\r\n  ArrowDown,\r\n  BarChart,\r\n  Calendar,\r\n  Medal,\r\n} from 'lucide-react';\r\n\r\n// Sample individual goals\r\nconst INDIVIDUAL_GOALS = [\r\n  {\r\n    id: 1,\r\n    name: 'Sarah Johnson',\r\n    team: 'Team A',\r\n    currentUnits: 24,\r\n    goalUnits: 30,\r\n    lastMonth: 28,\r\n    avgMonthly: 26,\r\n    grossTarget: 45000,\r\n    currentGross: 38500,\r\n    frontGrossGoal: 1200,\r\n    backEndGoal: 900,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Michael Chen',\r\n    team: 'Team A',\r\n    currentUnits: 20,\r\n    goalUnits: 25,\r\n    lastMonth: 22,\r\n    avgMonthly: 21,\r\n    grossTarget: 38000,\r\n    currentGross: 32100,\r\n    frontGrossGoal: 1100,\r\n    backEndGoal: 850,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'David Rodriguez',\r\n    team: 'Team A',\r\n    currentUnits: 18,\r\n    goalUnits: 22,\r\n    lastMonth: 16,\r\n    avgMonthly: 18,\r\n    grossTarget: 32000,\r\n    currentGross: 28700,\r\n    frontGrossGoal: 950,\r\n    backEndGoal: 800,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Amanda Williams',\r\n    team: 'Team B',\r\n    currentUnits: 16,\r\n    goalUnits: 20,\r\n    lastMonth: 14,\r\n    avgMonthly: 15,\r\n    grossTarget: 30000,\r\n    currentGross: 21800,\r\n    frontGrossGoal: 900,\r\n    backEndGoal: 750,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Robert Johnson',\r\n    team: 'Team B',\r\n    currentUnits: 15,\r\n    goalUnits: 18,\r\n    lastMonth: 16,\r\n    avgMonthly: 14,\r\n    grossTarget: 28000,\r\n    currentGross: 19500,\r\n    frontGrossGoal: 850,\r\n    backEndGoal: 700,\r\n  },\r\n];\r\n\r\n// Sample team goals\r\nconst TEAM_GOALS = [\r\n  {\r\n    id: 1,\r\n    name: 'Team A',\r\n    members: 3,\r\n    currentUnits: 62,\r\n    goalUnits: 75,\r\n    lastMonth: 66,\r\n    grossTarget: 115000,\r\n    currentGross: 99300,\r\n    closingRatioTarget: 35,\r\n    currentClosingRatio: 32,\r\n    frontEndTarget: 1200,\r\n    backEndTarget: 800,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Team B',\r\n    members: 2,\r\n    currentUnits: 31,\r\n    goalUnits: 40,\r\n    lastMonth: 30,\r\n    grossTarget: 60000,\r\n    currentGross: 41300,\r\n    closingRatioTarget: 30,\r\n    currentClosingRatio: 28,\r\n    frontEndTarget: 1100,\r\n    backEndTarget: 700,\r\n  },\r\n];\r\n\r\n// Monthly targets for the dealership\r\nconst MONTHLY_TARGETS = {\r\n  newVehicles: 65,\r\n  usedVehicles: 50,\r\n  totalUnits: 115,\r\n  totalGross: 175000,\r\n  avgGrossPerUnit: 1500,\r\n  closingRatio: 32,\r\n};\r\n\r\nconst GoalsPage = () => {\r\n  const [selectedTab, setSelectedTab] = useState('individual');\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  // Calculate overall progress for all salespeople\r\n  const calculateOverallProgress = () => {\r\n    const totalCurrentUnits = INDIVIDUAL_GOALS.reduce(\r\n      (sum, person) => sum + person.currentUnits,\r\n      0\r\n    );\r\n    const totalGoalUnits = INDIVIDUAL_GOALS.reduce((sum, person) => sum + person.goalUnits, 0);\r\n    return {\r\n      currentUnits: totalCurrentUnits,\r\n      goalUnits: totalGoalUnits,\r\n      percentage: Math.round((totalCurrentUnits / totalGoalUnits) * 100),\r\n    };\r\n  };\r\n\r\n  const overallProgress = calculateOverallProgress();\r\n\r\n  return (\r\n    <div className=\"container py-6\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <div className=\"flex items-center\">\r\n          <Button variant=\"ghost\" size=\"sm\" asChild className=\"mr-2\">\r\n            <Link to=\"/dashboard\">\r\n              <ChevronLeft className=\"h-4 w-4 mr-1\" />\r\n              Back to Dashboard\r\n            </Link>\r\n          </Button>\r\n          <h1 className=\"text-3xl font-bold\">Set Team Goals</h1>\r\n        </div>\r\n        <Button onClick={() => setEditMode(!editMode)}>\r\n          {editMode ? (\r\n            <>\r\n              <Save className=\"mr-2 h-4 w-4\" />\r\n              Save Goals\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Edit className=\"mr-2 h-4 w-4\" />\r\n              Edit Goals\r\n            </>\r\n          )}\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Monthly Dealership Goals Summary */}\r\n      <Card className=\"mb-6\">\r\n        <CardHeader className=\"pb-2\">\r\n          <CardTitle className=\"flex items-center\">\r\n            <Target className=\"mr-2 h-5 w-5 text-blue-600\" />\r\n            Monthly Dealership Targets\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-6\">\r\n            <div>\r\n              <div className=\"text-sm text-gray-500 mb-1\">New Vehicles</div>\r\n              <div className=\"text-xl font-bold flex items-center\">\r\n                <Car className=\"mr-2 h-4 w-4 text-green-600\" />\r\n                {MONTHLY_TARGETS.newVehicles}\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <div className=\"text-sm text-gray-500 mb-1\">Used Vehicles</div>\r\n              <div className=\"text-xl font-bold flex items-center\">\r\n                <Car className=\"mr-2 h-4 w-4 text-amber-600\" />\r\n                {MONTHLY_TARGETS.usedVehicles}\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <div className=\"text-sm text-gray-500 mb-1\">Total Units</div>\r\n              <div className=\"text-xl font-bold flex items-center\">\r\n                <Users className=\"mr-2 h-4 w-4 text-blue-600\" />\r\n                {MONTHLY_TARGETS.totalUnits}\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <div className=\"text-sm text-gray-500 mb-1\">Total Gross</div>\r\n              <div className=\"text-xl font-bold flex items-center\">\r\n                <DollarSign className=\"mr-2 h-4 w-4 text-purple-600\" />$\r\n                {MONTHLY_TARGETS.totalGross.toLocaleString()}\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <div className=\"text-sm text-gray-500 mb-1\">Avg. Gross/Unit</div>\r\n              <div className=\"text-xl font-bold flex items-center\">\r\n                <TrendingUp className=\"mr-2 h-4 w-4 text-indigo-600\" />$\r\n                {MONTHLY_TARGETS.avgGrossPerUnit.toLocaleString()}\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <div className=\"text-sm text-gray-500 mb-1\">Closing Ratio</div>\r\n              <div className=\"text-xl font-bold flex items-center\">\r\n                <BarChart className=\"mr-2 h-4 w-4 text-blue-600\" />\r\n                {MONTHLY_TARGETS.closingRatio}%\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Overall Progress */}\r\n      <Card className=\"mb-6\">\r\n        <CardHeader className=\"pb-2\">\r\n          <CardTitle>Overall Goal Progress</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"flex flex-col md:flex-row items-center justify-between\">\r\n            <div className=\"flex items-center mb-4 md:mb-0\">\r\n              <div className=\"w-16 h-16 rounded-full bg-blue-100 flex items-center justify-center mr-4\">\r\n                <Target className=\"h-8 w-8 text-blue-600\" />\r\n              </div>\r\n              <div>\r\n                <div className=\"text-sm text-gray-500\">Total Units Sold</div>\r\n                <div className=\"text-2xl font-bold\">\r\n                  {overallProgress.currentUnits} / {overallProgress.goalUnits}\r\n                </div>\r\n                <div className=\"text-sm text-gray-500\">\r\n                  {overallProgress.percentage}% of monthly goal\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"w-full md:w-3/5\">\r\n              <div className=\"h-4 w-full bg-gray-100 rounded-full overflow-hidden\">\r\n                <div\r\n                  className={`h-full rounded-full ${\r\n                    overallProgress.percentage >= 90\r\n                      ? 'bg-green-500'\r\n                      : overallProgress.percentage >= 70\r\n                      ? 'bg-blue-500'\r\n                      : overallProgress.percentage >= 50\r\n                      ? 'bg-amber-500'\r\n                      : 'bg-red-500'\r\n                  }`}\r\n                  style={{ width: `${Math.min(overallProgress.percentage, 100)}%` }}\r\n                ></div>\r\n              </div>\r\n              <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\r\n                <span>0</span>\r\n                <span>25%</span>\r\n                <span>50%</span>\r\n                <span>75%</span>\r\n                <span>100%</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Tabs for Individual vs Team Goals */}\r\n      <Tabs value={selectedTab} onValueChange={setSelectedTab} className=\"mb-6\">\r\n        <TabsList>\r\n          <TabsTrigger value=\"individual\">\r\n            <Medal className=\"h-4 w-4 mr-2\" />\r\n            Individual Goals\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"team\">\r\n            <Users className=\"h-4 w-4 mr-2\" />\r\n            Team Goals\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"history\">\r\n            <Calendar className=\"h-4 w-4 mr-2\" />\r\n            Historical Data\r\n          </TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"individual\" className=\"mt-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Individual Salesperson Goals</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <Table>\r\n                <TableHeader>\r\n                  <TableRow>\r\n                    <TableHead>Name</TableHead>\r\n                    <TableHead>Team</TableHead>\r\n                    <TableHead className=\"text-right\">Current</TableHead>\r\n                    <TableHead className=\"text-right\">Goal</TableHead>\r\n                    <TableHead className=\"text-right\">Last Month</TableHead>\r\n                    <TableHead className=\"text-right\">Progress</TableHead>\r\n                    <TableHead className=\"text-right\">Gross</TableHead>\r\n                    <TableHead className=\"text-right\">Avg Front Gross</TableHead>\r\n                    <TableHead className=\"text-right\">Avg Back End Gross</TableHead>\r\n                  </TableRow>\r\n                </TableHeader>\r\n                <TableBody>\r\n                  {INDIVIDUAL_GOALS.map(person => {\r\n                    const progress = Math.round((person.currentUnits / person.goalUnits) * 100);\r\n                    const vsLastMonth = person.currentUnits - person.lastMonth;\r\n\r\n                    return (\r\n                      <TableRow key={person.id}>\r\n                        <TableCell className=\"font-medium\">{person.name}</TableCell>\r\n                        <TableCell>{person.team}</TableCell>\r\n                        <TableCell className=\"text-right\">{person.currentUnits}</TableCell>\r\n                        <TableCell className=\"text-right\">\r\n                          {editMode ? (\r\n                            <Input\r\n                              type=\"number\"\r\n                              defaultValue={person.goalUnits}\r\n                              className=\"w-16 h-8 text-right inline-block\"\r\n                            />\r\n                          ) : (\r\n                            person.goalUnits\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell className=\"text-right\">\r\n                          <div className=\"flex items-center justify-end\">\r\n                            {person.lastMonth}{' '}\r\n                            {vsLastMonth > 0 ? (\r\n                              <ArrowUp className=\"ml-1 h-3 w-3 text-green-600\" />\r\n                            ) : vsLastMonth < 0 ? (\r\n                              <ArrowDown className=\"ml-1 h-3 w-3 text-red-600\" />\r\n                            ) : null}\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell className=\"text-right\">\r\n                          <div className=\"flex items-center justify-end\">\r\n                            <div className=\"w-20 h-2 bg-gray-100 rounded-full mr-2 overflow-hidden\">\r\n                              <div\r\n                                className={`h-full rounded-full ${\r\n                                  progress >= 90\r\n                                    ? 'bg-green-500'\r\n                                    : progress >= 70\r\n                                    ? 'bg-blue-500'\r\n                                    : progress >= 50\r\n                                    ? 'bg-amber-500'\r\n                                    : 'bg-red-500'\r\n                                }`}\r\n                                style={{ width: `${Math.min(progress, 100)}%` }}\r\n                              ></div>\r\n                            </div>\r\n                            <span className=\"text-xs\">{progress}%</span>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell className=\"text-right\">\r\n                          ${person.currentGross.toLocaleString()} / $\r\n                          {person.grossTarget.toLocaleString()}\r\n                        </TableCell>\r\n                        <TableCell className=\"text-right\">\r\n                          {editMode ? (\r\n                            <div className=\"flex items-center justify-end gap-2\">\r\n                              <Input\r\n                                type=\"number\"\r\n                                defaultValue={person.frontGrossGoal}\r\n                                min=\"0\"\r\n                                max=\"9999\"\r\n                                step=\"1\"\r\n                                className=\"w-20 h-8 text-right inline-block\"\r\n                              />\r\n                              <span>$</span>\r\n                            </div>\r\n                          ) : (\r\n                            '$' +\r\n                            person.frontGrossGoal.toLocaleString(undefined, {\r\n                              maximumFractionDigits: 0,\r\n                            })\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell className=\"text-right\">\r\n                          {editMode ? (\r\n                            <div className=\"flex items-center justify-end gap-2\">\r\n                              <Input\r\n                                type=\"number\"\r\n                                defaultValue={person.backEndGoal}\r\n                                min=\"0\"\r\n                                max=\"9999\"\r\n                                step=\"1\"\r\n                                className=\"w-20 h-8 text-right inline-block\"\r\n                              />\r\n                              <span>$</span>\r\n                            </div>\r\n                          ) : (\r\n                            '$' +\r\n                            person.backEndGoal.toLocaleString(undefined, {\r\n                              maximumFractionDigits: 0,\r\n                            })\r\n                          )}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"team\" className=\"mt-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Team Goals</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <Table>\r\n                <TableHeader>\r\n                  <TableRow>\r\n                    <TableHead>Team</TableHead>\r\n                    <TableHead className=\"text-right\">Members</TableHead>\r\n                    <TableHead className=\"text-right\">Current / Goal</TableHead>\r\n                    <TableHead className=\"text-right\">Last Month</TableHead>\r\n                    <TableHead className=\"text-right\">Progress</TableHead>\r\n                    <TableHead className=\"text-right\">Gross</TableHead>\r\n                    <TableHead className=\"text-right\">Closing Ratio</TableHead>\r\n                  </TableRow>\r\n                </TableHeader>\r\n                <TableBody>\r\n                  {TEAM_GOALS.map(team => {\r\n                    const progress = Math.round((team.currentUnits / team.goalUnits) * 100);\r\n                    const vsLastMonth = team.currentUnits - team.lastMonth;\r\n\r\n                    return (\r\n                      <TableRow key={team.id}>\r\n                        <TableCell className=\"font-medium\">{team.name}</TableCell>\r\n                        <TableCell className=\"text-right\">{team.members}</TableCell>\r\n                        <TableCell className=\"text-right\">\r\n                          {team.currentUnits} /{' '}\r\n                          {editMode ? (\r\n                            <Input\r\n                              type=\"number\"\r\n                              defaultValue={team.goalUnits}\r\n                              className=\"w-16 h-8 text-right inline-block\"\r\n                            />\r\n                          ) : (\r\n                            team.goalUnits\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell className=\"text-right\">\r\n                          <div className=\"flex items-center justify-end\">\r\n                            {team.lastMonth}{' '}\r\n                            {vsLastMonth > 0 ? (\r\n                              <ArrowUp className=\"ml-1 h-3 w-3 text-green-600\" />\r\n                            ) : vsLastMonth < 0 ? (\r\n                              <ArrowDown className=\"ml-1 h-3 w-3 text-red-600\" />\r\n                            ) : null}\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell className=\"text-right\">\r\n                          <div className=\"flex items-center justify-end\">\r\n                            <div className=\"w-20 h-2 bg-gray-100 rounded-full mr-2 overflow-hidden\">\r\n                              <div\r\n                                className={`h-full rounded-full ${\r\n                                  progress >= 90\r\n                                    ? 'bg-green-500'\r\n                                    : progress >= 70\r\n                                    ? 'bg-blue-500'\r\n                                    : progress >= 50\r\n                                    ? 'bg-amber-500'\r\n                                    : 'bg-red-500'\r\n                                }`}\r\n                                style={{ width: `${Math.min(progress, 100)}%` }}\r\n                              ></div>\r\n                            </div>\r\n                            <span className=\"text-xs\">{progress}%</span>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell className=\"text-right\">\r\n                          ${team.currentGross.toLocaleString()} / $\r\n                          {team.grossTarget.toLocaleString()}\r\n                        </TableCell>\r\n                        <TableCell className=\"text-right\">\r\n                          {team.currentClosingRatio}% /{' '}\r\n                          {editMode ? (\r\n                            <Input\r\n                              type=\"number\"\r\n                              defaultValue={team.closingRatioTarget}\r\n                              className=\"w-12 h-8 text-right inline-block\"\r\n                            />\r\n                          ) : (\r\n                            `${team.closingRatioTarget}%`\r\n                          )}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n\r\n              <div className=\"mt-8 grid md:grid-cols-2 gap-6\">\r\n                <Card>\r\n                  <CardHeader className=\"pb-2\">\r\n                    <CardTitle className=\"text-sm\">Front End / Back End Targets</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <Table>\r\n                      <TableHeader>\r\n                        <TableRow>\r\n                          <TableHead>Team</TableHead>\r\n                          <TableHead className=\"text-right\">Front End Target</TableHead>\r\n                          <TableHead className=\"text-right\">Back End Target</TableHead>\r\n                        </TableRow>\r\n                      </TableHeader>\r\n                      <TableBody>\r\n                        {TEAM_GOALS.map(team => (\r\n                          <TableRow key={`fe-${team.id}`}>\r\n                            <TableCell>{team.name}</TableCell>\r\n                            <TableCell className=\"text-right\">\r\n                              $\r\n                              {editMode ? (\r\n                                <Input\r\n                                  type=\"number\"\r\n                                  defaultValue={team.frontEndTarget}\r\n                                  className=\"w-20 h-8 text-right inline-block\"\r\n                                />\r\n                              ) : (\r\n                                team.frontEndTarget.toLocaleString()\r\n                              )}\r\n                            </TableCell>\r\n                            <TableCell className=\"text-right\">\r\n                              $\r\n                              {editMode ? (\r\n                                <Input\r\n                                  type=\"number\"\r\n                                  defaultValue={team.backEndTarget}\r\n                                  className=\"w-20 h-8 text-right inline-block\"\r\n                                />\r\n                              ) : (\r\n                                team.backEndTarget.toLocaleString()\r\n                              )}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                <Card>\r\n                  <CardHeader className=\"pb-2\">\r\n                    <CardTitle className=\"text-sm\">Performance Bonus Structure</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <Table>\r\n                      <TableHeader>\r\n                        <TableRow>\r\n                          <TableHead>Achievement Level</TableHead>\r\n                          <TableHead className=\"text-right\">Team Bonus</TableHead>\r\n                          <TableHead className=\"text-right\">Individual Bonus</TableHead>\r\n                        </TableRow>\r\n                      </TableHeader>\r\n                      <TableBody>\r\n                        <TableRow>\r\n                          <TableCell>100% of Goal</TableCell>\r\n                          <TableCell className=\"text-right\">$1,000</TableCell>\r\n                          <TableCell className=\"text-right\">$500</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell>110% of Goal</TableCell>\r\n                          <TableCell className=\"text-right\">$2,000</TableCell>\r\n                          <TableCell className=\"text-right\">$1,000</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell>120% of Goal</TableCell>\r\n                          <TableCell className=\"text-right\">$3,500</TableCell>\r\n                          <TableCell className=\"text-right\">$1,500</TableCell>\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    </Table>\r\n                  </CardContent>\r\n                </Card>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"history\" className=\"mt-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Historical Performance</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-center py-12\">\r\n                <Calendar className=\"h-12 w-12 mx-auto text-gray-400 mb-4\" />\r\n                <h3 className=\"text-lg font-medium mb-2\">Historical Data Module Coming Soon</h3>\r\n                <p className=\"text-gray-500 max-w-md mx-auto\">\r\n                  The historical performance and goals tracking module is currently under\r\n                  development. Check back soon for detailed reports on past performance and goal\r\n                  achievement.\r\n                </p>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoalsPage;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardHeader, CardTitle, CardContent, CardFooter } from '../../components/ui/card';\r\nimport { Button } from '../../components/ui/button';\r\nimport { Input } from '../../components/ui/input';\r\nimport { Label } from '../../components/ui/label';\r\nimport { Checkbox } from '../../components/ui/checkbox';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '../../components/ui/select';\r\nimport { Popover, PopoverContent, PopoverTrigger } from '../../components/ui/popover';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from '../../components/ui/table';\r\nimport {\r\n  Calendar,\r\n  CalendarCell,\r\n  CalendarCellProps,\r\n  CalendarGrid,\r\n  CalendarGridBody,\r\n  CalendarGridHeader,\r\n  CalendarHeaderCell,\r\n  CalendarHeading,\r\n  CalendarMonthTrigger,\r\n  CalendarViewTrigger,\r\n} from '../../components/ui/calendar';\r\nimport {\r\n  ChevronLeft,\r\n  ChevronRight,\r\n  Users,\r\n  UserPlus,\r\n  Calendar as CalendarIcon,\r\n  Clock,\r\n  Save,\r\n  Copy,\r\n  Trash2,\r\n  FileText,\r\n  ArrowLeft,\r\n  AlertCircle,\r\n  Info,\r\n  Plus,\r\n  Check,\r\n  X,\r\n  Edit,\r\n} from 'lucide-react';\r\n\r\n// Sample schedule data\r\nconst TEAM_MEMBERS = [\r\n  {\r\n    id: 1,\r\n    name: 'Sarah Johnson',\r\n    team: 'Team A',\r\n    color: '#4f46e5',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Michael Chen',\r\n    team: 'Team A',\r\n    color: '#4f46e5',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'David Rodriguez',\r\n    team: 'Team A',\r\n    color: '#4f46e5',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Amanda Williams',\r\n    team: 'Team B',\r\n    color: '#0891b2',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Robert Johnson',\r\n    team: 'Team B',\r\n    color: '#0891b2',\r\n  },\r\n];\r\n\r\n// Sample shift types\r\nconst SHIFT_TYPES = [\r\n  { id: 1, name: 'Opening (9am-6pm)', color: '#22c55e' },\r\n  { id: 2, name: 'Mid (10am-7pm)', color: '#3b82f6' },\r\n  { id: 3, name: 'Closing (12pm-9pm)', color: '#8b5cf6' },\r\n  { id: 4, name: 'Weekend (9am-5pm)', color: '#f59e0b' },\r\n  { id: 5, name: 'Off', color: '#e5e7eb' },\r\n];\r\n\r\n// Sample schedule data for the current month\r\nconst CURRENT_SCHEDULE = [\r\n  {\r\n    date: '2023-06-12',\r\n    day: 'Monday',\r\n    shifts: [\r\n      { memberId: 1, shiftTypeId: 1 },\r\n      { memberId: 2, shiftTypeId: 1 },\r\n      { memberId: 3, shiftTypeId: 1 },\r\n      { memberId: 4, shiftTypeId: 5 },\r\n      { memberId: 5, shiftTypeId: 5 },\r\n    ],\r\n  },\r\n  {\r\n    date: '2023-06-13',\r\n    day: 'Tuesday',\r\n    shifts: [\r\n      { memberId: 1, shiftTypeId: 1 },\r\n      { memberId: 2, shiftTypeId: 1 },\r\n      { memberId: 3, shiftTypeId: 1 },\r\n      { memberId: 4, shiftTypeId: 5 },\r\n      { memberId: 5, shiftTypeId: 5 },\r\n    ],\r\n  },\r\n  {\r\n    date: '2023-06-14',\r\n    day: 'Wednesday',\r\n    shifts: [\r\n      { memberId: 1, shiftTypeId: 2 },\r\n      { memberId: 2, shiftTypeId: 2 },\r\n      { memberId: 3, shiftTypeId: 2 },\r\n      { memberId: 4, shiftTypeId: 5 },\r\n      { memberId: 5, shiftTypeId: 5 },\r\n    ],\r\n  },\r\n  {\r\n    date: '2023-06-15',\r\n    day: 'Thursday',\r\n    shifts: [\r\n      { memberId: 1, shiftTypeId: 5 },\r\n      { memberId: 2, shiftTypeId: 5 },\r\n      { memberId: 3, shiftTypeId: 5 },\r\n      { memberId: 4, shiftTypeId: 1 },\r\n      { memberId: 5, shiftTypeId: 1 },\r\n    ],\r\n  },\r\n  {\r\n    date: '2023-06-16',\r\n    day: 'Friday',\r\n    shifts: [\r\n      { memberId: 1, shiftTypeId: 5 },\r\n      { memberId: 2, shiftTypeId: 5 },\r\n      { memberId: 3, shiftTypeId: 5 },\r\n      { memberId: 4, shiftTypeId: 3 },\r\n      { memberId: 5, shiftTypeId: 3 },\r\n    ],\r\n  },\r\n  {\r\n    date: '2023-06-17',\r\n    day: 'Saturday',\r\n    shifts: [\r\n      { memberId: 1, shiftTypeId: 4 },\r\n      { memberId: 2, shiftTypeId: 4 },\r\n      { memberId: 3, shiftTypeId: 4 },\r\n      { memberId: 4, shiftTypeId: 4 },\r\n      { memberId: 5, shiftTypeId: 4 },\r\n    ],\r\n  },\r\n  {\r\n    date: '2023-06-18',\r\n    day: 'Sunday',\r\n    shifts: [\r\n      { memberId: 1, shiftTypeId: 5 },\r\n      { memberId: 2, shiftTypeId: 5 },\r\n      { memberId: 3, shiftTypeId: 5 },\r\n      { memberId: 4, shiftTypeId: 4 },\r\n      { memberId: 5, shiftTypeId: 5 },\r\n    ],\r\n  },\r\n];\r\n\r\n// Helper to generate dates for the week view\r\nconst generateWeekDates = (startDate = new Date()) => {\r\n  const dates = [];\r\n  const currentDate = new Date(startDate);\r\n  currentDate.setDate(currentDate.getDate() - currentDate.getDay()); // Start from Sunday\r\n\r\n  for (let i = 0; i < 7; i++) {\r\n    dates.push(new Date(currentDate));\r\n    currentDate.setDate(currentDate.getDate() + 1);\r\n  }\r\n  return dates;\r\n};\r\n\r\n// Helper to format date as YYYY-MM-DD\r\nconst formatDate = date => {\r\n  return date.toISOString().split('T')[0];\r\n};\r\n\r\nconst SchedulePage = () => {\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [view, setView] = useState('week'); // 'week' or 'month'\r\n  const [currentWeek, setCurrentWeek] = useState(generateWeekDates());\r\n  const [editingShift, setEditingShift] = useState(null);\r\n  const [selectedMember, setSelectedMember] = useState(null);\r\n  const [selectedShiftType, setSelectedShiftType] = useState(null);\r\n\r\n  // Move to the next/previous week\r\n  const navigateWeek = direction => {\r\n    const newStartDate = new Date(currentWeek[0]);\r\n    newStartDate.setDate(newStartDate.getDate() + (direction === 'next' ? 7 : -7));\r\n    setCurrentWeek(generateWeekDates(newStartDate));\r\n  };\r\n\r\n  // Helper to get shift type by ID\r\n  const getShiftType = id => SHIFT_TYPES.find(shift => shift.id === id);\r\n\r\n  // Helper to get team member by ID\r\n  const getTeamMember = id => TEAM_MEMBERS.find(member => member.id === id);\r\n\r\n  // Get shifts for a specific member on a specific date\r\n  const getMemberShift = (memberId, date) => {\r\n    const scheduleDay = CURRENT_SCHEDULE.find(day => day.date === date);\r\n    if (!scheduleDay) return null;\r\n\r\n    const shift = scheduleDay.shifts.find(shift => shift.memberId === memberId);\r\n    return shift ? getShiftType(shift.shiftTypeId) : null;\r\n  };\r\n\r\n  // Handle editing a shift\r\n  const handleEditShift = (memberId, date) => {\r\n    const scheduleDay = CURRENT_SCHEDULE.find(day => day.date === date);\r\n    if (!scheduleDay) return;\r\n\r\n    const shift = scheduleDay.shifts.find(shift => shift.memberId === memberId);\r\n\r\n    setEditingShift({ memberId, date });\r\n    setSelectedMember(TEAM_MEMBERS.find(m => m.id === memberId));\r\n    setSelectedShiftType(shift ? getShiftType(shift.shiftTypeId) : null);\r\n  };\r\n\r\n  // Handle saving a shift\r\n  const handleSaveShift = () => {\r\n    // In a real app, this would update the database\r\n    console.log('Saving shift:', {\r\n      memberId: selectedMember.id,\r\n      date: editingShift.date,\r\n      shiftTypeId: selectedShiftType.id,\r\n    });\r\n\r\n    // Close the edit modal\r\n    setEditingShift(null);\r\n    setSelectedMember(null);\r\n    setSelectedShiftType(null);\r\n  };\r\n\r\n  // Get the name of the month and year\r\n  const monthYearString = new Intl.DateTimeFormat('en-US', {\r\n    month: 'long',\r\n    year: 'numeric',\r\n  }).format(currentWeek[0]);\r\n\r\n  return (\r\n    <div className=\"container py-6\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <div className=\"flex items-center\">\r\n          <Button variant=\"ghost\" size=\"sm\" asChild className=\"mr-2\">\r\n            <Link to=\"/dashboard\">\r\n              <ChevronLeft className=\"h-4 w-4 mr-1\" />\r\n              Back to Dashboard\r\n            </Link>\r\n          </Button>\r\n          <h1 className=\"text-3xl font-bold\">Sales Schedule Configurator</h1>\r\n        </div>\r\n        <div className=\"flex gap-2\">\r\n          <Button variant=\"outline\" size=\"sm\">\r\n            <Copy className=\"mr-2 h-4 w-4\" />\r\n            Copy Last Week\r\n          </Button>\r\n          <Button variant=\"outline\" size=\"sm\">\r\n            <FileText className=\"mr-2 h-4 w-4\" />\r\n            Export Schedule\r\n          </Button>\r\n          <Button>\r\n            <Save className=\"mr-2 h-4 w-4\" />\r\n            Save Changes\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Schedule Navigation */}\r\n      <Card className=\"mb-6\">\r\n        <CardHeader className=\"pb-3\">\r\n          <div className=\"flex justify-between items-center\">\r\n            <div className=\"flex items-center\">\r\n              <CalendarIcon className=\"h-5 w-5 text-gray-500 mr-2\" />\r\n              <CardTitle>{monthYearString}</CardTitle>\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <Button variant=\"outline\" size=\"sm\" onClick={() => navigateWeek('prev')}>\r\n                <ChevronLeft className=\"h-4 w-4\" />\r\n                Previous Week\r\n              </Button>\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                onClick={() => setCurrentWeek(generateWeekDates(new Date()))}\r\n              >\r\n                Today\r\n              </Button>\r\n              <Button variant=\"outline\" size=\"sm\" onClick={() => navigateWeek('next')}>\r\n                Next Week\r\n                <ChevronRight className=\"ml-2 h-4 w-4\" />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </CardHeader>\r\n        <CardContent className=\"pb-4\">\r\n          {/* Week View */}\r\n          <div className=\"overflow-x-auto\">\r\n            <div className=\"min-w-full\">\r\n              <div className=\"grid grid-cols-8 border-b\">\r\n                {/* Left header for team members */}\r\n                <div className=\"font-medium text-sm p-3 border-r bg-gray-50\">Team Member</div>\r\n\r\n                {/* Day headers */}\r\n                {currentWeek.map((date, index) => {\r\n                  const isToday = new Date().toDateString() === date.toDateString();\r\n                  return (\r\n                    <div\r\n                      key={index}\r\n                      className={`p-3 text-center border-r last:border-r-0 ${\r\n                        isToday ? 'bg-blue-50' : 'bg-gray-50'\r\n                      }`}\r\n                    >\r\n                      <div className=\"font-medium text-sm\">\r\n                        {date.toLocaleDateString('en-US', { weekday: 'short' })}\r\n                      </div>\r\n                      <div\r\n                        className={`text-xs ${\r\n                          isToday ? 'font-bold text-blue-700' : 'text-gray-500'\r\n                        }`}\r\n                      >\r\n                        {date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n\r\n              {/* Team member rows */}\r\n              {TEAM_MEMBERS.map(member => (\r\n                <div key={member.id} className=\"grid grid-cols-8 border-b last:border-b-0\">\r\n                  {/* Team member name */}\r\n                  <div className=\"p-3 flex items-center border-r bg-gray-50\">\r\n                    <div\r\n                      className=\"w-2 h-2 rounded-full mr-2\"\r\n                      style={{ backgroundColor: member.color }}\r\n                    ></div>\r\n                    <div className=\"text-sm font-medium\">{member.name}</div>\r\n                  </div>\r\n\r\n                  {/* Shift cells for each day */}\r\n                  {currentWeek.map((date, dateIndex) => {\r\n                    const formattedDate = formatDate(date);\r\n                    const shift = getMemberShift(member.id, formattedDate);\r\n\r\n                    return (\r\n                      <div\r\n                        key={`${member.id}-${dateIndex}`}\r\n                        className=\"p-2 border-r last:border-r-0 text-center cursor-pointer hover:bg-gray-50\"\r\n                        onClick={() => handleEditShift(member.id, formattedDate)}\r\n                      >\r\n                        {shift ? (\r\n                          <div\r\n                            className=\"text-xs p-1 rounded\"\r\n                            style={{\r\n                              backgroundColor: shift.color + '20',\r\n                              borderLeft: `3px solid ${shift.color}`,\r\n                            }}\r\n                          >\r\n                            {shift.name}\r\n                          </div>\r\n                        ) : (\r\n                          <div className=\"text-xs text-gray-400 italic p-1\">Unassigned</div>\r\n                        )}\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Team Coverage Overview */}\r\n      <div className=\"grid gap-6 md:grid-cols-2 mb-6\">\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Team Coverage</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <Table>\r\n              <TableHeader>\r\n                <TableRow>\r\n                  <TableHead>Day</TableHead>\r\n                  <TableHead>Date</TableHead>\r\n                  <TableHead className=\"text-right\">Opening</TableHead>\r\n                  <TableHead className=\"text-right\">Mid</TableHead>\r\n                  <TableHead className=\"text-right\">Closing</TableHead>\r\n                  <TableHead className=\"text-right\">Off</TableHead>\r\n                </TableRow>\r\n              </TableHeader>\r\n              <TableBody>\r\n                {currentWeek.map((date, index) => {\r\n                  const formattedDate = formatDate(date);\r\n                  const scheduleForDay = CURRENT_SCHEDULE.find(d => d.date === formattedDate);\r\n\r\n                  // Count shifts by type\r\n                  const shifts = {\r\n                    opening: 0,\r\n                    mid: 0,\r\n                    closing: 0,\r\n                    weekend: 0,\r\n                    off: 0,\r\n                  };\r\n\r\n                  if (scheduleForDay) {\r\n                    scheduleForDay.shifts.forEach(shift => {\r\n                      if (shift.shiftTypeId === 1) shifts.opening++;\r\n                      else if (shift.shiftTypeId === 2) shifts.mid++;\r\n                      else if (shift.shiftTypeId === 3) shifts.closing++;\r\n                      else if (shift.shiftTypeId === 4) shifts.weekend++;\r\n                      else if (shift.shiftTypeId === 5) shifts.off++;\r\n                    });\r\n                  }\r\n\r\n                  return (\r\n                    <TableRow key={index}>\r\n                      <TableCell className=\"font-medium\">\r\n                        {date.toLocaleDateString('en-US', { weekday: 'short' })}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}\r\n                      </TableCell>\r\n                      <TableCell className=\"text-right\">\r\n                        {shifts.opening > 0 ? shifts.opening : '-'}\r\n                      </TableCell>\r\n                      <TableCell className=\"text-right\">\r\n                        {shifts.mid > 0 ? shifts.mid : '-'}\r\n                      </TableCell>\r\n                      <TableCell className=\"text-right\">\r\n                        {shifts.closing > 0 || shifts.weekend > 0\r\n                          ? shifts.closing + shifts.weekend\r\n                          : '-'}\r\n                      </TableCell>\r\n                      <TableCell className=\"text-right\">\r\n                        {shifts.off > 0 ? shifts.off : '-'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Shift Types</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"space-y-4\">\r\n              {SHIFT_TYPES.map(shift => (\r\n                <div key={shift.id} className=\"flex items-center\">\r\n                  <div\r\n                    className=\"w-4 h-4 rounded-full mr-2\"\r\n                    style={{ backgroundColor: shift.color }}\r\n                  ></div>\r\n                  <div className=\"flex-grow\">\r\n                    <div className=\"font-medium text-sm\">{shift.name}</div>\r\n                  </div>\r\n                  <Button variant=\"ghost\" size=\"sm\">\r\n                    <Edit className=\"h-4 w-4\" />\r\n                  </Button>\r\n                </div>\r\n              ))}\r\n\r\n              <Button variant=\"outline\" className=\"w-full mt-2\" size=\"sm\">\r\n                <Plus className=\"h-4 w-4 mr-2\" />\r\n                Add Shift Type\r\n              </Button>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Edit Shift Dialog */}\r\n      {editingShift && (\r\n        <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white rounded-lg shadow-lg w-full max-w-md p-6\">\r\n            <h3 className=\"text-lg font-medium mb-4\">Edit Shift</h3>\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <Label htmlFor=\"member\">Team Member</Label>\r\n                <div className=\"text-sm font-medium mt-1\">{selectedMember?.name}</div>\r\n              </div>\r\n\r\n              <div>\r\n                <Label htmlFor=\"date\">Date</Label>\r\n                <div className=\"text-sm font-medium mt-1\">\r\n                  {new Date(editingShift.date).toLocaleDateString('en-US', {\r\n                    weekday: 'long',\r\n                    month: 'long',\r\n                    day: 'numeric',\r\n                    year: 'numeric',\r\n                  })}\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <Label htmlFor=\"shift-type\">Shift Type</Label>\r\n                <Select\r\n                  value={selectedShiftType?.id.toString() || ''}\r\n                  onValueChange={value => {\r\n                    const shiftType = SHIFT_TYPES.find(s => s.id === parseInt(value));\r\n                    setSelectedShiftType(shiftType);\r\n                  }}\r\n                >\r\n                  <SelectTrigger id=\"shift-type\">\r\n                    <SelectValue placeholder=\"Select a shift type\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    {SHIFT_TYPES.map(shift => (\r\n                      <SelectItem key={shift.id} value={shift.id.toString()}>\r\n                        <div className=\"flex items-center\">\r\n                          <div\r\n                            className=\"w-3 h-3 rounded-full mr-2\"\r\n                            style={{ backgroundColor: shift.color }}\r\n                          ></div>\r\n                          {shift.name}\r\n                        </div>\r\n                      </SelectItem>\r\n                    ))}\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n\r\n              <div className=\"flex justify-end gap-2 mt-6\">\r\n                <Button\r\n                  variant=\"outline\"\r\n                  onClick={() => {\r\n                    setEditingShift(null);\r\n                    setSelectedMember(null);\r\n                    setSelectedShiftType(null);\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={handleSaveShift}>Save</Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SchedulePage;\r\n","\"use client\";\n\n// src/slot.tsx\nimport * as React from \"react\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { Fragment as Fragment2, jsx } from \"react/jsx-runtime\";\n// @__NO_SIDE_EFFECTS__\nfunction createSlot(ownerName) {\n  const SlotClone = /* @__PURE__ */ createSlotClone(ownerName);\n  const Slot2 = React.forwardRef((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    const childrenArray = React.Children.toArray(children);\n    const slottable = childrenArray.find(isSlottable);\n    if (slottable) {\n      const newElement = slottable.props.children;\n      const newChildren = childrenArray.map((child) => {\n        if (child === slottable) {\n          if (React.Children.count(newElement) > 1) return React.Children.only(null);\n          return React.isValidElement(newElement) ? newElement.props.children : null;\n        } else {\n          return child;\n        }\n      });\n      return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children: React.isValidElement(newElement) ? React.cloneElement(newElement, void 0, newChildren) : null });\n    }\n    return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children });\n  });\n  Slot2.displayName = `${ownerName}.Slot`;\n  return Slot2;\n}\nvar Slot = /* @__PURE__ */ createSlot(\"Slot\");\n// @__NO_SIDE_EFFECTS__\nfunction createSlotClone(ownerName) {\n  const SlotClone = React.forwardRef((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    const childrenRef = React.isValidElement(children) ? getElementRef(children) : void 0;\n    const ref = useComposedRefs(childrenRef, forwardedRef);\n    if (React.isValidElement(children)) {\n      const props2 = mergeProps(slotProps, children.props);\n      if (children.type !== React.Fragment) {\n        props2.ref = ref;\n      }\n      return React.cloneElement(children, props2);\n    }\n    return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n  });\n  SlotClone.displayName = `${ownerName}.SlotClone`;\n  return SlotClone;\n}\nvar SLOTTABLE_IDENTIFIER = Symbol(\"radix.slottable\");\n// @__NO_SIDE_EFFECTS__\nfunction createSlottable(ownerName) {\n  const Slottable2 = ({ children }) => {\n    return /* @__PURE__ */ jsx(Fragment2, { children });\n  };\n  Slottable2.displayName = `${ownerName}.Slottable`;\n  Slottable2.__radixId = SLOTTABLE_IDENTIFIER;\n  return Slottable2;\n}\nvar Slottable = /* @__PURE__ */ createSlottable(\"Slottable\");\nfunction isSlottable(child) {\n  return React.isValidElement(child) && typeof child.type === \"function\" && \"__radixId\" in child.type && child.type.__radixId === SLOTTABLE_IDENTIFIER;\n}\nfunction mergeProps(slotProps, childProps) {\n  const overrideProps = { ...childProps };\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args) => {\n          const result = childPropValue(...args);\n          slotPropValue(...args);\n          return result;\n        };\n      } else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    } else if (propName === \"style\") {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === \"className\") {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(\" \");\n    }\n  }\n  return { ...slotProps, ...overrideProps };\n}\nfunction getElementRef(element) {\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.ref;\n  }\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n  return element.props.ref || element.ref;\n}\nexport {\n  Slot as Root,\n  Slot,\n  Slottable,\n  createSlot,\n  createSlottable\n};\n//# sourceMappingURL=index.mjs.map\n","// src/primitive.tsx\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { createSlot } from \"@radix-ui/react-slot\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NODES = [\n  \"a\",\n  \"button\",\n  \"div\",\n  \"form\",\n  \"h2\",\n  \"h3\",\n  \"img\",\n  \"input\",\n  \"label\",\n  \"li\",\n  \"nav\",\n  \"ol\",\n  \"p\",\n  \"select\",\n  \"span\",\n  \"svg\",\n  \"ul\"\n];\nvar Primitive = NODES.reduce((primitive, node) => {\n  const Slot = createSlot(`Primitive.${node}`);\n  const Node = React.forwardRef((props, forwardedRef) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp = asChild ? Slot : node;\n    if (typeof window !== \"undefined\") {\n      window[Symbol.for(\"radix-ui\")] = true;\n    }\n    return /* @__PURE__ */ jsx(Comp, { ...primitiveProps, ref: forwardedRef });\n  });\n  Node.displayName = `Primitive.${node}`;\n  return { ...primitive, [node]: Node };\n}, {});\nfunction dispatchDiscreteCustomEvent(target, event) {\n  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));\n}\nvar Root = Primitive;\nexport {\n  Primitive,\n  Root,\n  dispatchDiscreteCustomEvent\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// src/collapsible.tsx\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { useId } from \"@radix-ui/react-id\";\nimport { jsx } from \"react/jsx-runtime\";\nvar COLLAPSIBLE_NAME = \"Collapsible\";\nvar [createCollapsibleContext, createCollapsibleScope] = createContextScope(COLLAPSIBLE_NAME);\nvar [CollapsibleProvider, useCollapsibleContext] = createCollapsibleContext(COLLAPSIBLE_NAME);\nvar Collapsible = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeCollapsible,\n      open: openProp,\n      defaultOpen,\n      disabled,\n      onOpenChange,\n      ...collapsibleProps\n    } = props;\n    const [open, setOpen] = useControllableState({\n      prop: openProp,\n      defaultProp: defaultOpen ?? false,\n      onChange: onOpenChange,\n      caller: COLLAPSIBLE_NAME\n    });\n    return /* @__PURE__ */ jsx(\n      CollapsibleProvider,\n      {\n        scope: __scopeCollapsible,\n        disabled,\n        contentId: useId(),\n        open,\n        onOpenToggle: React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen]),\n        children: /* @__PURE__ */ jsx(\n          Primitive.div,\n          {\n            \"data-state\": getState(open),\n            \"data-disabled\": disabled ? \"\" : void 0,\n            ...collapsibleProps,\n            ref: forwardedRef\n          }\n        )\n      }\n    );\n  }\n);\nCollapsible.displayName = COLLAPSIBLE_NAME;\nvar TRIGGER_NAME = \"CollapsibleTrigger\";\nvar CollapsibleTrigger = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeCollapsible, ...triggerProps } = props;\n    const context = useCollapsibleContext(TRIGGER_NAME, __scopeCollapsible);\n    return /* @__PURE__ */ jsx(\n      Primitive.button,\n      {\n        type: \"button\",\n        \"aria-controls\": context.contentId,\n        \"aria-expanded\": context.open || false,\n        \"data-state\": getState(context.open),\n        \"data-disabled\": context.disabled ? \"\" : void 0,\n        disabled: context.disabled,\n        ...triggerProps,\n        ref: forwardedRef,\n        onClick: composeEventHandlers(props.onClick, context.onOpenToggle)\n      }\n    );\n  }\n);\nCollapsibleTrigger.displayName = TRIGGER_NAME;\nvar CONTENT_NAME = \"CollapsibleContent\";\nvar CollapsibleContent = React.forwardRef(\n  (props, forwardedRef) => {\n    const { forceMount, ...contentProps } = props;\n    const context = useCollapsibleContext(CONTENT_NAME, props.__scopeCollapsible);\n    return /* @__PURE__ */ jsx(Presence, { present: forceMount || context.open, children: ({ present }) => /* @__PURE__ */ jsx(CollapsibleContentImpl, { ...contentProps, ref: forwardedRef, present }) });\n  }\n);\nCollapsibleContent.displayName = CONTENT_NAME;\nvar CollapsibleContentImpl = React.forwardRef((props, forwardedRef) => {\n  const { __scopeCollapsible, present, children, ...contentProps } = props;\n  const context = useCollapsibleContext(CONTENT_NAME, __scopeCollapsible);\n  const [isPresent, setIsPresent] = React.useState(present);\n  const ref = React.useRef(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const heightRef = React.useRef(0);\n  const height = heightRef.current;\n  const widthRef = React.useRef(0);\n  const width = widthRef.current;\n  const isOpen = context.open || isPresent;\n  const isMountAnimationPreventedRef = React.useRef(isOpen);\n  const originalStylesRef = React.useRef(void 0);\n  React.useEffect(() => {\n    const rAF = requestAnimationFrame(() => isMountAnimationPreventedRef.current = false);\n    return () => cancelAnimationFrame(rAF);\n  }, []);\n  useLayoutEffect(() => {\n    const node = ref.current;\n    if (node) {\n      originalStylesRef.current = originalStylesRef.current || {\n        transitionDuration: node.style.transitionDuration,\n        animationName: node.style.animationName\n      };\n      node.style.transitionDuration = \"0s\";\n      node.style.animationName = \"none\";\n      const rect = node.getBoundingClientRect();\n      heightRef.current = rect.height;\n      widthRef.current = rect.width;\n      if (!isMountAnimationPreventedRef.current) {\n        node.style.transitionDuration = originalStylesRef.current.transitionDuration;\n        node.style.animationName = originalStylesRef.current.animationName;\n      }\n      setIsPresent(present);\n    }\n  }, [context.open, present]);\n  return /* @__PURE__ */ jsx(\n    Primitive.div,\n    {\n      \"data-state\": getState(context.open),\n      \"data-disabled\": context.disabled ? \"\" : void 0,\n      id: context.contentId,\n      hidden: !isOpen,\n      ...contentProps,\n      ref: composedRefs,\n      style: {\n        [`--radix-collapsible-content-height`]: height ? `${height}px` : void 0,\n        [`--radix-collapsible-content-width`]: width ? `${width}px` : void 0,\n        ...props.style\n      },\n      children: isOpen && children\n    }\n  );\n});\nfunction getState(open) {\n  return open ? \"open\" : \"closed\";\n}\nvar Root = Collapsible;\nvar Trigger = CollapsibleTrigger;\nvar Content = CollapsibleContent;\nexport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n  Content,\n  Root,\n  Trigger,\n  createCollapsibleScope\n};\n//# sourceMappingURL=index.mjs.map\n","'use client';\r\n\r\nimport * as React from 'react';\r\nimport * as CollapsiblePrimitive from '@radix-ui/react-collapsible';\r\n\r\nconst Collapsible = CollapsiblePrimitive.Root;\r\n\r\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger;\r\n\r\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent;\r\n\r\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent };\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardHeader, CardTitle, CardContent, CardFooter } from '../../components/ui/card';\r\nimport { Button } from '../../components/ui/button';\r\nimport { Input } from '../../components/ui/input';\r\nimport { Label } from '../../components/ui/label';\r\nimport { Tabs, TabsList, TabsTrigger, TabsContent } from '../../components/ui/tabs';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '../../components/ui/select';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from '../../components/ui/table';\r\nimport {\r\n  ChevronLeft,\r\n  Download,\r\n  Calendar,\r\n  LineChart,\r\n  BarChart,\r\n  PieChart,\r\n  TrendingUp,\r\n  TrendingDown,\r\n  DollarSign,\r\n  Car,\r\n  Users,\r\n  ArrowUp,\r\n  ArrowDown,\r\n  FileText,\r\n  RefreshCw,\r\n  Filter,\r\n  ChevronDown,\r\n  ChevronRight,\r\n  Clock,\r\n  CheckSquare,\r\n} from 'lucide-react';\r\nimport {\r\n  Collapsible,\r\n  CollapsibleContent,\r\n  CollapsibleTrigger,\r\n} from '../../components/ui/collapsible';\r\n\r\n// Sample monthly sales data\r\nconst MONTHLY_SALES = [\r\n  { month: 'Jan', newVehicles: 42, usedVehicles: 38, totalSales: 80, avgGross: 1820 },\r\n  { month: 'Feb', newVehicles: 38, usedVehicles: 35, totalSales: 73, avgGross: 1750 },\r\n  { month: 'Mar', newVehicles: 45, usedVehicles: 40, totalSales: 85, avgGross: 1780 },\r\n  { month: 'Apr', newVehicles: 48, usedVehicles: 42, totalSales: 90, avgGross: 1850 },\r\n  { month: 'May', newVehicles: 52, usedVehicles: 48, totalSales: 100, avgGross: 1930 },\r\n  { month: 'Jun', newVehicles: 58, usedVehicles: 52, totalSales: 110, avgGross: 2100 },\r\n];\r\n\r\n// Sample team performance data\r\nconst TEAM_PERFORMANCE = [\r\n  {\r\n    team: 'Team A',\r\n    members: 3,\r\n    totalSales: 62,\r\n    salesPerMember: 20.7,\r\n    grossProfit: 124500,\r\n    avgGross: 2008,\r\n    closingRatio: 32,\r\n  },\r\n  {\r\n    team: 'Team B',\r\n    members: 2,\r\n    totalSales: 38,\r\n    salesPerMember: 19,\r\n    grossProfit: 74100,\r\n    avgGross: 1950,\r\n    closingRatio: 28,\r\n  },\r\n];\r\n\r\n// Sample salesperson data\r\nconst SALESPERSON_DATA = [\r\n  {\r\n    id: 1,\r\n    name: 'Sarah Johnson',\r\n    team: 'Team A',\r\n    newVehicles: 24,\r\n    usedVehicles: 10,\r\n    totalSales: 34,\r\n    grossProfit: 68500,\r\n    avgGross: 2015,\r\n    closingRatio: 35,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Michael Chen',\r\n    team: 'Team A',\r\n    newVehicles: 18,\r\n    usedVehicles: 8,\r\n    totalSales: 26,\r\n    grossProfit: 52000,\r\n    avgGross: 2000,\r\n    closingRatio: 30,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'David Rodriguez',\r\n    team: 'Team A',\r\n    newVehicles: 14,\r\n    usedVehicles: 8,\r\n    totalSales: 22,\r\n    grossProfit: 44000,\r\n    avgGross: 2000,\r\n    closingRatio: 28,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Amanda Williams',\r\n    team: 'Team B',\r\n    newVehicles: 12,\r\n    usedVehicles: 8,\r\n    totalSales: 20,\r\n    grossProfit: 38000,\r\n    avgGross: 1900,\r\n    closingRatio: 27,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Robert Johnson',\r\n    team: 'Team B',\r\n    newVehicles: 10,\r\n    usedVehicles: 8,\r\n    totalSales: 18,\r\n    grossProfit: 36100,\r\n    avgGross: 2006,\r\n    closingRatio: 29,\r\n  },\r\n];\r\n\r\n// Sample inventory data\r\nconst INVENTORY_DATA = {\r\n  newVehicles: {\r\n    total: 120,\r\n    inTransit: 15,\r\n    sold: 58,\r\n    available: 47,\r\n    reserved: 10,\r\n    daysOnLot: 32,\r\n  },\r\n  usedVehicles: {\r\n    total: 85,\r\n    inTransit: 8,\r\n    sold: 52,\r\n    available: 25,\r\n    reserved: 5,\r\n    daysOnLot: 24,\r\n  },\r\n};\r\n\r\n// Sample types of sold vehicles\r\nconst VEHICLE_TYPES_SOLD = [\r\n  { type: 'Sedan', count: 42, percentage: 38 },\r\n  { type: 'SUV', count: 35, percentage: 32 },\r\n  { type: 'Truck', count: 18, percentage: 16 },\r\n  { type: 'Crossover', count: 10, percentage: 9 },\r\n  { type: 'Luxury', count: 5, percentage: 5 },\r\n];\r\n\r\n// Sample finance data\r\nconst FINANCE_DATA = {\r\n  totalFinanced: 92,\r\n  cashDeals: 18,\r\n  avgRate: 4.2,\r\n  frontEndAvg: 1460,\r\n  backEndAvg: 880,\r\n  warrantyPenetration: 68,\r\n  gapPenetration: 72,\r\n};\r\n\r\n// Sample detailed sales metrics data\r\nconst DETAILED_SALES_METRICS = {\r\n  lastUpdate: '06/18/2025',\r\n  totalSold: 23,\r\n  totalBooked: 21,\r\n  tracking: 42,\r\n  currentFront: 10145,\r\n  currentBack: 62438,\r\n  total: 69006,\r\n  avgFront: 483,\r\n  avgBack: 2973,\r\n  pvr: 3456,\r\n  fiChargebacks: 1129,\r\n  wholesaleProfitLoss: -2448,\r\n  trackingGross: 154086,\r\n  forecastGross: 159000,\r\n  overUnderGross: -9914,\r\n  trackingUnits: 42,\r\n  forecastUnits: 55,\r\n  overUnderUnits: -13,\r\n};\r\n\r\n// Sample store comparison data for single stores vs dealer groups\r\nconst STORE_COMPARISON_DATA = [\r\n  {\r\n    id: 1,\r\n    name: 'Central Motors - Main Location',\r\n    type: 'single',\r\n    lastUpdate: '06/18/2025',\r\n    metrics: {\r\n      totalSold: 23,\r\n      totalBooked: 21,\r\n      tracking: 42,\r\n      currentFront: 10145,\r\n      currentBack: 62438,\r\n      total: 69006,\r\n      avgFront: 483,\r\n      avgBack: 2973,\r\n      pvr: 3456,\r\n      fiChargebacks: 1129,\r\n      wholesaleProfitLoss: -2448,\r\n      trackingGross: 154086,\r\n      forecastGross: 159000,\r\n      overUnderGross: -9914,\r\n      trackingUnits: 42,\r\n      forecastUnits: 55,\r\n      overUnderUnits: -13,\r\n    },\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Premier Auto Group',\r\n    type: 'group',\r\n    lastUpdate: '06/18/2025',\r\n    metrics: {\r\n      totalSold: 87,\r\n      totalBooked: 79,\r\n      tracking: 158,\r\n      currentFront: 42580,\r\n      currentBack: 198750,\r\n      total: 241330,\r\n      avgFront: 489,\r\n      avgBack: 2284,\r\n      pvr: 2773,\r\n      fiChargebacks: 3890,\r\n      wholesaleProfitLoss: -8920,\r\n      trackingGross: 445320,\r\n      forecastGross: 475000,\r\n      overUnderGross: -29680,\r\n      trackingUnits: 158,\r\n      forecastUnits: 185,\r\n      overUnderUnits: -27,\r\n    },\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'AutoMax Dealerships',\r\n    type: 'group',\r\n    lastUpdate: '06/18/2025',\r\n    metrics: {\r\n      totalSold: 134,\r\n      totalBooked: 127,\r\n      tracking: 248,\r\n      currentFront: 68920,\r\n      currentBack: 312480,\r\n      total: 381400,\r\n      avgFront: 515,\r\n      avgBack: 2333,\r\n      pvr: 2848,\r\n      fiChargebacks: 5670,\r\n      wholesaleProfitLoss: -12350,\r\n      trackingGross: 698540,\r\n      forecastGross: 720000,\r\n      overUnderGross: -21460,\r\n      trackingUnits: 248,\r\n      forecastUnits: 275,\r\n      overUnderUnits: -27,\r\n    },\r\n  },\r\n];\r\n\r\n// Update the DEALER_GROUP_DATA to use a real dealership name and adjust colors\r\nconst DEALER_GROUP_DATA = [\r\n  {\r\n    id: 1,\r\n    name: 'Central Motors - New Cars',\r\n    isManagerStore: true,\r\n    storeType: 'new', // Add type for styling\r\n    lastUpdated: '2025-05-08 14:30',\r\n    totalSold: 45,\r\n    totalPending: 14,\r\n    totalBooked: 38,\r\n    tracking: 52,\r\n    currentFrontGross: 68500,\r\n    currentBackGross: 38500,\r\n    totalGross: 107000,\r\n    avgFront: 1522,\r\n    avgBack: 856,\r\n    pvr: 2378,\r\n    trackingGross: 119000,\r\n    forecastGross: 110000,\r\n    overUnderGross: 9000,\r\n    trackingUnits: 56,\r\n    forecastUnits: 52,\r\n    actualUnits: 52,\r\n    overUnderUnits: 0,\r\n    locations: [\r\n      {\r\n        id: 101,\r\n        name: 'Downtown Branch - New Cars',\r\n        lastUpdated: '2025-05-08 14:15',\r\n        totalSold: 24,\r\n        totalPending: 7,\r\n        totalBooked: 19,\r\n        tracking: 26,\r\n        currentFrontGross: 36750,\r\n        currentBackGross: 20800,\r\n        totalGross: 57550,\r\n        avgFront: 1531,\r\n        avgBack: 867,\r\n        pvr: 2398,\r\n        trackingGross: 62500,\r\n        forecastGross: 58000,\r\n        overUnderGross: 4500,\r\n        trackingUnits: 28,\r\n        forecastUnits: 26,\r\n        actualUnits: 26,\r\n        overUnderUnits: 0,\r\n      },\r\n      {\r\n        id: 102,\r\n        name: 'Westside Branch - New Cars',\r\n        lastUpdated: '2025-05-08 14:30',\r\n        totalSold: 21,\r\n        totalPending: 7,\r\n        totalBooked: 19,\r\n        tracking: 26,\r\n        currentFrontGross: 31750,\r\n        currentBackGross: 17700,\r\n        totalGross: 49450,\r\n        avgFront: 1512,\r\n        avgBack: 843,\r\n        pvr: 2355,\r\n        trackingGross: 56500,\r\n        forecastGross: 52000,\r\n        overUnderGross: 4500,\r\n        trackingUnits: 28,\r\n        forecastUnits: 26,\r\n        actualUnits: 26,\r\n        overUnderUnits: 0,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Central Motors - Used Cars',\r\n    isManagerStore: true,\r\n    storeType: 'used', // Add type for styling\r\n    lastUpdated: '2025-05-08 14:45',\r\n    totalSold: 33,\r\n    totalPending: 10,\r\n    totalBooked: 27,\r\n    tracking: 37,\r\n    currentFrontGross: 44000,\r\n    currentBackGross: 27300,\r\n    totalGross: 71300,\r\n    avgFront: 1333,\r\n    avgBack: 827,\r\n    pvr: 2160,\r\n    trackingGross: 79000,\r\n    forecastGross: 75000,\r\n    overUnderGross: 4000,\r\n    trackingUnits: 39,\r\n    forecastUnits: 38,\r\n    actualUnits: 37,\r\n    overUnderUnits: -1,\r\n    locations: [\r\n      {\r\n        id: 201,\r\n        name: 'Downtown Branch - Used Cars',\r\n        lastUpdated: '2025-05-08 14:15',\r\n        totalSold: 17,\r\n        totalPending: 5,\r\n        totalBooked: 13,\r\n        tracking: 19,\r\n        currentFrontGross: 23000,\r\n        currentBackGross: 14000,\r\n        totalGross: 37000,\r\n        avgFront: 1353,\r\n        avgBack: 824,\r\n        pvr: 2177,\r\n        trackingGross: 41500,\r\n        forecastGross: 37000,\r\n        overUnderGross: 4500,\r\n        trackingUnits: 20,\r\n        forecastUnits: 19,\r\n        actualUnits: 19,\r\n        overUnderUnits: 0,\r\n      },\r\n      {\r\n        id: 202,\r\n        name: 'Westside Branch - Used Cars',\r\n        lastUpdated: '2025-05-08 14:30',\r\n        totalSold: 16,\r\n        totalPending: 5,\r\n        totalBooked: 14,\r\n        tracking: 18,\r\n        currentFrontGross: 21000,\r\n        currentBackGross: 13300,\r\n        totalGross: 34300,\r\n        avgFront: 1313,\r\n        avgBack: 831,\r\n        pvr: 2144,\r\n        trackingGross: 37500,\r\n        forecastGross: 38000,\r\n        overUnderGross: -500,\r\n        trackingUnits: 19,\r\n        forecastUnits: 19,\r\n        actualUnits: 18,\r\n        overUnderUnits: -1,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'North Region Dealerships',\r\n    isManagerStore: false,\r\n    storeType: 'other', // Add type for styling\r\n    lastUpdated: '2025-05-08 13:45',\r\n    totalSold: 64,\r\n    totalPending: 19,\r\n    totalBooked: 55,\r\n    tracking: 72,\r\n    currentFrontGross: 95200,\r\n    currentBackGross: 52600,\r\n    totalGross: 147800,\r\n    avgFront: 1487,\r\n    avgBack: 822,\r\n    pvr: 2309,\r\n    trackingGross: 165000,\r\n    forecastGross: 160000,\r\n    overUnderGross: 5000,\r\n    trackingUnits: 78,\r\n    forecastUnits: 75,\r\n    actualUnits: 72,\r\n    overUnderUnits: -3,\r\n    locations: [\r\n      {\r\n        id: 301,\r\n        name: 'North City Branch',\r\n        lastUpdated: '2025-05-08 13:45',\r\n        totalSold: 36,\r\n        totalPending: 10,\r\n        totalBooked: 30,\r\n        tracking: 40,\r\n        currentFrontGross: 54000,\r\n        currentBackGross: 29600,\r\n        totalGross: 83600,\r\n        avgFront: 1500,\r\n        avgBack: 822,\r\n        pvr: 2322,\r\n        trackingGross: 93000,\r\n        forecastGross: 90000,\r\n        overUnderGross: 3000,\r\n        trackingUnits: 42,\r\n        forecastUnits: 40,\r\n        actualUnits: 40,\r\n        overUnderUnits: 0,\r\n      },\r\n      {\r\n        id: 302,\r\n        name: 'Eastside Branch',\r\n        lastUpdated: '2025-05-08 13:30',\r\n        totalSold: 28,\r\n        totalPending: 9,\r\n        totalBooked: 25,\r\n        tracking: 32,\r\n        currentFrontGross: 41200,\r\n        currentBackGross: 23000,\r\n        totalGross: 64200,\r\n        avgFront: 1471,\r\n        avgBack: 821,\r\n        pvr: 2292,\r\n        trackingGross: 72000,\r\n        forecastGross: 70000,\r\n        overUnderGross: 2000,\r\n        trackingUnits: 36,\r\n        forecastUnits: 35,\r\n        actualUnits: 32,\r\n        overUnderUnits: -3,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Premier Auto - New Division',\r\n    isManagerStore: false,\r\n    storeType: 'new',\r\n    lastUpdated: '2025-05-08 13:20',\r\n    totalSold: 38,\r\n    totalPending: 12,\r\n    totalBooked: 32,\r\n    tracking: 44,\r\n    currentFrontGross: 58200,\r\n    currentBackGross: 32100,\r\n    totalGross: 90300,\r\n    avgFront: 1532,\r\n    avgBack: 845,\r\n    pvr: 2377,\r\n    trackingGross: 101500,\r\n    forecastGross: 95000,\r\n    overUnderGross: 6500,\r\n    trackingUnits: 48,\r\n    forecastUnits: 44,\r\n    actualUnits: 44,\r\n    overUnderUnits: 0,\r\n    locations: [],\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'AutoMax New Cars',\r\n    isManagerStore: false,\r\n    storeType: 'new',\r\n    lastUpdated: '2025-05-08 12:45',\r\n    totalSold: 29,\r\n    totalPending: 9,\r\n    totalBooked: 25,\r\n    tracking: 34,\r\n    currentFrontGross: 44800,\r\n    currentBackGross: 24600,\r\n    totalGross: 69400,\r\n    avgFront: 1545,\r\n    avgBack: 848,\r\n    pvr: 2393,\r\n    trackingGross: 78000,\r\n    forecastGross: 72000,\r\n    overUnderGross: 6000,\r\n    trackingUnits: 37,\r\n    forecastUnits: 34,\r\n    actualUnits: 34,\r\n    overUnderUnits: 0,\r\n    locations: [],\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Premier Auto - Used Division',\r\n    isManagerStore: false,\r\n    storeType: 'used',\r\n    lastUpdated: '2025-05-08 13:15',\r\n    totalSold: 41,\r\n    totalPending: 13,\r\n    totalBooked: 35,\r\n    tracking: 46,\r\n    currentFrontGross: 52300,\r\n    currentBackGross: 33100,\r\n    totalGross: 85400,\r\n    avgFront: 1276,\r\n    avgBack: 807,\r\n    pvr: 2083,\r\n    trackingGross: 96000,\r\n    forecastGross: 90000,\r\n    overUnderGross: 6000,\r\n    trackingUnits: 50,\r\n    forecastUnits: 46,\r\n    actualUnits: 46,\r\n    overUnderUnits: 0,\r\n    locations: [],\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'AutoMax Used Cars',\r\n    isManagerStore: false,\r\n    storeType: 'used',\r\n    lastUpdated: '2025-05-08 12:30',\r\n    totalSold: 35,\r\n    totalPending: 11,\r\n    totalBooked: 30,\r\n    tracking: 39,\r\n    currentFrontGross: 43500,\r\n    currentBackGross: 28800,\r\n    totalGross: 72300,\r\n    avgFront: 1243,\r\n    avgBack: 823,\r\n    pvr: 2066,\r\n    trackingGross: 81000,\r\n    forecastGross: 78000,\r\n    overUnderGross: 3000,\r\n    trackingUnits: 42,\r\n    forecastUnits: 39,\r\n    actualUnits: 39,\r\n    overUnderUnits: 0,\r\n    locations: [],\r\n  },\r\n];\r\n\r\n// Update the SalesPerformanceSummary component to include tabs for different views\r\nconst SalesPerformanceSummary = ({ data }) => {\r\n  const [viewMode, setViewMode] = useState('cards'); // 'cards' or 'comparison'\r\n\r\n  const formatCurrency = amount => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 0,\r\n    }).format(amount);\r\n  };\r\n\r\n  const formatNumber = value => {\r\n    return value.toLocaleString();\r\n  };\r\n\r\n  // Cards view (original view)\r\n  const CardsView = () => (\r\n    <div className=\"space-y-3\">\r\n      {/* Render Central Motors - New Cars first */}\r\n      {data.find(group => group.id === 1) && (\r\n        <DealerGroupSummary key={1} dealerGroup={data.find(group => group.id === 1)} />\r\n      )}\r\n\r\n      {/* Render Central Motors - Used Cars second */}\r\n      {data.find(group => group.id === 2) && (\r\n        <DealerGroupSummary key={2} dealerGroup={data.find(group => group.id === 2)} />\r\n      )}\r\n\r\n      {/* Render all other dealerships */}\r\n      {data\r\n        .filter(group => group.id !== 1 && group.id !== 2)\r\n        .map(dealerGroup => (\r\n          <DealerGroupSummary key={dealerGroup.id} dealerGroup={dealerGroup} />\r\n        ))}\r\n    </div>\r\n  );\r\n\r\n  // Comparison table view (new side-by-side view with metrics as rows, dealerships as columns)\r\n  const ComparisonView = () => {\r\n    // Separate dealerships by type\r\n    const newCarDealerships = data.filter(dealer => dealer.storeType === 'new');\r\n    const usedCarDealerships = data.filter(dealer => dealer.storeType === 'used');\r\n    const mixedDealerships = data.filter(\r\n      dealer => dealer.storeType !== 'new' && dealer.storeType !== 'used'\r\n    );\r\n\r\n    // Define metrics to display based on deal log data and forecasts\r\n    const metrics = [\r\n      { key: 'lastUpdated', label: 'Last Updated', format: 'date' },\r\n      { key: 'totalSold', label: 'Total Sold', format: 'number' },\r\n      { key: 'totalBooked', label: 'Total Booked/Funded', format: 'number' },\r\n      { key: 'tracking', label: 'Tracking', format: 'number', highlight: true },\r\n      { key: 'currentFrontGross', label: 'Current Front Gross', format: 'currency' },\r\n      { key: 'currentBackGross', label: 'Current Back Gross', format: 'currency' },\r\n      { key: 'totalGross', label: 'Current Total Gross', format: 'currency', color: 'green' },\r\n      { key: 'avgFront', label: 'Avg Front Gross', format: 'currency' },\r\n      { key: 'avgBack', label: 'Avg Back Gross', format: 'currency' },\r\n      { key: 'pvr', label: 'Total PVR', format: 'currency', color: 'blue' },\r\n      { key: 'trackingGross', label: 'Tracking Gross', format: 'currency', highlight: true },\r\n      { key: 'forecastGross', label: 'Forecast Gross', format: 'currency' },\r\n      { key: 'overUnderGross', label: 'Over/Under Gross', format: 'currency', conditional: true },\r\n      { key: 'trackingUnits', label: 'Tracking Units', format: 'number', highlight: true },\r\n      { key: 'forecastUnits', label: 'Forecast Units', format: 'number' },\r\n      { key: 'overUnderUnits', label: 'Over/Under Units', format: 'number', conditional: true },\r\n    ];\r\n\r\n    const formatValue = (value, format, conditional = false) => {\r\n      if (format === 'currency') {\r\n        return formatCurrency(value);\r\n      } else if (format === 'number') {\r\n        return formatNumber(value);\r\n      } else if (format === 'date') {\r\n        return value; // Already formatted as string in the data\r\n      }\r\n      return value;\r\n    };\r\n\r\n    const getValueClassName = (value, color, conditional = false, highlight = false) => {\r\n      let className = 'text-center font-medium';\r\n\r\n      if (highlight) {\r\n        className += ' text-amber-600 bg-yellow-50';\r\n      } else if (conditional) {\r\n        className += value < 0 ? ' text-red-600' : ' text-green-600';\r\n      } else if (color === 'green') {\r\n        className += ' text-green-600';\r\n      } else if (color === 'blue') {\r\n        className += ' text-blue-600';\r\n      }\r\n\r\n      return className;\r\n    };\r\n\r\n    const renderComparisonTable = (dealerships, title, bgColor) => {\r\n      if (dealerships.length === 0) return null;\r\n\r\n      return (\r\n        <div className=\"mb-6\">\r\n          <h4 className={`text-lg font-semibold mb-3 px-3 py-2 ${bgColor} rounded-t-lg border-b`}>\r\n            {title}\r\n          </h4>\r\n          <div className=\"overflow-x-auto\">\r\n            <Table>\r\n              <TableHeader>\r\n                <TableRow className=\"bg-gray-50\">\r\n                  <TableHead className=\"w-40 font-semibold sticky left-0 bg-gray-50 z-10\">\r\n                    Metric\r\n                  </TableHead>\r\n                  {dealerships.map(dealer => (\r\n                    <TableHead key={dealer.id} className=\"text-center font-semibold min-w-32\">\r\n                      <div className=\"flex flex-col items-center gap-1\">\r\n                        <span className=\"text-sm\">{dealer.name}</span>\r\n                        {dealer.isManagerStore && (\r\n                          <span className=\"px-2 py-0.5 text-xs bg-blue-100 text-blue-800 rounded-full\">\r\n                            Your Store\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                    </TableHead>\r\n                  ))}\r\n                  <TableHead className=\"text-center font-semibold bg-gray-100 min-w-32\">\r\n                    Total\r\n                  </TableHead>\r\n                </TableRow>\r\n              </TableHeader>\r\n              <TableBody>\r\n                {metrics.map(metric => (\r\n                  <TableRow key={metric.key} className=\"hover:bg-gray-50\">\r\n                    <TableCell className=\"font-medium sticky left-0 bg-white z-10 border-r\">\r\n                      {metric.label}\r\n                    </TableCell>\r\n                    {dealerships.map(dealer => (\r\n                      <TableCell\r\n                        key={dealer.id}\r\n                        className={getValueClassName(\r\n                          dealer[metric.key],\r\n                          metric.color,\r\n                          metric.conditional,\r\n                          metric.highlight\r\n                        )}\r\n                      >\r\n                        {formatValue(dealer[metric.key], metric.format, metric.conditional)}\r\n                      </TableCell>\r\n                    ))}\r\n                    <TableCell className=\"text-center font-semibold bg-gray-50\">\r\n                      {metric.key === 'lastUpdated'\r\n                        ? 'Various'\r\n                        : metric.format === 'currency' &&\r\n                          !['avgFront', 'avgBack', 'pvr'].includes(metric.key)\r\n                        ? formatCurrency(\r\n                            dealerships.reduce((sum, dealer) => sum + dealer[metric.key], 0)\r\n                          )\r\n                        : metric.format === 'number'\r\n                        ? formatNumber(\r\n                            dealerships.reduce((sum, dealer) => sum + dealer[metric.key], 0)\r\n                          )\r\n                        : ['avgFront', 'avgBack', 'pvr'].includes(metric.key)\r\n                        ? formatCurrency(\r\n                            dealerships.reduce((sum, dealer) => sum + dealer[metric.key], 0) /\r\n                              dealerships.length\r\n                          )\r\n                        : '--'}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        {/* New Cars Section */}\r\n        {renderComparisonTable(\r\n          newCarDealerships,\r\n          '🚗 New Cars Performance',\r\n          'bg-blue-50 text-blue-800'\r\n        )}\r\n\r\n        {/* Used Cars Section */}\r\n        {renderComparisonTable(\r\n          usedCarDealerships,\r\n          '🚙 Used Cars Performance',\r\n          'bg-green-50 text-green-800'\r\n        )}\r\n\r\n        {/* Mixed/Other Dealerships Section */}\r\n        {mixedDealerships.length > 0 &&\r\n          renderComparisonTable(\r\n            mixedDealerships,\r\n            '🏢 Mixed Dealerships',\r\n            'bg-gray-50 text-gray-800'\r\n          )}\r\n\r\n        {/* Overall Summary */}\r\n        <div className=\"mt-6 p-4 bg-gradient-to-r from-blue-50 to-green-50 rounded-lg border\">\r\n          <h4 className=\"font-semibold text-gray-700 mb-3\">📊 Overall Performance Summary</h4>\r\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\r\n            <div className=\"bg-white p-3 rounded shadow-sm\">\r\n              <span className=\"text-gray-600 block\">Total Units Sold</span>\r\n              <span className=\"font-bold text-lg text-blue-600\">\r\n                {formatNumber(data.reduce((sum, dealer) => sum + dealer.totalSold, 0))}\r\n              </span>\r\n            </div>\r\n            <div className=\"bg-white p-3 rounded shadow-sm\">\r\n              <span className=\"text-gray-600 block\">Total Gross</span>\r\n              <span className=\"font-bold text-lg text-green-600\">\r\n                {formatCurrency(data.reduce((sum, dealer) => sum + dealer.totalGross, 0))}\r\n              </span>\r\n            </div>\r\n            <div className=\"bg-white p-3 rounded shadow-sm\">\r\n              <span className=\"text-gray-600 block\">Avg PVR</span>\r\n              <span className=\"font-bold text-lg text-blue-600\">\r\n                {formatCurrency(data.reduce((sum, dealer) => sum + dealer.pvr, 0) / data.length)}\r\n              </span>\r\n            </div>\r\n            <div className=\"bg-white p-3 rounded shadow-sm\">\r\n              <span className=\"text-gray-600 block\">Total Over/Under</span>\r\n              <span\r\n                className={`font-bold text-lg ${\r\n                  data.reduce((sum, dealer) => sum + dealer.overUnderGross, 0) < 0\r\n                    ? 'text-red-600'\r\n                    : 'text-green-600'\r\n                }`}\r\n              >\r\n                {formatCurrency(data.reduce((sum, dealer) => sum + dealer.overUnderGross, 0))}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Card className=\"mb-5\">\r\n      <CardHeader className=\"pb-2 pt-4\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <CardTitle className=\"text-xl\">Sales Performance</CardTitle>\r\n          <div className=\"flex gap-2\">\r\n            <Button\r\n              variant={viewMode === 'cards' ? 'default' : 'outline'}\r\n              size=\"sm\"\r\n              onClick={() => setViewMode('cards')}\r\n              className=\"flex items-center gap-2\"\r\n            >\r\n              <BarChart className=\"h-4 w-4\" />\r\n              Cards View\r\n            </Button>\r\n            <Button\r\n              variant={viewMode === 'comparison' ? 'default' : 'outline'}\r\n              size=\"sm\"\r\n              onClick={() => setViewMode('comparison')}\r\n              className=\"flex items-center gap-2\"\r\n            >\r\n              <FileText className=\"h-4 w-4\" />\r\n              Comparison Table\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n      <CardContent className=\"p-3\">\r\n        {viewMode === 'cards' ? <CardsView /> : <ComparisonView />}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\n// Update the DealerGroupSummary component to be more compact and use different colors\r\nconst DealerGroupSummary = ({ dealerGroup }) => {\r\n  // Set isExpanded to true by default only for the manager's stores\r\n  const [isExpanded, setIsExpanded] = useState(dealerGroup.isManagerStore);\r\n\r\n  const formatCurrency = amount => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 0,\r\n    }).format(amount);\r\n  };\r\n\r\n  // Get background and border colors based on store type\r\n  const getStoreColors = () => {\r\n    switch (dealerGroup.storeType) {\r\n      case 'new':\r\n        return {\r\n          headerBg: 'bg-blue-50',\r\n          border: 'border-blue-200',\r\n          badge: 'bg-blue-100 text-blue-800',\r\n          highlight: 'bg-blue-50',\r\n        };\r\n      case 'used':\r\n        return {\r\n          headerBg: 'bg-green-50',\r\n          border: 'border-green-200',\r\n          badge: 'bg-green-100 text-green-800',\r\n          highlight: 'bg-green-50',\r\n        };\r\n      default:\r\n        return {\r\n          headerBg: 'bg-gray-50',\r\n          border: 'border-gray-200',\r\n          badge: 'bg-gray-100 text-gray-800',\r\n          highlight: 'bg-gray-50',\r\n        };\r\n    }\r\n  };\r\n\r\n  const colors = getStoreColors();\r\n\r\n  return (\r\n    <Collapsible open={isExpanded} onOpenChange={setIsExpanded}>\r\n      <div\r\n        className={`border rounded-lg overflow-hidden shadow-sm ${colors.border} ${\r\n          dealerGroup.isManagerStore ? '' : 'text-sm'\r\n        }`}\r\n      >\r\n        {/* Header section with dealership name and last updated */}\r\n        <div className={`${colors.headerBg} border-b`}>\r\n          <CollapsibleTrigger asChild>\r\n            <div className=\"flex items-center justify-between p-3 cursor-pointer hover:bg-gray-100 transition-colors\">\r\n              <div className=\"flex items-center\">\r\n                {isExpanded ? (\r\n                  <ChevronDown className=\"h-4 w-4 mr-2 text-gray-500\" />\r\n                ) : (\r\n                  <ChevronRight className=\"h-4 w-4 mr-2 text-gray-500\" />\r\n                )}\r\n                <h3 className=\"font-semibold\">{dealerGroup.name}</h3>\r\n                {dealerGroup.isManagerStore && (\r\n                  <span className={`ml-2 px-2 py-0.5 text-xs ${colors.badge} rounded-full`}>\r\n                    Your Store\r\n                  </span>\r\n                )}\r\n              </div>\r\n              <div className=\"flex items-center text-xs text-gray-500\">\r\n                <Clock className=\"h-3 w-3 mr-1\" />\r\n                {dealerGroup.lastUpdated}\r\n              </div>\r\n            </div>\r\n          </CollapsibleTrigger>\r\n        </div>\r\n\r\n        {/* Only show the content if expanded */}\r\n        {isExpanded && (\r\n          <div className=\"px-3 py-3\">\r\n            {/* Top metrics row - more compact */}\r\n            <div className=\"grid grid-cols-5 gap-2 mb-3\">\r\n              <MetricCard\r\n                label=\"Sold\"\r\n                value={dealerGroup.totalSold}\r\n                icon={<Car className=\"h-3 w-3\" />}\r\n                color={\r\n                  dealerGroup.storeType === 'new'\r\n                    ? 'blue'\r\n                    : dealerGroup.storeType === 'used'\r\n                    ? 'green'\r\n                    : 'gray'\r\n                }\r\n              />\r\n              <MetricCard\r\n                label=\"Booked\"\r\n                value={Math.floor(dealerGroup.totalBooked * 0.6)}\r\n                icon={<CheckSquare className=\"h-3 w-3\" />}\r\n                color={\r\n                  dealerGroup.storeType === 'new'\r\n                    ? 'blue'\r\n                    : dealerGroup.storeType === 'used'\r\n                    ? 'green'\r\n                    : 'gray'\r\n                }\r\n              />\r\n              <MetricCard\r\n                label=\"Pending\"\r\n                value={dealerGroup.totalPending}\r\n                icon={<Clock className=\"h-3 w-3\" />}\r\n                color={\r\n                  dealerGroup.storeType === 'new'\r\n                    ? 'blue'\r\n                    : dealerGroup.storeType === 'used'\r\n                    ? 'green'\r\n                    : 'gray'\r\n                }\r\n              />\r\n              <MetricCard\r\n                label=\"Tracking\"\r\n                value={dealerGroup.tracking}\r\n                icon={<TrendingUp className=\"h-3 w-3\" />}\r\n                color={\r\n                  dealerGroup.storeType === 'new'\r\n                    ? 'blue'\r\n                    : dealerGroup.storeType === 'used'\r\n                    ? 'green'\r\n                    : 'gray'\r\n                }\r\n              />\r\n              <MetricCard\r\n                label=\"Funded\"\r\n                value={Math.floor(dealerGroup.totalBooked * 0.4)}\r\n                icon={<DollarSign className=\"h-3 w-3\" />}\r\n                color={\r\n                  dealerGroup.storeType === 'new'\r\n                    ? 'blue'\r\n                    : dealerGroup.storeType === 'used'\r\n                    ? 'green'\r\n                    : 'gray'\r\n                }\r\n              />\r\n            </div>\r\n\r\n            {/* Revenue metrics - more compact */}\r\n            <div className={`${colors.highlight} p-2 rounded-lg mb-3`}>\r\n              <h4 className=\"font-medium text-xs text-gray-500 mb-2\">REVENUE</h4>\r\n              <div className=\"grid grid-cols-3 gap-3\">\r\n                <div>\r\n                  <p className=\"text-xs text-gray-500\">Front Gross</p>\r\n                  <p className=\"text-base font-bold\">\r\n                    {formatCurrency(dealerGroup.currentFrontGross)}\r\n                  </p>\r\n                  <p className=\"text-xs text-gray-500\">\r\n                    Avg: {formatCurrency(dealerGroup.avgFront)}\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-xs text-gray-500\">Back Gross</p>\r\n                  <p className=\"text-base font-bold\">\r\n                    {formatCurrency(dealerGroup.currentBackGross)}\r\n                  </p>\r\n                  <p className=\"text-xs text-gray-500\">\r\n                    Avg: {formatCurrency(dealerGroup.avgBack)}\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-xs text-gray-500\">Total Gross</p>\r\n                  <p className=\"text-base font-bold\">{formatCurrency(dealerGroup.totalGross)}</p>\r\n                  <p className=\"text-xs text-gray-500\">PVR: {formatCurrency(dealerGroup.pvr)}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Forecast vs Actual - more compact */}\r\n            <div className={`${colors.highlight} p-2 rounded-lg`}>\r\n              <h4 className=\"font-medium text-xs text-gray-500 mb-2\">FORECAST VS ACTUAL</h4>\r\n              <div className=\"grid grid-cols-2 gap-3\">\r\n                <div>\r\n                  <h5 className=\"font-medium text-xs mb-1\">Gross Revenue</h5>\r\n                  <div className=\"flex items-center justify-between text-xs mb-1\">\r\n                    <div>\r\n                      <span className=\"text-gray-500\">Tracking:</span>\r\n                      <span className=\"font-medium ml-1\">\r\n                        {formatCurrency(dealerGroup.trackingGross)}\r\n                      </span>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"text-gray-500\">Forecast:</span>\r\n                      <span className=\"font-medium ml-1\">\r\n                        {formatCurrency(dealerGroup.forecastGross)}\r\n                      </span>\r\n                    </div>\r\n                    <div\r\n                      className={\r\n                        dealerGroup.overUnderGross >= 0 ? 'text-green-600' : 'text-red-600'\r\n                      }\r\n                    >\r\n                      <span className=\"mr-1\">+/-:</span>\r\n                      <span className=\"font-medium\">\r\n                        {dealerGroup.overUnderGross >= 0 ? '+' : ''}\r\n                        {formatCurrency(dealerGroup.overUnderGross)}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"h-1.5 bg-gray-200 rounded-full overflow-hidden\">\r\n                    <div\r\n                      className={`h-full ${\r\n                        dealerGroup.overUnderGross >= 0 ? 'bg-green-500' : 'bg-red-500'\r\n                      } rounded-full`}\r\n                      style={{\r\n                        width: `${Math.min(\r\n                          100,\r\n                          Math.abs((dealerGroup.trackingGross / dealerGroup.forecastGross) * 100)\r\n                        )}%`,\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <h5 className=\"font-medium text-xs mb-1\">Units</h5>\r\n                  <div className=\"flex items-center justify-between text-xs mb-1\">\r\n                    <div>\r\n                      <span className=\"text-gray-500\">Tracking:</span>\r\n                      <span className=\"font-medium ml-1\">{dealerGroup.trackingUnits}</span>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"text-gray-500\">Forecast:</span>\r\n                      <span className=\"font-medium ml-1\">{dealerGroup.forecastUnits}</span>\r\n                    </div>\r\n                    <div\r\n                      className={\r\n                        dealerGroup.overUnderUnits >= 0 ? 'text-green-600' : 'text-red-600'\r\n                      }\r\n                    >\r\n                      <span className=\"mr-1\">+/-:</span>\r\n                      <span className=\"font-medium\">\r\n                        {dealerGroup.overUnderUnits >= 0 ? '+' : ''}\r\n                        {dealerGroup.overUnderUnits}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"h-1.5 bg-gray-200 rounded-full overflow-hidden\">\r\n                    <div\r\n                      className={`h-full ${\r\n                        dealerGroup.overUnderUnits >= 0 ? 'bg-green-500' : 'bg-red-500'\r\n                      } rounded-full`}\r\n                      style={{\r\n                        width: `${Math.min(\r\n                          100,\r\n                          Math.abs((dealerGroup.trackingUnits / dealerGroup.forecastUnits) * 100)\r\n                        )}%`,\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Locations section only visible when expanded */}\r\n        <CollapsibleContent>\r\n          <div className=\"border-t\">\r\n            <div className={`px-3 py-2 ${colors.headerBg} border-b`}>\r\n              <h4 className=\"font-medium text-xs\">\r\n                Dealership Locations ({dealerGroup.locations.length})\r\n              </h4>\r\n            </div>\r\n\r\n            {dealerGroup.locations.map((location, index) => (\r\n              <div\r\n                key={location.id}\r\n                className={`px-3 py-2 ${\r\n                  index < dealerGroup.locations.length - 1 ? 'border-b' : ''\r\n                }`}\r\n              >\r\n                <div className=\"flex justify-between mb-2\">\r\n                  <h5 className=\"font-medium text-sm\">{location.name}</h5>\r\n                  <div className=\"text-xs text-gray-500\">\r\n                    <Clock className=\"h-3 w-3 inline mr-1\" />\r\n                    {location.lastUpdated}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-5 gap-2 mb-2 text-xs\">\r\n                  <div className=\"p-1\">\r\n                    <p className=\"text-gray-500 uppercase font-medium\">Sold</p>\r\n                    <p className=\"font-bold\">{location.totalSold}</p>\r\n                  </div>\r\n                  <div className=\"p-1\">\r\n                    <p className=\"text-gray-500 uppercase font-medium\">Booked</p>\r\n                    <p className=\"font-bold\">{Math.floor(location.totalBooked * 0.6)}</p>\r\n                  </div>\r\n                  <div className=\"p-1\">\r\n                    <p className=\"text-gray-500 uppercase font-medium\">Pending</p>\r\n                    <p className=\"font-bold\">{location.totalPending}</p>\r\n                  </div>\r\n                  <div className=\"p-1\">\r\n                    <p className=\"text-gray-500 uppercase font-medium\">Tracking</p>\r\n                    <p className=\"font-bold\">{location.tracking}</p>\r\n                  </div>\r\n                  <div className=\"p-1\">\r\n                    <p className=\"text-gray-500 uppercase font-medium\">Funded</p>\r\n                    <p className=\"font-bold\">{Math.floor(location.totalBooked * 0.4)}</p>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-3 gap-2 text-xs mb-2\">\r\n                  <div className={`${colors.highlight} p-1 rounded flex justify-between`}>\r\n                    <span className=\"text-gray-500\">Front:</span>\r\n                    <span className=\"font-medium\">\r\n                      {formatCurrency(location.currentFrontGross)}\r\n                    </span>\r\n                  </div>\r\n                  <div className={`${colors.highlight} p-1 rounded flex justify-between`}>\r\n                    <span className=\"text-gray-500\">Back:</span>\r\n                    <span className=\"font-medium\">{formatCurrency(location.currentBackGross)}</span>\r\n                  </div>\r\n                  <div className={`${colors.highlight} p-1 rounded flex justify-between`}>\r\n                    <span className=\"text-gray-500\">Total:</span>\r\n                    <span className=\"font-medium\">{formatCurrency(location.totalGross)}</span>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"flex gap-2 text-xs\">\r\n                  <div className={`flex-1 ${colors.highlight} p-1 rounded flex justify-between`}>\r\n                    <span className=\"text-gray-500\">PVR:</span>\r\n                    <span className=\"font-medium\">{formatCurrency(location.pvr)}</span>\r\n                  </div>\r\n                  <div className={`flex-1 ${colors.highlight} p-1 rounded flex justify-between`}>\r\n                    <span className=\"text-gray-500\">Gross +/-:</span>\r\n                    <span\r\n                      className={\r\n                        location.overUnderGross >= 0\r\n                          ? 'text-green-600 font-medium'\r\n                          : 'text-red-600 font-medium'\r\n                      }\r\n                    >\r\n                      {location.overUnderGross >= 0 ? '+' : ''}\r\n                      {formatCurrency(location.overUnderGross)}\r\n                    </span>\r\n                  </div>\r\n                  <div className={`flex-1 ${colors.highlight} p-1 rounded flex justify-between`}>\r\n                    <span className=\"text-gray-500\">Units +/-:</span>\r\n                    <span\r\n                      className={\r\n                        location.overUnderUnits >= 0\r\n                          ? 'text-green-600 font-medium'\r\n                          : 'text-red-600 font-medium'\r\n                      }\r\n                    >\r\n                      {location.overUnderUnits >= 0 ? '+' : ''}\r\n                      {location.overUnderUnits}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </CollapsibleContent>\r\n      </div>\r\n    </Collapsible>\r\n  );\r\n};\r\n\r\n// Update MetricCard to be more compact and use appropriate colors\r\n// Detailed Sales Report Component\r\nconst DetailedSalesReport = () => {\r\n  const [selectedView, setSelectedView] = useState('single'); // 'single' or 'group'\r\n  const [selectedStore, setSelectedStore] = useState(STORE_COMPARISON_DATA[0]);\r\n\r\n  const formatCurrency = value => {\r\n    if (value < 0) {\r\n      return `-$${Math.abs(value).toLocaleString()}`;\r\n    }\r\n    return `$${value.toLocaleString()}`;\r\n  };\r\n\r\n  const formatNumber = value => {\r\n    return value.toLocaleString();\r\n  };\r\n\r\n  // Filter stores based on selected view\r\n  const filteredStores = STORE_COMPARISON_DATA.filter(store => store.type === selectedView);\r\n\r\n  // Highlighted metrics (with yellow background)\r\n  const highlightedMetrics = [\r\n    'tracking',\r\n    'wholesaleProfitLoss',\r\n    'overUnderGross',\r\n    'trackingUnits',\r\n    'forecastUnits',\r\n    'overUnderUnits',\r\n  ];\r\n\r\n  const MetricRow = ({\r\n    label,\r\n    value,\r\n    isHighlighted = false,\r\n    isCurrency = false,\r\n    isNegative = false,\r\n  }) => (\r\n    <div\r\n      className={`grid grid-cols-2 py-3 px-4 border-b border-gray-100 ${\r\n        isHighlighted ? 'bg-yellow-50' : 'bg-white'\r\n      } hover:bg-gray-50 transition-colors`}\r\n    >\r\n      <div className=\"text-sm font-medium text-gray-700\">{label}</div>\r\n      <div\r\n        className={`text-sm font-semibold text-right ${\r\n          isNegative ? 'text-red-600' : 'text-gray-900'\r\n        }`}\r\n      >\r\n        {isCurrency ? formatCurrency(value) : formatNumber(value)}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* View Selection and Store Selector */}\r\n      <div className=\"flex flex-col sm:flex-row gap-4 items-start sm:items-center justify-between\">\r\n        <div>\r\n          <h2 className=\"text-xl font-bold text-gray-900 mb-2\">Detailed Sales Report</h2>\r\n          <p className=\"text-sm text-gray-600\">\r\n            Comprehensive sales metrics for performance tracking\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"flex flex-col sm:flex-row gap-3\">\r\n          <Select value={selectedView} onValueChange={setSelectedView}>\r\n            <SelectTrigger className=\"w-44\">\r\n              <Filter className=\"mr-2 h-4 w-4\" />\r\n              <SelectValue />\r\n            </SelectTrigger>\r\n            <SelectContent>\r\n              <SelectItem value=\"single\">Single Stores</SelectItem>\r\n              <SelectItem value=\"group\">Dealer Groups</SelectItem>\r\n            </SelectContent>\r\n          </Select>\r\n\r\n          <Select\r\n            value={selectedStore.id.toString()}\r\n            onValueChange={value =>\r\n              setSelectedStore(filteredStores.find(store => store.id.toString() === value))\r\n            }\r\n          >\r\n            <SelectTrigger className=\"w-64\">\r\n              <SelectValue />\r\n            </SelectTrigger>\r\n            <SelectContent>\r\n              {filteredStores.map(store => (\r\n                <SelectItem key={store.id} value={store.id.toString()}>\r\n                  {store.name}\r\n                </SelectItem>\r\n              ))}\r\n            </SelectContent>\r\n          </Select>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Detailed Metrics Table */}\r\n      <div className=\"grid gap-6 lg:grid-cols-2\">\r\n        {/* Main Metrics Card */}\r\n        <Card className=\"lg:col-span-1\">\r\n          <CardHeader className=\"pb-3\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <CardTitle className=\"text-lg\">{selectedStore.name}</CardTitle>\r\n              <div className=\"flex items-center gap-2 text-sm text-gray-500\">\r\n                <Clock className=\"h-4 w-4\" />\r\n                Last Update: {selectedStore.lastUpdate}\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <span\r\n                className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n                  selectedStore.type === 'single'\r\n                    ? 'bg-blue-100 text-blue-800'\r\n                    : 'bg-purple-100 text-purple-800'\r\n                }`}\r\n              >\r\n                {selectedStore.type === 'single' ? 'Single Store' : 'Dealer Group'}\r\n              </span>\r\n            </div>\r\n          </CardHeader>\r\n          <CardContent className=\"p-0\">\r\n            <div className=\"border rounded-lg overflow-hidden\">\r\n              <MetricRow label=\"Total Sold\" value={selectedStore.metrics.totalSold} />\r\n              <MetricRow label=\"Total Booked\" value={selectedStore.metrics.totalBooked} />\r\n              <MetricRow\r\n                label=\"Tracking\"\r\n                value={selectedStore.metrics.tracking}\r\n                isHighlighted={true}\r\n              />\r\n              <MetricRow\r\n                label=\"Current Front\"\r\n                value={selectedStore.metrics.currentFront}\r\n                isCurrency={true}\r\n              />\r\n              <MetricRow\r\n                label=\"Current Back\"\r\n                value={selectedStore.metrics.currentBack}\r\n                isCurrency={true}\r\n              />\r\n              <MetricRow label=\"Total\" value={selectedStore.metrics.total} isCurrency={true} />\r\n              <MetricRow\r\n                label=\"Avg Front\"\r\n                value={selectedStore.metrics.avgFront}\r\n                isCurrency={true}\r\n              />\r\n              <MetricRow label=\"Avg Back\" value={selectedStore.metrics.avgBack} isCurrency={true} />\r\n              <MetricRow label=\"PVR\" value={selectedStore.metrics.pvr} isCurrency={true} />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Advanced Metrics Card */}\r\n        <Card className=\"lg:col-span-1\">\r\n          <CardHeader className=\"pb-3\">\r\n            <CardTitle className=\"text-lg\">Performance Analysis</CardTitle>\r\n            <p className=\"text-sm text-gray-600\">Key performance indicators and forecasts</p>\r\n          </CardHeader>\r\n          <CardContent className=\"p-0\">\r\n            <div className=\"border rounded-lg overflow-hidden\">\r\n              <MetricRow\r\n                label=\"F&I Charge Backs\"\r\n                value={selectedStore.metrics.fiChargebacks}\r\n                isCurrency={true}\r\n              />\r\n              <MetricRow\r\n                label=\"Wholesale Profit / Loss (+/-)\"\r\n                value={selectedStore.metrics.wholesaleProfitLoss}\r\n                isCurrency={true}\r\n                isHighlighted={true}\r\n                isNegative={selectedStore.metrics.wholesaleProfitLoss < 0}\r\n              />\r\n              <MetricRow\r\n                label=\"Tracking Gross\"\r\n                value={selectedStore.metrics.trackingGross}\r\n                isCurrency={true}\r\n                isHighlighted={true}\r\n              />\r\n              <MetricRow\r\n                label=\"Forecast Gross\"\r\n                value={selectedStore.metrics.forecastGross}\r\n                isCurrency={true}\r\n                isHighlighted={true}\r\n              />\r\n              <MetricRow\r\n                label=\"Over/Under Gross\"\r\n                value={selectedStore.metrics.overUnderGross}\r\n                isCurrency={true}\r\n                isHighlighted={true}\r\n                isNegative={selectedStore.metrics.overUnderGross < 0}\r\n              />\r\n              <MetricRow\r\n                label=\"Tracking Units\"\r\n                value={selectedStore.metrics.trackingUnits}\r\n                isHighlighted={true}\r\n              />\r\n              <MetricRow\r\n                label=\"Forecast Units\"\r\n                value={selectedStore.metrics.forecastUnits}\r\n                isHighlighted={true}\r\n              />\r\n              <MetricRow\r\n                label=\"Over/Under Units\"\r\n                value={selectedStore.metrics.overUnderUnits}\r\n                isHighlighted={true}\r\n                isNegative={selectedStore.metrics.overUnderUnits < 0}\r\n              />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Summary Cards for Quick Overview */}\r\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\r\n        <Card className=\"border-l-4 border-l-blue-500\">\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">Total Sales</p>\r\n                <p className=\"text-2xl font-bold\">{selectedStore.metrics.totalSold}</p>\r\n              </div>\r\n              <Car className=\"h-8 w-8 text-blue-500\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card className=\"border-l-4 border-l-green-500\">\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">Total Gross</p>\r\n                <p className=\"text-2xl font-bold\">{formatCurrency(selectedStore.metrics.total)}</p>\r\n              </div>\r\n              <DollarSign className=\"h-8 w-8 text-green-500\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card className=\"border-l-4 border-l-amber-500\">\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">PVR</p>\r\n                <p className=\"text-2xl font-bold\">{formatCurrency(selectedStore.metrics.pvr)}</p>\r\n              </div>\r\n              <TrendingUp className=\"h-8 w-8 text-amber-500\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card\r\n          className={`border-l-4 ${\r\n            selectedStore.metrics.overUnderGross < 0 ? 'border-l-red-500' : 'border-l-green-500'\r\n          }`}\r\n        >\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">Over/Under</p>\r\n                <p\r\n                  className={`text-2xl font-bold ${\r\n                    selectedStore.metrics.overUnderGross < 0 ? 'text-red-600' : 'text-green-600'\r\n                  }`}\r\n                >\r\n                  {formatCurrency(selectedStore.metrics.overUnderGross)}\r\n                </p>\r\n              </div>\r\n              {selectedStore.metrics.overUnderGross < 0 ? (\r\n                <TrendingDown className=\"h-8 w-8 text-red-500\" />\r\n              ) : (\r\n                <TrendingUp className=\"h-8 w-8 text-green-500\" />\r\n              )}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Comparison Table for Multiple Stores/Groups */}\r\n      {selectedView === 'group' && (\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Dealer Group Comparison</CardTitle>\r\n            <p className=\"text-sm text-gray-600\">Compare performance across dealer groups</p>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"overflow-x-auto\">\r\n              <Table>\r\n                <TableHeader>\r\n                  <TableRow>\r\n                    <TableHead>Dealer Group</TableHead>\r\n                    <TableHead className=\"text-right\">Total Sold</TableHead>\r\n                    <TableHead className=\"text-right\">Total Gross</TableHead>\r\n                    <TableHead className=\"text-right\">PVR</TableHead>\r\n                    <TableHead className=\"text-right\">Over/Under Gross</TableHead>\r\n                    <TableHead className=\"text-right\">Over/Under Units</TableHead>\r\n                  </TableRow>\r\n                </TableHeader>\r\n                <TableBody>\r\n                  {STORE_COMPARISON_DATA.filter(store => store.type === 'group').map(store => (\r\n                    <TableRow key={store.id} className=\"hover:bg-gray-50\">\r\n                      <TableCell className=\"font-medium\">{store.name}</TableCell>\r\n                      <TableCell className=\"text-right\">{store.metrics.totalSold}</TableCell>\r\n                      <TableCell className=\"text-right\">\r\n                        {formatCurrency(store.metrics.total)}\r\n                      </TableCell>\r\n                      <TableCell className=\"text-right\">\r\n                        {formatCurrency(store.metrics.pvr)}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        className={`text-right font-medium ${\r\n                          store.metrics.overUnderGross < 0 ? 'text-red-600' : 'text-green-600'\r\n                        }`}\r\n                      >\r\n                        {formatCurrency(store.metrics.overUnderGross)}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        className={`text-right font-medium ${\r\n                          store.metrics.overUnderUnits < 0 ? 'text-red-600' : 'text-green-600'\r\n                        }`}\r\n                      >\r\n                        {store.metrics.overUnderUnits}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MetricCard = ({ label, value, icon, color = 'blue' }) => {\r\n  const getColorClasses = () => {\r\n    switch (color) {\r\n      case 'green':\r\n        return 'bg-green-50 text-green-600';\r\n      case 'blue':\r\n        return 'bg-blue-50 text-blue-600';\r\n      default:\r\n        return 'bg-gray-50 text-gray-600';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white p-2 rounded-lg border shadow-sm\">\r\n      <div className=\"flex items-center gap-1 mb-1\">\r\n        <div className={`p-1 rounded-md ${getColorClasses()}`}>{icon}</div>\r\n        <p className=\"text-xs font-medium text-gray-500\">{label}</p>\r\n      </div>\r\n      <p className=\"text-lg font-bold\">{value}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SalesReportPage = () => {\r\n  const [selectedTab, setSelectedTab] = useState('overview');\r\n  const [dateRange, setDateRange] = useState('month'); // 'week', 'month', 'quarter', 'year'\r\n  const [selectedTeam, setSelectedTeam] = useState('all');\r\n\r\n  // Calculate monthly totals\r\n  const calculateMonthlyTotals = () => {\r\n    const latestMonth = MONTHLY_SALES[MONTHLY_SALES.length - 1];\r\n    const previousMonth = MONTHLY_SALES[MONTHLY_SALES.length - 2];\r\n\r\n    const newVehicleChange =\r\n      ((latestMonth.newVehicles - previousMonth.newVehicles) / previousMonth.newVehicles) * 100;\r\n    const usedVehicleChange =\r\n      ((latestMonth.usedVehicles - previousMonth.usedVehicles) / previousMonth.usedVehicles) * 100;\r\n    const totalSalesChange =\r\n      ((latestMonth.totalSales - previousMonth.totalSales) / previousMonth.totalSales) * 100;\r\n    const avgGrossChange =\r\n      ((latestMonth.avgGross - previousMonth.avgGross) / previousMonth.avgGross) * 100;\r\n\r\n    return {\r\n      newVehicles: {\r\n        count: latestMonth.newVehicles,\r\n        change: newVehicleChange,\r\n      },\r\n      usedVehicles: {\r\n        count: latestMonth.usedVehicles,\r\n        change: usedVehicleChange,\r\n      },\r\n      totalSales: {\r\n        count: latestMonth.totalSales,\r\n        change: totalSalesChange,\r\n      },\r\n      avgGross: {\r\n        value: latestMonth.avgGross,\r\n        change: avgGrossChange,\r\n      },\r\n    };\r\n  };\r\n\r\n  const monthlyTotals = calculateMonthlyTotals();\r\n\r\n  return (\r\n    <div className=\"container py-6\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <div className=\"flex items-center\">\r\n          <Button variant=\"ghost\" size=\"sm\" asChild className=\"mr-2\">\r\n            <Link to=\"/dashboard/sales-manager\">\r\n              <ChevronLeft className=\"h-4 w-4 mr-1\" />\r\n              Back to Dashboard\r\n            </Link>\r\n          </Button>\r\n          <h1 className=\"text-3xl font-bold\">Sales Reports</h1>\r\n        </div>\r\n        <div className=\"flex gap-2\">\r\n          <Select value={dateRange} onValueChange={setDateRange}>\r\n            <SelectTrigger className=\"w-36\">\r\n              <Calendar className=\"mr-2 h-4 w-4\" />\r\n              <SelectValue />\r\n            </SelectTrigger>\r\n            <SelectContent>\r\n              <SelectItem value=\"week\">This Week</SelectItem>\r\n              <SelectItem value=\"month\">This Month</SelectItem>\r\n              <SelectItem value=\"quarter\">This Quarter</SelectItem>\r\n              <SelectItem value=\"year\">This Year</SelectItem>\r\n            </SelectContent>\r\n          </Select>\r\n          <Button variant=\"outline\">\r\n            <Download className=\"mr-2 h-4 w-4\" />\r\n            Export\r\n          </Button>\r\n          <Button variant=\"outline\">\r\n            <RefreshCw className=\"mr-2 h-4 w-4\" />\r\n            Refresh\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Add the Sales Performance Summary component */}\r\n      <SalesPerformanceSummary data={DEALER_GROUP_DATA} />\r\n\r\n      {/* Monthly Totals */}\r\n      <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-4 mb-6\">\r\n        <Card>\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">New Vehicles Sold</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{monthlyTotals.newVehicles.count}</div>\r\n            <div className=\"flex items-center text-xs mt-1\">\r\n              {monthlyTotals.newVehicles.change > 0 ? (\r\n                <>\r\n                  <ArrowUp className=\"mr-1 h-3 w-3 text-green-600\" />\r\n                  <span className=\"text-green-600\">\r\n                    +{monthlyTotals.newVehicles.change.toFixed(1)}%\r\n                  </span>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <ArrowDown className=\"mr-1 h-3 w-3 text-red-600\" />\r\n                  <span className=\"text-red-600\">\r\n                    {monthlyTotals.newVehicles.change.toFixed(1)}%\r\n                  </span>\r\n                </>\r\n              )}\r\n              <span className=\"text-gray-500 ml-1\">vs last month</span>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Used Vehicles Sold</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{monthlyTotals.usedVehicles.count}</div>\r\n            <div className=\"flex items-center text-xs mt-1\">\r\n              {monthlyTotals.usedVehicles.change > 0 ? (\r\n                <>\r\n                  <ArrowUp className=\"mr-1 h-3 w-3 text-green-600\" />\r\n                  <span className=\"text-green-600\">\r\n                    +{monthlyTotals.usedVehicles.change.toFixed(1)}%\r\n                  </span>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <ArrowDown className=\"mr-1 h-3 w-3 text-red-600\" />\r\n                  <span className=\"text-red-600\">\r\n                    {monthlyTotals.usedVehicles.change.toFixed(1)}%\r\n                  </span>\r\n                </>\r\n              )}\r\n              <span className=\"text-gray-500 ml-1\">vs last month</span>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Total Sales</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{monthlyTotals.totalSales.count}</div>\r\n            <div className=\"flex items-center text-xs mt-1\">\r\n              {monthlyTotals.totalSales.change > 0 ? (\r\n                <>\r\n                  <ArrowUp className=\"mr-1 h-3 w-3 text-green-600\" />\r\n                  <span className=\"text-green-600\">\r\n                    +{monthlyTotals.totalSales.change.toFixed(1)}%\r\n                  </span>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <ArrowDown className=\"mr-1 h-3 w-3 text-red-600\" />\r\n                  <span className=\"text-red-600\">\r\n                    {monthlyTotals.totalSales.change.toFixed(1)}%\r\n                  </span>\r\n                </>\r\n              )}\r\n              <span className=\"text-gray-500 ml-1\">vs last month</span>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Avg. Gross Per Deal</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">${monthlyTotals.avgGross.value}</div>\r\n            <div className=\"flex items-center text-xs mt-1\">\r\n              {monthlyTotals.avgGross.change > 0 ? (\r\n                <>\r\n                  <ArrowUp className=\"mr-1 h-3 w-3 text-green-600\" />\r\n                  <span className=\"text-green-600\">\r\n                    +{monthlyTotals.avgGross.change.toFixed(1)}%\r\n                  </span>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <ArrowDown className=\"mr-1 h-3 w-3 text-red-600\" />\r\n                  <span className=\"text-red-600\">{monthlyTotals.avgGross.change.toFixed(1)}%</span>\r\n                </>\r\n              )}\r\n              <span className=\"text-gray-500 ml-1\">vs last month</span>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Tabs for different reports */}\r\n      <Tabs value={selectedTab} onValueChange={setSelectedTab} className=\"mb-6\">\r\n        <TabsList>\r\n          <TabsTrigger value=\"overview\">\r\n            <LineChart className=\"h-4 w-4 mr-2\" />\r\n            Overview\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"team\">\r\n            <Users className=\"h-4 w-4 mr-2\" />\r\n            Team Performance\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"individual\">\r\n            <Users className=\"h-4 w-4 mr-2\" />\r\n            Individual Performance\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"inventory\">\r\n            <Car className=\"h-4 w-4 mr-2\" />\r\n            Inventory\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"finance\">\r\n            <DollarSign className=\"h-4 w-4 mr-2\" />\r\n            Finance\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"detailed\">\r\n            <FileText className=\"h-4 w-4 mr-2\" />\r\n            Detailed Report\r\n          </TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"overview\" className=\"mt-6\">\r\n          <div className=\"grid gap-6 md:grid-cols-2 mb-6\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Monthly Sales Trend</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"h-80\">\r\n                <div className=\"flex justify-center items-center h-full text-center text-gray-500\">\r\n                  [Sales Trend Chart - Interactive line chart showing sales trends over the past 6\r\n                  months]\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Vehicle Type Distribution</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"h-80\">\r\n                <div className=\"flex justify-center items-center h-full text-center text-gray-500\">\r\n                  [Vehicle Types Pie Chart - Distribution of vehicle types sold]\r\n                </div>\r\n                <div className=\"grid grid-cols-2 gap-4 mt-4\">\r\n                  {VEHICLE_TYPES_SOLD.map(type => (\r\n                    <div key={type.type} className=\"flex items-center justify-between\">\r\n                      <div className=\"text-sm\">{type.type}</div>\r\n                      <div className=\"text-sm font-medium\">{type.percentage}%</div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Monthly Sales Report</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <Table>\r\n                <TableHeader>\r\n                  <TableRow>\r\n                    <TableHead>Month</TableHead>\r\n                    <TableHead className=\"text-right\">New Vehicles</TableHead>\r\n                    <TableHead className=\"text-right\">Used Vehicles</TableHead>\r\n                    <TableHead className=\"text-right\">Total Sales</TableHead>\r\n                    <TableHead className=\"text-right\">Avg. Gross</TableHead>\r\n                  </TableRow>\r\n                </TableHeader>\r\n                <TableBody>\r\n                  {MONTHLY_SALES.map(month => (\r\n                    <TableRow key={month.month}>\r\n                      <TableCell className=\"font-medium\">{month.month}</TableCell>\r\n                      <TableCell className=\"text-right\">{month.newVehicles}</TableCell>\r\n                      <TableCell className=\"text-right\">{month.usedVehicles}</TableCell>\r\n                      <TableCell className=\"text-right\">{month.totalSales}</TableCell>\r\n                      <TableCell className=\"text-right\">${month.avgGross}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"team\" className=\"mt-6\">\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            <h3 className=\"text-lg font-medium\">Team Performance Comparison</h3>\r\n            <Select value={selectedTeam} onValueChange={setSelectedTeam}>\r\n              <SelectTrigger className=\"w-36\">\r\n                <SelectValue placeholder=\"All Teams\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"all\">All Teams</SelectItem>\r\n                <SelectItem value=\"Team A\">Team A</SelectItem>\r\n                <SelectItem value=\"Team B\">Team B</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          <div className=\"grid gap-6 md:grid-cols-2 mb-6\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Sales Comparison</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"h-80\">\r\n                <div className=\"flex justify-center items-center h-full text-center text-gray-500\">\r\n                  [Team Sales Comparison Chart - Bar chart comparing teams]\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Performance Metrics</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"h-80\">\r\n                <div className=\"flex justify-center items-center h-full text-center text-gray-500\">\r\n                  [Team Performance Radar Chart - Comparing multiple metrics]\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Team Performance Details</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <Table>\r\n                <TableHeader>\r\n                  <TableRow>\r\n                    <TableHead>Team</TableHead>\r\n                    <TableHead className=\"text-right\">Members</TableHead>\r\n                    <TableHead className=\"text-right\">Total Sales</TableHead>\r\n                    <TableHead className=\"text-right\">Sales/Member</TableHead>\r\n                    <TableHead className=\"text-right\">Gross Profit</TableHead>\r\n                    <TableHead className=\"text-right\">Avg. Gross</TableHead>\r\n                    <TableHead className=\"text-right\">Closing %</TableHead>\r\n                  </TableRow>\r\n                </TableHeader>\r\n                <TableBody>\r\n                  {TEAM_PERFORMANCE.map(team => (\r\n                    <TableRow key={team.team}>\r\n                      <TableCell className=\"font-medium\">{team.team}</TableCell>\r\n                      <TableCell className=\"text-right\">{team.members}</TableCell>\r\n                      <TableCell className=\"text-right\">{team.totalSales}</TableCell>\r\n                      <TableCell className=\"text-right\">{team.salesPerMember.toFixed(1)}</TableCell>\r\n                      <TableCell className=\"text-right\">\r\n                        ${team.grossProfit.toLocaleString()}\r\n                      </TableCell>\r\n                      <TableCell className=\"text-right\">${team.avgGross}</TableCell>\r\n                      <TableCell className=\"text-right\">{team.closingRatio}%</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"individual\" className=\"mt-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <div className=\"flex justify-between\">\r\n                <CardTitle>Individual Salesperson Performance</CardTitle>\r\n                <div className=\"flex gap-2\">\r\n                  <Button variant=\"outline\" size=\"sm\">\r\n                    <Filter className=\"mr-2 h-4 w-4\" />\r\n                    Filter\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <Table>\r\n                <TableHeader>\r\n                  <TableRow>\r\n                    <TableHead>Name</TableHead>\r\n                    <TableHead>Team</TableHead>\r\n                    <TableHead className=\"text-right\">New</TableHead>\r\n                    <TableHead className=\"text-right\">Used</TableHead>\r\n                    <TableHead className=\"text-right\">Total</TableHead>\r\n                    <TableHead className=\"text-right\">Gross Profit</TableHead>\r\n                    <TableHead className=\"text-right\">Avg. Gross</TableHead>\r\n                    <TableHead className=\"text-right\">Closing %</TableHead>\r\n                  </TableRow>\r\n                </TableHeader>\r\n                <TableBody>\r\n                  {SALESPERSON_DATA.map(person => (\r\n                    <TableRow key={person.id}>\r\n                      <TableCell className=\"font-medium\">{person.name}</TableCell>\r\n                      <TableCell>{person.team}</TableCell>\r\n                      <TableCell className=\"text-right\">{person.newVehicles}</TableCell>\r\n                      <TableCell className=\"text-right\">{person.usedVehicles}</TableCell>\r\n                      <TableCell className=\"text-right\">{person.totalSales}</TableCell>\r\n                      <TableCell className=\"text-right\">\r\n                        ${person.grossProfit.toLocaleString()}\r\n                      </TableCell>\r\n                      <TableCell className=\"text-right\">${person.avgGross}</TableCell>\r\n                      <TableCell className=\"text-right\">{person.closingRatio}%</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"inventory\" className=\"mt-6\">\r\n          <div className=\"grid gap-6 md:grid-cols-2 mb-6\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>New Vehicle Inventory</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"grid grid-cols-2 gap-4 mb-6\">\r\n                  <div>\r\n                    <div className=\"text-sm text-gray-500 mb-1\">Total Inventory</div>\r\n                    <div className=\"text-2xl font-bold\">{INVENTORY_DATA.newVehicles.total}</div>\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"text-sm text-gray-500 mb-1\">Avg. Days on Lot</div>\r\n                    <div className=\"text-2xl font-bold\">{INVENTORY_DATA.newVehicles.daysOnLot}</div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"space-y-4\">\r\n                  <div>\r\n                    <div className=\"flex justify-between mb-1\">\r\n                      <span className=\"text-sm\">Available</span>\r\n                      <span className=\"text-sm font-medium\">\r\n                        {INVENTORY_DATA.newVehicles.available} (\r\n                        {Math.round(\r\n                          (INVENTORY_DATA.newVehicles.available /\r\n                            INVENTORY_DATA.newVehicles.total) *\r\n                            100\r\n                        )}\r\n                        %)\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"h-2 bg-gray-100 rounded-full overflow-hidden\">\r\n                      <div\r\n                        className=\"h-full bg-blue-500 rounded-full\"\r\n                        style={{\r\n                          width: `${\r\n                            (INVENTORY_DATA.newVehicles.available /\r\n                              INVENTORY_DATA.newVehicles.total) *\r\n                            100\r\n                          }%`,\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <div className=\"flex justify-between mb-1\">\r\n                      <span className=\"text-sm\">Sold</span>\r\n                      <span className=\"text-sm font-medium\">\r\n                        {INVENTORY_DATA.newVehicles.sold} (\r\n                        {Math.round(\r\n                          (INVENTORY_DATA.newVehicles.sold / INVENTORY_DATA.newVehicles.total) * 100\r\n                        )}\r\n                        %)\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"h-2 bg-gray-100 rounded-full overflow-hidden\">\r\n                      <div\r\n                        className=\"h-full bg-green-500 rounded-full\"\r\n                        style={{\r\n                          width: `${\r\n                            (INVENTORY_DATA.newVehicles.sold / INVENTORY_DATA.newVehicles.total) *\r\n                            100\r\n                          }%`,\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <div className=\"flex justify-between mb-1\">\r\n                      <span className=\"text-sm\">Reserved</span>\r\n                      <span className=\"text-sm font-medium\">\r\n                        {INVENTORY_DATA.newVehicles.reserved} (\r\n                        {Math.round(\r\n                          (INVENTORY_DATA.newVehicles.reserved / INVENTORY_DATA.newVehicles.total) *\r\n                            100\r\n                        )}\r\n                        %)\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"h-2 bg-gray-100 rounded-full overflow-hidden\">\r\n                      <div\r\n                        className=\"h-full bg-amber-500 rounded-full\"\r\n                        style={{\r\n                          width: `${\r\n                            (INVENTORY_DATA.newVehicles.reserved /\r\n                              INVENTORY_DATA.newVehicles.total) *\r\n                            100\r\n                          }%`,\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <div className=\"flex justify-between mb-1\">\r\n                      <span className=\"text-sm\">In Transit</span>\r\n                      <span className=\"text-sm font-medium\">\r\n                        {INVENTORY_DATA.newVehicles.inTransit} (\r\n                        {Math.round(\r\n                          (INVENTORY_DATA.newVehicles.inTransit /\r\n                            INVENTORY_DATA.newVehicles.total) *\r\n                            100\r\n                        )}\r\n                        %)\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"h-2 bg-gray-100 rounded-full overflow-hidden\">\r\n                      <div\r\n                        className=\"h-full bg-purple-500 rounded-full\"\r\n                        style={{\r\n                          width: `${\r\n                            (INVENTORY_DATA.newVehicles.inTransit /\r\n                              INVENTORY_DATA.newVehicles.total) *\r\n                            100\r\n                          }%`,\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Used Vehicle Inventory</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"grid grid-cols-2 gap-4 mb-6\">\r\n                  <div>\r\n                    <div className=\"text-sm text-gray-500 mb-1\">Total Inventory</div>\r\n                    <div className=\"text-2xl font-bold\">{INVENTORY_DATA.usedVehicles.total}</div>\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"text-sm text-gray-500 mb-1\">Avg. Days on Lot</div>\r\n                    <div className=\"text-2xl font-bold\">\r\n                      {INVENTORY_DATA.usedVehicles.daysOnLot}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"space-y-4\">\r\n                  <div>\r\n                    <div className=\"flex justify-between mb-1\">\r\n                      <span className=\"text-sm\">Available</span>\r\n                      <span className=\"text-sm font-medium\">\r\n                        {INVENTORY_DATA.usedVehicles.available} (\r\n                        {Math.round(\r\n                          (INVENTORY_DATA.usedVehicles.available /\r\n                            INVENTORY_DATA.usedVehicles.total) *\r\n                            100\r\n                        )}\r\n                        %)\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"h-2 bg-gray-100 rounded-full overflow-hidden\">\r\n                      <div\r\n                        className=\"h-full bg-blue-500 rounded-full\"\r\n                        style={{\r\n                          width: `${\r\n                            (INVENTORY_DATA.usedVehicles.available /\r\n                              INVENTORY_DATA.usedVehicles.total) *\r\n                            100\r\n                          }%`,\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <div className=\"flex justify-between mb-1\">\r\n                      <span className=\"text-sm\">Sold</span>\r\n                      <span className=\"text-sm font-medium\">\r\n                        {INVENTORY_DATA.usedVehicles.sold} (\r\n                        {Math.round(\r\n                          (INVENTORY_DATA.usedVehicles.sold / INVENTORY_DATA.usedVehicles.total) *\r\n                            100\r\n                        )}\r\n                        %)\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"h-2 bg-gray-100 rounded-full overflow-hidden\">\r\n                      <div\r\n                        className=\"h-full bg-green-500 rounded-full\"\r\n                        style={{\r\n                          width: `${\r\n                            (INVENTORY_DATA.usedVehicles.sold / INVENTORY_DATA.usedVehicles.total) *\r\n                            100\r\n                          }%`,\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <div className=\"flex justify-between mb-1\">\r\n                      <span className=\"text-sm\">Reserved</span>\r\n                      <span className=\"text-sm font-medium\">\r\n                        {INVENTORY_DATA.usedVehicles.reserved} (\r\n                        {Math.round(\r\n                          (INVENTORY_DATA.usedVehicles.reserved /\r\n                            INVENTORY_DATA.usedVehicles.total) *\r\n                            100\r\n                        )}\r\n                        %)\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"h-2 bg-gray-100 rounded-full overflow-hidden\">\r\n                      <div\r\n                        className=\"h-full bg-amber-500 rounded-full\"\r\n                        style={{\r\n                          width: `${\r\n                            (INVENTORY_DATA.usedVehicles.reserved /\r\n                              INVENTORY_DATA.usedVehicles.total) *\r\n                            100\r\n                          }%`,\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <div className=\"flex justify-between mb-1\">\r\n                      <span className=\"text-sm\">In Transit</span>\r\n                      <span className=\"text-sm font-medium\">\r\n                        {INVENTORY_DATA.usedVehicles.inTransit} (\r\n                        {Math.round(\r\n                          (INVENTORY_DATA.usedVehicles.inTransit /\r\n                            INVENTORY_DATA.usedVehicles.total) *\r\n                            100\r\n                        )}\r\n                        %)\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"h-2 bg-gray-100 rounded-full overflow-hidden\">\r\n                      <div\r\n                        className=\"h-full bg-purple-500 rounded-full\"\r\n                        style={{\r\n                          width: `${\r\n                            (INVENTORY_DATA.usedVehicles.inTransit /\r\n                              INVENTORY_DATA.usedVehicles.total) *\r\n                            100\r\n                          }%`,\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"finance\" className=\"mt-6\">\r\n          <div className=\"grid gap-6 md:grid-cols-3 mb-6\">\r\n            <Card>\r\n              <CardHeader className=\"pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Total Finance Deals</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">{FINANCE_DATA.totalFinanced}</div>\r\n                <p className=\"text-xs text-muted-foreground mt-1\">\r\n                  {Math.round(\r\n                    (FINANCE_DATA.totalFinanced /\r\n                      (FINANCE_DATA.totalFinanced + FINANCE_DATA.cashDeals)) *\r\n                      100\r\n                  )}\r\n                  % of total deals\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader className=\"pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Cash Deals</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">{FINANCE_DATA.cashDeals}</div>\r\n                <p className=\"text-xs text-muted-foreground mt-1\">\r\n                  {Math.round(\r\n                    (FINANCE_DATA.cashDeals /\r\n                      (FINANCE_DATA.totalFinanced + FINANCE_DATA.cashDeals)) *\r\n                      100\r\n                  )}\r\n                  % of total deals\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader className=\"pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Average Rate</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">{FINANCE_DATA.avgRate}%</div>\r\n                <p className=\"text-xs text-green-600 mt-1\">0.3% lower than last month</p>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"grid gap-6 md:grid-cols-2 mb-6\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Front End vs Back End</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"h-72\">\r\n                <div className=\"flex justify-center items-center h-full text-center text-gray-500\">\r\n                  [Front End vs Back End Chart - Comparison of front-end vs back-end profit]\r\n                </div>\r\n                <div className=\"grid grid-cols-2 gap-8 mt-4\">\r\n                  <div>\r\n                    <div className=\"text-sm text-gray-500 mb-1\">Front End Avg</div>\r\n                    <div className=\"text-xl font-bold\">${FINANCE_DATA.frontEndAvg}</div>\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"text-sm text-gray-500 mb-1\">Back End Avg</div>\r\n                    <div className=\"text-xl font-bold\">${FINANCE_DATA.backEndAvg}</div>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Product Penetration</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"pt-6\">\r\n                <div className=\"space-y-8\">\r\n                  <div>\r\n                    <div className=\"flex justify-between mb-2\">\r\n                      <span className=\"font-medium\">Warranty</span>\r\n                      <span className=\"font-medium\">{FINANCE_DATA.warrantyPenetration}%</span>\r\n                    </div>\r\n                    <div className=\"h-3 bg-gray-100 rounded-full overflow-hidden\">\r\n                      <div\r\n                        className=\"h-full bg-blue-500 rounded-full\"\r\n                        style={{ width: `${FINANCE_DATA.warrantyPenetration}%` }}\r\n                      ></div>\r\n                    </div>\r\n                    <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\r\n                      <span>0%</span>\r\n                      <span>50%</span>\r\n                      <span>100%</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <div className=\"flex justify-between mb-2\">\r\n                      <span className=\"font-medium\">GAP Insurance</span>\r\n                      <span className=\"font-medium\">{FINANCE_DATA.gapPenetration}%</span>\r\n                    </div>\r\n                    <div className=\"h-3 bg-gray-100 rounded-full overflow-hidden\">\r\n                      <div\r\n                        className=\"h-full bg-green-500 rounded-full\"\r\n                        style={{ width: `${FINANCE_DATA.gapPenetration}%` }}\r\n                      ></div>\r\n                    </div>\r\n                    <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\r\n                      <span>0%</span>\r\n                      <span>50%</span>\r\n                      <span>100%</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"detailed\" className=\"mt-6\">\r\n          <DetailedSalesReport />\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalesReportPage;\r\n","import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md\",\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&>svg]:size-4 [&>svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '../../components/ui/card';\nimport { Button } from '../../components/ui/button';\nimport { Link } from 'react-router-dom';\nimport {\n  DollarSign,\n  ChevronUp,\n  ChevronDown,\n  BarChart4,\n  CreditCard,\n  Percent,\n  Calendar,\n  Filter,\n  FileText,\n  Trophy,\n  CalendarClock,\n  ChevronLeft,\n  ChevronRight,\n  MoreVertical,\n  PlusCircle,\n  Car,\n} from 'lucide-react';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from '../../components/ui/dropdown-menu';\n\n// Interface for a deal\ninterface Deal {\n  id: string;\n  customer: string;\n  vehicle: string;\n  vin: string;\n  saleDate: string;\n  salesperson: string;\n  amount: number;\n  status: string;\n  products: string[];\n  profit: number;\n  created_at: string;\n  back_end_gross?: number;\n  vsc_profit?: number;\n  gap_profit?: number;\n  appearance_profit?: number;\n  tire_wheel_profit?: number;\n  ppm_profit?: number;\n  ext_warranty_profit?: number;\n  key_replacement_profit?: number;\n  theft_profit?: number;\n  windshield_profit?: number;\n  lojack_profit?: number;\n  other_profit?: number;\n}\n\n// Interface for metrics\ninterface Metrics {\n  mtdRevenue: number;\n  dealsProcessed: number;\n  productsPerDeal: number;\n  pvr: number;\n  dealTypes: {\n    finance: number;\n    cash: number;\n    lease: number;\n  };\n  productMix: {\n    extendedWarranty: number;\n    gapInsurance: number;\n    paintProtection: number;\n    tireWheel: number;\n    ppm: number;\n    other: number;\n  };\n  avgProfits: {\n    extendedWarranty: number;\n    gapInsurance: number;\n    paintProtection: number;\n    tireWheel: number;\n    ppm: number;\n    other: number;\n  };\n}\n\n// Time period options\ntype TimePeriod = 'this-month' | 'last-month' | 'last-quarter' | 'ytd' | 'last-year' | 'custom';\n\n// Add schedule data\n// Mock schedule data\nconst SCHEDULE_DATA = [\n  { day: 'Monday', date: '12', shift: 'Off', team: '' },\n  { day: 'Tuesday', date: '13', shift: '9am - 6pm', team: 'Team A' },\n  { day: 'Wednesday', date: '14', shift: '10am - 7pm', team: 'Team A' },\n  { day: 'Thursday', date: '15', shift: '9am - 6pm', team: 'Team A' },\n  { day: 'Friday', date: '16', shift: '11am - 8pm', team: 'Team B' },\n  { day: 'Saturday', date: '17', shift: '9am - 5pm', team: 'Team B' },\n  { day: 'Sunday', date: '18', shift: 'Off', team: '' },\n];\n\n// Mock deals - cleared for testing\nconst MOCK_DEALS: Deal[] = [];\n\nexport const SingleFinanceHomePage: React.FC = () => {\n  const [deals, setDeals] = useState<Deal[]>([]);\n  const [pendingDeals, setPendingDeals] = useState<Deal[]>([]);\n  const [timePeriod, setTimePeriod] = useState<TimePeriod>('this-month');\n  const [customDateRange, setCustomDateRange] = useState({\n    start: '',\n    end: '',\n  });\n  const [showCustomDatePicker, setShowCustomDatePicker] = useState(false);\n  const [filteredDeals, setFilteredDeals] = useState<Deal[]>([]);\n  const [metrics, setMetrics] = useState<Metrics>({\n    mtdRevenue: 0,\n    dealsProcessed: 0,\n    productsPerDeal: 0,\n    pvr: 0,\n    dealTypes: {\n      finance: 0,\n      cash: 0,\n      lease: 0,\n    },\n    productMix: {\n      extendedWarranty: 0,\n      gapInsurance: 0,\n      paintProtection: 0,\n      tireWheel: 0,\n      ppm: 0,\n      other: 0,\n    },\n    avgProfits: {\n      extendedWarranty: 0,\n      gapInsurance: 0,\n      paintProtection: 0,\n      tireWheel: 0,\n      ppm: 0,\n      other: 0,\n    },\n  });\n  // State to control promotional banner visibility\n  const [showPromoBanner, setShowPromoBanner] = useState(true);\n\n  // Load deals from localStorage and recalculate when component mounts or data changes\n  useEffect(() => {\n    loadDealsFromStorage();\n\n    // Listen for storage changes from other tabs/windows\n    const handleStorageChange = (e: any) => {\n      if (e.key === 'singleFinanceDeals') {\n        console.log('[SingleFinanceHomePage] Storage change detected, reloading deals');\n        loadDealsFromStorage();\n      }\n    };\n\n    // Listen for window focus to refresh data when returning to tab\n    const handleWindowFocus = () => {\n      console.log('[SingleFinanceHomePage] Window focus detected, refreshing deals');\n      loadDealsFromStorage();\n    };\n\n    window.addEventListener('storage', handleStorageChange);\n    window.addEventListener('focus', handleWindowFocus);\n\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n      window.removeEventListener('focus', handleWindowFocus);\n    };\n  }, []);\n\n  // Function to manually refresh deals (can be called by buttons)\n  const refreshDeals = () => {\n    console.log('[SingleFinanceHomePage] Manual refresh triggered');\n    loadDealsFromStorage();\n  };\n\n  // Expose refresh function globally for debugging\n  useEffect(() => {\n    (window as any).refreshSingleFinanceDeals = refreshDeals;\n    return () => {\n      delete (window as any).refreshSingleFinanceDeals;\n    };\n  }, []);\n\n  // Separate effect for time period changes\n  useEffect(() => {\n    if (deals.length > 0) {\n      filterDealsByDateRange();\n    }\n  }, [timePeriod, customDateRange, deals]);\n\n  // Function to load deals from localStorage\n  const loadDealsFromStorage = useCallback(() => {\n    try {\n      // Load from SEPARATE storage for Single Finance Dashboard\n      const storedDeals = localStorage.getItem('singleFinanceDeals');\n      if (storedDeals) {\n        const parsedDeals = JSON.parse(storedDeals);\n        console.log(\n          '[SingleFinanceHomePage] Loaded deals from singleFinanceDeals storage:',\n          parsedDeals\n        );\n        setDeals(parsedDeals);\n        setPendingDeals(\n          parsedDeals.filter((deal: Deal) => deal.status === 'Pending' || deal.status === 'pending')\n        );\n      } else {\n        // Fallback to mock data if no stored deals\n        console.log('[SingleFinanceHomePage] No stored deals found, using mock data');\n        setDeals(MOCK_DEALS);\n        setPendingDeals(MOCK_DEALS.filter(deal => deal.status === 'Pending'));\n      }\n    } catch (error) {\n      console.error('[SingleFinanceHomePage] Error loading deals from localStorage:', error);\n      // Fallback to mock data\n      setDeals(MOCK_DEALS);\n      setPendingDeals(MOCK_DEALS.filter(deal => deal.status === 'Pending'));\n    }\n  }, []);\n\n  // Filter deals based on selected time period\n  const filterDealsByDateRange = useCallback(() => {\n    const { startDate, endDate } = getDateRange(timePeriod);\n\n    const filtered = deals.filter(deal => {\n      const dealDate = new Date(deal.saleDate);\n      return dealDate >= startDate && dealDate <= endDate;\n    });\n\n    setFilteredDeals(filtered);\n    calculateMetrics(filtered);\n  }, [deals, timePeriod, customDateRange]);\n\n  // Calculate metrics based on filtered deals\n  const calculateMetrics = useCallback((deals: Deal[]) => {\n    if (deals.length === 0) {\n      setMetrics({\n        mtdRevenue: 0,\n        dealsProcessed: 0,\n        productsPerDeal: 0,\n        pvr: 0,\n        dealTypes: {\n          finance: 0,\n          cash: 0,\n          lease: 0,\n        },\n        productMix: {\n          extendedWarranty: 0,\n          gapInsurance: 0,\n          paintProtection: 0,\n          tireWheel: 0,\n          ppm: 0,\n          other: 0,\n        },\n        avgProfits: {\n          extendedWarranty: 0,\n          gapInsurance: 0,\n          paintProtection: 0,\n          tireWheel: 0,\n          ppm: 0,\n          other: 0,\n        },\n      });\n      return;\n    }\n\n    // Calculate total revenue - handle both new and old data structures\n    const totalRevenue = deals.reduce((acc, deal) => {\n      // New structure has back_end_gross, old structure has profit\n      const dealProfit = deal.back_end_gross || deal.profit || 0;\n      return acc + dealProfit;\n    }, 0);\n\n    const totalDeals = deals.length;\n\n    // Calculate AVERAGE PROFIT per product across all deals (not percentages)\n    let extendedWarrantyTotal = 0;\n    let extendedWarrantyCount = 0;\n    let gapInsuranceTotal = 0;\n    let gapInsuranceCount = 0;\n    let paintProtectionTotal = 0;\n    let paintProtectionCount = 0;\n    let tireWheelTotal = 0;\n    let tireWheelCount = 0;\n    let ppmTotal = 0;\n    let ppmCount = 0;\n    let otherTotal = 0;\n    let otherCount = 0;\n\n    deals.forEach(deal => {\n      // Access deal data properly - cast to any to access extended properties\n      const dealData = deal as any;\n\n      // VSC/Extended Warranty\n      if (dealData.vscProfit && dealData.vscProfit > 0) {\n        extendedWarrantyTotal += dealData.vscProfit;\n        extendedWarrantyCount++;\n      } else if (deal.vsc_profit && deal.vsc_profit > 0) {\n        extendedWarrantyTotal += deal.vsc_profit;\n        extendedWarrantyCount++;\n      }\n\n      // GAP Insurance\n      if (dealData.gapProfit && dealData.gapProfit > 0) {\n        gapInsuranceTotal += dealData.gapProfit;\n        gapInsuranceCount++;\n      } else if (deal.gap_profit && deal.gap_profit > 0) {\n        gapInsuranceTotal += deal.gap_profit;\n        gapInsuranceCount++;\n      }\n\n      // Paint Protection/Appearance\n      if (dealData.appearanceProfit && dealData.appearanceProfit > 0) {\n        paintProtectionTotal += dealData.appearanceProfit;\n        paintProtectionCount++;\n      } else if (deal.appearance_profit && deal.appearance_profit > 0) {\n        paintProtectionTotal += deal.appearance_profit;\n        paintProtectionCount++;\n      }\n\n      // Tire & Wheel\n      if (dealData.tireAndWheelProfit && dealData.tireAndWheelProfit > 0) {\n        tireWheelTotal += dealData.tireAndWheelProfit;\n        tireWheelCount++;\n      } else if (deal.tire_wheel_profit && deal.tire_wheel_profit > 0) {\n        tireWheelTotal += deal.tire_wheel_profit;\n        tireWheelCount++;\n      }\n\n      // PPM (Prepaid Maintenance)\n      if (dealData.ppmProfit && dealData.ppmProfit > 0) {\n        ppmTotal += dealData.ppmProfit;\n        ppmCount++;\n      } else if (deal.ppm_profit && deal.ppm_profit > 0) {\n        ppmTotal += deal.ppm_profit;\n        ppmCount++;\n      }\n\n      // Other products\n      const otherProfit =\n        (dealData.extWarrantyProfit || deal.ext_warranty_profit || 0) +\n        (dealData.keyReplacementProfit || deal.key_replacement_profit || 0) +\n        (dealData.theftProfit || deal.theft_profit || 0) +\n        (dealData.windshieldProfit || deal.windshield_profit || 0) +\n        (dealData.lojackProfit || deal.lojack_profit || 0) +\n        (dealData.otherProfit || deal.other_profit || 0);\n\n      if (otherProfit > 0) {\n        otherTotal += otherProfit;\n        otherCount++;\n      }\n    });\n\n    // Calculate deal types (Finance, Cash, Lease)\n    let financeDealsCount = 0;\n    let cashDealsCount = 0;\n    let leaseDealsCount = 0;\n\n    deals.forEach(deal => {\n      const dealData = deal as any;\n      const dealType = (dealData.dealType || '').toLowerCase();\n\n      if (dealType === 'finance' || dealType === 'financing') {\n        financeDealsCount++;\n      } else if (dealType === 'cash') {\n        cashDealsCount++;\n      } else if (dealType === 'lease' || dealType === 'leasing') {\n        leaseDealsCount++;\n      } else {\n        // Default to finance if not specified\n        financeDealsCount++;\n      }\n    });\n\n    // Calculate penetration percentage (how often each product is sold)\n    const calculatePenetration = (count: number) =>\n      totalDeals > 0 ? Math.round((count / totalDeals) * 100) : 0;\n\n    // Calculate average profit per product\n    const calculateAverage = (total: number, count: number) =>\n      count > 0 ? Math.round(total / count) : 0;\n\n    setMetrics({\n      mtdRevenue: totalRevenue,\n      dealsProcessed: totalDeals,\n      productsPerDeal:\n        totalDeals > 0\n          ? (extendedWarrantyCount +\n              gapInsuranceCount +\n              paintProtectionCount +\n              tireWheelCount +\n              ppmCount +\n              otherCount) /\n            totalDeals\n          : 0,\n      pvr: totalDeals > 0 ? totalRevenue / totalDeals : 0,\n      dealTypes: {\n        finance: financeDealsCount,\n        cash: cashDealsCount,\n        lease: leaseDealsCount,\n      },\n      productMix: {\n        extendedWarranty: calculatePenetration(extendedWarrantyCount),\n        gapInsurance: calculatePenetration(gapInsuranceCount),\n        paintProtection: calculatePenetration(paintProtectionCount),\n        tireWheel: calculatePenetration(tireWheelCount),\n        ppm: calculatePenetration(ppmCount),\n        other: calculatePenetration(otherCount),\n      },\n      // Add average profits as a separate property\n      avgProfits: {\n        extendedWarranty: calculateAverage(extendedWarrantyTotal, extendedWarrantyCount),\n        gapInsurance: calculateAverage(gapInsuranceTotal, gapInsuranceCount),\n        paintProtection: calculateAverage(paintProtectionTotal, paintProtectionCount),\n        tireWheel: calculateAverage(tireWheelTotal, tireWheelCount),\n        ppm: calculateAverage(ppmTotal, ppmCount),\n        other: calculateAverage(otherTotal, otherCount),\n      },\n    });\n  }, []);\n\n  // Helper to get the current month and year for display\n  const getCurrentMonthYear = () => {\n    const date = new Date();\n    return date.toLocaleDateString('en-US', { month: 'long', year: 'numeric' });\n  };\n\n  // Get date range based on selected time period\n  const getDateRange = useCallback(\n    (period: TimePeriod) => {\n      const today = new Date();\n      let startDate = new Date();\n      let endDate = new Date();\n\n      switch (period) {\n        case 'this-month':\n          startDate = new Date(today.getFullYear(), today.getMonth(), 1);\n          endDate = today;\n          break;\n\n        case 'last-month':\n          startDate = new Date(today.getFullYear(), today.getMonth() - 1, 1);\n          endDate = new Date(today.getFullYear(), today.getMonth(), 0);\n          break;\n\n        case 'last-quarter': {\n          const currentQuarter = Math.floor(today.getMonth() / 3);\n          startDate = new Date(today.getFullYear(), currentQuarter * 3 - 3, 1);\n          endDate = new Date(today.getFullYear(), currentQuarter * 3, 0);\n          break;\n        }\n\n        case 'ytd':\n          startDate = new Date(today.getFullYear(), 0, 1);\n          endDate = today;\n          break;\n\n        case 'last-year':\n          startDate = new Date(today.getFullYear() - 1, 0, 1);\n          endDate = new Date(today.getFullYear() - 1, 11, 31);\n          break;\n\n        case 'custom':\n          if (customDateRange.start && customDateRange.end) {\n            startDate = new Date(customDateRange.start);\n            endDate = new Date(customDateRange.end);\n          }\n          break;\n      }\n\n      return { startDate, endDate };\n    },\n    [customDateRange]\n  );\n\n  // Check if the day is today for styling\n  const isToday = (day: string) => {\n    const today = new Date();\n    const date = today.getDate().toString();\n    return day === date;\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      {/* Promotional Banner */}\n      {showPromoBanner && (\n        <div className=\"mb-6 p-3 bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-100 rounded-lg shadow-sm relative\">\n          <button\n            className=\"absolute top-2 right-2 text-gray-400 hover:text-gray-600\"\n            onClick={() => setShowPromoBanner(false)}\n            aria-label=\"Close promotional banner\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            >\n              <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n              <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n            </svg>\n          </button>\n          <div className=\"flex items-center\">\n            <div className=\"mr-4 bg-blue-500 text-white p-2 rounded-full\">\n              <Trophy size={20} />\n            </div>\n            <div>\n              <h3 className=\"font-medium text-blue-800\">Special Promotion Active!</h3>\n              <p className=\"text-blue-600\">\n                Your Finance Manager subscription is currently{' '}\n                <span className=\"line-through text-gray-500 mr-1\">$5/month</span>\n                <span className=\"font-bold text-red-500\">FREE</span>\n                <span className=\"text-gray-500 text-sm italic ml-1\">for a limited time</span>\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Page Header */}\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-2xl font-bold\">Finance Manager Dashboard</h1>\n        <div className=\"space-x-2\">\n          <DropdownMenu>{/* ... existing dropdown menu code ... */}</DropdownMenu>\n        </div>\n      </div>\n\n      {/* KPIs */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\n        <Card className=\"border-l-4 border-l-green-500 hover:shadow-md transition-shadow\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-base font-semibold text-slate-700\">F&I Gross</CardTitle>\n            <DollarSign className=\"h-4 w-4 text-green-500\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-slate-900\">\n              ${metrics.mtdRevenue.toLocaleString()}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              {metrics.mtdRevenue > 12000 ? (\n                <span className=\"text-green-500 flex items-center\">\n                  <ChevronUp className=\"mr-1 h-4 w-4\" />\n                  +12% from last month\n                </span>\n              ) : (\n                <span className=\"text-red-600 flex items-center\">\n                  <ChevronDown className=\"mr-1 h-4 w-4\" />\n                  -8% from last month\n                </span>\n              )}\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card className=\"border-l-4 border-l-blue-500 hover:shadow-md transition-shadow\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-base font-semibold text-slate-700\">\n              Deals Processed\n            </CardTitle>\n            <FileText className=\"h-4 w-4 text-blue-500\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-slate-900\">{metrics.dealsProcessed}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              <span className=\"text-green-500 flex items-center\">\n                <ChevronUp className=\"mr-1 h-4 w-4\" />\n                +3% from last month\n              </span>\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card className=\"border-l-4 border-l-indigo-500 hover:shadow-md transition-shadow\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-base font-semibold text-slate-700\">Deal Types</CardTitle>\n            <Car className=\"h-4 w-4 text-indigo-500\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-1\">\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-xs text-gray-600\">Finance:</span>\n                <span className=\"text-sm font-bold text-indigo-600\">\n                  {metrics.dealTypes.finance}\n                </span>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-xs text-gray-600\">Cash:</span>\n                <span className=\"text-sm font-bold text-green-600\">{metrics.dealTypes.cash}</span>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-xs text-gray-600\">Lease:</span>\n                <span className=\"text-sm font-bold text-blue-600\">{metrics.dealTypes.lease}</span>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"border-l-4 border-l-purple-500 hover:shadow-md transition-shadow\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-base font-semibold text-slate-700\">\n              Products Per Deal\n            </CardTitle>\n            <BarChart4 className=\"h-4 w-4 text-purple-500\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-slate-900\">\n              {metrics.productsPerDeal.toFixed(1)}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              {metrics.productsPerDeal >= 2.0 ? (\n                <span className=\"text-green-500 flex items-center\">\n                  <ChevronUp className=\"mr-1 h-4 w-4\" />\n                  +0.2 from last month\n                </span>\n              ) : (\n                <span className=\"text-red-600 flex items-center\">\n                  <ChevronDown className=\"mr-1 h-4 w-4\" />\n                  -0.3 from last month\n                </span>\n              )}\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card className=\"border-l-4 border-l-amber-500 hover:shadow-md transition-shadow\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-base font-semibold text-slate-700\">\n              PVR (Per Vehicle Retailed)\n            </CardTitle>\n            <CreditCard className=\"h-4 w-4 text-amber-500\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-slate-900\">${metrics.pvr.toLocaleString()}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              {metrics.pvr > 1500 ? (\n                <span className=\"text-green-500 flex items-center\">\n                  <ChevronUp className=\"mr-1 h-4 w-4\" />\n                  +$125 from last month\n                </span>\n              ) : (\n                <span className=\"text-red-600 flex items-center\">\n                  <ChevronDown className=\"mr-1 h-4 w-4\" />\n                  -$89 from last month\n                </span>\n              )}\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Product Mix Section - Now Full Width */}\n      <Card className=\"col-span-12 bg-white border-slate-200 shadow-sm mt-6\">\n        <CardHeader className=\"py-2 px-4 border-b\">\n          <CardTitle className=\"flex items-center text-xl font-semibold\">\n            <BarChart4 className=\"mr-2 h-6 w-6 text-blue-500\" />\n            F&I Product Mix - Penetration % & Avg. Profit\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"p-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {/* First Column: VSC, GAP, PPM */}\n            <div className=\"space-y-2\">\n              {/* VSC */}\n              <div className=\"flex items-center justify-between py-2 border-b border-gray-100\">\n                <div className=\"font-medium flex items-center text-base\">\n                  <div className=\"w-3 h-3 bg-blue-600 rounded-full mr-2\"></div>\n                  Vehicle Service Contract (VSC)\n                </div>\n                <div className=\"text-right\">\n                  <div className=\"font-bold text-2xl text-blue-600\">\n                    ${metrics.avgProfits.extendedWarranty.toLocaleString()}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">\n                    {metrics.productMix.extendedWarranty}% Penetration\n                  </div>\n                </div>\n              </div>\n\n              {/* GAP Insurance */}\n              <div className=\"flex items-center justify-between py-2 border-b border-gray-100\">\n                <div className=\"font-medium flex items-center text-base\">\n                  <div className=\"w-3 h-3 bg-green-600 rounded-full mr-2\"></div>\n                  GAP Insurance\n                </div>\n                <div className=\"text-right\">\n                  <div className=\"font-bold text-2xl text-green-600\">\n                    ${metrics.avgProfits.gapInsurance.toLocaleString()}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">\n                    {metrics.productMix.gapInsurance}% Penetration\n                  </div>\n                </div>\n              </div>\n\n              {/* PPM */}\n              <div className=\"flex items-center justify-between py-2\">\n                <div className=\"font-medium flex items-center text-base\">\n                  <div className=\"w-3 h-3 bg-purple-600 rounded-full mr-2\"></div>\n                  PrePaid Maintenance (PPM)\n                </div>\n                <div className=\"text-right\">\n                  <div className=\"font-bold text-2xl text-purple-600\">\n                    ${metrics.avgProfits.ppm.toLocaleString()}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">{metrics.productMix.ppm}% Penetration</div>\n                </div>\n              </div>\n            </div>\n\n            {/* Second Column: Paint, Tire & Wheel, Other */}\n            <div className=\"space-y-2\">\n              {/* Paint Protection */}\n              <div className=\"flex items-center justify-between py-2 border-b border-gray-100\">\n                <div className=\"font-medium flex items-center text-base\">\n                  <div className=\"w-3 h-3 bg-orange-600 rounded-full mr-2\"></div>\n                  Paint Protection\n                </div>\n                <div className=\"text-right\">\n                  <div className=\"font-bold text-2xl text-orange-600\">\n                    ${metrics.avgProfits.paintProtection.toLocaleString()}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">\n                    {metrics.productMix.paintProtection}% Penetration\n                  </div>\n                </div>\n              </div>\n\n              {/* Tire & Wheel */}\n              <div className=\"flex items-center justify-between py-2 border-b border-gray-100\">\n                <div className=\"font-medium flex items-center text-base\">\n                  <div className=\"w-3 h-3 bg-amber-600 rounded-full mr-2\"></div>\n                  Tire and Wheel Bundle\n                </div>\n                <div className=\"text-right\">\n                  <div className=\"font-bold text-2xl text-amber-600\">\n                    ${metrics.avgProfits.tireWheel.toLocaleString()}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">\n                    {metrics.productMix.tireWheel}% Penetration\n                  </div>\n                </div>\n              </div>\n\n              {/* Other */}\n              <div className=\"flex items-center justify-between py-2\">\n                <div className=\"font-medium flex items-center text-base\">\n                  <div className=\"w-3 h-3 bg-gray-600 rounded-full mr-2\"></div>\n                  Other Products\n                </div>\n                <div className=\"text-right\">\n                  <div className=\"font-bold text-2xl text-gray-600\">\n                    ${metrics.avgProfits.other.toLocaleString()}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">\n                    {metrics.productMix.other}% Penetration\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Products Per Deal (PPD) metric at the bottom */}\n          <div className=\"mt-4 pt-3 border-t border-gray-200\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"font-medium text-sm\">Products Per Deal (PPD)</div>\n              <div className=\"font-bold text-lg text-purple-600\">\n                {metrics.productsPerDeal.toFixed(1)}\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Schedule Section */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mt-6\">\n        {/* ... existing schedule section ... */}\n      </div>\n    </div>\n  );\n};\n\nexport default SingleFinanceHomePage;\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardHeader, CardTitle, CardContent } from '../../components/ui/card';\r\nimport { Button } from '../../components/ui/button';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Search,\r\n  Filter,\r\n  ArrowUpDown,\r\n  FileEdit,\r\n  CheckCircle,\r\n  AlertCircle,\r\n  Clock,\r\n  ArrowLeft,\r\n  DollarSign,\r\n} from 'lucide-react';\r\nimport { Input } from '../../components/ui/input';\r\nimport { Badge } from '../../components/ui/badge';\r\n\r\n// Interface for a deal\r\ninterface Deal {\r\n  id: string;\r\n  customer: string;\r\n  vehicle: string;\r\n  vin: string;\r\n  saleDate: string;\r\n  salesperson: string;\r\n  amount: number;\r\n  status: string;\r\n  products: string[];\r\n  profit: number;\r\n  created_at: string;\r\n  // Extended properties from form data\r\n  lastName?: string;\r\n  dealNumber?: string;\r\n  stockNumber?: string;\r\n  vinLast8?: string;\r\n  vehicleType?: string;\r\n  dealDate?: string;\r\n  frontEndGross?: number;\r\n  backEndGross?: number;\r\n  totalGross?: number;\r\n  vscProfit?: number;\r\n  ppmProfit?: number;\r\n  gapProfit?: number;\r\n  tireAndWheelProfit?: number;\r\n  appearanceProfit?: number;\r\n  otherProfit?: number;\r\n  lender?: string;\r\n  dealStatus?: string;\r\n}\r\n\r\nconst SingleFinanceDealsPage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [deals, setDeals] = useState<Deal[]>([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [statusFilter, setStatusFilter] = useState('All');\r\n  const [sortField, setSortField] = useState('saleDate');\r\n  const [sortDirection, setSortDirection] = useState('desc');\r\n\r\n  const handleBackToDashboard = () => {\r\n    navigate('/dashboard/single-finance');\r\n  };\r\n\r\n  // Load deals from localStorage - using singleFinanceDeals storage key\r\n  useEffect(() => {\r\n    try {\r\n      const storedDeals = localStorage.getItem('singleFinanceDeals');\r\n      if (storedDeals) {\r\n        const parsedDeals = JSON.parse(storedDeals);\r\n        // Map raw deal data to component interface while preserving extended properties\r\n        const formattedDeals: Deal[] = parsedDeals.map((rawDeal: any) => {\r\n          const deal: Deal = {\r\n            id: rawDeal.id,\r\n            customer: rawDeal.customer || rawDeal.lastName || 'Unknown',\r\n            vehicle:\r\n              rawDeal.vehicle ||\r\n              `${\r\n                rawDeal.vehicleType === 'N' ? 'New' : rawDeal.vehicleType === 'U' ? 'Used' : 'CPO'\r\n              } - Stock #${rawDeal.stockNumber}`,\r\n            vin: rawDeal.vin || rawDeal.vinLast8 || '',\r\n            saleDate: rawDeal.saleDate || rawDeal.dealDate || rawDeal.created_at,\r\n            salesperson: rawDeal.salesperson || 'Self',\r\n            amount: rawDeal.amount || rawDeal.totalGross || 0,\r\n            status: rawDeal.status || rawDeal.dealStatus || 'Pending',\r\n            products: rawDeal.products || [],\r\n            profit: rawDeal.profit || rawDeal.backEndGross || 0,\r\n            created_at: rawDeal.created_at || new Date().toISOString(),\r\n          };\r\n          // Preserve extended properties\r\n          return Object.assign(deal, rawDeal);\r\n        });\r\n        setDeals(formattedDeals);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading deals from localStorage:', error);\r\n    }\r\n  }, []);\r\n\r\n  // Filter and sort deals\r\n  const filteredDeals = deals\r\n    .filter(deal => {\r\n      const matchesSearch =\r\n        deal.customer.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        deal.vehicle.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        deal.id.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        (deal.dealNumber && deal.dealNumber.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n        (deal.vin && deal.vin.toLowerCase().includes(searchTerm.toLowerCase()));\r\n\r\n      const matchesStatus = statusFilter === 'All' || deal.status === statusFilter;\r\n\r\n      return matchesSearch && matchesStatus;\r\n    })\r\n    .sort((a, b) => {\r\n      const fieldA = a[sortField as keyof typeof a];\r\n      const fieldB = b[sortField as keyof typeof b];\r\n\r\n      if (typeof fieldA === 'string' && typeof fieldB === 'string') {\r\n        return sortDirection === 'asc'\r\n          ? fieldA.localeCompare(fieldB)\r\n          : fieldB.localeCompare(fieldA);\r\n      } else if (typeof fieldA === 'number' && typeof fieldB === 'number') {\r\n        return sortDirection === 'asc' ? fieldA - fieldB : fieldB - fieldA;\r\n      }\r\n      return 0;\r\n    });\r\n\r\n  const toggleSort = (field: string) => {\r\n    if (sortField === field) {\r\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortField(field);\r\n      setSortDirection('asc');\r\n    }\r\n  };\r\n\r\n  const getStatusBadge = (status: string) => {\r\n    switch (status) {\r\n      case 'Complete':\r\n      case 'Funded':\r\n        return (\r\n          <Badge variant=\"outline\" className=\"bg-green-50 text-green-700 border-green-200\">\r\n            <CheckCircle className=\"w-3 h-3 mr-1\" /> {status}\r\n          </Badge>\r\n        );\r\n      case 'Bank Approval':\r\n      case 'Contract Review':\r\n      case 'Insurance Verification':\r\n        return (\r\n          <Badge variant=\"outline\" className=\"bg-amber-50 text-amber-700 border-amber-200\">\r\n            <Clock className=\"w-3 h-3 mr-1\" /> {status}\r\n          </Badge>\r\n        );\r\n      case 'Pending Documents':\r\n      case 'Pending':\r\n        return (\r\n          <Badge variant=\"outline\" className=\"bg-blue-50 text-blue-700 border-blue-200\">\r\n            <AlertCircle className=\"w-3 h-3 mr-1\" /> {status}\r\n          </Badge>\r\n        );\r\n      case 'Unwound':\r\n      case 'Dead Deal':\r\n        return (\r\n          <Badge variant=\"outline\" className=\"bg-red-50 text-red-700 border-red-200\">\r\n            <AlertCircle className=\"w-3 h-3 mr-1\" /> {status}\r\n          </Badge>\r\n        );\r\n      default:\r\n        return <Badge variant=\"outline\">{status}</Badge>;\r\n    }\r\n  };\r\n\r\n  const formatCurrency = (amount: number) => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 0,\r\n    }).format(amount);\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center mb-6\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleBackToDashboard}\r\n          className=\"mr-4 flex items-center px-4 py-2 text-sm font-medium text-white bg-orange-600 border border-orange-600 rounded-md shadow-sm hover:bg-orange-700 focus:outline-none focus:ring-2 focus:ring-orange-500\"\r\n        >\r\n          <ArrowLeft className=\"w-4 h-4 mr-2\" />\r\n          Back to Dashboard\r\n        </button>\r\n        <h1 className=\"text-2xl font-bold text-gray-900\">Single Finance Manager - Deals</h1>\r\n      </div>\r\n\r\n      <div className=\"mb-4 p-3 bg-orange-50 border border-orange-200 rounded-lg\">\r\n        <p className=\"text-orange-800 text-sm\">\r\n          <strong>Note:</strong> These deals are specific to your Single Finance Manager Dashboard\r\n          and are stored separately from the main finance deals.\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"flex flex-col sm:flex-row justify-between gap-4 mb-6\">\r\n        <div className=\"relative flex-1\">\r\n          <Search\r\n            className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\"\r\n            size={16}\r\n          />\r\n          <Input\r\n            placeholder=\"Search deals by customer, vehicle, deal #, or VIN\"\r\n            className=\"pl-9 border-gray-300\"\r\n            value={searchTerm}\r\n            onChange={e => setSearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"flex gap-2\">\r\n          <div className=\"flex items-center gap-2 bg-white border border-gray-200 rounded-md px-2\">\r\n            <Filter size={16} className=\"text-gray-500\" />\r\n            <select\r\n              className=\"border-0 rounded p-2 text-sm focus:ring-0 focus:outline-none\"\r\n              value={statusFilter}\r\n              onChange={e => setStatusFilter(e.target.value)}\r\n            >\r\n              <option value=\"All\">All Statuses</option>\r\n              <option value=\"Pending\">Pending</option>\r\n              <option value=\"Funded\">Funded</option>\r\n              <option value=\"Unwound\">Unwound</option>\r\n              <option value=\"Dead Deal\">Dead Deal</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Card className=\"border hover:shadow-md transition-shadow\">\r\n        <CardContent className=\"p-0\">\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"w-full text-sm\">\r\n              <thead>\r\n                <tr className=\"bg-orange-50 border-b\">\r\n                  <th className=\"py-3 px-4 text-left font-medium\">\r\n                    <button className=\"flex items-center\" onClick={() => toggleSort('dealNumber')}>\r\n                      Deal #\r\n                      {sortField === 'dealNumber' && (\r\n                        <ArrowUpDown size={14} className=\"ml-1 text-gray-500\" />\r\n                      )}\r\n                    </button>\r\n                  </th>\r\n                  <th className=\"py-3 px-4 text-left font-medium\">\r\n                    <button className=\"flex items-center\" onClick={() => toggleSort('saleDate')}>\r\n                      Date\r\n                      {sortField === 'saleDate' && (\r\n                        <ArrowUpDown size={14} className=\"ml-1 text-gray-500\" />\r\n                      )}\r\n                    </button>\r\n                  </th>\r\n                  <th className=\"py-3 px-4 text-left font-medium\">\r\n                    <button className=\"flex items-center\" onClick={() => toggleSort('customer')}>\r\n                      Customer\r\n                      {sortField === 'customer' && (\r\n                        <ArrowUpDown size={14} className=\"ml-1 text-gray-500\" />\r\n                      )}\r\n                    </button>\r\n                  </th>\r\n                  <th className=\"py-3 px-4 text-left font-medium\">Vehicle</th>\r\n                  <th className=\"py-3 px-4 text-left font-medium\">Stock #</th>\r\n                  <th className=\"py-3 px-4 text-left font-medium\">VIN</th>\r\n                  <th className=\"py-3 px-4 text-right font-medium\">\r\n                    <button\r\n                      className=\"flex items-center ml-auto\"\r\n                      onClick={() => toggleSort('amount')}\r\n                    >\r\n                      Total Gross\r\n                      {sortField === 'amount' && (\r\n                        <ArrowUpDown size={14} className=\"ml-1 text-gray-500\" />\r\n                      )}\r\n                    </button>\r\n                  </th>\r\n                  <th className=\"py-3 px-4 text-right font-medium\">\r\n                    <button\r\n                      className=\"flex items-center ml-auto\"\r\n                      onClick={() => toggleSort('profit')}\r\n                    >\r\n                      Back End\r\n                      {sortField === 'profit' && (\r\n                        <ArrowUpDown size={14} className=\"ml-1 text-gray-500\" />\r\n                      )}\r\n                    </button>\r\n                  </th>\r\n                  <th className=\"py-3 px-4 text-left font-medium\">Lender</th>\r\n                  <th className=\"py-3 px-4 text-center font-medium\">Status</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filteredDeals.length === 0 ? (\r\n                  <tr>\r\n                    <td colSpan={10} className=\"py-8 text-center text-gray-500\">\r\n                      {deals.length === 0\r\n                        ? \"No deals logged yet. Use the 'Log New Deal' button to add deals.\"\r\n                        : 'No deals match your search criteria.'}\r\n                    </td>\r\n                  </tr>\r\n                ) : (\r\n                  filteredDeals.map(deal => {\r\n                    const dealData = deal as any; // Access extended properties\r\n                    return (\r\n                      <tr key={deal.id} className=\"border-b hover:bg-gray-50\">\r\n                        <td className=\"py-3 px-4 font-medium text-blue-600\">\r\n                          {dealData.dealNumber || deal.id}\r\n                        </td>\r\n                        <td className=\"py-3 px-4\">{formatDate(deal.saleDate)}</td>\r\n                        <td className=\"py-3 px-4\">{deal.customer}</td>\r\n                        <td className=\"py-3 px-4\">\r\n                          {dealData.vehicleType && (\r\n                            <span\r\n                              className={`inline-block w-6 h-6 text-xs font-bold text-white text-center rounded mr-2 ${\r\n                                dealData.vehicleType === 'N'\r\n                                  ? 'bg-green-600'\r\n                                  : dealData.vehicleType === 'U'\r\n                                  ? 'bg-blue-600'\r\n                                  : 'bg-purple-600'\r\n                              }`}\r\n                            >\r\n                              {dealData.vehicleType}\r\n                            </span>\r\n                          )}\r\n                          {deal.vehicle}\r\n                        </td>\r\n                        <td className=\"py-3 px-4 font-mono\">{dealData.stockNumber || 'N/A'}</td>\r\n                        <td className=\"py-3 px-4 font-mono text-xs\">\r\n                          {deal.vin ? `...${deal.vin.slice(-8)}` : 'N/A'}\r\n                        </td>\r\n                        <td className=\"py-3 px-4 text-right font-medium\">\r\n                          {formatCurrency(deal.amount)}\r\n                        </td>\r\n                        <td className=\"py-3 px-4 text-right font-medium text-green-600\">\r\n                          {formatCurrency(deal.profit)}\r\n                        </td>\r\n                        <td className=\"py-3 px-4\">{dealData.lender || 'N/A'}</td>\r\n                        <td className=\"py-3 px-4 text-center\">{getStatusBadge(deal.status)}</td>\r\n                      </tr>\r\n                    );\r\n                  })\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {filteredDeals.length > 0 && (\r\n        <div className=\"flex justify-between items-center text-sm text-gray-600\">\r\n          <div>\r\n            Showing {filteredDeals.length} of {deals.length} deals\r\n          </div>\r\n          <div className=\"flex items-center gap-4\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <DollarSign size={16} />\r\n              <span>\r\n                Total Gross:{' '}\r\n                {formatCurrency(filteredDeals.reduce((sum, deal) => sum + deal.amount, 0))}\r\n              </span>\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <span>\r\n                Back End Total:{' '}\r\n                {formatCurrency(filteredDeals.reduce((sum, deal) => sum + deal.profit, 0))}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleFinanceDealsPage;\r\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { Link, useLocation, useNavigate, Routes, Route, Navigate } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { Card, CardHeader, CardTitle, CardContent, CardFooter } from '../../components/ui/card';\nimport { Button } from '../../components/ui/button';\nimport {\n  getDashboardData,\n  loadDealsFromStorage,\n  aggregateDealsForDashboard,\n} from '../../utils/dealMapper';\nimport {\n  DollarSign,\n  Calculator,\n  FileText,\n  TrendingUp,\n  PieChart,\n  Percent,\n  ChevronUp,\n  ChevronDown,\n  BarChart4,\n  CreditCard,\n  PlusCircle,\n  Lightbulb,\n} from 'lucide-react';\n\nimport { SingleFinanceHomePage } from '../../pages/finance/SingleFinanceHomePage';\nimport SingleFinanceDealsPage from '../../pages/finance/SingleFinanceDealsPage';\nimport { getFinanceManagerDeals } from '../../lib/apiService';\n\n// Interface for a deal\ninterface Deal {\n  id: string;\n  customer: string;\n  vehicle: string;\n  vin: string;\n  saleDate: string;\n  salesperson: string;\n  amount: number;\n  status: string;\n  products: string[];\n  profit: number;\n  created_at: string;\n}\n\nconst SingleFinanceManagerDashboard = () => {\n  const { user, role, dealershipId } = useAuth();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const [timePeriod, setTimePeriod] = useState<string>('this-month');\n  const [deals, setDeals] = useState<Deal[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Get the schema name from user metadata\n  const schemaName = user?.user_metadata?.schema_name || '';\n\n  // Function to load deals from localStorage for Single Finance Dashboard\n  const loadDealsFromLocalStorage = () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      console.log('[SingleFinanceManagerDashboard] Loading deals from localStorage');\n\n      // Load raw deals directly from localStorage to preserve all form data\n      const singleFinanceDealsJson = localStorage.getItem('singleFinanceDeals');\n      console.log(\n        '[SingleFinanceManagerDashboard] Raw singleFinanceDeals:',\n        singleFinanceDealsJson\n      );\n\n      if (!singleFinanceDealsJson) {\n        console.log('[SingleFinanceManagerDashboard] No deals found in localStorage');\n        setDeals([]);\n        return;\n      }\n\n      const rawDeals = JSON.parse(singleFinanceDealsJson);\n      console.log(`[SingleFinanceManagerDashboard] Found ${rawDeals.length} raw deals`);\n      console.log('[SingleFinanceManagerDashboard] First deal sample:', rawDeals[0]);\n\n      // Convert raw deals to component's Deal interface while preserving all extended properties\n      const formattedDeals: Deal[] = rawDeals.map((rawDeal: any) => {\n        // Create the base Deal interface\n        const deal: Deal = {\n          id: rawDeal.id,\n          customer: rawDeal.customer || rawDeal.lastName,\n          vehicle:\n            rawDeal.vehicle ||\n            `${\n              rawDeal.vehicleType === 'N' ? 'New' : rawDeal.vehicleType === 'U' ? 'Used' : 'CPO'\n            } - Stock #${rawDeal.stockNumber}`,\n          vin: rawDeal.vin || rawDeal.vinLast8,\n          saleDate: rawDeal.saleDate || rawDeal.dealDate,\n          salesperson: rawDeal.salesperson || 'Self',\n          amount: rawDeal.amount || rawDeal.totalGross,\n          status: rawDeal.status || rawDeal.dealStatus,\n          products: rawDeal.products || [],\n          profit: rawDeal.profit || rawDeal.backEndGross,\n          created_at: rawDeal.created_at || new Date().toISOString(),\n        };\n\n        // Preserve all the extended properties by copying them to the deal object\n        // This allows the table to access dealData.dealNumber, dealData.vscProfit, etc.\n        return Object.assign(deal, rawDeal);\n      });\n\n      console.log(\n        '[SingleFinanceManagerDashboard] Formatted deals with extended properties:',\n        formattedDeals[0]\n      );\n      setDeals(formattedDeals);\n    } catch (error) {\n      console.error(\n        '[SingleFinanceManagerDashboard] Error loading deals from localStorage:',\n        error\n      );\n      setError('Failed to load deals from local storage.');\n      setDeals([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load deals from the schema if it exists\n  useEffect(() => {\n    if (schemaName) {\n      fetchDealsFromSchema();\n    } else {\n      // No schema available - load from localStorage for single finance deals\n      console.log('[SingleFinanceManagerDashboard] No schema available, loading from localStorage');\n      loadDealsFromLocalStorage();\n    }\n  }, [schemaName, timePeriod]);\n\n  // Function to fetch deals from the schema\n  const fetchDealsFromSchema = async () => {\n    if (!schemaName) return;\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      console.log(`[SingleFinanceManagerDashboard] Fetching deals from schema: ${schemaName}`);\n\n      // Build filter based on time period\n      const filter: Record<string, any> = {};\n\n      const today = new Date();\n      const currentMonth = today.getMonth();\n      const currentYear = today.getFullYear();\n\n      if (timePeriod === 'this-month') {\n        const startDate = new Date(currentYear, currentMonth, 1);\n        const endDate = new Date(currentYear, currentMonth + 1, 0);\n        filter.sale_date = {\n          start: startDate.toISOString().split('T')[0],\n          end: endDate.toISOString().split('T')[0],\n        };\n      } else if (timePeriod === 'last-month') {\n        const startDate = new Date(currentYear, currentMonth - 1, 1);\n        const endDate = new Date(currentYear, currentMonth, 0);\n        filter.sale_date = {\n          start: startDate.toISOString().split('T')[0],\n          end: endDate.toISOString().split('T')[0],\n        };\n      } else if (timePeriod === 'last-quarter') {\n        const quarterStartMonth = Math.floor(currentMonth / 3) * 3 - 3;\n        const startDate = new Date(currentYear, quarterStartMonth, 1);\n        const endDate = new Date(currentYear, quarterStartMonth + 3, 0);\n        filter.sale_date = {\n          start: startDate.toISOString().split('T')[0],\n          end: endDate.toISOString().split('T')[0],\n        };\n      } else if (timePeriod === 'ytd') {\n        const startDate = new Date(currentYear, 0, 1);\n        filter.sale_date = {\n          start: startDate.toISOString().split('T')[0],\n          end: today.toISOString().split('T')[0],\n        };\n      } else if (timePeriod === 'last-year') {\n        const startDate = new Date(currentYear - 1, 0, 1);\n        const endDate = new Date(currentYear - 1, 11, 31);\n        filter.sale_date = {\n          start: startDate.toISOString().split('T')[0],\n          end: endDate.toISOString().split('T')[0],\n        };\n      }\n\n      // Fetch deals from the schema\n      const result = await getFinanceManagerDeals(schemaName, {\n        limit: 50,\n        sortBy: 'created_at',\n        sortDirection: 'desc',\n        filter,\n      });\n\n      if (result.success) {\n        console.log(`[SingleFinanceManagerDashboard] Fetched ${result.deals.length} deals`);\n\n        // Map the schema deal format to the component's Deal interface\n        const formattedDeals: Deal[] = result.deals.map(schemaDeal => ({\n          id: schemaDeal.deal_number || String(schemaDeal.id),\n          customer: schemaDeal.customer_name,\n          vehicle: schemaDeal.vehicle,\n          vin: schemaDeal.vin || '',\n          saleDate: schemaDeal.sale_date,\n          salesperson: 'Self', // Finance manager deals are self-originated\n          amount: schemaDeal.amount,\n          status: schemaDeal.status,\n          products: Array.isArray(schemaDeal.products)\n            ? schemaDeal.products\n            : typeof schemaDeal.products === 'string'\n            ? JSON.parse(schemaDeal.products)\n            : [],\n          profit: schemaDeal.profit,\n          created_at: schemaDeal.created_at,\n        }));\n\n        setDeals(formattedDeals);\n      } else {\n        console.error('[SingleFinanceManagerDashboard] Error fetching deals:', result.error);\n        setError('Failed to load deals. Please try again later.');\n      }\n    } catch (err) {\n      console.error('[SingleFinanceManagerDashboard] Exception fetching deals:', err);\n      setError('An unexpected error occurred while loading deals.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    console.log('[SingleFinanceManagerDashboard] Rendering single finance manager dashboard', {\n      userId: user?.id,\n      role,\n      dealershipId,\n      timestamp: new Date().toISOString(),\n      path: location.pathname,\n    });\n\n    // Cleanup function\n    return () => {\n      console.log('[SingleFinanceManagerDashboard] Unmounting single finance manager dashboard');\n    };\n  }, [user, role, dealershipId, location.pathname]);\n\n  // Simple function to handle the \"Log New Deal\" button click\n  const handleLogNewDealClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    console.log(\n      '[SingleFinanceManagerDashboard] Log New Deal button clicked, navigating to /single-finance-deal-log'\n    );\n    navigate('/single-finance-deal-log'); // Navigate to the external single finance deal log route\n  };\n\n  // Helper to get the current month and year for display\n  const getPeriodLabel = (period: string): string => {\n    const today = new Date();\n    const month = today.toLocaleString('default', { month: 'long' });\n    const year = today.getFullYear();\n\n    switch (period) {\n      case 'this-month':\n        return `${month} ${year}`;\n      case 'last-month':\n        const lastMonth =\n          today.getMonth() === 0\n            ? 'December'\n            : new Date(today.getFullYear(), today.getMonth() - 1, 1).toLocaleString('default', {\n                month: 'long',\n              });\n        const lastMonthYear =\n          today.getMonth() === 0 ? today.getFullYear() - 1 : today.getFullYear();\n        return `${lastMonth} ${lastMonthYear}`;\n      case 'last-quarter':\n        const currentQuarter = Math.floor(today.getMonth() / 3);\n        return `Q${currentQuarter === 0 ? 4 : currentQuarter} ${\n          currentQuarter === 0 ? year - 1 : year\n        }`;\n      case 'ytd':\n        return `Year to Date ${year}`;\n      case 'last-year':\n        return `${year - 1}`;\n      default:\n        return `${month} ${year}`;\n    }\n  };\n\n  // Handle status change for a deal\n  const handleStatusChange = (dealId: string, newStatus: string) => {\n    try {\n      // Use the correct storage key for single finance deals\n      const storageKey = 'singleFinanceDeals';\n\n      // Get existing deals from localStorage\n      const existingDealsJson = localStorage.getItem(storageKey);\n      const existingDeals = existingDealsJson ? JSON.parse(existingDealsJson) : [];\n\n      // Update the deal status\n      const updatedDeals = existingDeals.map((deal: any) =>\n        deal.id === dealId ? { ...deal, status: newStatus } : deal\n      );\n\n      // Save back to localStorage\n      localStorage.setItem(storageKey, JSON.stringify(updatedDeals));\n\n      // Reload deals to reflect the change\n      loadDealsFromLocalStorage();\n\n      console.log(`[SingleFinanceManagerDashboard] Updated deal ${dealId} status to ${newStatus}`);\n    } catch (error) {\n      console.error('[SingleFinanceManagerDashboard] Error updating deal status:', error);\n      setError('Failed to update deal status');\n    }\n  };\n\n  // Handle deal deletion\n  const handleDeleteDeal = (dealId: string, shouldDelete: boolean) => {\n    if (!shouldDelete) return;\n\n    if (confirm('Are you sure you want to delete this deal? This action cannot be undone.')) {\n      try {\n        // Use the correct storage key for single finance deals\n        const storageKey = 'singleFinanceDeals';\n\n        // Get existing deals from localStorage\n        const existingDealsJson = localStorage.getItem(storageKey);\n        const existingDeals = existingDealsJson ? JSON.parse(existingDealsJson) : [];\n\n        // Remove the deal\n        const updatedDeals = existingDeals.filter((deal: any) => deal.id !== dealId);\n\n        // Save back to localStorage\n        localStorage.setItem(storageKey, JSON.stringify(updatedDeals));\n\n        // Reload deals to reflect the change\n        loadDealsFromLocalStorage();\n\n        console.log(`[SingleFinanceManagerDashboard] Deleted deal ${dealId}`);\n      } catch (error) {\n        console.error('[SingleFinanceManagerDashboard] Error deleting deal:', error);\n        setError('Failed to delete deal');\n      }\n    }\n  };\n\n  // Best practices tips for finance managers\n  const bestPractices = [\n    'Present every product to every customer every time - consistency is key.',\n    'Build value first, then discuss investment. Never start with the price.',\n    'Use customer-friendly language instead of industry jargon when explaining products.',\n    'Focus on protection and peace of mind, not just financial benefits.',\n    'Keep your menu presentation simple and visual for maximum effectiveness.',\n    'Digital menus increase compliance and provide a more professional presentation.',\n    'Always congratulate the customer on their vehicle purchase before starting your presentation.',\n    'Listen to customer concerns about products and address them specifically.',\n    \"Explain how each product benefits the customer's specific vehicle and usage patterns.\",\n  ];\n\n  // Component for the main dashboard content\n  const MainDashboardContent = () => (\n    <>\n      {/* Dashboard header */}\n      <div className=\"flex justify-between items-start mb-6\">\n        <div className=\"flex-grow\">\n          <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-2\">\n            <div>\n              <h1 className=\"text-3xl font-bold\">Single Finance Manager Dashboard</h1>\n              <p className=\"text-gray-600 mt-1\">\n                Finance Manager: {user?.email?.split('@')[0] || 'Not Assigned'}\n              </p>\n            </div>\n\n            {/* Daily Finance Tip - Best Practices */}\n            <div className=\"bg-orange-50 p-2 rounded-md mt-2 md:mt-0 border border-orange-100 max-w-2xl\">\n              <p className=\"text-xs italic text-orange-800\">\n                <Lightbulb className=\"h-3 w-3 inline-block mr-1\" />\n                <strong>F&I Best Practice:</strong>{' '}\n                {bestPractices[new Date().getDay() % bestPractices.length]}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Month/Year and New Deal Button row */}\n      <div className=\"flex justify-between items-center mb-3\">\n        <div className=\"flex items-center\">\n          <h2 className=\"text-2xl font-bold mr-3\">{getPeriodLabel(timePeriod)}</h2>\n          <select\n            value={timePeriod}\n            onChange={e => setTimePeriod(e.target.value)}\n            className=\"p-2 border rounded-md shadow-sm\"\n          >\n            <option value=\"this-month\">This Month</option>\n            <option value=\"last-month\">Last Month</option>\n            <option value=\"last-quarter\">Last Quarter</option>\n            <option value=\"ytd\">Year to Date</option>\n            <option value=\"last-year\">Last Year</option>\n          </select>\n        </div>\n\n        <Button\n          size=\"lg\"\n          className=\"bg-orange-600 hover:bg-orange-700\"\n          onClick={handleLogNewDealClick}\n        >\n          <span className=\"flex items-center\">\n            <PlusCircle className=\"mr-2 h-5 w-5\" />\n            Log New Deal\n          </span>\n        </Button>\n      </div>\n\n      {/* Main Dashboard Content */}\n      <div>\n        <SingleFinanceHomePage />\n      </div>\n\n      {/* Deals Log Section */}\n      <Card className=\"col-span-12 bg-white border-slate-200 shadow-sm\">\n        <CardHeader className=\"py-2 px-4 border-b flex flex-row items-center justify-between space-y-0\">\n          <CardTitle className=\"text-lg font-medium flex items-center\">\n            <FileText className=\"mr-2 h-5 w-5 text-orange-500\" />\n            Deals Log\n          </CardTitle>\n          <Button variant=\"outline\" size=\"sm\" asChild>\n            <Link to=\"/dashboard/single-finance/deals\">View All</Link>\n          </Button>\n        </CardHeader>\n        <CardContent className=\"p-4\">\n          {deals.length > 0 ? (\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full text-sm\">\n                <thead>\n                  <tr className=\"text-xs\">\n                    <th className=\"font-medium text-white py-2 pl-3 text-center bg-gray-600 w-12\">\n                      #\n                    </th>\n                    <th className=\"font-medium text-white py-2 px-2 text-left bg-gray-600\">\n                      Last Name\n                    </th>\n                    <th className=\"font-medium text-white py-2 pl-4 pr-2 text-left bg-orange-600\">\n                      Deal #\n                    </th>\n                    <th className=\"font-medium text-white py-2 px-2 text-left bg-gray-600\">\n                      Stock #\n                    </th>\n                    <th className=\"font-medium text-white py-2 px-2 text-center bg-gray-600\">\n                      Date\n                    </th>\n                    <th className=\"font-medium text-white py-2 px-2 text-left bg-gray-600\">VIN</th>\n                    <th className=\"font-medium text-white py-2 px-2 text-center bg-indigo-600\">\n                      N/U/CPO\n                    </th>\n                    <th className=\"font-medium text-white py-2 px-2 text-left bg-gray-600\">\n                      Lender\n                    </th>\n                    <th className=\"font-medium text-white py-2 px-2 text-right bg-orange-600\">\n                      Front End\n                    </th>\n                    <th className=\"font-medium text-white py-2 px-2 text-right bg-teal-600\">VSC</th>\n                    <th className=\"font-medium text-white py-2 px-2 text-right bg-purple-600\">\n                      PPM\n                    </th>\n                    <th className=\"font-medium text-white py-2 px-2 text-right bg-green-600\">\n                      GAP\n                    </th>\n                    <th className=\"font-medium text-white py-2 px-2 text-right bg-amber-600\">\n                      T&W/Bundle\n                    </th>\n                    <th className=\"font-medium text-white py-2 px-2 text-center bg-pink-600\">\n                      PPD\n                    </th>\n                    <th className=\"font-medium text-white py-2 px-2 text-right bg-purple-600\">\n                      PVR\n                    </th>\n                    <th className=\"font-medium text-white py-2 px-2 text-right bg-green-600\">\n                      Total\n                    </th>\n                    <th className=\"font-medium text-white py-2 px-2 text-center bg-gray-600 w-20\">\n                      Status\n                    </th>\n                    <th className=\"font-medium text-white py-2 px-2 text-center bg-red-600 rounded-tr-md w-16\">\n                      Delete\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {deals.slice(0, 10).map((deal, index) => {\n                    // Get individual product profits from deal data or calculate from legacy data\n                    const dealData = deal as any; // Type assertion to access extended properties\n\n                    // Extract last name from customer\n                    const lastName = deal.customer.split(' ').pop() || '';\n\n                    // Format date for display - use actual deal date from form\n                    const actualDealDate = dealData.dealDate || deal.saleDate;\n                    const dealDate = new Date(actualDealDate);\n                    const formattedDate = dealDate.toLocaleDateString('en-US', {\n                      month: '2-digit',\n                      day: '2-digit',\n                      year: '2-digit',\n                    });\n\n                    // Determine if New, Used or CPO - use actual form data\n                    const vehicleType =\n                      dealData.vehicleType ||\n                      (deal.vehicle.toLowerCase().includes('new')\n                        ? 'N'\n                        : deal.vehicle.toLowerCase().includes('cpo')\n                        ? 'C'\n                        : 'U');\n\n                    console.log(`[Dashboard] Processing deal ${deal.id}:`, {\n                      dealData: dealData,\n                      vscProfit: dealData.vscProfit,\n                      ppmProfit: dealData.ppmProfit,\n                      gapProfit: dealData.gapProfit,\n                      tireAndWheelProfit: dealData.tireAndWheelProfit,\n                      appearanceProfit: dealData.appearanceProfit,\n                      otherProfit: dealData.otherProfit,\n                      dealNumber: dealData.dealNumber,\n                      stockNumber: dealData.stockNumber,\n                      dealDate: dealData.dealDate,\n                      vehicleType: dealData.vehicleType,\n                      frontEndGross: dealData.frontEndGross,\n                      backEndGross: dealData.backEndGross,\n                      totalGross: dealData.totalGross,\n                    });\n\n                    // Get individual product profits - ensure we handle both number and string values\n                    const vscProfit =\n                      typeof dealData.vscProfit === 'number'\n                        ? dealData.vscProfit\n                        : parseFloat(dealData.vscProfit) || 0;\n                    const ppmProfit =\n                      typeof dealData.ppmProfit === 'number'\n                        ? dealData.ppmProfit\n                        : parseFloat(dealData.ppmProfit) || 0;\n                    const gapProfit =\n                      typeof dealData.gapProfit === 'number'\n                        ? dealData.gapProfit\n                        : parseFloat(dealData.gapProfit) || 0;\n                    const twProfit =\n                      typeof dealData.tireAndWheelProfit === 'number'\n                        ? dealData.tireAndWheelProfit\n                        : parseFloat(dealData.tireAndWheelProfit) || 0;\n                    const appearanceProfit =\n                      typeof dealData.appearanceProfit === 'number'\n                        ? dealData.appearanceProfit\n                        : parseFloat(dealData.appearanceProfit) || 0;\n                    const otherProfit =\n                      typeof dealData.otherProfit === 'number'\n                        ? dealData.otherProfit\n                        : parseFloat(dealData.otherProfit) || 0;\n\n                    // Products per deal\n                    const ppd = deal.products.length;\n\n                    // PVR (per vehicle retailed) - using profit as estimation\n                    const pvr = Math.round(deal.profit / (ppd || 1));\n\n                    // Get status based on deal status or default to \"Pending\"\n                    const status =\n                      deal.status === 'Complete' || deal.status === 'Funded'\n                        ? 'Funded'\n                        : deal.status === 'Canceled' || deal.status === 'Unwound'\n                        ? 'Unwound'\n                        : 'Pending';\n\n                    // Status badge colors\n                    const statusColor =\n                      status === 'Funded'\n                        ? 'bg-green-100 text-green-800 border-green-200'\n                        : status === 'Unwound'\n                        ? 'bg-red-100 text-red-800 border-red-200'\n                        : 'bg-amber-100 text-amber-800 border-amber-200';\n\n                    return (\n                      <tr\n                        key={deal.id}\n                        className={`border-b ${\n                          index % 2 === 1 ? 'bg-gray-50' : ''\n                        } hover:bg-blue-50`}\n                      >\n                        <td className=\"py-2 px-2 text-center font-medium\">\n                          {deals.length - index}\n                        </td>\n                        <td className=\"py-2 px-2 text-left font-medium\">{lastName}</td>\n                        <td className=\"py-2 pl-4 pr-2 text-left font-medium text-blue-600\">\n                          {dealData.dealNumber || deal.id}\n                        </td>\n                        <td className=\"py-2 px-2 text-left\">\n                          {dealData.stockNumber || deal.id.replace('D', 'S')}\n                        </td>\n                        <td className=\"py-2 px-2 text-center text-gray-600\">{formattedDate}</td>\n                        <td className=\"py-2 px-2 text-left text-gray-600 font-mono text-xs\">\n                          {dealData.vinLast8 || deal.vin || 'N/A'}\n                        </td>\n                        <td className=\"py-2 px-2 text-center\">\n                          <span\n                            className={`px-1.5 py-0.5 rounded text-xs font-medium ${\n                              vehicleType === 'N'\n                                ? 'bg-green-100 text-green-800'\n                                : vehicleType === 'C'\n                                ? 'bg-blue-100 text-blue-800'\n                                : 'bg-amber-100 text-amber-800'\n                            }`}\n                          >\n                            {vehicleType}\n                          </span>\n                        </td>\n                        <td className=\"py-2 px-2 text-left text-gray-600 text-xs\">\n                          {dealData.lender || 'N/A'}\n                        </td>\n                        <td className=\"py-2 px-2 text-right bg-blue-50 font-medium\">\n                          ${(dealData.frontEndGross || 0).toLocaleString()}\n                        </td>\n                        <td className=\"py-2 px-2 text-right bg-teal-50\">\n                          ${vscProfit.toLocaleString()}\n                        </td>\n                        <td className=\"py-2 px-2 text-right bg-purple-50\">\n                          ${ppmProfit.toLocaleString()}\n                        </td>\n                        <td className=\"py-2 px-2 text-right bg-green-50\">\n                          ${gapProfit.toLocaleString()}\n                        </td>\n                        <td className=\"py-2 px-2 text-right bg-amber-50\">\n                          ${twProfit.toLocaleString()}\n                        </td>\n                        <td className=\"py-2 px-2 text-center bg-pink-50 font-medium\">{ppd}</td>\n                        <td className=\"py-2 px-2 text-right bg-purple-50\">\n                          ${pvr.toLocaleString()}\n                        </td>\n                        <td className=\"py-2 px-2 text-right font-medium text-green-600\">\n                          ${deal.profit.toLocaleString()}\n                        </td>\n                        <td className=\"py-2 px-2 text-center\">\n                          <select\n                            value={status}\n                            onChange={e => handleStatusChange(deal.id, e.target.value)}\n                            className={`text-xs px-2 py-1 rounded border-0 focus:ring-1 focus:ring-blue-500 ${statusColor}`}\n                          >\n                            <option value=\"Pending\">Pending</option>\n                            <option value=\"Funded\">Funded</option>\n                            <option value=\"Unwound\">Unwound</option>\n                          </select>\n                        </td>\n                        <td className=\"py-2 px-2 text-center\">\n                          <input\n                            type=\"checkbox\"\n                            onChange={e => handleDeleteDeal(deal.id, e.target.checked)}\n                            className=\"h-4 w-4 text-red-600 focus:ring-red-500 border-gray-300 rounded\"\n                          />\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n                <tfoot>\n                  <tr className=\"bg-gray-100 border-t border-t-gray-200 font-medium\">\n                    <td colSpan={8} className=\"py-2 pl-4 text-left\">\n                      TOTALS\n                    </td>\n                    <td className=\"py-2 px-2 text-right bg-orange-50\">\n                      $\n                      {deals\n                        .slice(0, 10)\n                        .reduce((sum, deal) => {\n                          const dealData = deal as any;\n                          const frontEndGross =\n                            typeof dealData.frontEndGross === 'number'\n                              ? dealData.frontEndGross\n                              : parseFloat(dealData.frontEndGross) || 0;\n                          return sum + frontEndGross;\n                        }, 0)\n                        .toLocaleString()}\n                    </td>\n                    <td className=\"py-2 px-2 text-right bg-teal-50\">\n                      $\n                      {deals\n                        .slice(0, 10)\n                        .reduce((sum, deal) => {\n                          const dealData = deal as any;\n                          const vscProfit =\n                            typeof dealData.vscProfit === 'number'\n                              ? dealData.vscProfit\n                              : parseFloat(dealData.vscProfit) || 0;\n                          return sum + vscProfit;\n                        }, 0)\n                        .toLocaleString()}\n                    </td>\n                    <td className=\"py-2 px-2 text-right bg-purple-50\">\n                      $\n                      {deals\n                        .slice(0, 10)\n                        .reduce((sum, deal) => {\n                          const dealData = deal as any;\n                          const ppmProfit =\n                            typeof dealData.ppmProfit === 'number'\n                              ? dealData.ppmProfit\n                              : parseFloat(dealData.ppmProfit) || 0;\n                          return sum + ppmProfit;\n                        }, 0)\n                        .toLocaleString()}\n                    </td>\n                    <td className=\"py-2 px-2 text-right bg-green-50\">\n                      $\n                      {deals\n                        .slice(0, 10)\n                        .reduce((sum, deal) => {\n                          const dealData = deal as any;\n                          const gapProfit =\n                            typeof dealData.gapProfit === 'number'\n                              ? dealData.gapProfit\n                              : parseFloat(dealData.gapProfit) || 0;\n                          return sum + gapProfit;\n                        }, 0)\n                        .toLocaleString()}\n                    </td>\n                    <td className=\"py-2 px-2 text-right bg-amber-50\">\n                      $\n                      {deals\n                        .slice(0, 10)\n                        .reduce((sum, deal) => {\n                          const dealData = deal as any;\n                          const tireAndWheelProfit =\n                            typeof dealData.tireAndWheelProfit === 'number'\n                              ? dealData.tireAndWheelProfit\n                              : parseFloat(dealData.tireAndWheelProfit) || 0;\n                          return sum + tireAndWheelProfit;\n                        }, 0)\n                        .toLocaleString()}\n                    </td>\n                    <td className=\"py-2 px-2 text-center bg-pink-50\">\n                      {(\n                        deals.slice(0, 10).reduce((sum, deal) => sum + deal.products.length, 0) /\n                        Math.max(1, deals.slice(0, 10).length)\n                      ).toFixed(1)}\n                    </td>\n                    <td className=\"py-2 px-2 text-right bg-purple-50\">\n                      $\n                      {Math.round(\n                        deals.slice(0, 10).reduce((sum, deal) => sum + deal.profit, 0) /\n                          Math.max(1, deals.slice(0, 10).length)\n                      ).toLocaleString()}\n                    </td>\n                    <td className=\"py-2 px-2 text-right font-medium text-green-600\">\n                      $\n                      {deals\n                        .slice(0, 10)\n                        .reduce((sum, deal) => sum + deal.profit, 0)\n                        .toLocaleString()}\n                    </td>\n                    <td className=\"py-2 px-2\"></td>\n                    <td className=\"py-2 px-2\"></td>\n                  </tr>\n                </tfoot>\n              </table>\n            </div>\n          ) : (\n            <div className=\"py-8 text-center text-gray-500\">\n              No deals logged yet. Use the \"Log New Deal\" button to add deals.\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </>\n  );\n\n  return (\n    <div className=\"container py-4\">\n      <Routes>\n        <Route path=\"/\" element={<MainDashboardContent />} />\n        <Route path=\"/deals\" element={<SingleFinanceDealsPage />} />\n        <Route path=\"*\" element={<Navigate to=\"/dashboard/single-finance\" replace />} />\n      </Routes>\n    </div>\n  );\n};\n\n// Placeholder components for the routes\nfunction DealProfitTracker() {\n  return (\n    <Card className=\"p-6\">\n      <CardHeader>\n        <CardTitle>Deal Profit Tracker</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <p>The deal profit tracker feature is coming soon.</p>\n      </CardContent>\n    </Card>\n  );\n}\n\nfunction PayCalculator() {\n  return (\n    <Card className=\"p-6\">\n      <CardHeader>\n        <CardTitle>Pay Calculator</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <p>The pay calculator feature is coming soon.</p>\n      </CardContent>\n    </Card>\n  );\n}\n\nfunction ProductsPerformance() {\n  return (\n    <Card className=\"p-6\">\n      <CardHeader>\n        <CardTitle>Products Performance</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <p>The products performance feature is coming soon.</p>\n      </CardContent>\n    </Card>\n  );\n}\n\nfunction DealDocuments() {\n  return (\n    <Card className=\"p-6\">\n      <CardHeader>\n        <CardTitle>Deal Documents</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <p>The deal documents feature is coming soon.</p>\n      </CardContent>\n    </Card>\n  );\n}\n\nfunction PerformanceMetrics() {\n  return (\n    <Card className=\"p-6\">\n      <CardHeader>\n        <CardTitle>Performance Metrics</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <p>Performance metrics are coming soon.</p>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default SingleFinanceManagerDashboard;\n","import React, { useState, useEffect } from 'react';\nimport { Routes, Route, Link, Navigate, useLocation, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../ui/card';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '../ui/tabs';\nimport { Button } from '../ui/button';\nimport { Badge } from '../ui/badge';\nimport { Input } from '../ui/input';\nimport { Label } from '../ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../ui/select';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '../ui/table';\nimport { useToast } from '../../hooks/use-toast';\nimport { EnhancedPayPlanManager } from '../payplan/EnhancedPayPlanManager';\nimport {\n  DollarSign,\n  Calculator,\n  FileText,\n  TrendingUp,\n  PieChart,\n  Percent,\n  ChevronUp,\n  ChevronDown,\n  BarChart4,\n  CreditCard,\n  PlusCircle,\n  Lightbulb,\n  Users,\n  Target,\n  Crown,\n  Calendar,\n  Edit,\n  Eye,\n  Settings,\n  Trophy,\n  Clock,\n  Building,\n  UserCheck,\n  ArrowRight,\n  Filter,\n  MoreVertical,\n  Star,\n  TrendingDown,\n  AlertTriangle,\n  CheckCircle2,\n} from 'lucide-react';\nimport DealLogPage from '../../pages/DealLogPage';\n\ninterface FinanceManager {\n  id: string;\n  name: string;\n  email: string;\n  deals_processed: number;\n  mtd_revenue: number;\n  ppd: number;\n  pvr: number;\n  status: 'active' | 'inactive';\n  schedule: string;\n  performance_rating: 'excellent' | 'good' | 'needs_improvement';\n  vsc_penetration: number;\n}\n\ninterface DepartmentMetrics {\n  total_fi_gross: number;\n  deals_processed: number;\n  products_per_deal: number;\n  per_vehicle_retail: number;\n  mtd_growth: number;\n  team_performance: 'excellent' | 'good' | 'needs_improvement';\n  total_vsc_penetration: number;\n  penetration_rate: number;\n}\n\ninterface Deal {\n  id: string;\n  customer_name: string;\n  vehicle: string;\n  salesperson: string;\n  finance_manager: string;\n  fi_gross: number;\n  products: string[];\n  date: string;\n  status: 'completed' | 'pending' | 'cancelled';\n  deal_type: 'new' | 'used';\n  funding_source: 'bank' | 'credit_union' | 'captive' | 'cash';\n}\n\nconst FinanceDirectorDashboard = () => {\n  const { user, role, dealershipId } = useAuth();\n  const { toast } = useToast();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [selectedTab, setSelectedTab] = useState('overview');\n  const [showLogDealForm, setShowLogDealForm] = useState(false);\n  const [timePeriod, setTimePeriod] = useState<string>('this-month');\n  const [selectedManager, setSelectedManager] = useState<string>('all');\n\n  // Mock data - replace with actual API calls\n  const [departmentMetrics, setDepartmentMetrics] = useState<DepartmentMetrics>({\n    total_fi_gross: 125000,\n    deals_processed: 87,\n    products_per_deal: 2.4,\n    per_vehicle_retail: 1437,\n    mtd_growth: 12.5,\n    team_performance: 'excellent',\n    total_vsc_penetration: 78.5,\n    penetration_rate: 78.5,\n  });\n\n  const [financeManagers, setFinanceManagers] = useState<FinanceManager[]>([\n    {\n      id: 'fm1',\n      name: 'John Valentine',\n      email: 'john.valentine@dealership.com',\n      deals_processed: 32,\n      mtd_revenue: 45000,\n      ppd: 2.8,\n      pvr: 1406,\n      status: 'active',\n      schedule: '9am - 6pm',\n      performance_rating: 'excellent',\n      vsc_penetration: 85,\n    },\n    {\n      id: 'fm2',\n      name: 'Lloyd Hatter',\n      email: 'lloyd.hatter@dealership.com',\n      deals_processed: 28,\n      mtd_revenue: 38000,\n      ppd: 2.2,\n      pvr: 1357,\n      status: 'active',\n      schedule: '11am - 8pm',\n      performance_rating: 'good',\n      vsc_penetration: 72,\n    },\n    {\n      id: 'fm3',\n      name: 'Sarah Johnson',\n      email: 'sarah.johnson@dealership.com',\n      deals_processed: 27,\n      mtd_revenue: 42000,\n      ppd: 2.6,\n      pvr: 1556,\n      status: 'active',\n      schedule: '10am - 7pm',\n      performance_rating: 'excellent',\n      vsc_penetration: 78,\n    },\n  ]);\n\n  const [recentDeals, setRecentDeals] = useState<Deal[]>([\n    {\n      id: 'D001',\n      customer_name: 'Smith, John',\n      vehicle: '2024 Honda Accord',\n      salesperson: 'Mike Davis',\n      finance_manager: 'John Valentine',\n      fi_gross: 2400,\n      products: ['Extended Warranty', 'GAP Insurance'],\n      date: '2024-01-15',\n      status: 'completed',\n      deal_type: 'new',\n      funding_source: 'bank',\n    },\n    {\n      id: 'D002',\n      customer_name: 'Johnson, Mary',\n      vehicle: '2023 Toyota Camry',\n      salesperson: 'Lisa Chen',\n      finance_manager: 'Lloyd Hatter',\n      fi_gross: 1800,\n      products: ['Paint Protection', 'Tire & Wheel'],\n      date: '2024-01-15',\n      status: 'completed',\n      deal_type: 'used',\n      funding_source: 'credit_union',\n    },\n    {\n      id: 'D003',\n      customer_name: 'Williams, Bob',\n      vehicle: '2024 Ford F-150',\n      salesperson: 'Tom Wilson',\n      finance_manager: 'Sarah Johnson',\n      fi_gross: 3200,\n      products: ['Extended Warranty', 'GAP Insurance', 'Paint Protection'],\n      date: '2024-01-14',\n      status: 'completed',\n      deal_type: 'new',\n      funding_source: 'captive',\n    },\n    {\n      id: 'D004',\n      customer_name: 'Davis, Jennifer',\n      vehicle: '2023 Nissan Altima',\n      salesperson: 'Sarah Miller',\n      finance_manager: 'John Valentine',\n      fi_gross: 1950,\n      products: ['Extended Warranty', 'PPM'],\n      date: '2024-01-14',\n      status: 'pending',\n      deal_type: 'used',\n      funding_source: 'bank',\n    },\n    {\n      id: 'D005',\n      customer_name: 'Brown, Michael',\n      vehicle: '2024 Chevrolet Silverado',\n      salesperson: 'Kevin Johnson',\n      finance_manager: 'Sarah Johnson',\n      fi_gross: 2800,\n      products: ['GAP Insurance', 'Tire & Wheel', 'Paint Protection'],\n      date: '2024-01-13',\n      status: 'completed',\n      deal_type: 'new',\n      funding_source: 'captive',\n    },\n  ]);\n\n  // Check the URL to see if we should show the log deal form\n  useEffect(() => {\n    if (\n      location.pathname.includes('/log-deal') ||\n      location.pathname.includes('/deal-log') ||\n      location.pathname.includes('/finance-director-deal-log')\n    ) {\n      setShowLogDealForm(true);\n    } else {\n      setShowLogDealForm(false);\n    }\n  }, [location.pathname]);\n\n  const handleLogNewDealClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    navigate('/finance-director/log-deal');\n  };\n\n  const getPeriodLabel = (period: string): string => {\n    const today = new Date();\n    const month = today.toLocaleString('default', { month: 'long' });\n    const year = today.getFullYear();\n\n    switch (period) {\n      case 'this-month':\n        return `${month} ${year}`;\n      case 'last-month':\n        const lastMonth =\n          today.getMonth() === 0\n            ? 'December'\n            : new Date(today.getFullYear(), today.getMonth() - 1, 1).toLocaleString('default', {\n                month: 'long',\n              });\n        const lastMonthYear =\n          today.getMonth() === 0 ? today.getFullYear() - 1 : today.getFullYear();\n        return `${lastMonth} ${lastMonthYear}`;\n      case 'last-quarter':\n        const currentQuarter = Math.floor(today.getMonth() / 3);\n        return `Q${currentQuarter === 0 ? 4 : currentQuarter} ${\n          currentQuarter === 0 ? year - 1 : year\n        }`;\n      case 'ytd':\n        return `Year to Date ${year}`;\n      case 'last-year':\n        return `${year - 1}`;\n      default:\n        return `${month} ${year}`;\n    }\n  };\n\n  const getPerformanceBadge = (performance: string) => {\n    switch (performance) {\n      case 'excellent':\n        return <Badge className=\"bg-green-100 text-green-800\">Excellent</Badge>;\n      case 'good':\n        return <Badge className=\"bg-blue-100 text-blue-800\">Good</Badge>;\n      case 'needs_improvement':\n        return <Badge className=\"bg-yellow-100 text-yellow-800\">Needs Improvement</Badge>;\n      default:\n        return <Badge variant=\"secondary\">Unknown</Badge>;\n    }\n  };\n\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case 'completed':\n        return <Badge className=\"bg-green-100 text-green-800\">Completed</Badge>;\n      case 'pending':\n        return <Badge className=\"bg-yellow-100 text-yellow-800\">Pending</Badge>;\n      case 'cancelled':\n        return <Badge className=\"bg-red-100 text-red-800\">Cancelled</Badge>;\n      default:\n        return <Badge variant=\"secondary\">{status}</Badge>;\n    }\n  };\n\n  const getDealTypeBadge = (type: string) => {\n    switch (type) {\n      case 'new':\n        return <Badge className=\"bg-blue-100 text-blue-800\">New</Badge>;\n      case 'used':\n        return <Badge className=\"bg-purple-100 text-purple-800\">Used</Badge>;\n      default:\n        return <Badge variant=\"secondary\">{type}</Badge>;\n    }\n  };\n\n  const getVSCIcon = (penetration: number) => {\n    if (penetration >= 80) return <Star className=\"w-4 h-4 text-yellow-500 fill-current\" />;\n    if (penetration >= 70) return <CheckCircle2 className=\"w-4 h-4 text-green-500\" />;\n    if (penetration >= 60) return <AlertTriangle className=\"w-4 h-4 text-yellow-500\" />;\n    return <TrendingDown className=\"w-4 h-4 text-red-500\" />;\n  };\n\n  // If showing the log deal form, render it instead of the normal dashboard\n  if (showLogDealForm) {\n    return (\n      <div className=\"container py-4\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <div>\n            <h1 className=\"text-3xl font-bold\">Finance Director Dashboard</h1>\n            <p className=\"text-gray-600 mt-1\">\n              Finance Director: {user?.email?.split('@')[0] || 'Not Assigned'}\n            </p>\n          </div>\n          <Button\n            size=\"lg\"\n            className=\"bg-green-600 hover:bg-green-700\"\n            onClick={() => navigate('/dashboard/finance-director')}\n          >\n            Back to Dashboard\n          </Button>\n        </div>\n        <DealLogPage dashboardType=\"finance-director\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container py-4\">\n      {/* Dashboard header */}\n      <div className=\"flex justify-between items-start mb-6\">\n        <div className=\"flex-grow\">\n          <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-2\">\n            <div>\n              <h1 className=\"text-3xl font-bold flex items-center\">\n                <Crown className=\"w-8 h-8 mr-3 text-purple-600\" />\n                Finance Director Dashboard\n              </h1>\n              <p className=\"text-gray-600 mt-1\">\n                Finance Director: {user?.email?.split('@')[0] || 'Not Assigned'}\n              </p>\n            </div>\n\n            {/* Finance Leadership Tip */}\n            <div className=\"bg-purple-50 p-2 rounded-md mt-2 md:mt-0 border border-purple-100 max-w-2xl\">\n              <p className=\"text-xs italic text-purple-800\">\n                <Lightbulb className=\"h-3 w-3 inline-block mr-1\" />\n                <strong>Leadership Tip:</strong> Regular one-on-ones with your F&I managers help\n                identify training opportunities and boost team performance.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Period selector and Log Deal button */}\n      <div className=\"flex justify-between items-center mb-6\">\n        <div className=\"flex items-center\">\n          <h2 className=\"text-2xl font-bold mr-3\">{getPeriodLabel(timePeriod)}</h2>\n          <select\n            value={timePeriod}\n            onChange={e => setTimePeriod(e.target.value)}\n            className=\"p-2 border rounded-md shadow-sm\"\n          >\n            <option value=\"this-month\">This Month</option>\n            <option value=\"last-month\">Last Month</option>\n            <option value=\"last-quarter\">Last Quarter</option>\n            <option value=\"ytd\">Year to Date</option>\n            <option value=\"last-year\">Last Year</option>\n          </select>\n        </div>\n\n        <Button\n          size=\"lg\"\n          className=\"bg-purple-600 hover:bg-purple-700\"\n          onClick={handleLogNewDealClick}\n        >\n          <span className=\"flex items-center\">\n            <PlusCircle className=\"mr-2 h-5 w-5\" />\n            Log New Deal\n          </span>\n        </Button>\n      </div>\n\n      <Tabs value={selectedTab} onValueChange={setSelectedTab} className=\"space-y-6\">\n        <TabsList className=\"grid w-full grid-cols-6\">\n          <TabsTrigger value=\"overview\">Quick View</TabsTrigger>\n          <TabsTrigger value=\"leaderboard\">F&I Leaderboard</TabsTrigger>\n          <TabsTrigger value=\"deals\">Department Deals</TabsTrigger>\n          <TabsTrigger value=\"managers\">Manager Deals</TabsTrigger>\n          <TabsTrigger value=\"schedules\">Schedules</TabsTrigger>\n          <TabsTrigger value=\"payplans\">Pay Plans</TabsTrigger>\n        </TabsList>\n\n        {/* Quick View Tab */}\n        <TabsContent value=\"overview\" className=\"space-y-6\">\n          {/* Department Metrics Cards */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Department F&I Gross</CardTitle>\n                <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  ${departmentMetrics.total_fi_gross.toLocaleString()}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  <span className=\"text-green-600 flex items-center\">\n                    <TrendingUp className=\"w-3 h-3 mr-1\" />+{departmentMetrics.mtd_growth}%\n                  </span>\n                  from last month\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Deals Processed</CardTitle>\n                <FileText className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{departmentMetrics.deals_processed}</div>\n                <p className=\"text-xs text-muted-foreground\">\n                  {Math.round(departmentMetrics.deals_processed / financeManagers.length)} avg per\n                  manager\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Products Per Deal (PPD)</CardTitle>\n                <BarChart4 className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{departmentMetrics.products_per_deal}</div>\n                <p className=\"text-xs text-muted-foreground\">Target: 2.5 products per deal</p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Per Vehicle Retail (PVR)</CardTitle>\n                <Calculator className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">${departmentMetrics.per_vehicle_retail}</div>\n                <p className=\"text-xs text-muted-foreground\">Department average</p>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Additional Metrics Row */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Total VSC Penetration</CardTitle>\n                <Star className=\"h-4 w-4 text-yellow-500\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{departmentMetrics.total_vsc_penetration}%</div>\n                <p className=\"text-xs text-muted-foreground\">Department average penetration</p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Finance Penetration Rate</CardTitle>\n                <Percent className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{departmentMetrics.penetration_rate}%</div>\n                <p className=\"text-xs text-muted-foreground\">Financed vs cash deals</p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Team Performance</CardTitle>\n                <Users className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {getPerformanceBadge(departmentMetrics.team_performance)}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">Overall department rating</p>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Team Performance Overview */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center\">\n                <Users className=\"w-5 h-5 mr-2\" />\n                Team Performance Overview\n              </CardTitle>\n              <CardDescription>\n                Current performance status:{' '}\n                {getPerformanceBadge(departmentMetrics.team_performance)}\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                {financeManagers.map(manager => (\n                  <div key={manager.id} className=\"p-4 border rounded-lg\">\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <h4 className=\"font-semibold\">{manager.name}</h4>\n                      <div className=\"flex items-center space-x-2\">\n                        {getVSCIcon(manager.vsc_penetration)}\n                        <Badge variant={manager.status === 'active' ? 'default' : 'secondary'}>\n                          {manager.status}\n                        </Badge>\n                      </div>\n                    </div>\n                    <div className=\"space-y-1 text-sm\">\n                      <div className=\"flex justify-between\">\n                        <span>Deals:</span>\n                        <span className=\"font-medium\">{manager.deals_processed}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Revenue:</span>\n                        <span className=\"font-medium\">${manager.mtd_revenue.toLocaleString()}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>PPD:</span>\n                        <span className=\"font-medium\">{manager.ppd}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>PVR:</span>\n                        <span className=\"font-medium\">${manager.pvr}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>VSC Penetration:</span>\n                        <span className=\"font-medium\">{manager.vsc_penetration}%</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Rating:</span>\n                        <span className=\"font-medium\">\n                          {getPerformanceBadge(manager.performance_rating)}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* F&I Leaderboard Tab */}\n        <TabsContent value=\"leaderboard\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center\">\n                <Trophy className=\"w-5 h-5 mr-2 text-yellow-500\" />\n                Finance Department Leaderboard\n              </CardTitle>\n              <CardDescription>\n                Performance rankings for {getPeriodLabel(timePeriod)}\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead className=\"w-12\">Rank</TableHead>\n                    <TableHead>Finance Manager</TableHead>\n                    <TableHead className=\"text-right\">Deals</TableHead>\n                    <TableHead className=\"text-right\">Revenue</TableHead>\n                    <TableHead className=\"text-right\">PPD</TableHead>\n                    <TableHead className=\"text-right\">PVR</TableHead>\n                    <TableHead className=\"text-right\">VSC Penetration</TableHead>\n                    <TableHead className=\"text-right\">Performance</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {financeManagers\n                    .sort((a, b) => b.mtd_revenue - a.mtd_revenue)\n                    .map((manager, index) => (\n                      <TableRow key={manager.id}>\n                        <TableCell>\n                          <div className=\"flex items-center\">\n                            {index === 0 && <Trophy className=\"w-4 h-4 text-yellow-500 mr-1\" />}\n                            {index === 1 && <Trophy className=\"w-4 h-4 text-gray-400 mr-1\" />}\n                            {index === 2 && <Trophy className=\"w-4 h-4 text-amber-600 mr-1\" />}\n                            <span className=\"font-medium\">#{index + 1}</span>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div>\n                            <div className=\"font-medium\">{manager.name}</div>\n                            <div className=\"text-sm text-muted-foreground\">{manager.email}</div>\n                          </div>\n                        </TableCell>\n                        <TableCell className=\"text-right font-medium\">\n                          {manager.deals_processed}\n                        </TableCell>\n                        <TableCell className=\"text-right font-medium\">\n                          ${manager.mtd_revenue.toLocaleString()}\n                        </TableCell>\n                        <TableCell className=\"text-right\">{manager.ppd}</TableCell>\n                        <TableCell className=\"text-right\">${manager.pvr}</TableCell>\n                        <TableCell className=\"text-right\">\n                          <div className=\"flex items-center justify-end space-x-1\">\n                            {getVSCIcon(manager.vsc_penetration)}\n                            <span>{manager.vsc_penetration}%</span>\n                          </div>\n                        </TableCell>\n                        <TableCell className=\"text-right\">\n                          {getPerformanceBadge(manager.performance_rating)}\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Department Deals Tab */}\n        <TabsContent value=\"deals\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <CardTitle className=\"flex items-center\">\n                    <FileText className=\"w-5 h-5 mr-2\" />\n                    All Department Deals\n                  </CardTitle>\n                  <CardDescription>\n                    Complete view of all F&I deals for {getPeriodLabel(timePeriod)}\n                  </CardDescription>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <Select value={selectedManager} onValueChange={setSelectedManager}>\n                    <SelectTrigger className=\"w-48\">\n                      <SelectValue placeholder=\"Filter by manager\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"all\">All Managers</SelectItem>\n                      {financeManagers.map(manager => (\n                        <SelectItem key={manager.id} value={manager.id}>\n                          {manager.name}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n            </CardHeader>\n            <CardContent>\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead>Deal ID</TableHead>\n                    <TableHead>Customer</TableHead>\n                    <TableHead>Vehicle</TableHead>\n                    <TableHead>Type</TableHead>\n                    <TableHead>Salesperson</TableHead>\n                    <TableHead>F&I Manager</TableHead>\n                    <TableHead className=\"text-right\">F&I Gross</TableHead>\n                    <TableHead>Products</TableHead>\n                    <TableHead>Funding</TableHead>\n                    <TableHead>Date</TableHead>\n                    <TableHead>Status</TableHead>\n                    <TableHead className=\"text-right\">Actions</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {recentDeals\n                    .filter(\n                      deal =>\n                        selectedManager === 'all' || deal.finance_manager.includes(selectedManager)\n                    )\n                    .map(deal => (\n                      <TableRow key={deal.id}>\n                        <TableCell className=\"font-medium\">{deal.id}</TableCell>\n                        <TableCell>{deal.customer_name}</TableCell>\n                        <TableCell>{deal.vehicle}</TableCell>\n                        <TableCell>{getDealTypeBadge(deal.deal_type)}</TableCell>\n                        <TableCell>{deal.salesperson}</TableCell>\n                        <TableCell>{deal.finance_manager}</TableCell>\n                        <TableCell className=\"text-right font-medium\">\n                          ${deal.fi_gross.toLocaleString()}\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex flex-wrap gap-1\">\n                            {deal.products.slice(0, 2).map((product, index) => (\n                              <Badge key={index} variant=\"outline\" className=\"text-xs\">\n                                {product}\n                              </Badge>\n                            ))}\n                            {deal.products.length > 2 && (\n                              <Badge variant=\"outline\" className=\"text-xs\">\n                                +{deal.products.length - 2} more\n                              </Badge>\n                            )}\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <Badge variant=\"outline\" className=\"text-xs capitalize\">\n                            {deal.funding_source.replace('_', ' ')}\n                          </Badge>\n                        </TableCell>\n                        <TableCell>{new Date(deal.date).toLocaleDateString()}</TableCell>\n                        <TableCell>{getStatusBadge(deal.status)}</TableCell>\n                        <TableCell className=\"text-right\">\n                          <div className=\"flex items-center justify-end space-x-2\">\n                            <Button variant=\"outline\" size=\"sm\">\n                              <Eye className=\"w-4 h-4\" />\n                            </Button>\n                            <Button variant=\"outline\" size=\"sm\">\n                              <Edit className=\"w-4 h-4\" />\n                            </Button>\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Individual Manager Deals Tab */}\n        <TabsContent value=\"managers\" className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n            {financeManagers.map(manager => (\n              <Card key={manager.id}>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center justify-between\">\n                    <span>{manager.name}</span>\n                    <div className=\"flex items-center space-x-2\">\n                      {getVSCIcon(manager.vsc_penetration)}\n                      <Badge variant={manager.status === 'active' ? 'default' : 'secondary'}>\n                        {manager.status}\n                      </Badge>\n                    </div>\n                  </CardTitle>\n                  <CardDescription>{manager.email}</CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <div className=\"text-center p-3 bg-blue-50 rounded-lg\">\n                        <div className=\"text-2xl font-bold text-blue-600\">\n                          {manager.deals_processed}\n                        </div>\n                        <div className=\"text-xs text-blue-600\">Deals</div>\n                      </div>\n                      <div className=\"text-center p-3 bg-green-50 rounded-lg\">\n                        <div className=\"text-2xl font-bold text-green-600\">\n                          ${manager.mtd_revenue.toLocaleString()}\n                        </div>\n                        <div className=\"text-xs text-green-600\">Revenue</div>\n                      </div>\n                    </div>\n\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <div className=\"text-center p-3 bg-purple-50 rounded-lg\">\n                        <div className=\"text-2xl font-bold text-purple-600\">{manager.ppd}</div>\n                        <div className=\"text-xs text-purple-600\">PPD</div>\n                      </div>\n                      <div className=\"text-center p-3 bg-orange-50 rounded-lg\">\n                        <div className=\"text-2xl font-bold text-orange-600\">${manager.pvr}</div>\n                        <div className=\"text-xs text-orange-600\">PVR</div>\n                      </div>\n                    </div>\n\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <div className=\"text-center p-3 bg-yellow-50 rounded-lg\">\n                        <div className=\"text-2xl font-bold text-yellow-600\">\n                          {manager.vsc_penetration}%\n                        </div>\n                        <div className=\"text-xs text-yellow-600\">VSC Penetration</div>\n                      </div>\n                      <div className=\"text-center p-3 bg-indigo-50 rounded-lg\">\n                        <div className=\"text-sm font-bold text-indigo-600\">\n                          {getPerformanceBadge(manager.performance_rating)}\n                        </div>\n                        <div className=\"text-xs text-indigo-600\">Rating</div>\n                      </div>\n                    </div>\n\n                    <div className=\"pt-4 border-t\">\n                      <Button variant=\"outline\" className=\"w-full\" size=\"sm\">\n                        <Eye className=\"w-4 h-4 mr-2\" />\n                        View Individual Deals\n                      </Button>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </TabsContent>\n\n        {/* Schedules Tab */}\n        <TabsContent value=\"schedules\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center\">\n                <Calendar className=\"w-5 h-5 mr-2\" />\n                F&I Manager Schedules\n              </CardTitle>\n              <CardDescription>View and edit finance manager schedules</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-6\">\n                {financeManagers.map(manager => (\n                  <div key={manager.id} className=\"border rounded-lg p-4\">\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <div>\n                        <h4 className=\"font-semibold\">{manager.name}</h4>\n                        <p className=\"text-sm text-muted-foreground\">Current: {manager.schedule}</p>\n                      </div>\n                      <Button variant=\"outline\" size=\"sm\">\n                        <Edit className=\"w-4 h-4 mr-2\" />\n                        Edit Schedule\n                      </Button>\n                    </div>\n\n                    <div className=\"grid grid-cols-7 gap-2\">\n                      {['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'].map((day, index) => (\n                        <div key={day} className=\"text-center p-2 border rounded\">\n                          <div className=\"text-xs font-medium\">{day}</div>\n                          <div className=\"text-xs text-muted-foreground mt-1\">\n                            {index < 5 ? manager.schedule : index === 5 ? '9am - 5pm' : 'Off'}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Pay Plans Tab */}\n        <TabsContent value=\"payplans\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center\">\n                <Settings className=\"w-5 h-5 mr-2\" />\n                Pay Plan Management\n              </CardTitle>\n              <CardDescription>\n                Limited access: Add/remove monthly bonuses for finance managers\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-6\">\n                <div className=\"flex items-center\">\n                  <Lightbulb className=\"w-5 h-5 text-yellow-600 mr-2\" />\n                  <div>\n                    <h4 className=\"font-medium text-yellow-800\">Limited Access</h4>\n                    <p className=\"text-sm text-yellow-700\">\n                      As Finance Director, you can add/remove monthly bonuses but cannot modify base\n                      pay plan structures.\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              <EnhancedPayPlanManager\n                dealershipId={dealershipId || 'default'}\n                isGroupAdmin={false}\n              />\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default FinanceDirectorDashboard;\n","// Adapted from https://github.com/shadcn-ui/ui/blob/main/apps/www/registry/default/ui/use-toast.tsx\r\nimport { useState, useEffect, useCallback } from 'react';\r\n\r\nimport type { ToastActionElement, ToastProps } from './toast';\r\n\r\nconst TOAST_LIMIT = 20;\r\nconst TOAST_REMOVE_DELAY = 1000;\r\n\r\ntype ToasterToast = ToastProps & {\r\n  id: string;\r\n  title?: React.ReactNode;\r\n  description?: React.ReactNode;\r\n  action?: ToastActionElement;\r\n};\r\n\r\nconst actionTypes = {\r\n  ADD_TOAST: 'ADD_TOAST',\r\n  UPDATE_TOAST: 'UPDATE_TOAST',\r\n  DISMISS_TOAST: 'DISMISS_TOAST',\r\n  REMOVE_TOAST: 'REMOVE_TOAST',\r\n} as const;\r\n\r\nlet count = 0;\r\n\r\nfunction genId() {\r\n  count = (count + 1) % Number.MAX_VALUE;\r\n  return count.toString();\r\n}\r\n\r\ntype ActionType = typeof actionTypes;\r\n\r\ntype Action =\r\n  | {\r\n      type: ActionType['ADD_TOAST'];\r\n      toast: ToasterToast;\r\n    }\r\n  | {\r\n      type: ActionType['UPDATE_TOAST'];\r\n      toast: Partial<ToasterToast>;\r\n    }\r\n  | {\r\n      type: ActionType['DISMISS_TOAST'];\r\n      toastId?: string;\r\n    }\r\n  | {\r\n      type: ActionType['REMOVE_TOAST'];\r\n      toastId?: string;\r\n    };\r\n\r\ninterface State {\r\n  toasts: ToasterToast[];\r\n}\r\n\r\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>();\r\n\r\nconst reducer = (state: State, action: Action): State => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_TOAST:\r\n      return {\r\n        ...state,\r\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\r\n      };\r\n\r\n    case actionTypes.UPDATE_TOAST:\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map(t => (t.id === action.toast.id ? { ...t, ...action.toast } : t)),\r\n      };\r\n\r\n    case actionTypes.DISMISS_TOAST: {\r\n      const { toastId } = action;\r\n\r\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\r\n      // but I'll keep it here for simplicity\r\n      if (toastId) {\r\n        const timeout = toastTimeouts.get(toastId);\r\n        if (timeout) {\r\n          clearTimeout(timeout);\r\n        }\r\n        toastTimeouts.set(\r\n          toastId,\r\n          setTimeout(() => {\r\n            toastTimeouts.delete(toastId);\r\n            dispatch({\r\n              type: actionTypes.REMOVE_TOAST,\r\n              toastId,\r\n            });\r\n          }, TOAST_REMOVE_DELAY)\r\n        );\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map(t =>\r\n          t.id === toastId || toastId === undefined\r\n            ? {\r\n                ...t,\r\n                open: false,\r\n              }\r\n            : t\r\n        ),\r\n      };\r\n    }\r\n    case actionTypes.REMOVE_TOAST:\r\n      if (action.toastId === undefined) {\r\n        return {\r\n          ...state,\r\n          toasts: [],\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.filter(t => t.id !== action.toastId),\r\n      };\r\n  }\r\n};\r\n\r\nconst listeners: Array<(state: State) => void> = [];\r\n\r\nlet memoryState: State = { toasts: [] };\r\n\r\nfunction dispatch(action: Action) {\r\n  memoryState = reducer(memoryState, action);\r\n  listeners.forEach(listener => {\r\n    listener(memoryState);\r\n  });\r\n}\r\n\r\ntype Toast = Omit<ToasterToast, 'id'>;\r\n\r\nfunction toast({ ...props }: Toast) {\r\n  const id = genId();\r\n\r\n  const update = (props: ToasterToast) =>\r\n    dispatch({\r\n      type: actionTypes.UPDATE_TOAST,\r\n      toast: { ...props, id },\r\n    });\r\n  const dismiss = () => dispatch({ type: actionTypes.DISMISS_TOAST, toastId: id });\r\n\r\n  dispatch({\r\n    type: actionTypes.ADD_TOAST,\r\n    toast: {\r\n      ...props,\r\n      id,\r\n      open: true,\r\n      onOpenChange: open => {\r\n        if (!open) dismiss();\r\n      },\r\n    },\r\n  });\r\n\r\n  return {\r\n    id,\r\n    dismiss,\r\n    update,\r\n  };\r\n}\r\n\r\nfunction useToast() {\r\n  const [state, setState] = useState<State>(memoryState);\r\n\r\n  useEffect(() => {\r\n    listeners.push(setState);\r\n    return () => {\r\n      const index = listeners.indexOf(setState);\r\n      if (index > -1) {\r\n        listeners.splice(index, 1);\r\n      }\r\n    };\r\n  }, [state]);\r\n\r\n  return {\r\n    ...state,\r\n    toast,\r\n    dismiss: (toastId?: string) => dispatch({ type: actionTypes.DISMISS_TOAST, toastId }),\r\n  };\r\n}\r\n\r\nexport { useToast, toast };\r\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { logFinanceManagerDeal } from '../../lib/apiService';\nimport { Card } from '../../components/ui/card';\nimport { Input } from '../../components/ui/input';\nimport { Button } from '../../components/ui/button';\nimport { Label } from '../../components/ui/label';\nimport { Checkbox } from '../../components/ui/checkbox';\nimport { Textarea } from '../../components/ui/textarea';\nimport { toast } from '../../components/ui/use-toast';\nimport { ArrowLeft, DollarSign, User, FileText, Calculator } from 'lucide-react';\n\n// Define salesperson options (this would typically come from a database)\nconst SALESPEOPLE = [\n  { id: 1, initials: 'JD', firstName: 'John', lastName: 'Doe' },\n  { id: 2, initials: 'SM', firstName: 'Sarah', lastName: 'Miller' },\n  { id: 3, initials: 'MR', firstName: 'Maria', lastName: 'Rodriguez' },\n  { id: 4, initials: 'AK', firstName: 'Anna', lastName: 'Kim' },\n  { id: 5, initials: 'BH', firstName: 'Brandon', lastName: 'Harris' },\n];\n\n// Define product options for finance managers with profit tracking\nconst PRODUCT_OPTIONS = [\n  { id: 'vsc', name: 'Vehicle Service Contract (VSC)', defaultProfit: 500 },\n  { id: 'gap', name: 'GAP Insurance', defaultProfit: 300 },\n  { id: 'ppm', name: 'PrePaid Maintenance (PPM)', defaultProfit: 200 },\n  { id: 'tirewheel', name: 'Tire & Wheel Protection', defaultProfit: 150 },\n  { id: 'appearance', name: 'Appearance Protection', defaultProfit: 100 },\n  { id: 'keyreplacement', name: 'Key Replacement', defaultProfit: 50 },\n  { id: 'theft', name: 'Theft Protection', defaultProfit: 150 },\n  { id: 'windshield', name: 'Windshield Protection', defaultProfit: 75 },\n  { id: 'lojack', name: 'LoJack/Tracking System', defaultProfit: 200 },\n  { id: 'extwarranty', name: 'Extended Warranty', defaultProfit: 450 },\n];\n\n// Status options\nconst STATUS_OPTIONS = [\n  { id: 'pending', name: 'Pending' },\n  { id: 'funded', name: 'Funded' },\n  { id: 'unwound', name: 'Unwound' },\n  { id: 'deaddeal', name: 'Dead Deal' },\n];\n\n// Interface for form data\ninterface DealFormData {\n  dealNumber: string;\n  stockNumber: string;\n  vinLast8: string;\n  vehicleType: string;\n  customerName: string;\n  vehicleDescription: string;\n  dealType: string;\n  saleDate: string;\n  frontEndGross: string;\n  salespersonId: string;\n  isSplitDeal: boolean;\n  secondSalespersonId: string;\n  lender: string;\n  reserveFlat: string;\n  // Individual product profits\n  vscProfit: string;\n  gapProfit: string;\n  ppmProfit: string;\n  tireWheelProfit: string;\n  appearanceProfit: string;\n  keyReplacementProfit: string;\n  theftProfit: string;\n  windshieldProfit: string;\n  lojackProfit: string;\n  extWarrantyProfit: string;\n  otherProfit: string;\n  // Calculated fields\n  backEndGross: string;\n  totalGross: string;\n  status: string;\n  notes: string;\n}\n\nexport default function LogFinanceManagerDeal() {\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // Initialize form data\n  const [formData, setFormData] = useState<DealFormData>({\n    dealNumber: '',\n    stockNumber: '',\n    vinLast8: '',\n    vehicleType: 'N',\n    customerName: '',\n    vehicleDescription: '',\n    dealType: 'Finance',\n    saleDate: new Date().toISOString().split('T')[0],\n    frontEndGross: '',\n    salespersonId: '',\n    isSplitDeal: false,\n    secondSalespersonId: '',\n    lender: '',\n    reserveFlat: '',\n    vscProfit: '',\n    gapProfit: '',\n    ppmProfit: '',\n    tireWheelProfit: '',\n    appearanceProfit: '',\n    keyReplacementProfit: '',\n    theftProfit: '',\n    windshieldProfit: '',\n    lojackProfit: '',\n    extWarrantyProfit: '',\n    otherProfit: '',\n    backEndGross: '',\n    totalGross: '',\n    status: 'pending',\n    notes: '',\n  });\n\n  // Get schema name from user metadata\n  const schemaName = user?.user_metadata?.schema_name || '';\n\n  // Calculate back end gross and total gross whenever profit fields change\n  useEffect(() => {\n    const calculateTotals = () => {\n      const vsc = parseFloat(formData.vscProfit) || 0;\n      const gap = parseFloat(formData.gapProfit) || 0;\n      const ppm = parseFloat(formData.ppmProfit) || 0;\n      const tireWheel = parseFloat(formData.tireWheelProfit) || 0;\n      const appearance = parseFloat(formData.appearanceProfit) || 0;\n      const keyReplacement = parseFloat(formData.keyReplacementProfit) || 0;\n      const theft = parseFloat(formData.theftProfit) || 0;\n      const windshield = parseFloat(formData.windshieldProfit) || 0;\n      const lojack = parseFloat(formData.lojackProfit) || 0;\n      const extWarranty = parseFloat(formData.extWarrantyProfit) || 0;\n      const other = parseFloat(formData.otherProfit) || 0;\n      const reserve = parseFloat(formData.reserveFlat) || 0;\n\n      const backEndGross =\n        vsc +\n        gap +\n        ppm +\n        tireWheel +\n        appearance +\n        keyReplacement +\n        theft +\n        windshield +\n        lojack +\n        extWarranty +\n        other +\n        reserve;\n      const frontEnd = parseFloat(formData.frontEndGross) || 0;\n      const totalGross = frontEnd + backEndGross;\n\n      setFormData(prev => ({\n        ...prev,\n        backEndGross: backEndGross.toFixed(2),\n        totalGross: totalGross.toFixed(2),\n      }));\n    };\n\n    calculateTotals();\n  }, [\n    formData.vscProfit,\n    formData.gapProfit,\n    formData.ppmProfit,\n    formData.tireWheelProfit,\n    formData.appearanceProfit,\n    formData.keyReplacementProfit,\n    formData.theftProfit,\n    formData.windshieldProfit,\n    formData.lojackProfit,\n    formData.extWarrantyProfit,\n    formData.otherProfit,\n    formData.reserveFlat,\n    formData.frontEndGross,\n  ]);\n\n  useEffect(() => {\n    console.log('[LogFinanceManagerDeal] Component mounted');\n\n    // Check if we have a schema to work with\n    if (!schemaName) {\n      console.error('[LogFinanceManagerDeal] No schema name found in user metadata');\n      toast({\n        title: 'Error',\n        description: 'Missing configuration for deal logging. Please contact support.',\n        variant: 'destructive',\n      });\n    } else {\n      console.log(`[LogFinanceManagerDeal] Using schema: ${schemaName}`);\n    }\n  }, [schemaName]);\n\n  // Handle input changes\n  const handleInputChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>\n  ) => {\n    const { name, value, type } = e.target;\n\n    // Handle checkbox\n    if (type === 'checkbox') {\n      setFormData(prev => ({\n        ...prev,\n        [name]: (e.target as HTMLInputElement).checked,\n      }));\n      return;\n    }\n\n    // Convert certain fields to uppercase\n    if (name === 'stockNumber' || name === 'vinLast8') {\n      setFormData(prev => ({\n        ...prev,\n        [name]: value.toUpperCase(),\n      }));\n      return;\n    }\n\n    // Clear lender when Cash is selected\n    if (name === 'dealType' && value === 'Cash') {\n      setFormData(prev => ({\n        ...prev,\n        [name]: value,\n        lender: '',\n      }));\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        [name]: value,\n      }));\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!schemaName) {\n      toast({\n        title: 'Error',\n        description: 'Missing schema information. Please contact support.',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    if (!formData.customerName || !formData.vehicleDescription) {\n      toast({\n        title: 'Validation Error',\n        description: 'Customer name and vehicle description are required fields.',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    try {\n      console.log(`[LogFinanceManagerDeal] Submitting deal to schema: ${schemaName}`);\n\n      // Generate deal ID if not provided\n      const dealId = formData.dealNumber || `D${Math.floor(1000 + Math.random() * 9000)}`;\n\n      // Get salesperson information\n      const salesperson = SALESPEOPLE.find(s => s.id.toString() === formData.salespersonId);\n      const salespersonInitials = salesperson ? salesperson.initials : '';\n\n      let secondSalespersonInitials = '';\n      if (formData.isSplitDeal && formData.secondSalespersonId) {\n        const secondSalesperson = SALESPEOPLE.find(\n          s => s.id.toString() === formData.secondSalespersonId\n        );\n        secondSalespersonInitials = secondSalesperson ? secondSalesperson.initials : '';\n      }\n\n      const salespersonDisplay =\n        formData.isSplitDeal && secondSalespersonInitials\n          ? `${salespersonInitials}/${secondSalespersonInitials} (Split)`\n          : salespersonInitials;\n\n      // Determine which products were sold\n      const productsSold = [];\n      if (parseFloat(formData.vscProfit) > 0) productsSold.push('Vehicle Service Contract (VSC)');\n      if (parseFloat(formData.gapProfit) > 0) productsSold.push('GAP Insurance');\n      if (parseFloat(formData.ppmProfit) > 0) productsSold.push('PrePaid Maintenance (PPM)');\n      if (parseFloat(formData.tireWheelProfit) > 0) productsSold.push('Tire & Wheel Protection');\n      if (parseFloat(formData.appearanceProfit) > 0) productsSold.push('Appearance Protection');\n      if (parseFloat(formData.keyReplacementProfit) > 0) productsSold.push('Key Replacement');\n      if (parseFloat(formData.theftProfit) > 0) productsSold.push('Theft Protection');\n      if (parseFloat(formData.windshieldProfit) > 0) productsSold.push('Windshield Protection');\n      if (parseFloat(formData.lojackProfit) > 0) productsSold.push('LoJack/Tracking System');\n      if (parseFloat(formData.extWarrantyProfit) > 0) productsSold.push('Extended Warranty');\n      if (parseFloat(formData.otherProfit) > 0) productsSold.push('Other');\n\n      // Prepare deal data for metrics calculation - FINANCE MANAGER SPECIFIC\n      const dealData = {\n        id: dealId,\n        customer_name: formData.customerName,\n        customer: formData.customerName, // Backward compatibility\n        vehicle: `${\n          formData.vehicleType === 'N' ? 'New' : formData.vehicleType === 'U' ? 'Used' : 'CPO'\n        } - ${formData.vehicleDescription}`,\n        vin: formData.vinLast8,\n        stock_number: formData.stockNumber,\n        sale_date: formData.saleDate,\n        saleDate: formData.saleDate, // Backward compatibility\n        deal_type: formData.dealType,\n        salesperson: salespersonDisplay,\n        salesperson_id: formData.salespersonId,\n        is_split_deal: formData.isSplitDeal,\n        second_salesperson_id: formData.isSplitDeal ? formData.secondSalespersonId : null,\n        lender: formData.lender,\n        front_end_gross: parseFloat(formData.frontEndGross) || 0,\n        back_end_gross: parseFloat(formData.backEndGross) || 0,\n        total_gross: parseFloat(formData.totalGross) || 0,\n        amount: parseFloat(formData.totalGross) || 0, // Backward compatibility\n        profit: parseFloat(formData.backEndGross) || 0, // Backward compatibility\n        reserve_flat: parseFloat(formData.reserveFlat) || 0,\n        vsc_profit: parseFloat(formData.vscProfit) || 0,\n        gap_profit: parseFloat(formData.gapProfit) || 0,\n        ppm_profit: parseFloat(formData.ppmProfit) || 0,\n        tire_wheel_profit: parseFloat(formData.tireWheelProfit) || 0,\n        appearance_profit: parseFloat(formData.appearanceProfit) || 0,\n        key_replacement_profit: parseFloat(formData.keyReplacementProfit) || 0,\n        theft_profit: parseFloat(formData.theftProfit) || 0,\n        windshield_profit: parseFloat(formData.windshieldProfit) || 0,\n        lojack_profit: parseFloat(formData.lojackProfit) || 0,\n        ext_warranty_profit: parseFloat(formData.extWarrantyProfit) || 0,\n        other_profit: parseFloat(formData.otherProfit) || 0,\n        products: productsSold,\n        status: formData.status,\n        notes: formData.notes,\n        vsc_sold: parseFloat(formData.vscProfit) > 0,\n        created_by: user?.email || 'unknown',\n        created_at: new Date().toISOString(),\n        // Mark as Finance Manager deal\n        dashboard_type: 'finance_manager',\n        schema_name: schemaName,\n      };\n\n      // Save to localStorage for backward compatibility\n      try {\n        const existingDealsJson = localStorage.getItem('financeDeals');\n        const existingDeals = existingDealsJson ? JSON.parse(existingDealsJson) : [];\n        const updatedDeals = [dealData, ...existingDeals];\n        localStorage.setItem('financeDeals', JSON.stringify(updatedDeals));\n      } catch (error) {\n        console.error('Error saving to localStorage:', error);\n      }\n\n      // Call API to log the deal\n      const result = await logFinanceManagerDeal(schemaName, dealData);\n\n      if (result.success) {\n        toast({\n          title: 'Success',\n          description: 'Deal logged successfully!',\n        });\n\n        navigate('/dashboard/finance');\n      } else {\n        console.error('[LogFinanceManagerDeal] Error logging deal:', result.error);\n        toast({\n          title: 'Error',\n          description: result.message || 'Failed to log deal. Please try again.',\n          variant: 'destructive',\n        });\n      }\n    } catch (error) {\n      console.error('[LogFinanceManagerDeal] Exception logging deal:', error);\n      toast({\n        title: 'Error',\n        description: 'An unexpected error occurred. Please try again.',\n        variant: 'destructive',\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto py-6\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-2xl font-bold\">Log New Deal</h1>\n        <Button\n          variant=\"outline\"\n          onClick={() => navigate('/dashboard/finance')}\n          className=\"flex items-center\"\n        >\n          <ArrowLeft className=\"mr-2 h-4 w-4\" />\n          Back to Dashboard\n        </Button>\n      </div>\n\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\n        {/* Deal Information Card */}\n        <Card className=\"p-6\">\n          <div className=\"space-y-4\">\n            <h2 className=\"text-xl font-semibold flex items-center border-b pb-2 mb-4\">\n              <FileText className=\"mr-2 h-5 w-5 text-blue-500\" />\n              Deal Information\n            </h2>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"dealNumber\">Deal Number</Label>\n                <Input\n                  id=\"dealNumber\"\n                  name=\"dealNumber\"\n                  value={formData.dealNumber}\n                  onChange={handleInputChange}\n                  placeholder=\"Auto-generated if empty\"\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"stockNumber\">Stock Number *</Label>\n                <Input\n                  id=\"stockNumber\"\n                  name=\"stockNumber\"\n                  value={formData.stockNumber}\n                  onChange={handleInputChange}\n                  placeholder=\"Stock Number\"\n                  required\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"vinLast8\">VIN (Last 8) *</Label>\n                <Input\n                  id=\"vinLast8\"\n                  name=\"vinLast8\"\n                  value={formData.vinLast8}\n                  onChange={handleInputChange}\n                  placeholder=\"Last 8 of VIN\"\n                  maxLength={8}\n                  required\n                />\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"vehicleType\">Vehicle Type</Label>\n                <select\n                  id=\"vehicleType\"\n                  name=\"vehicleType\"\n                  value={formData.vehicleType}\n                  onChange={handleInputChange}\n                  className=\"w-full p-2 border rounded-md\"\n                >\n                  <option value=\"N\">New</option>\n                  <option value=\"U\">Used</option>\n                  <option value=\"C\">CPO</option>\n                </select>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"dealType\">Deal Type</Label>\n                <select\n                  id=\"dealType\"\n                  name=\"dealType\"\n                  value={formData.dealType}\n                  onChange={handleInputChange}\n                  className=\"w-full p-2 border rounded-md\"\n                >\n                  <option value=\"Cash\">Cash</option>\n                  <option value=\"Finance\">Finance</option>\n                  <option value=\"Lease\">Lease</option>\n                </select>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"saleDate\">Sale Date</Label>\n                <Input\n                  type=\"date\"\n                  id=\"saleDate\"\n                  name=\"saleDate\"\n                  value={formData.saleDate}\n                  onChange={handleInputChange}\n                />\n              </div>\n            </div>\n          </div>\n        </Card>\n\n        {/* Customer & Vehicle Information */}\n        <Card className=\"p-6\">\n          <div className=\"space-y-4\">\n            <h2 className=\"text-xl font-semibold flex items-center border-b pb-2 mb-4\">\n              <User className=\"mr-2 h-5 w-5 text-green-500\" />\n              Customer & Vehicle\n            </h2>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"customerName\">Customer Name *</Label>\n                <Input\n                  id=\"customerName\"\n                  name=\"customerName\"\n                  value={formData.customerName}\n                  onChange={handleInputChange}\n                  placeholder=\"Customer last name\"\n                  required\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"vehicleDescription\">Vehicle Description *</Label>\n                <Input\n                  id=\"vehicleDescription\"\n                  name=\"vehicleDescription\"\n                  value={formData.vehicleDescription}\n                  onChange={handleInputChange}\n                  placeholder=\"e.g., 2023 Toyota Camry XLE\"\n                  required\n                />\n              </div>\n            </div>\n          </div>\n        </Card>\n\n        {/* Sales Information */}\n        <Card className=\"p-6\">\n          <div className=\"space-y-4\">\n            <h2 className=\"text-xl font-semibold flex items-center border-b pb-2 mb-4\">\n              <User className=\"mr-2 h-5 w-5 text-purple-500\" />\n              Sales Information\n            </h2>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"salespersonId\">Salesperson</Label>\n                <select\n                  id=\"salespersonId\"\n                  name=\"salespersonId\"\n                  value={formData.salespersonId}\n                  onChange={handleInputChange}\n                  className=\"w-full p-2 border rounded-md\"\n                >\n                  <option value=\"\">Select Salesperson</option>\n                  {SALESPEOPLE.map(person => (\n                    <option key={person.id} value={person.id.toString()}>\n                      {person.initials} - {person.firstName} {person.lastName}\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"frontEndGross\">Front End Gross</Label>\n                <Input\n                  id=\"frontEndGross\"\n                  name=\"frontEndGross\"\n                  value={formData.frontEndGross}\n                  onChange={handleInputChange}\n                  placeholder=\"0.00\"\n                  type=\"number\"\n                  step=\"0.01\"\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"lender\">Lender</Label>\n                <Input\n                  id=\"lender\"\n                  name=\"lender\"\n                  value={formData.lender}\n                  onChange={handleInputChange}\n                  placeholder=\"Lender name\"\n                  disabled={formData.dealType === 'Cash'}\n                />\n              </div>\n            </div>\n\n            <div className=\"flex items-center space-x-2\">\n              <Checkbox\n                id=\"isSplitDeal\"\n                name=\"isSplitDeal\"\n                checked={formData.isSplitDeal}\n                onCheckedChange={checked =>\n                  setFormData(prev => ({ ...prev, isSplitDeal: checked as boolean }))\n                }\n              />\n              <Label htmlFor=\"isSplitDeal\">Split Deal</Label>\n            </div>\n\n            {formData.isSplitDeal && (\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"secondSalespersonId\">Second Salesperson</Label>\n                <select\n                  id=\"secondSalespersonId\"\n                  name=\"secondSalespersonId\"\n                  value={formData.secondSalespersonId}\n                  onChange={handleInputChange}\n                  className=\"w-full p-2 border rounded-md\"\n                >\n                  <option value=\"\">Select Second Salesperson</option>\n                  {SALESPEOPLE.map(person => (\n                    <option key={person.id} value={person.id.toString()}>\n                      {person.initials} - {person.firstName} {person.lastName}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            )}\n          </div>\n        </Card>\n\n        {/* F&I Products */}\n        <Card className=\"p-6\">\n          <div className=\"space-y-4\">\n            <h2 className=\"text-xl font-semibold flex items-center border-b pb-2 mb-4\">\n              <DollarSign className=\"mr-2 h-5 w-5 text-green-500\" />\n              F&I Products & Profits\n            </h2>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"reserveFlat\">Reserve/Flat</Label>\n                <Input\n                  id=\"reserveFlat\"\n                  name=\"reserveFlat\"\n                  value={formData.reserveFlat}\n                  onChange={handleInputChange}\n                  placeholder=\"0.00\"\n                  type=\"number\"\n                  step=\"0.01\"\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"vscProfit\">VSC Profit</Label>\n                <Input\n                  id=\"vscProfit\"\n                  name=\"vscProfit\"\n                  value={formData.vscProfit}\n                  onChange={handleInputChange}\n                  placeholder=\"0.00\"\n                  type=\"number\"\n                  step=\"0.01\"\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"gapProfit\">GAP Profit</Label>\n                <Input\n                  id=\"gapProfit\"\n                  name=\"gapProfit\"\n                  value={formData.gapProfit}\n                  onChange={handleInputChange}\n                  placeholder=\"0.00\"\n                  type=\"number\"\n                  step=\"0.01\"\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"ppmProfit\">PPM Profit</Label>\n                <Input\n                  id=\"ppmProfit\"\n                  name=\"ppmProfit\"\n                  value={formData.ppmProfit}\n                  onChange={handleInputChange}\n                  placeholder=\"0.00\"\n                  type=\"number\"\n                  step=\"0.01\"\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"tireWheelProfit\">Tire & Wheel Profit</Label>\n                <Input\n                  id=\"tireWheelProfit\"\n                  name=\"tireWheelProfit\"\n                  value={formData.tireWheelProfit}\n                  onChange={handleInputChange}\n                  placeholder=\"0.00\"\n                  type=\"number\"\n                  step=\"0.01\"\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"appearanceProfit\">Appearance Profit</Label>\n                <Input\n                  id=\"appearanceProfit\"\n                  name=\"appearanceProfit\"\n                  value={formData.appearanceProfit}\n                  onChange={handleInputChange}\n                  placeholder=\"0.00\"\n                  type=\"number\"\n                  step=\"0.01\"\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"extWarrantyProfit\">Extended Warranty Profit</Label>\n                <Input\n                  id=\"extWarrantyProfit\"\n                  name=\"extWarrantyProfit\"\n                  value={formData.extWarrantyProfit}\n                  onChange={handleInputChange}\n                  placeholder=\"0.00\"\n                  type=\"number\"\n                  step=\"0.01\"\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"otherProfit\">Other Profit</Label>\n                <Input\n                  id=\"otherProfit\"\n                  name=\"otherProfit\"\n                  value={formData.otherProfit}\n                  onChange={handleInputChange}\n                  placeholder=\"0.00\"\n                  type=\"number\"\n                  step=\"0.01\"\n                />\n              </div>\n            </div>\n          </div>\n        </Card>\n\n        {/* Totals & Status */}\n        <Card className=\"p-6\">\n          <div className=\"space-y-4\">\n            <h2 className=\"text-xl font-semibold flex items-center border-b pb-2 mb-4\">\n              <Calculator className=\"mr-2 h-5 w-5 text-amber-500\" />\n              Totals & Status\n            </h2>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div className=\"space-y-2\">\n                <Label>Back End Gross</Label>\n                <div className=\"p-2 bg-gray-100 border rounded-md\">\n                  ${parseFloat(formData.backEndGross || '0').toLocaleString()}\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label>Total Gross</Label>\n                <div className=\"p-2 bg-gray-100 border rounded-md font-bold\">\n                  ${parseFloat(formData.totalGross || '0').toLocaleString()}\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"status\">Deal Status</Label>\n                <select\n                  id=\"status\"\n                  name=\"status\"\n                  value={formData.status}\n                  onChange={handleInputChange}\n                  className=\"w-full p-2 border rounded-md\"\n                >\n                  {STATUS_OPTIONS.map(status => (\n                    <option key={status.id} value={status.id}>\n                      {status.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"notes\">Notes</Label>\n              <Textarea\n                id=\"notes\"\n                name=\"notes\"\n                value={formData.notes}\n                onChange={handleInputChange}\n                placeholder=\"Any additional notes about this deal...\"\n                className=\"min-h-[100px]\"\n              />\n            </div>\n          </div>\n        </Card>\n\n        {/* Submit Button */}\n        <div className=\"flex justify-end space-x-4\">\n          <Button\n            type=\"button\"\n            variant=\"outline\"\n            onClick={() => navigate('/dashboard/single-finance')}\n          >\n            Cancel\n          </Button>\n          <Button type=\"submit\" disabled={isSubmitting} className=\"px-8\">\n            {isSubmitting ? 'Saving Deal...' : 'Save Deal'}\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","// Direct Supabase REST API wrapper to bypass client timeout issues\r\n// This uses direct fetch calls which we know work reliably\r\n\r\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL;\r\nconst supabaseKey = import.meta.env.VITE_SUPABASE_ANON_KEY;\r\n\r\nif (!supabaseUrl || !supabaseKey) {\r\n  throw new Error('Missing Supabase configuration for direct API calls');\r\n}\r\n\r\nconst baseHeaders = {\r\n  Authorization: `Bearer ${supabaseKey}`,\r\n  apikey: supabaseKey,\r\n  'Content-Type': 'application/json',\r\n  Prefer: 'return=representation',\r\n};\r\n\r\nexport interface DirectSupabaseResponse<T = any> {\r\n  data: T | null;\r\n  error: any;\r\n  count?: number;\r\n}\r\n\r\nclass DirectSupabaseClient {\r\n  private baseUrl: string;\r\n  private headers: Record<string, string>;\r\n\r\n  constructor() {\r\n    this.baseUrl = `${supabaseUrl}/rest/v1`;\r\n    this.headers = { ...baseHeaders };\r\n  }\r\n\r\n  // SELECT operations\r\n  async select<T = any>(\r\n    table: string,\r\n    query: {\r\n      columns?: string;\r\n      filter?: Record<string, any>;\r\n      limit?: number;\r\n      offset?: number;\r\n      orderBy?: { column: string; ascending?: boolean };\r\n    } = {}\r\n  ): Promise<DirectSupabaseResponse<T[]>> {\r\n    try {\r\n      const params = new URLSearchParams();\r\n\r\n      if (query.columns) {\r\n        params.append('select', query.columns);\r\n      }\r\n\r\n      if (query.limit) {\r\n        params.append('limit', query.limit.toString());\r\n      }\r\n\r\n      if (query.offset) {\r\n        params.append('offset', query.offset.toString());\r\n      }\r\n\r\n      if (query.orderBy) {\r\n        const order = query.orderBy.ascending === false ? 'desc' : 'asc';\r\n        params.append('order', `${query.orderBy.column}.${order}`);\r\n      }\r\n\r\n      // Add filters\r\n      if (query.filter) {\r\n        Object.entries(query.filter).forEach(([key, value]) => {\r\n          params.append(key, `eq.${value}`);\r\n        });\r\n      }\r\n\r\n      const url = `${this.baseUrl}/${table}?${params}`;\r\n      console.log('[DirectSupabase] SELECT request:', url);\r\n\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: this.headers,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        return {\r\n          data: null,\r\n          error: {\r\n            message: `HTTP ${response.status}: ${errorText}`,\r\n            status: response.status,\r\n          },\r\n        };\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('[DirectSupabase] SELECT success:', data);\r\n\r\n      return {\r\n        data: data,\r\n        error: null,\r\n      };\r\n    } catch (error) {\r\n      console.error('[DirectSupabase] SELECT error:', error);\r\n      return {\r\n        data: null,\r\n        error: error,\r\n      };\r\n    }\r\n  }\r\n\r\n  // INSERT operations\r\n  async insert<T = any>(table: string, data: any): Promise<DirectSupabaseResponse<T>> {\r\n    try {\r\n      const url = `${this.baseUrl}/${table}`;\r\n      console.log('[DirectSupabase] INSERT request:', url, data);\r\n\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: this.headers,\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        return {\r\n          data: null,\r\n          error: {\r\n            message: `HTTP ${response.status}: ${errorText}`,\r\n            status: response.status,\r\n          },\r\n        };\r\n      }\r\n\r\n      const result = await response.json();\r\n      console.log('[DirectSupabase] INSERT success:', result);\r\n\r\n      return {\r\n        data: Array.isArray(result) ? result[0] : result,\r\n        error: null,\r\n      };\r\n    } catch (error) {\r\n      console.error('[DirectSupabase] INSERT error:', error);\r\n      return {\r\n        data: null,\r\n        error: error,\r\n      };\r\n    }\r\n  }\r\n\r\n  // DELETE operations\r\n  async delete<T = any>(\r\n    table: string,\r\n    filter: Record<string, any>\r\n  ): Promise<DirectSupabaseResponse<T>> {\r\n    try {\r\n      const params = new URLSearchParams();\r\n\r\n      // Add filters\r\n      Object.entries(filter).forEach(([key, value]) => {\r\n        params.append(key, `eq.${value}`);\r\n      });\r\n\r\n      const url = `${this.baseUrl}/${table}?${params}`;\r\n      console.log('[DirectSupabase] DELETE request:', url);\r\n\r\n      const response = await fetch(url, {\r\n        method: 'DELETE',\r\n        headers: this.headers,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        return {\r\n          data: null,\r\n          error: {\r\n            message: `HTTP ${response.status}: ${errorText}`,\r\n            status: response.status,\r\n          },\r\n        };\r\n      }\r\n\r\n      const result = await response.text();\r\n      console.log('[DirectSupabase] DELETE success');\r\n\r\n      return {\r\n        data: null, // DELETE typically doesn't return data\r\n        error: null,\r\n      };\r\n    } catch (error) {\r\n      console.error('[DirectSupabase] DELETE error:', error);\r\n      return {\r\n        data: null,\r\n        error: error,\r\n      };\r\n    }\r\n  }\r\n\r\n  // UPDATE operations\r\n  async update<T = any>(\r\n    table: string,\r\n    data: any,\r\n    filter: Record<string, any>\r\n  ): Promise<DirectSupabaseResponse<T>> {\r\n    try {\r\n      const params = new URLSearchParams();\r\n\r\n      // Add filters\r\n      Object.entries(filter).forEach(([key, value]) => {\r\n        params.append(key, `eq.${value}`);\r\n      });\r\n\r\n      const url = `${this.baseUrl}/${table}?${params}`;\r\n      console.log('[DirectSupabase] UPDATE request:', url, data);\r\n\r\n      const response = await fetch(url, {\r\n        method: 'PATCH',\r\n        headers: this.headers,\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        return {\r\n          data: null,\r\n          error: {\r\n            message: `HTTP ${response.status}: ${errorText}`,\r\n            status: response.status,\r\n          },\r\n        };\r\n      }\r\n\r\n      const result = await response.json();\r\n      console.log('[DirectSupabase] UPDATE success:', result);\r\n\r\n      return {\r\n        data: Array.isArray(result) ? result[0] : result,\r\n        error: null,\r\n      };\r\n    } catch (error) {\r\n      console.error('[DirectSupabase] UPDATE error:', error);\r\n      return {\r\n        data: null,\r\n        error: error,\r\n      };\r\n    }\r\n  }\r\n\r\n  // Helper method to test the connection\r\n  async testConnection(): Promise<DirectSupabaseResponse<any>> {\r\n    return this.select('dealerships', {\r\n      columns: 'id,name',\r\n      limit: 1,\r\n    });\r\n  }\r\n}\r\n\r\n// Export a singleton instance\r\nexport const directSupabase = new DirectSupabaseClient();\r\n\r\n// Export the class for custom instances if needed\r\nexport { DirectSupabaseClient };\r\n","import React, { useState } from 'react';\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\nexport const EnvTest: React.FC = () => {\r\n  const [fetchTest, setFetchTest] = useState<any>(null);\r\n  const [fetchLoading, setFetchLoading] = useState(false);\r\n  const [supabaseTest, setSupabaseTest] = useState<any>(null);\r\n  const [supabaseLoading, setSupabaseLoading] = useState(false);\r\n\r\n  const envVars = {\r\n    VITE_SUPABASE_URL: import.meta.env.VITE_SUPABASE_URL,\r\n    VITE_SUPABASE_ANON_KEY: import.meta.env.VITE_SUPABASE_ANON_KEY,\r\n    MODE: import.meta.env.MODE,\r\n    DEV: import.meta.env.DEV,\r\n    PROD: import.meta.env.PROD,\r\n  };\r\n\r\n  const testDirectFetch = async () => {\r\n    setFetchLoading(true);\r\n    setFetchTest(null);\r\n\r\n    try {\r\n      const url = `${envVars.VITE_SUPABASE_URL}/rest/v1/dealerships?select=id,name&limit=1`;\r\n      console.log('[FETCH TEST] Testing direct fetch to:', url);\r\n\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          Authorization: `Bearer ${envVars.VITE_SUPABASE_ANON_KEY}`,\r\n          apikey: envVars.VITE_SUPABASE_ANON_KEY,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      console.log('[FETCH TEST] Response status:', response.status);\r\n      console.log('[FETCH TEST] Response headers:', Object.fromEntries(response.headers.entries()));\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        setFetchTest({\r\n          success: false,\r\n          status: response.status,\r\n          statusText: response.statusText,\r\n          error: errorText,\r\n        });\r\n        return;\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('[FETCH TEST] Response data:', data);\r\n\r\n      setFetchTest({\r\n        success: true,\r\n        status: response.status,\r\n        data: data,\r\n      });\r\n    } catch (error) {\r\n      console.error('[FETCH TEST] Fetch error:', error);\r\n      setFetchTest({\r\n        success: false,\r\n        error: error.message,\r\n      });\r\n    } finally {\r\n      setFetchLoading(false);\r\n    }\r\n  };\r\n\r\n  const testSupabaseClient = async () => {\r\n    setSupabaseLoading(true);\r\n    setSupabaseTest(null);\r\n\r\n    try {\r\n      console.log('[SUPABASE TEST] Creating new Supabase client...');\r\n\r\n      // Create a fresh Supabase client instance\r\n      const testClient = createClient(envVars.VITE_SUPABASE_URL, envVars.VITE_SUPABASE_ANON_KEY, {\r\n        auth: {\r\n          persistSession: false,\r\n          autoRefreshToken: false,\r\n        },\r\n      });\r\n\r\n      console.log('[SUPABASE TEST] Client created, testing query...');\r\n\r\n      // Add timeout to the Supabase query\r\n      const timeoutPromise = new Promise((_, reject) => {\r\n        setTimeout(() => reject(new Error('Supabase query timeout after 5 seconds')), 5000);\r\n      });\r\n\r\n      const queryPromise = testClient.from('dealerships').select('id, name').limit(1);\r\n\r\n      console.log('[SUPABASE TEST] Starting query with timeout...');\r\n      const result = await Promise.race([queryPromise, timeoutPromise]);\r\n\r\n      console.log('[SUPABASE TEST] Query completed:', result);\r\n\r\n      if (result.error) {\r\n        setSupabaseTest({\r\n          success: false,\r\n          error: result.error,\r\n        });\r\n      } else {\r\n        setSupabaseTest({\r\n          success: true,\r\n          data: result.data,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('[SUPABASE TEST] Error:', error);\r\n      setSupabaseTest({\r\n        success: false,\r\n        error: error.message,\r\n      });\r\n    } finally {\r\n      setSupabaseLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 bg-yellow-50 border border-yellow-200 rounded space-y-4\">\r\n      <h3 className=\"font-semibold mb-2\">Environment Variables Test</h3>\r\n      <div className=\"space-y-2\">\r\n        <div>\r\n          <strong>URL:</strong> {envVars.VITE_SUPABASE_URL}\r\n        </div>\r\n        <div>\r\n          <strong>API Key:</strong> {envVars.VITE_SUPABASE_ANON_KEY}\r\n        </div>\r\n        <div>\r\n          <strong>Mode:</strong> {envVars.MODE}\r\n        </div>\r\n        <div>\r\n          <strong>Dev:</strong> {envVars.DEV ? 'true' : 'false'}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n        <div>\r\n          <button\r\n            onClick={testDirectFetch}\r\n            disabled={fetchLoading}\r\n            className=\"px-3 py-1 bg-blue-500 text-white rounded text-sm hover:bg-blue-600 disabled:opacity-50\"\r\n          >\r\n            {fetchLoading ? 'Testing...' : 'Test Direct Fetch'}\r\n          </button>\r\n\r\n          {fetchTest && (\r\n            <div className=\"mt-2 p-2 bg-white border rounded\">\r\n              <strong>Direct Fetch Result:</strong>\r\n              <pre className=\"text-xs mt-1\">{JSON.stringify(fetchTest, null, 2)}</pre>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <button\r\n            onClick={testSupabaseClient}\r\n            disabled={supabaseLoading}\r\n            className=\"px-3 py-1 bg-green-500 text-white rounded text-sm hover:bg-green-600 disabled:opacity-50\"\r\n          >\r\n            {supabaseLoading ? 'Testing...' : 'Test Supabase Client'}\r\n          </button>\r\n\r\n          {supabaseTest && (\r\n            <div className=\"mt-2 p-2 bg-white border rounded\">\r\n              <strong>Supabase Client Result:</strong>\r\n              <pre className=\"text-xs mt-1\">{JSON.stringify(supabaseTest, null, 2)}</pre>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnvTest;\r\n","import React, { useState, useEffect } from 'react';\nimport { supabase } from '../../lib/supabaseClient';\nimport { directSupabase } from '../../lib/directSupabase';\nimport { Button } from '../../components/ui/button';\nimport { Input } from '../../components/ui/input';\nimport { Label } from '../../components/ui/label';\nimport { Card, CardHeader, CardTitle, CardContent } from '../../components/ui/card';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '../../components/ui/tabs';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '../../components/ui/select';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '../../components/ui/dialog';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { getCurrentUser, isAuthenticated } from '../../lib/directAuth';\nimport EnvTest from '../../components/EnvTest';\n\ninterface User {\n  id: string;\n  email: string;\n  name: string;\n  role: string;\n  created_at: string;\n  dealership_id: number | null;\n  dealership?: Dealership;\n  phone?: string;\n}\n\ninterface Dealership {\n  id: number;\n  name: string;\n  locations?: any; // Changed from location to locations\n  store_hours?: any;\n  num_teams?: number;\n  group_id?: number;\n  brands?: string[];\n  created_at?: string;\n  type?: string;\n  manufacturer?: string;\n  admin_user_id?: string;\n  subscription_tier?: 'base' | 'plus' | 'premium';\n  monthly_cost?: number;\n  // Soft delete fields\n  is_deleted?: boolean;\n  deleted_at?: string;\n  deleted_by?: string;\n  deletion_reason?: string;\n  schema_name?: string;\n  // Individual dealer details for groups\n  individual_dealers?: IndividualDealer[];\n  metadata?: any;\n}\n\ninterface IndividualDealer {\n  id?: number;\n  name: string;\n  manufacturer: string;\n  subscription_tier: 'base' | 'plus' | 'premium';\n  brands?: string[];\n  location?: string;\n}\n\ninterface SignupRequest {\n  id: string;\n  dealership_name: string;\n  contact_person: string;\n  email: string;\n  tier: string;\n  status: string;\n  created_at: string;\n  metadata: any;\n}\n\ninterface DealershipEntry {\n  name: string;\n  manufacturer: string;\n}\n\nconst MasterAdminPage: React.FC = () => {\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  const [users, setUsers] = useState<User[]>([]);\n  const [dealerships, setDealerships] = useState<Dealership[]>([]);\n  const [signupRequests, setSignupRequests] = useState<SignupRequest[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // New state for view/edit functionality\n  const [selectedDealership, setSelectedDealership] = useState<Dealership | null>(null);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [editMode, setEditMode] = useState(false);\n  const [editData, setEditData] = useState<any>({});\n  const [deletePin, setDeletePin] = useState('');\n  const [deleteTarget, setDeleteTarget] = useState<{\n    type: 'dealership' | 'user';\n    id: string | number;\n    name: string;\n  } | null>(null);\n  const [showPinDialog, setShowPinDialog] = useState(false);\n  const [showEditDialog, setShowEditDialog] = useState(false);\n  const [availableAdmins, setAvailableAdmins] = useState<User[]>([]);\n  const [dialogLoading, setDialogLoading] = useState(false);\n\n  // Tab management state\n  const [activeTab, setActiveTab] = useState('overview');\n\n  // Existing dialog states\n  const [showDialog, setShowDialog] = useState(false);\n  const [dialogType, setDialogType] = useState<'dealership' | 'user' | null>(null);\n  const [selectedEntity, setSelectedEntity] = useState<any>(null);\n  const [deleteItemName, setDeleteItemName] = useState('');\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  // New states for overlay dialogs\n  const [showViewAllDialog, setShowViewAllDialog] = useState(false);\n  const [viewAllType, setViewAllType] = useState<\n    'dealerships' | 'groups' | 'finance_managers' | null\n  >(null);\n  const [viewAllData, setViewAllData] = useState<any[]>([]);\n\n  // Function to refresh overview data\n  const refreshOverview = async () => {\n    console.log('[refreshOverview] Refreshing overview data...');\n    try {\n      await Promise.all([fetchUsers(), fetchDealerships(), fetchSignupRequests()]);\n      console.log('[refreshOverview] Overview data refreshed successfully');\n    } catch (error) {\n      console.error('[refreshOverview] Failed to refresh overview data:', error);\n    }\n  };\n\n  // Clear messages when switching tabs\n  const handleTabChange = (value: string) => {\n    setActiveTab(value);\n    setError('');\n    setSuccess('');\n    console.log(`[handleTabChange] Switched to tab: ${value}`);\n\n    // Auto-refresh data when switching to overview\n    if (value === 'overview') {\n      console.log('[handleTabChange] Refreshing data for overview tab');\n      refreshOverview();\n    }\n  };\n\n  // Soft delete and backup management - simplified since no soft delete support\n  const [showBackupDialog, setShowBackupDialog] = useState(false);\n  const [backupProgress, setBackupProgress] = useState(0);\n  const [backupStatus, setBackupStatus] = useState('');\n\n  // Simplified form states\n  const [newUser, setNewUser] = useState({\n    name: '',\n    email: '',\n    role: '', // Only 3 options now\n    tempPassword: '',\n    phone: '',\n    // Dealership fields\n    dealershipName: '',\n    location: '',\n    manufacturer: '',\n    // Dealer group fields\n    groupName: '',\n    numDealerships: 2,\n    dealerships: [] as DealershipEntry[],\n  });\n\n  // Simplified roles - only 3 main options for new user creation\n  const roles = [\n    {\n      value: 'single_finance_manager',\n      label: 'Single Finance Manager',\n      dashboard: '/dashboard/single-finance',\n    },\n    {\n      value: 'single_dealer_admin',\n      label: 'Single Dealership Admin',\n      dashboard: '/dashboard/admin',\n    },\n    { value: 'group_dealer_admin', label: 'Dealer Group Admin', dashboard: '/group-admin' },\n  ];\n\n  // Complete roles list for display purposes (includes legacy roles)\n  const allRoles = [\n    {\n      value: 'single_finance_manager',\n      label: 'Single Finance Manager',\n      dashboard: '/dashboard/single-finance',\n    },\n    {\n      value: 'single_dealer_admin',\n      label: 'Single Dealership Admin',\n      dashboard: '/dashboard/admin',\n    },\n    { value: 'group_dealer_admin', label: 'Dealer Group Admin', dashboard: '/group-admin' },\n    // Legacy role compatibility\n    { value: 'admin', label: 'Admin', dashboard: '/dashboard/admin' },\n    { value: 'dealership_admin', label: 'Dealership Admin', dashboard: '/dashboard/admin' },\n    { value: 'finance_manager', label: 'Finance Manager', dashboard: '/dashboard/finance' },\n    { value: 'general_manager', label: 'General Manager', dashboard: '/dashboard/gm' },\n    { value: 'sales_manager', label: 'Sales Manager', dashboard: '/dashboard/sales-manager' },\n    { value: 'salesperson', label: 'Salesperson', dashboard: '/dashboard/sales' },\n  ];\n\n  // Role mapping function for backward compatibility\n  const mapLegacyRole = (role: string): string => {\n    const legacyRoleMap: { [key: string]: string } = {\n      // New role names pass through as-is\n      single_finance_manager: 'single_finance_manager',\n      single_dealer_admin: 'single_dealer_admin',\n      group_dealer_admin: 'group_dealer_admin',\n      admin: 'admin', // Keep master admin as is\n      // Legacy mappings for backward compatibility\n      dealership_admin: 'single_dealer_admin',\n      finance_manager: 'single_finance_manager',\n      general_manager: 'single_dealer_admin',\n      sales_manager: 'single_dealer_admin',\n      salesperson: 'salesperson', // Fixed: was incorrectly mapped to single_finance_manager\n    };\n    return legacyRoleMap[role] || role;\n  };\n\n  // Helper function to check if a role is an admin role (for available admins)\n  const isAdminRole = (role: string): boolean => {\n    const adminRoles = [\n      'single_dealer_admin',\n      'group_dealer_admin',\n      'admin',\n      'dealership_admin',\n      'general_manager',\n    ];\n    return adminRoles.includes(role);\n  };\n\n  // Function to convert UI roles to database-compatible roles\n  const mapUIRoleToDatabase = (uiRole: string): string => {\n    // All roles are now directly supported in the database constraint\n    const roleMapping: { [key: string]: string } = {\n      single_finance_manager: 'single_finance_manager',\n      single_dealer_admin: 'single_dealer_admin',\n      group_dealer_admin: 'group_dealer_admin',\n      admin: 'admin',\n      dealership_admin: 'dealership_admin', // Legacy support\n      finance_manager: 'finance_manager', // Legacy support\n      general_manager: 'general_manager',\n      sales_manager: 'sales_manager',\n      salesperson: 'salesperson',\n    };\n    return roleMapping[uiRole] || uiRole;\n  };\n\n  const manufacturers = [\n    'Acura',\n    'Audi',\n    'BMW',\n    'Buick',\n    'Cadillac',\n    'Chevrolet',\n    'Chrysler',\n    'Dodge',\n    'Fiat',\n    'Ford',\n    'General Motors',\n    'Honda',\n    'Hyundai',\n    'Independent',\n    'Infiniti',\n    'Jaguar',\n    'Jeep',\n    'Kia',\n    'Land Rover',\n    'Lexus',\n    'Lincoln',\n    'Mazda',\n    'Mercedes-Benz',\n    'Mitsubishi',\n    'Nissan',\n    'Ram',\n    'Subaru',\n    'Toyota',\n    'Volkswagen',\n    'Volvo',\n  ];\n\n  // Subscription tiers and pricing\n  const subscriptionTiers = [\n    {\n      value: 'base',\n      label: 'Base',\n      description: 'Standard features',\n      singleDealershipPrice: 250,\n      dealerGroupPricePerDealer: 200,\n      features: [\n        'Up to 10 Sales People',\n        '3 F&I Managers',\n        '3 Sales Managers',\n        '1 GM',\n        'Role Specific Dashboards',\n      ],\n    },\n    {\n      value: 'plus',\n      label: '+ Version',\n      description: 'Enhanced features',\n      singleDealershipPrice: 350, // Base + 100\n      dealerGroupPricePerDealer: 300, // Group base + 100\n      additionalCost: 100,\n      features: [\n        'Up to 20 Sales People',\n        '5 F&I Managers',\n        'Finance Director role',\n        '5 Sales Managers',\n        'Dynamic Scheduling',\n        'More Sales Reports',\n      ],\n    },\n    {\n      value: 'premium',\n      label: '++ Version',\n      description: 'Premium features',\n      singleDealershipPrice: 750, // Base + 500\n      dealerGroupPricePerDealer: 700, // Group base + 500\n      additionalCost: 500,\n      features: [\n        'Up to 50 Sales People',\n        '10 Finance People',\n        '3 Finance Assistants',\n        '8 Sales Managers',\n        'Premium Analytics',\n      ],\n    },\n  ];\n\n  // Calculate monthly cost for a dealership\n  const calculateMonthlyCost = (dealership: Dealership) => {\n    const tier = dealership.subscription_tier || 'base';\n    const numDealerships = dealership.num_teams || 1;\n\n    if (dealership.type === 'group') {\n      // For dealer groups, calculate based on individual dealer tiers if available\n      const individualDealers = dealership.metadata?.individual_dealers;\n\n      if (individualDealers && Array.isArray(individualDealers) && individualDealers.length > 0) {\n        // Calculate cost based on each individual dealer's tier using SINGLE DEALERSHIP PRICING\n        // This matches what's shown in the UI and user expectations\n        let totalCost = 0;\n\n        individualDealers.forEach((dealer: any) => {\n          const dealerTier = dealer.subscription_tier || 'base';\n          let dealerCost = 250; // Use single dealership pricing for individual dealers in groups\n\n          if (dealerTier === 'plus') {\n            dealerCost = 350; // Single dealership plus pricing\n          } else if (dealerTier === 'premium') {\n            dealerCost = 750; // Single dealership premium pricing\n          }\n\n          totalCost += dealerCost;\n        });\n\n        return totalCost;\n      } else {\n        // Fallback to group-wide tier calculation using single dealership pricing\n        // This ensures consistency with individual dealer pricing\n        let baseCost = 250 * numDealerships; // Use single dealership pricing\n\n        if (tier === 'plus') {\n          baseCost = 350 * numDealerships; // Single dealership plus pricing\n        } else if (tier === 'premium') {\n          baseCost = 750 * numDealerships; // Single dealership premium pricing\n        }\n\n        return baseCost;\n      }\n    } else {\n      // Single dealership pricing - unchanged\n      let baseCost = 250; // $250 for single dealership\n\n      if (tier === 'plus') {\n        baseCost = 350;\n      } else if (tier === 'premium') {\n        baseCost = 750;\n      }\n\n      return baseCost;\n    }\n  };\n\n  useEffect(() => {\n    // Check if user is authorized - check both Supabase auth and direct auth\n    const directAuthUser = getCurrentUser();\n    const isDirectlyAuthenticated = isAuthenticated();\n\n    console.log('[MasterAdminPage] Authorization check:', {\n      supabaseUser: user?.email,\n      directAuthUser: directAuthUser?.email,\n      isDirectlyAuthenticated,\n    });\n\n    // Allow access if either:\n    // 1. Supabase user with correct email\n    // 2. Direct auth user with admin role\n    const hasSupabaseAccess =\n      user && (user.email === 'testadmin@example.com' || user.email === 'admin@thedasboard.com');\n\n    const hasDirectAuthAccess =\n      isDirectlyAuthenticated &&\n      directAuthUser &&\n      (directAuthUser.email === 'testadmin@example.com' ||\n        directAuthUser.email === 'admin@thedasboard.com' ||\n        directAuthUser.isAdmin === true ||\n        directAuthUser.role === 'admin');\n\n    if (!hasSupabaseAccess && !hasDirectAuthAccess) {\n      console.warn('[MasterAdminPage] Access denied - redirecting to login');\n      navigate('/', { replace: true });\n      return;\n    }\n\n    console.log('[MasterAdminPage] Access granted - loading page');\n    fetchUsers();\n    fetchDealerships();\n    fetchSignupRequests();\n  }, [user, navigate]);\n\n  // Initialize dealership entries when number changes\n  useEffect(() => {\n    if (newUser.role === 'group_dealer_admin') {\n      const currentDealerships = [...newUser.dealerships];\n      while (currentDealerships.length < newUser.numDealerships) {\n        currentDealerships.push({ name: '', manufacturer: '' });\n      }\n      while (currentDealerships.length > newUser.numDealerships) {\n        currentDealerships.pop();\n      }\n      setNewUser(prev => ({ ...prev, dealerships: currentDealerships }));\n    }\n  }, [newUser.numDealerships, newUser.role]);\n\n  const fetchUsers = async () => {\n    try {\n      console.log('[fetchUsers] Starting to fetch users...');\n      console.log('[fetchUsers] directSupabase client:', directSupabase);\n\n      // Test basic connectivity first\n      console.log('[fetchUsers] Testing database connectivity...');\n\n      // Fetch users using directSupabase - try with minimal columns first\n      console.log('[fetchUsers] Attempting to fetch profiles...');\n\n      const usersResult = await directSupabase.select('profiles', {\n        columns: 'id, email, name, role, created_at, dealership_id, phone',\n      });\n\n      console.log('[fetchUsers] Raw users result:', {\n        data: usersResult.data,\n        error: usersResult.error,\n        dataLength: usersResult.data?.length || 0,\n        dataType: typeof usersResult.data,\n        isArray: Array.isArray(usersResult.data),\n      });\n\n      if (usersResult.error) {\n        console.error('[fetchUsers] Users fetch error:', usersResult.error);\n        console.error('[fetchUsers] Error details:', {\n          message: usersResult.error.message,\n          details: usersResult.error.details,\n          hint: usersResult.error.hint,\n          code: usersResult.error.code,\n        });\n        setUsers([]);\n        return [];\n      }\n\n      const usersData = usersResult.data || [];\n      console.log('[fetchUsers] Users data received:', usersData.length, 'users');\n      console.log('[fetchUsers] Raw users data sample:', usersData.slice(0, 2));\n\n      // Debug role mapping\n      console.log('[fetchUsers] ===== ROLE MAPPING DEBUG =====');\n      usersData.forEach((user, index) => {\n        const mappedRole = mapLegacyRole(user.role);\n        console.log(\n          `[fetchUsers] User ${index + 1}: ${user.name} - Role: ${\n            user.role\n          } -> Mapped: ${mappedRole}`\n        );\n      });\n      console.log('[fetchUsers] ===== END ROLE MAPPING DEBUG =====');\n\n      // Count finance managers specifically\n      const financeManagers = usersData.filter(\n        u => mapLegacyRole(u.role) === 'single_finance_manager'\n      );\n      console.log('[fetchUsers] Finance managers found:', financeManagers.length);\n      financeManagers.forEach((fm, index) => {\n        console.log(\n          `[fetchUsers] Finance Manager ${index + 1}: ${fm.name} (${fm.email}) - Role: ${fm.role}`\n        );\n      });\n\n      if (usersData.length === 0) {\n        console.warn(\n          '[fetchUsers] No users found in database - this should not happen if there are 17 users'\n        );\n\n        // Try a different approach - simple query without columns specification\n        console.log('[fetchUsers] Trying alternative query method...');\n        try {\n          const alternativeResult = await directSupabase.select('profiles', {});\n          console.log('[fetchUsers] Alternative query result:', {\n            data: alternativeResult.data,\n            error: alternativeResult.error,\n            dataLength: alternativeResult.data?.length || 0,\n          });\n        } catch (altError) {\n          console.error('[fetchUsers] Alternative query also failed:', altError);\n        }\n\n        setUsers([]);\n        return [];\n      }\n\n      // Fetch dealerships for relationship\n      const dealershipsResult = await directSupabase.select('dealerships', {\n        columns: 'id, name',\n      });\n\n      console.log('[fetchUsers] Dealerships for relationships:', dealershipsResult.data?.length);\n\n      // Transform the data\n      const transformedData = usersData.map(user => ({\n        ...user,\n        dealership:\n          user.dealership_id && dealershipsResult.data\n            ? dealershipsResult.data.find(d => d.id === user.dealership_id) || null\n            : null,\n      }));\n\n      console.log('[fetchUsers] Transformed data:', transformedData.length, 'users');\n      console.log('[fetchUsers] First user sample:', transformedData[0]);\n\n      // Final check for finance managers after transformation\n      const finalFinanceManagers = transformedData.filter(\n        u => mapLegacyRole(u.role) === 'single_finance_manager'\n      );\n      console.log('[fetchUsers] Final finance managers count:', finalFinanceManagers.length);\n\n      setUsers(transformedData);\n      return transformedData;\n    } catch (err) {\n      console.error('[fetchUsers] Unexpected error:', err);\n      console.error('[fetchUsers] Error stack:', (err as Error)?.stack);\n      setUsers([]);\n      return [];\n    }\n  };\n\n  const fetchDealerships = async () => {\n    try {\n      console.log('[fetchDealerships] Starting to fetch dealerships...');\n\n      const result = await directSupabase.select('dealerships', {\n        columns: '*',\n        orderBy: { column: 'name', ascending: true },\n      });\n\n      if (result.error) throw result.error;\n\n      console.log('[fetchDealerships] Raw dealerships data:', result.data);\n\n      // Since the is_deleted column doesn't exist, show all dealerships\n      const dealershipsData = result.data || [];\n\n      console.log('[fetchDealerships] Dealerships loaded:', {\n        total: dealershipsData.length,\n      });\n\n      // For now, just show all dealerships since we don't have soft delete implemented in the schema\n      setDealerships(dealershipsData);\n    } catch (err) {\n      console.error('Error fetching dealerships:', err);\n      setError('Failed to fetch dealerships');\n    }\n  };\n\n  const fetchSignupRequests = async () => {\n    try {\n      console.log('[fetchSignupRequests] Starting to fetch signup requests...');\n\n      const result = await directSupabase.select('signup_requests', {\n        columns: '*',\n        orderBy: { column: 'created_at', ascending: false },\n      });\n\n      if (result.error) throw result.error;\n\n      console.log('[fetchSignupRequests] Signup requests data:', result.data);\n      setSignupRequests(result.data || []);\n    } catch (err) {\n      console.error('Error fetching signup requests:', err);\n      // Don't set error for this as the table might not exist yet\n      console.log('Signup requests table not available yet');\n    }\n  };\n\n  const generateTempPassword = () => {\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*';\n    let password = '';\n    for (let i = 0; i < 12; i++) {\n      password += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n    setNewUser({ ...newUser, tempPassword: password });\n  };\n\n  const handleRoleChange = (role: string) => {\n    setNewUser(prev => ({\n      ...prev,\n      role,\n      // Reset dealership/group specific fields when role changes\n      dealershipName: '',\n      location: '',\n      manufacturer: '',\n      groupName: '',\n      numDealerships: 2,\n      dealerships:\n        role === 'group_dealer_admin'\n          ? [\n              { name: '', manufacturer: '' },\n              { name: '', manufacturer: '' },\n            ]\n          : [],\n    }));\n  };\n\n  const updateDealershipEntry = (index: number, field: 'name' | 'manufacturer', value: string) => {\n    const updatedDealerships = [...newUser.dealerships];\n    updatedDealerships[index] = { ...updatedDealerships[index], [field]: value };\n    setNewUser(prev => ({ ...prev, dealerships: updatedDealerships }));\n  };\n\n  const createUser = async (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log('[createUser] Form submitted with data:', newUser);\n\n    setLoading(true);\n    setError('');\n    setSuccess('');\n\n    let isExistingUserUpdate = false; // Track if we're updating an existing user\n\n    try {\n      // Validate required fields - PHONE IS NOW REQUIRED\n      if (\n        !newUser.name ||\n        !newUser.email ||\n        !newUser.role ||\n        !newUser.tempPassword ||\n        !newUser.phone\n      ) {\n        throw new Error(\n          'Please fill in all required fields including phone number (required for 2FA)'\n        );\n      }\n\n      // Validate phone number format (basic validation)\n      const phoneRegex = /^[+]?[1-9][\\d]{0,15}$/;\n      if (!phoneRegex.test(newUser.phone.replace(/[\\s\\-()]/g, ''))) {\n        throw new Error('Please enter a valid phone number');\n      }\n\n      if (newUser.role === 'single_dealer_admin' && !newUser.dealershipName) {\n        throw new Error('Please enter a dealership name');\n      }\n\n      if (newUser.role === 'group_dealer_admin') {\n        if (!newUser.groupName) {\n          throw new Error('Please enter a dealer group name');\n        }\n\n        // Check if all dealership entries are filled\n        for (let i = 0; i < newUser.dealerships.length; i++) {\n          if (!newUser.dealerships[i].name || !newUser.dealerships[i].manufacturer) {\n            throw new Error(`Please fill in all dealership details for dealership ${i + 1}`);\n          }\n        }\n      }\n\n      // Check for duplicate dealership names (only active dealerships, not deleted ones)\n      if (newUser.role === 'single_dealer_admin') {\n        console.log('[createUser] Checking for duplicate dealership names...');\n        const duplicateCheck = await directSupabase.select('dealerships', {\n          columns: 'id, name',\n          filter: { name: newUser.dealershipName },\n        });\n\n        console.log('[createUser] Duplicate check result:', duplicateCheck);\n\n        if (duplicateCheck.error) {\n          console.error('[createUser] Duplicate check failed:', duplicateCheck.error);\n          // Don't fail the entire creation for duplicate check errors\n          console.warn(\n            '[createUser] Skipping duplicate check due to error, proceeding with creation'\n          );\n        } else if (duplicateCheck.data && duplicateCheck.data.length > 0) {\n          // Since we can't check is_deleted, just warn about potential duplicates\n          console.warn(\n            '[createUser] Found existing dealership with same name, but proceeding with creation'\n          );\n        }\n      }\n\n      if (newUser.role === 'group_dealer_admin') {\n        console.log('[createUser] Checking for duplicate dealer group names...');\n\n        // Fix the filters - remove is_deleted column since it doesn't exist\n        const duplicateCheck = await directSupabase.select('dealerships', {\n          columns: 'id, name, type',\n          filter: {\n            name: newUser.groupName,\n            type: 'group',\n          },\n        });\n\n        console.log('[createUser] Duplicate check result:', duplicateCheck);\n\n        if (duplicateCheck.error) {\n          console.error('[createUser] Duplicate check failed:', duplicateCheck.error);\n          // Don't fail the entire creation for duplicate check errors\n          console.warn(\n            '[createUser] Skipping duplicate check due to error, proceeding with creation'\n          );\n        } else if (duplicateCheck.data && duplicateCheck.data.length > 0) {\n          // Since we can't check is_deleted, just warn about potential duplicates\n          console.warn(\n            '[createUser] Found existing dealer group with same name, but proceeding with creation'\n          );\n        }\n      }\n\n      console.log('[createUser] Validation passed, proceeding with creation');\n\n      let dealershipId = null;\n      let tenantSchemaName = null;\n\n      // Create dealership or dealer group first if needed\n      if (newUser.role === 'single_dealer_admin') {\n        console.log('[createUser] Creating single dealership with schema');\n\n        // Generate unique schema name\n        const timestamp = Date.now();\n        const sanitizedName = newUser.dealershipName.toLowerCase().replace(/[^a-z0-9]/g, '_');\n        tenantSchemaName = `dealership_${sanitizedName}_${timestamp}`;\n\n        console.log('[createUser] Creating schema:', tenantSchemaName);\n\n        // Create tenant schema (schema creation handled by backend/migrations)\n        console.log('[createUser] About to create tenant schema');\n        await createTenantSchema(tenantSchemaName, false);\n        console.log('[createUser] Tenant schema creation completed');\n\n        // Create single dealership record with minimal data\n        console.log('[createUser] About to create dealership record in database');\n\n        const dealershipData: any = {\n          name: newUser.dealershipName,\n          type: 'single',\n          schema_name: tenantSchemaName,\n          // Minimal placeholder - dealer admin will configure actual hours in their dashboard\n          store_hours: {\n            status: 'not_configured',\n            note: 'Store hours to be configured by dealer admin',\n          },\n          num_teams: 1,\n          subscription_tier: 'base',\n        };\n\n        // Add optional fields if provided\n        if (newUser.manufacturer) {\n          dealershipData.manufacturer = newUser.manufacturer;\n        }\n\n        if (newUser.location) {\n          // Convert location string to locations array format\n          dealershipData.locations = [\n            {\n              name: 'Main Location',\n              address: newUser.location,\n              city: '',\n              state: '',\n              zip: '',\n              phone: '',\n            },\n          ];\n        }\n\n        console.log('[createUser] Dealership insert data (minimal):', dealershipData);\n\n        try {\n          console.log('[createUser] Starting dealership creation...');\n          const dealershipResponse = await directSupabase.insert('dealerships', dealershipData);\n\n          console.log('[createUser] Dealership creation response:', {\n            dealershipData: dealershipResponse.data,\n            dealershipError: dealershipResponse.error,\n          });\n\n          if (dealershipResponse.error) {\n            console.error('[createUser] Dealership creation error:', dealershipResponse.error);\n            throw new Error(`Failed to create dealership: ${dealershipResponse.error.message}`);\n          }\n          dealershipId = dealershipResponse.data.id;\n          console.log(\n            '[createUser] Single dealership created with ID:',\n            dealershipId,\n            'Schema:',\n            tenantSchemaName\n          );\n        } catch (dealershipCreationError) {\n          console.error('[createUser] Dealership creation failed:', dealershipCreationError);\n          throw new Error(\n            `Failed to create dealership: ${\n              (dealershipCreationError as Error)?.message || 'Unknown error'\n            }`\n          );\n        }\n      } else if (newUser.role === 'group_dealer_admin') {\n        console.log('[createUser] Creating dealer group with schema');\n\n        // Generate unique schema name for the group\n        const timestamp = Date.now();\n        const sanitizedName = newUser.groupName.toLowerCase().replace(/[^a-z0-9]/g, '_');\n        tenantSchemaName = `dealer_group_${sanitizedName}_${timestamp}`;\n\n        console.log('[createUser] Creating group schema:', tenantSchemaName);\n\n        // Create tenant schema for dealer group (schema creation handled by backend/migrations)\n        console.log('[createUser] About to create dealer group tenant schema');\n        await createTenantSchema(tenantSchemaName, true);\n        console.log('[createUser] Dealer group tenant schema creation completed');\n\n        // Create dealer group record in public schema with minimal data\n        console.log('[createUser] About to create dealer group record in database');\n\n        try {\n          console.log('[createUser] Starting dealer group creation...');\n\n          // Try with just the most basic fields first using directSupabase\n          console.log('[createUser] Step 1: Basic insert with just name and type');\n          const basicInsert = await directSupabase.insert('dealerships', {\n            name: newUser.groupName,\n            type: 'group',\n            // Minimal placeholder - dealer admin will configure actual hours in their dashboard\n            store_hours: {\n              status: 'not_configured',\n              note: 'Store hours to be configured by dealer admin',\n            },\n            num_teams: newUser.numDealerships || 1,\n            subscription_tier: 'base',\n            schema_name: tenantSchemaName,\n          });\n\n          console.log('[createUser] Basic insert result:', basicInsert);\n\n          if (basicInsert.error) {\n            throw new Error(`Basic insert failed: ${basicInsert.error.message}`);\n          }\n\n          dealershipId = basicInsert.data.id;\n          console.log(\n            '[createUser] ✅ Dealer group created successfully with ID:',\n            dealershipId,\n            'Schema:',\n            tenantSchemaName\n          );\n\n          console.log('[createUser] Dealer group creation completed successfully');\n\n          // Step 2: Try to update with schema_name\n          console.log('[createUser] Step 2: Adding schema_name');\n          const updateSchema = await directSupabase.update(\n            'dealerships',\n            { schema_name: tenantSchemaName },\n            { id: dealershipId }\n          );\n\n          console.log('[createUser] Schema update result:', updateSchema);\n\n          if (updateSchema.error) {\n            console.warn('[createUser] Schema update failed:', updateSchema.error);\n            // Don't fail the entire process for this\n          } else {\n            console.log('[createUser] Step 2 SUCCESS - Schema name added');\n          }\n\n          // Step 3: Try to update with num_teams\n          console.log('[createUser] Step 3: Adding num_teams');\n          const updateTeams = await directSupabase.update(\n            'dealerships',\n            { num_teams: newUser.numDealerships || 1 },\n            { id: dealershipId }\n          );\n\n          console.log('[createUser] Teams update result:', updateTeams);\n\n          if (updateTeams.error) {\n            console.warn('[createUser] Teams update failed:', updateTeams.error);\n            // Don't fail the entire process for this\n          } else {\n            console.log('[createUser] Step 3 SUCCESS - Team count added');\n          }\n        } catch (dealerGroupError) {\n          console.error('[createUser] Dealer group creation failed:', dealerGroupError);\n          throw new Error(\n            `Failed to create dealer group: ${\n              (dealerGroupError as Error)?.message || 'Unknown error'\n            }`\n          );\n        }\n      }\n\n      console.log('[createUser] Creating user with Supabase auth');\n      console.log('[createUser] Auth signup payload:', {\n        email: newUser.email,\n        password: '[REDACTED]',\n        metadata: {\n          name: newUser.name,\n          role: newUser.role,\n          phone: newUser.phone,\n          dealership_id: dealershipId,\n          tenant_schema: tenantSchemaName,\n        },\n      });\n\n      // Create user with Supabase auth\n      console.log('[createUser] Starting auth signup...');\n      let authData: any;\n\n      try {\n        const response = await supabase.auth.signUp({\n          email: newUser.email,\n          password: newUser.tempPassword,\n          options: {\n            data: {\n              name: newUser.name,\n              role: newUser.role,\n              phone: newUser.phone,\n              dealership_id: dealershipId,\n              tenant_schema: tenantSchemaName,\n            },\n          },\n        });\n\n        authData = response.data;\n        const authError = response.error;\n\n        console.log('[createUser] Auth signup completed:', {\n          userId: authData?.user?.id,\n          error: authError,\n        });\n\n        if (authError) {\n          console.error('[createUser] Auth creation error:', authError);\n\n          // Check if it's just a \"user already registered\" error\n          if (authError.message?.includes('User already registered')) {\n            console.log('[createUser] User already exists in auth, checking if profile exists...');\n            isExistingUserUpdate = true; // Mark this as an update\n\n            // Check if a profile already exists for this email using directSupabase\n            try {\n              console.log('[createUser] Checking for existing profile with directSupabase...');\n              const profileCheckResult = await directSupabase.select('profiles', {\n                columns: 'id, email, name, role, dealership_id',\n                filter: { email: newUser.email },\n              });\n\n              console.log('[createUser] Profile check result:', profileCheckResult);\n\n              if (profileCheckResult.error) {\n                console.error('[createUser] Profile check error:', profileCheckResult.error);\n                // If profile check fails, try to continue with user creation anyway\n                console.warn(\n                  '[createUser] Profile check failed, but continuing with user creation'\n                );\n              }\n\n              const existingProfile = profileCheckResult.data?.[0];\n\n              if (existingProfile) {\n                console.log('[createUser] Found existing profile for user:', existingProfile.id);\n\n                // Check if this user needs to be updated with new role/dealership\n                if (\n                  existingProfile.role !== newUser.role ||\n                  existingProfile.dealership_id !== dealershipId\n                ) {\n                  console.log(\n                    `[createUser] Updating existing user role from ${existingProfile.role} to ${newUser.role}`\n                  );\n\n                  // Convert UI role to database-compatible role for existing profile update\n                  const databaseRole = mapUIRoleToDatabase(newUser.role);\n                  console.log(\n                    `[createUser] Converting update role: ${newUser.role} -> ${databaseRole}`\n                  );\n\n                  const updateResult = await directSupabase.update(\n                    'profiles',\n                    {\n                      role: databaseRole, // Use database-compatible role\n                      dealership_id: dealershipId,\n                      name: newUser.name,\n                      phone: newUser.phone,\n                    },\n                    { id: existingProfile.id }\n                  );\n\n                  if (updateResult.error) {\n                    console.error(\n                      '[createUser] Failed to update existing profile:',\n                      updateResult.error\n                    );\n                    // Don't throw here - continue with creation\n                    console.warn('[createUser] Profile update failed, but continuing');\n                  } else {\n                    console.log('[createUser] Existing user profile updated successfully');\n                  }\n                }\n\n                // Use the existing profile ID for admin assignment\n                authData = {\n                  user: {\n                    id: existingProfile.id,\n                    email: existingProfile.email,\n                  },\n                  session: null,\n                };\n              } else {\n                console.warn(\n                  '[createUser] User exists in auth but no profile found - will create profile'\n                );\n\n                // First, let's check if a profile actually exists by searching more broadly\n                console.log('[createUser] Searching for existing profile by email...');\n                try {\n                  // Use directSupabase which should have better privileges than regular supabase\n                  const existingUserResult = await directSupabase.select('profiles', {\n                    columns: 'id, email, name, role',\n                    filter: { email: newUser.email },\n                  });\n\n                  if (existingUserResult.data && existingUserResult.data.length > 0) {\n                    const existingProfile = existingUserResult.data[0];\n                    console.log('[createUser] Found existing profile:', existingProfile);\n\n                    // Use the existing profile ID\n                    authData = {\n                      user: {\n                        id: existingProfile.id,\n                        email: existingProfile.email,\n                      },\n                      session: null,\n                    };\n\n                    console.log('[createUser] Using existing profile ID:', existingProfile.id);\n                    isExistingUserUpdate = true;\n\n                    // Update the existing profile if needed\n                    const databaseRole = mapUIRoleToDatabase(newUser.role);\n                    if (\n                      existingProfile.role !== databaseRole ||\n                      existingProfile.name !== newUser.name\n                    ) {\n                      console.log('[createUser] Updating existing profile...');\n                      const updateResult = await directSupabase.update(\n                        'profiles',\n                        {\n                          role: databaseRole,\n                          name: newUser.name,\n                          phone: newUser.phone,\n                          dealership_id: dealershipId,\n                        },\n                        { id: existingProfile.id }\n                      );\n\n                      if (updateResult.error) {\n                        console.error(\n                          '[createUser] Failed to update existing profile:',\n                          updateResult.error\n                        );\n                      } else {\n                        console.log('[createUser] Successfully updated existing profile');\n                      }\n                    }\n                  } else {\n                    // No profile found, we need to get the real auth user ID\n                    console.log('[createUser] No profile found, attempting to get auth user ID...');\n\n                    // Try to use Supabase admin API to get the user by email\n                    try {\n                      // Since we can't access admin.listUsers from client, we'll skip the sign-in approach\n                      // and instead return a null ID to handle this case later\n                      console.log(\n                        '[createUser] Cannot retrieve auth user ID from client - profile will be skipped'\n                      );\n                      authData = {\n                        user: null,\n                        session: null,\n                      };\n                    } catch (adminError) {\n                      console.error('[createUser] Admin API not accessible:', adminError);\n                      authData = {\n                        user: null,\n                        session: null,\n                      };\n                    }\n                  }\n                } catch (profileSearchError) {\n                  console.error(\n                    '[createUser] Error searching for existing profile:',\n                    profileSearchError\n                  );\n                  authData = {\n                    user: null,\n                    session: null,\n                  };\n                }\n\n                isExistingUserUpdate = true;\n              }\n            } catch (profileError) {\n              console.error('[createUser] Error during profile handling:', profileError);\n              // Don't throw here - continue with creation process\n              console.warn(\n                '[createUser] Profile handling failed, but continuing with user creation'\n              );\n              authData = {\n                user: null, // Use null instead of fake ID\n                session: null,\n              };\n              isExistingUserUpdate = true;\n            }\n          } else {\n            // For other auth errors, still don't throw immediately - log and continue\n            console.error('[createUser] Non-duplicate auth error:', authError);\n            console.warn(\n              '[createUser] Auth error occurred, but attempting to continue with user creation'\n            );\n\n            // Create fallback auth data\n            authData = {\n              user: null, // Use null instead of fake ID\n              session: null,\n            };\n          }\n        }\n\n        console.log('[createUser] User created with auth ID:', authData.user?.id);\n\n        // Create profile entry in public schema only if we have a valid user ID and it's not an existing profile update\n        if (authData.user?.id && !isExistingUserUpdate) {\n          console.log('[createUser] Creating new profile entry');\n\n          // Convert UI role to database-compatible role\n          const databaseRole = mapUIRoleToDatabase(newUser.role);\n          console.log(`[createUser] Converting role: ${newUser.role} -> ${databaseRole}`);\n\n          // Try directSupabase first to avoid RLS issues\n          const profileResult = await directSupabase.insert('profiles', {\n            id: authData.user.id,\n            email: newUser.email,\n            name: newUser.name,\n            role: databaseRole, // Use database-compatible role\n            phone: newUser.phone,\n            dealership_id: dealershipId,\n          });\n\n          if (profileResult.error) {\n            console.error('[createUser] Profile creation error:', profileResult.error);\n            console.log(\n              '[createUser] Attempting profile creation with regular supabase as fallback...'\n            );\n\n            // Fallback to regular supabase upsert if directSupabase fails\n            const { data: profileData, error: profileError } = await supabase\n              .from('profiles')\n              .upsert({\n                id: authData.user.id,\n                email: newUser.email,\n                name: newUser.name,\n                role: databaseRole, // Use database-compatible role\n                phone: newUser.phone,\n                dealership_id: dealershipId,\n              })\n              .select()\n              .single();\n\n            if (profileError) {\n              console.error('[createUser] Fallback profile creation also failed:', profileError);\n              // Don't throw error here - continue with user creation even if profile fails\n              console.warn(\n                '[createUser] Profile creation failed, but continuing with user creation'\n              );\n            } else {\n              console.log('[createUser] Profile created successfully via fallback:', profileData);\n            }\n          } else {\n            console.log(\n              '[createUser] Profile created successfully via directSupabase:',\n              profileResult.data\n            );\n          }\n        } else if (isExistingUserUpdate) {\n          console.log(\n            '[createUser] Skipping profile creation - existing profile was already updated'\n          );\n        } else {\n          console.log('[createUser] Skipping profile creation - no valid auth user ID available');\n          console.log(\n            '[createUser] This happens when user already exists in auth but we cannot retrieve their ID'\n          );\n        }\n\n        // Create user entry in tenant schema (if we have one)\n        if (tenantSchemaName) {\n          console.log('[createUser] Tenant schema created:', tenantSchemaName);\n          console.log(\n            '[createUser] User will be added to tenant schema via backend migration system'\n          );\n          // In production, trigger backend API to add user to tenant schema\n        }\n\n        // Update dealership with admin user ID (only if we have a valid user ID)\n        let finalUserId = authData.user?.id;\n\n        // If auth creation failed but we still need to link the admin, try to find the user by email\n        if (dealershipId && !finalUserId) {\n          console.log('[createUser] Auth user ID not available, searching for user by email...');\n          try {\n            const existingUserResult = await directSupabase.select('profiles', {\n              columns: 'id, email, name',\n              filter: { email: newUser.email },\n            });\n\n            if (existingUserResult.data && existingUserResult.data.length > 0) {\n              finalUserId = existingUserResult.data[0].id;\n              console.log('[createUser] Found existing user ID by email:', finalUserId);\n            }\n          } catch (searchError) {\n            console.error('[createUser] Error searching for user by email:', searchError);\n          }\n        }\n\n        if (dealershipId && finalUserId) {\n          console.log('[createUser] Updating dealership with admin user ID:', finalUserId);\n          const updateResult = await directSupabase.update(\n            'dealerships',\n            { admin_user_id: finalUserId },\n            { id: dealershipId }\n          );\n\n          if (updateResult.error) {\n            console.error('[createUser] Dealership update error:', updateResult.error);\n            // Don't throw - just log the error\n            console.warn(\n              '[createUser] Failed to update dealership with admin user ID, but continuing'\n            );\n          } else {\n            console.log('[createUser] ✅ Dealership updated with admin user ID successfully');\n\n            // Verify the update worked and log detailed information\n            const verifyResult = await directSupabase.select('dealerships', {\n              columns: 'id, name, admin_user_id',\n              filter: { id: dealershipId },\n            });\n\n            if (verifyResult.data && verifyResult.data.length > 0) {\n              console.log(\n                '[createUser] ✅ Verification - Dealership admin_user_id:',\n                verifyResult.data[0].admin_user_id\n              );\n              console.log('[createUser] ✅ This admin should now appear in dealership details!');\n            }\n          }\n        } else if (dealershipId && !finalUserId) {\n          console.warn(\n            '[createUser] ⚠️ Could not assign admin to dealership - no valid user ID available'\n          );\n          console.warn('[createUser] This means admin details will not show in dealership view');\n          console.warn('[createUser] To fix: manually assign admin in Master Admin interface');\n        }\n\n        // Send temporary password email to the new user (only for new users, not updates)\n        if (!isExistingUserUpdate) {\n          try {\n            console.log('[createUser] Sending temporary password email');\n            await fetch('/.netlify/functions/send-emails', {\n              method: 'POST',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify({\n                type: 'temp_password',\n                data: {\n                  name: newUser.name,\n                  email: newUser.email,\n                  tempPassword: newUser.tempPassword,\n                  role: allRoles.find(r => r.value === newUser.role)?.label || newUser.role,\n                  tenantSchema: tenantSchemaName,\n                },\n              }),\n            });\n            console.log('[createUser] Temporary password email sent to:', newUser.email);\n\n            // ✅ LOGIN INSTRUCTIONS:\n            // After user creation, the user can login with:\n            // - Email: newUser.email\n            // - Password: newUser.tempPassword\n            //\n            // Upon successful login, they will be redirected to their role-specific dashboard:\n            // - master_admin: /master-admin\n            // - single_dealer_admin: /admin-dashboard\n            // - group_dealer_admin: /group-admin\n            // - finance_manager: /finance-dashboard\n            // - sales_manager: /sales-manager-dashboard\n            // - gm: /gm-dashboard\n            // - sales_person: /sales-dashboard\n            //\n            // The user's role and dealership_id determine their access level and features.\n            console.log(\n              `[createUser] 🔑 User can now login with email: ${newUser.email} and the generated password`\n            );\n          } catch (emailError) {\n            console.warn('[createUser] Failed to send temporary password email:', emailError);\n            // Don't fail the user creation if email fails\n          }\n        } else {\n          console.log('[createUser] Skipping password email for existing user update');\n        }\n\n        const roleLabel = allRoles.find(r => r.value === newUser.role)?.label || newUser.role;\n\n        // Use the tracking variable we set earlier\n        const actionText = isExistingUserUpdate ? 'updated' : 'created';\n\n        // Clear any previous errors\n        setError('');\n\n        // Customize success message based on what was actually created/updated\n        let successMessage = '';\n\n        if (dealershipId && !authData.user?.id) {\n          // Dealership created but user already exists in auth\n          const entityType = newUser.role === 'group_dealer_admin' ? 'Dealer group' : 'Dealership';\n          const entityName =\n            newUser.role === 'group_dealer_admin' ? newUser.groupName : newUser.dealershipName;\n          successMessage = `✅ ${entityType} \"${entityName}\" created successfully! Note: User ${newUser.email} already exists in the system. Please have them login with their existing password.`;\n        } else if (isExistingUserUpdate && authData.user?.id) {\n          // Existing user updated\n          successMessage = `✅ ${roleLabel} updated successfully! User profile updated.`;\n        } else {\n          // New user created\n          successMessage = `✅ ${roleLabel} created successfully! Temporary password email sent to ${newUser.email}.`;\n        }\n\n        if (tenantSchemaName) {\n          successMessage += ` Tenant schema: ${tenantSchemaName}`;\n        }\n\n        setSuccess(successMessage);\n        console.log('[createUser] User creation completed successfully');\n\n        // Reset form\n        setNewUser({\n          name: '',\n          email: '',\n          role: '',\n          tempPassword: '',\n          phone: '',\n          dealershipName: '',\n          location: '',\n          manufacturer: '',\n          groupName: '',\n          numDealerships: 2,\n          dealerships: [],\n        });\n\n        // Refresh data to show the new/updated user\n        console.log('[createUser] Starting data refresh...');\n        try {\n          await Promise.all([fetchUsers(), fetchDealerships()]);\n          console.log('[createUser] Data refresh completed successfully');\n        } catch (refreshError) {\n          console.error('[createUser] Data refresh failed:', refreshError);\n          // Don't fail the entire operation if refresh fails\n          console.warn('[createUser] Continuing despite refresh failure');\n        }\n\n        console.log('[createUser] Process completed successfully - resetting loading state');\n\n        // Navigate back to overview after a brief delay to show success message\n        setTimeout(() => {\n          console.log('[createUser] Navigating back to overview tab');\n          handleTabChange('overview');\n        }, 2000); // 2 second delay to show success message\n      } catch (authSignupError) {\n        console.error('[createUser] Auth signup failed:', authSignupError);\n        // Convert to a more user-friendly error message\n        const errorMessage = (authSignupError as Error)?.message || 'Failed to create user account';\n        setError(`User creation failed: ${errorMessage}`);\n        console.log('[createUser] Error occurred - resetting loading state');\n      }\n    } catch (err: any) {\n      console.error('[createUser] Error occurred:', err);\n      setError(err.message || 'Failed to create user');\n    } finally {\n      // Always reset loading state\n      setLoading(false);\n      console.log('[createUser] Function completed, loading state reset');\n    }\n  };\n\n  const updateUserRole = async (userId: string, newRole: string) => {\n    try {\n      const result = await directSupabase.update('profiles', { role: newRole }, { id: userId });\n\n      if (result.error) throw result.error;\n\n      setSuccess('User role updated successfully!');\n      fetchUsers();\n    } catch (err: any) {\n      setError(err.message || 'Failed to update user role');\n    }\n  };\n\n  const accessUserAccount = (userId: string, userEmail: string, userRole: string) => {\n    // Store admin access info in localStorage for the target user's dashboard\n    localStorage.setItem('adminAccessMode', 'true');\n    localStorage.setItem('adminAccessUserId', userId);\n    localStorage.setItem('adminAccessUserEmail', userEmail);\n    localStorage.setItem('adminReturnUrl', '/master-admin');\n\n    // Get the appropriate dashboard URL for this user's role\n    const dashboardUrl = getDashboardUrl(userRole);\n\n    // Navigate to the user's appropriate dashboard\n    window.open(dashboardUrl, '_blank');\n  };\n\n  const approveSignupRequest = async (requestId: string) => {\n    try {\n      const result = await directSupabase.update(\n        'signup_requests',\n        { status: 'approved' },\n        { id: requestId }\n      );\n\n      if (result.error) throw result.error;\n\n      setSuccess('Signup request approved!');\n      fetchSignupRequests();\n    } catch (err: any) {\n      setError(err.message || 'Failed to approve signup request');\n    }\n  };\n\n  const rejectSignupRequest = async (requestId: string) => {\n    try {\n      const result = await directSupabase.update(\n        'signup_requests',\n        { status: 'rejected' },\n        { id: requestId }\n      );\n\n      if (result.error) throw result.error;\n\n      setSuccess('Signup request rejected!');\n      fetchSignupRequests();\n    } catch (err: any) {\n      setError(err.message || 'Failed to reject signup request');\n    }\n  };\n\n  // Function to get the appropriate dashboard URL for a user\n  const getDashboardUrl = (userRole: string) => {\n    const role = allRoles.find(r => r.value === userRole);\n    return role?.dashboard || '/dashboard';\n  };\n\n  // New functions for view/edit/delete functionality\n  const viewDealershipDetails = async (dealership: Dealership) => {\n    console.log('[viewDealershipDetails] ===== START DETAILED DEBUG =====');\n    console.log('[viewDealershipDetails] Dealership data:', dealership);\n    console.log('[viewDealershipDetails] Dealership type:', dealership.type);\n    console.log('[viewDealershipDetails] Admin user ID:', dealership.admin_user_id);\n\n    // Calculate monthly cost first\n    const monthlyCost = calculateMonthlyCost(dealership);\n    console.log('[viewDealershipDetails] Calculated monthly cost:', monthlyCost);\n\n    // Directly query admin details instead of relying on users array\n    let adminDetails: any = {};\n    if (dealership.admin_user_id) {\n      console.log(\n        '[viewDealershipDetails] Querying admin details for ID:',\n        dealership.admin_user_id\n      );\n\n      try {\n        const adminResult = await directSupabase.select('profiles', {\n          columns: 'id, name, email, phone, role',\n          filter: { id: dealership.admin_user_id },\n        });\n\n        console.log('[viewDealershipDetails] Admin query result:', adminResult);\n\n        if (adminResult.data && adminResult.data.length > 0) {\n          const adminUser = adminResult.data[0];\n          console.log('[viewDealershipDetails] Found admin user:', adminUser);\n\n          adminDetails = {\n            admin_name: adminUser.name || 'Name not provided',\n            admin_email: adminUser.email || 'Email not provided',\n            admin_phone: adminUser.phone || 'Phone not provided',\n            admin_role: adminUser.role || 'Role not specified',\n          };\n\n          console.log('[viewDealershipDetails] ✅ Admin details populated:', adminDetails);\n        } else {\n          console.log('[viewDealershipDetails] ❌ No admin user found in database');\n          adminDetails = {\n            admin_name: 'No admin found',\n            admin_email: 'No admin found',\n            admin_phone: 'No admin found',\n            admin_role: 'No admin found',\n          };\n        }\n      } catch (error) {\n        console.error('[viewDealershipDetails] ❌ Error querying admin details:', error);\n        adminDetails = {\n          admin_name: 'Error loading admin',\n          admin_email: 'Error loading admin',\n          admin_phone: 'Error loading admin',\n          admin_role: 'Error loading admin',\n        };\n      }\n    } else {\n      console.log('[viewDealershipDetails] ❌ No admin_user_id provided');\n      adminDetails = {\n        admin_name: 'No admin assigned',\n        admin_email: 'No admin assigned',\n        admin_phone: 'No admin assigned',\n        admin_role: 'No admin assigned',\n      };\n    }\n\n    console.log('[viewDealershipDetails] Final admin details object:', adminDetails);\n\n    // Initialize individual dealer data for groups\n    let dealerGroupDetails: any = {};\n    if (dealership.type === 'group') {\n      console.log(\n        '[viewDealershipDetails] Processing dealer group with num_teams:',\n        dealership.num_teams\n      );\n\n      // Check if we have stored individual dealer data in metadata\n      const storedDealers = dealership.metadata?.individual_dealers;\n      console.log('[viewDealershipDetails] Stored individual dealers:', storedDealers);\n\n      // Calculate individual dealer revenues for transparency\n      const individualDealerRevenues = [];\n\n      for (let i = 0; i < (dealership.num_teams || 1); i++) {\n        const dealerKey = `dealer_${i}`;\n        const storedDealer = storedDealers?.[i];\n\n        // Use stored data if available, otherwise use defaults\n        dealerGroupDetails[`${dealerKey}_name`] =\n          storedDealer?.name || `${dealership.name} - Location ${i + 1}`;\n        dealerGroupDetails[`${dealerKey}_manufacturer`] =\n          storedDealer?.manufacturer || dealership.manufacturer || '';\n        dealerGroupDetails[`${dealerKey}_tier`] =\n          storedDealer?.subscription_tier || dealership.subscription_tier || 'base';\n        dealerGroupDetails[`${dealerKey}_brands`] = storedDealer?.brands\n          ? storedDealer.brands.join(', ')\n          : Array.isArray(dealership.brands)\n          ? dealership.brands.join(', ')\n          : '';\n\n        // Calculate individual dealer revenue\n        const dealerTier =\n          storedDealer?.subscription_tier || dealership.subscription_tier || 'base';\n        let dealerCost = 250; // Use single dealership pricing for consistency\n\n        if (dealerTier === 'plus') dealerCost = 350; // Single dealership plus pricing\n        else if (dealerTier === 'premium') dealerCost = 750; // Single dealership premium pricing\n\n        individualDealerRevenues.push({\n          name: dealerGroupDetails[`${dealerKey}_name`],\n          tier: dealerTier,\n          cost: dealerCost,\n        });\n      }\n\n      dealerGroupDetails = {\n        group_name: dealership.name,\n        num_dealers: dealership.num_teams || 1,\n        total_monthly_revenue: monthlyCost, // Add total revenue for verification\n        individual_dealer_revenues: individualDealerRevenues, // Add individual revenues for transparency\n        ...dealerGroupDetails,\n      };\n    }\n\n    const finalEditData = {\n      id: dealership.id,\n      name: dealership.name,\n      type: dealership.type,\n      store_hours: dealership.store_hours || '',\n      num_teams: dealership.num_teams || 1,\n      admin_user_id: dealership.admin_user_id || 'none',\n      subscription_tier: dealership.subscription_tier || 'base',\n      monthly_cost: monthlyCost,\n      schema_name: dealership.schema_name || '',\n      // Admin details for display\n      ...adminDetails,\n      // Dealer group details if applicable\n      ...dealerGroupDetails,\n    };\n\n    console.log('[viewDealershipDetails] Final edit data being set:', finalEditData);\n    console.log('[viewDealershipDetails] ===== FINAL EDIT DATA ADMIN FIELDS =====');\n    console.log('[viewDealershipDetails] finalEditData.admin_name:', finalEditData.admin_name);\n    console.log('[viewDealershipDetails] finalEditData.admin_email:', finalEditData.admin_email);\n    console.log('[viewDealershipDetails] finalEditData.admin_phone:', finalEditData.admin_phone);\n    console.log('[viewDealershipDetails] Type of admin_name:', typeof finalEditData.admin_name);\n    console.log('[viewDealershipDetails] Type of admin_email:', typeof finalEditData.admin_email);\n    console.log('[viewDealershipDetails] Type of admin_phone:', typeof finalEditData.admin_phone);\n    console.log('[viewDealershipDetails] ===== END FINAL EDIT DATA DEBUG =====');\n    console.log('[viewDealershipDetails] Specifically checking admin fields in editData:', {\n      admin_name: finalEditData.admin_name,\n      admin_email: finalEditData.admin_email,\n      admin_phone: finalEditData.admin_phone,\n    });\n\n    setSelectedDealership(dealership);\n    setEditData(finalEditData);\n    setEditMode(false);\n    setDialogLoading(true);\n\n    // Load available admins AFTER setting the dialog data but BEFORE opening the dialog\n    console.log('[viewDealershipDetails] Loading available admins...');\n\n    // Use a shorter timeout and better error handling\n    const adminLoadingTimeout = setTimeout(() => {\n      console.warn('[viewDealershipDetails] Admin loading timed out, opening dialog anyway');\n      setAvailableAdmins([]);\n      setDialogLoading(false);\n      setShowEditDialog(true);\n    }, 3000); // Reduced timeout to 3 seconds\n\n    try {\n      // Try a simple direct query without the complex timeout logic\n      console.log('[viewDealershipDetails] Attempting direct admin query...');\n      const { data: adminUsers, error: adminError } = await supabase\n        .from('profiles')\n        .select('id, name, email, role')\n        .in('role', [\n          'single_dealer_admin',\n          'group_dealer_admin',\n          'admin',\n          'dealership_admin',\n          'general_manager',\n        ])\n        .limit(20);\n\n      clearTimeout(adminLoadingTimeout);\n\n      if (adminError) {\n        console.error('[viewDealershipDetails] Admin query error:', adminError);\n        setAvailableAdmins([]);\n      } else {\n        console.log('[viewDealershipDetails] Admin users found:', adminUsers?.length || 0);\n        setAvailableAdmins(\n          (adminUsers || []).map((admin: any) => ({\n            ...admin,\n            created_at: (admin as any).created_at || new Date().toISOString(),\n            dealership_id: (admin as any).dealership_id || null,\n          }))\n        );\n      }\n\n      setDialogLoading(false);\n      setShowEditDialog(true);\n      console.log('[viewDealershipDetails] Dialog opened successfully');\n    } catch (error) {\n      clearTimeout(adminLoadingTimeout);\n      console.error('[viewDealershipDetails] Error loading available admins:', error);\n      setAvailableAdmins([]);\n      setDialogLoading(false);\n      setShowEditDialog(true);\n      console.log('[viewDealershipDetails] Dialog opened with empty admins due to error');\n    }\n  };\n\n  const viewUserDetails = async (user: User) => {\n    setSelectedUser(user);\n    setEditData({\n      name: user.name,\n      email: user.email,\n      role: user.role,\n      phone: user.phone || '',\n      dealership_id: user.dealership_id ? user.dealership_id.toString() : 'none',\n    });\n    setEditMode(false);\n    setDialogLoading(true);\n\n    // Load available admins for the dropdown\n    try {\n      const admins = await getAvailableAdmins();\n      setAvailableAdmins(admins);\n      setDialogLoading(false);\n      setShowEditDialog(true);\n    } catch (error) {\n      console.error('Error loading available admins:', error);\n      setAvailableAdmins([]);\n      setDialogLoading(false);\n      setShowEditDialog(true);\n    }\n  };\n\n  const handleEdit = () => {\n    console.log('[handleEdit] Setting edit mode to true');\n    console.log('[handleEdit] Current editMode state:', editMode);\n    setEditMode(true);\n    console.log('[handleEdit] Edit mode state should now be true');\n\n    // Force a small delay to ensure state update\n    setTimeout(() => {\n      console.log('[handleEdit] Delayed check - editMode should be true:', editMode);\n    }, 100);\n  };\n\n  const handleCancelEdit = () => {\n    setEditMode(false);\n    if (selectedDealership) {\n      // Directly query admin details instead of relying on users array\n      const refreshAdminDetails = async () => {\n        let adminUser = null;\n        if (selectedDealership.admin_user_id) {\n          try {\n            const adminResult = await directSupabase.select('profiles', {\n              columns: 'id, name, email, phone, role',\n              filter: { id: selectedDealership.admin_user_id },\n            });\n\n            if (adminResult.data && adminResult.data.length > 0) {\n              adminUser = adminResult.data[0];\n            }\n          } catch (error) {\n            console.error('Error refreshing admin details:', error);\n          }\n        }\n\n        const monthlyCost = calculateMonthlyCost(selectedDealership);\n\n        // Initialize individual dealer data\n        let dealerGroupDetails: any = {};\n        if (selectedDealership.type === 'group') {\n          // Check if we have stored individual dealer data in metadata\n          const storedDealers = selectedDealership.metadata?.individual_dealers;\n\n          for (let i = 0; i < (selectedDealership.num_teams || 1); i++) {\n            const dealerKey = `dealer_${i}`;\n            const storedDealer = storedDealers?.[i];\n\n            // Use stored data if available, otherwise use defaults\n            dealerGroupDetails[`${dealerKey}_name`] =\n              storedDealer?.name || `${selectedDealership.name} - Location ${i + 1}`;\n            dealerGroupDetails[`${dealerKey}_manufacturer`] =\n              storedDealer?.manufacturer || selectedDealership.manufacturer || '';\n            dealerGroupDetails[`${dealerKey}_tier`] =\n              storedDealer?.subscription_tier || selectedDealership.subscription_tier || 'base';\n            dealerGroupDetails[`${dealerKey}_brands`] = storedDealer?.brands\n              ? storedDealer.brands.join(', ')\n              : Array.isArray(selectedDealership.brands)\n              ? selectedDealership.brands.join(', ')\n              : '';\n          }\n        }\n\n        setEditData({\n          id: selectedDealership.id,\n          name: selectedDealership.name,\n          type: selectedDealership.type,\n          store_hours: selectedDealership.store_hours || '',\n          num_teams: selectedDealership.num_teams || 1,\n          admin_user_id: selectedDealership.admin_user_id || 'none',\n          subscription_tier: selectedDealership.subscription_tier || 'base',\n          monthly_cost: monthlyCost,\n          schema_name: selectedDealership.schema_name || '',\n          // Admin details for display\n          admin_name: adminUser?.name || 'No admin assigned',\n          admin_email: adminUser?.email || 'No admin assigned',\n          admin_phone: adminUser?.phone || 'Not provided',\n          // Individual dealer details for groups\n          ...dealerGroupDetails,\n        });\n      };\n\n      refreshAdminDetails();\n    } else if (selectedUser) {\n      setEditData({\n        name: selectedUser.name,\n        email: selectedUser.email,\n        role: selectedUser.role,\n        phone: selectedUser.phone || '',\n        dealership_id: selectedUser.dealership_id ? selectedUser.dealership_id.toString() : 'none',\n      });\n    }\n  };\n\n  const handleSaveEdit = async () => {\n    console.log('[handleSaveEdit] Starting save operation');\n    console.log('[handleSaveEdit] Edit data:', editData);\n    console.log('[handleSaveEdit] Selected dealership:', selectedDealership);\n    console.log('[handleSaveEdit] Selected user:', selectedUser);\n\n    try {\n      setLoading(true);\n      setError('');\n\n      if (selectedDealership) {\n        console.log('[handleSaveEdit] Updating dealership...');\n\n        // Update dealership\n        const updateData: any = {\n          name: editData.name,\n          store_hours: editData.store_hours || null,\n          num_teams: parseInt(editData.num_teams) || 1,\n          admin_user_id: editData.admin_user_id === 'none' ? null : editData.admin_user_id || null,\n          subscription_tier: editData.subscription_tier || 'base',\n        };\n\n        // For dealer groups, collect individual dealer data\n        if (editData.type === 'group') {\n          const individualDealers = [];\n          for (let i = 0; i < (editData.num_teams || 1); i++) {\n            const dealerKey = `dealer_${i}`;\n            const dealerData = {\n              name: editData[`${dealerKey}_name`] || `Dealer ${i + 1}`,\n              manufacturer: editData[`${dealerKey}_manufacturer`] || '',\n              subscription_tier: editData[`${dealerKey}_tier`] || 'base',\n              brands: editData[`${dealerKey}_brands`]\n                ? editData[`${dealerKey}_brands`].split(',').map((b: string) => b.trim())\n                : [],\n            };\n            individualDealers.push(dealerData);\n          }\n\n          // Store individual dealer data as JSON in the database\n          // For now, we'll store it as metadata since we don't have a separate table\n          updateData.metadata = {\n            individual_dealers: individualDealers,\n          };\n\n          console.log('[handleSaveEdit] Individual dealers data:', individualDealers);\n        }\n\n        console.log('[handleSaveEdit] Update data:', updateData);\n        console.log('[handleSaveEdit] Dealership ID:', selectedDealership.id);\n\n        const result = await directSupabase.update('dealerships', updateData, {\n          id: selectedDealership.id,\n        });\n\n        console.log('[handleSaveEdit] Update result:', result);\n\n        if (result.error) {\n          console.error('[handleSaveEdit] Update error:', result.error);\n          throw result.error;\n        }\n\n        console.log('[handleSaveEdit] Dealership updated successfully');\n        setSuccess('Dealership updated successfully! Revenue will be recalculated.');\n\n        // Force refresh data to update revenue calculations immediately\n        console.log('[handleSaveEdit] Force refreshing all data for revenue recalculation...');\n        await Promise.all([fetchDealerships(), fetchUsers()]);\n        console.log('[handleSaveEdit] Data refreshed - revenue should now be updated');\n\n        // Trigger overview refresh to ensure revenue totals match\n        await refreshOverview();\n\n        // Force re-render of all components to ensure revenue totals are consistent\n        setSelectedDealership(null);\n        setSelectedUser(null);\n        setEditData({});\n\n        console.log(\n          '[handleSaveEdit] Overview refreshed and components re-rendered for consistent revenue display'\n        );\n      } else if (selectedUser) {\n        console.log('[handleSaveEdit] Updating user...');\n\n        // Update user profile\n        const updateData = {\n          name: editData.name,\n          phone: editData.phone || null,\n          role: editData.role,\n          dealership_id:\n            editData.dealership_id === 'none'\n              ? null\n              : editData.dealership_id\n              ? parseInt(editData.dealership_id)\n              : null,\n        };\n\n        console.log('[handleSaveEdit] User update data:', updateData);\n        console.log('[handleSaveEdit] User ID:', selectedUser.id);\n\n        const result = await directSupabase.update('profiles', updateData, { id: selectedUser.id });\n\n        console.log('[handleSaveEdit] User update result:', result);\n\n        if (result.error) {\n          console.error('[handleSaveEdit] User update error:', result.error);\n          throw result.error;\n        }\n\n        console.log('[handleSaveEdit] User updated successfully');\n        setSuccess('User updated successfully!');\n\n        // Refresh data\n        await Promise.all([fetchUsers(), fetchDealerships()]);\n        console.log('[handleSaveEdit] Data refreshed');\n      }\n\n      console.log('[handleSaveEdit] Closing dialog...');\n      setEditMode(false);\n      // setShowEditDialog(false); // Keep dialog open to show updated info\n      // setSelectedDealership(null);\n      // setSelectedUser(null);\n      console.log('[handleSaveEdit] Save operation completed successfully');\n    } catch (err: any) {\n      console.error('[handleSaveEdit] Error updating:', err);\n      setError(err.message || 'Failed to update');\n    } finally {\n      console.log('[handleSaveEdit] Setting loading to false');\n      setLoading(false);\n    }\n  };\n\n  const handleDeleteRequest = (type: 'dealership' | 'user', id: string | number, name: string) => {\n    setDeleteTarget({ type, id, name });\n\n    // Reset backup progress\n    setBackupProgress(0);\n    setBackupStatus('');\n\n    // Show backup dialog first for dealerships and dealer groups\n    if (type === 'dealership') {\n      setShowBackupDialog(true);\n    } else {\n      // For users, go directly to PIN confirmation since they don't have schemas to backup\n      setDeletePin('');\n      setShowPinDialog(true);\n    }\n  };\n\n  const handleDeleteConfirm = async () => {\n    console.log('[handleDeleteConfirm] Called with PIN:', deletePin);\n    console.log('[handleDeleteConfirm] Expected PIN: 0805');\n    console.log('[handleDeleteConfirm] PIN comparison:', deletePin !== '0805');\n\n    if (deletePin !== '0805') {\n      console.log('[handleDeleteConfirm] PIN mismatch, cancelling deletion');\n      setError('Incorrect PIN. Deletion cancelled.');\n      setShowPinDialog(false);\n      setDeletePin('');\n      return;\n    }\n\n    console.log('[handleDeleteConfirm] PIN correct, proceeding with deletion');\n    if (!deleteTarget) return;\n\n    try {\n      setLoading(true);\n      setError('');\n\n      if (deleteTarget.type === 'dealership') {\n        // Get dealership details first to check for schema\n        const dealershipResult = await directSupabase.select('dealerships', {\n          columns: 'id, name, schema_name, type',\n          filter: { id: deleteTarget.id },\n        });\n\n        const dealership = dealershipResult.data?.[0];\n        const schemaName = dealership?.schema_name;\n\n        console.log('[Delete] Dealership to delete:', {\n          id: deleteTarget.id,\n          name: deleteTarget.name,\n          schemaName: schemaName,\n          type: dealership?.type,\n        });\n\n        // Step 1: Delete dealership record\n        const result = await directSupabase.delete('dealerships', { id: deleteTarget.id });\n        if (result.error) throw result.error;\n\n        console.log('[Delete] Dealership record deleted successfully');\n\n        // Step 2: Clean up tenant schema if it exists\n        if (schemaName) {\n          console.log(`[Delete] Attempting to drop schema: ${schemaName}`);\n\n          try {\n            // Call schema cleanup function\n            await cleanupTenantSchema(schemaName);\n            console.log(`[Delete] Schema ${schemaName} cleaned up successfully`);\n          } catch (schemaError) {\n            console.error(`[Delete] Schema cleanup failed for ${schemaName}:`, schemaError);\n            // Don't fail the entire deletion if schema cleanup fails\n            setError(\n              `Dealership deleted successfully, but schema cleanup failed: ${\n                (schemaError as Error)?.message || 'Unknown error'\n              }. Please contact system administrator.`\n            );\n          }\n        } else {\n          console.log('[Delete] No schema to clean up');\n        }\n\n        setSuccess(\n          `Dealership \"${deleteTarget.name}\" deleted successfully!${\n            schemaName ? ` Schema ${schemaName} has been cleaned up.` : ''\n          }`\n        );\n\n        // Force refresh of both lists with proper await\n        console.log('[Delete] Refreshing data lists...');\n        await Promise.all([fetchDealerships(), fetchUsers()]);\n        console.log('[Delete] Data refresh completed');\n      } else if (deleteTarget.type === 'user') {\n        // Delete user profile first\n        const profileResult = await directSupabase.delete('profiles', { id: deleteTarget.id });\n        if (profileResult.error) {\n          console.warn('Profile deletion warning:', profileResult.error);\n        }\n\n        // Try to delete auth user (may not work with anon key)\n        try {\n          const { error: authError } = await supabase.auth.admin.deleteUser(\n            deleteTarget.id as string\n          );\n          if (authError) {\n            console.warn('Auth user deletion warning:', authError);\n          }\n        } catch (authDeleteError) {\n          console.warn('Auth user deletion not available with current permissions');\n        }\n\n        setSuccess(`User \"${deleteTarget.name}\" deleted successfully!`);\n\n        // Force refresh of both lists with proper await\n        console.log('[Delete] Refreshing data lists...');\n        await Promise.all([fetchUsers(), fetchDealerships()]);\n        console.log('[Delete] Data refresh completed');\n      }\n\n      setShowPinDialog(false);\n      setDeleteTarget(null);\n      setDeletePin('');\n    } catch (err: any) {\n      console.error('Error deleting:', err);\n      setError(err.message || 'Failed to delete');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setShowEditDialog(false);\n    setSelectedDealership(null);\n    setSelectedUser(null);\n    setEditMode(false);\n    setEditData({});\n    setDialogLoading(false);\n    setAvailableAdmins([]);\n  };\n\n  const handleClosePinDialog = () => {\n    setShowPinDialog(false);\n    setDeleteTarget(null);\n    setDeletePin('');\n  };\n\n  // Function to create tenant schema (placeholder for now)\n  const createTenantSchema = async (schemaName: string, isGroup: boolean = false) => {\n    console.log(`[createTenantSchema] Creating schema: ${schemaName} (isGroup: ${isGroup})`);\n\n    try {\n      // In a real implementation, this would call a backend API to create the schema\n      // For now, we'll just simulate the schema creation\n      console.log(`[createTenantSchema] Schema ${schemaName} created successfully`);\n\n      // Simulate some delay\n      await new Promise(resolve => setTimeout(resolve, 100));\n\n      return { success: true, schema: schemaName };\n    } catch (error) {\n      console.error(`[createTenantSchema] Failed to create schema ${schemaName}:`, error);\n      throw error;\n    }\n  };\n\n  // Function to cleanup/drop tenant schema\n  const cleanupTenantSchema = async (schemaName: string) => {\n    console.log(`[cleanupTenantSchema] Cleaning up schema: ${schemaName}`);\n\n    try {\n      // WARNING: This is a destructive operation that will delete ALL data in the schema\n      console.log(`[cleanupTenantSchema] ⚠️  DESTRUCTIVE OPERATION: Dropping schema ${schemaName}`);\n\n      // For now, we'll simulate the schema cleanup\n      console.log(`[cleanupTenantSchema] Simulating schema drop for: ${schemaName}`);\n\n      // Simulate some delay for the \"cleanup\"\n      await new Promise(resolve => setTimeout(resolve, 500));\n\n      console.log(`[cleanupTenantSchema] ✅ Schema ${schemaName} cleanup completed`);\n\n      return { success: true, schema: schemaName, operation: 'dropped' };\n    } catch (error) {\n      console.error(`[cleanupTenantSchema] ❌ Failed to cleanup schema ${schemaName}:`, error);\n      throw new Error(`Schema cleanup failed: ${(error as Error)?.message || 'Unknown error'}`);\n    }\n  };\n\n  // Helper function to get available admins for assignment\n  const getAvailableAdmins = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('profiles')\n        .select('id, email, name, role, created_at, dealership_id')\n        .in('role', ['admin', 'dealership_admin', 'single_dealer_admin', 'group_dealer_admin']);\n\n      if (error) {\n        console.error('Error fetching available admins:', error);\n        return [];\n      }\n\n      return data || [];\n    } catch (error) {\n      console.error('Error in getAvailableAdmins:', error);\n      return [];\n    }\n  };\n\n  // New functions for View All overlay functionality\n  const openViewAllDialog = (type: 'dealerships' | 'groups' | 'finance_managers') => {\n    let data: any[] = [];\n\n    switch (type) {\n      case 'dealerships':\n        data = dealerships.filter(d => d.type === 'single');\n        break;\n      case 'groups':\n        data = dealerships.filter(d => d.type === 'group');\n        break;\n      case 'finance_managers':\n        data = users.filter(u => mapLegacyRole(u.role) === 'single_finance_manager');\n        break;\n    }\n\n    setViewAllType(type);\n    setViewAllData(data);\n    setShowViewAllDialog(true);\n  };\n\n  const closeViewAllDialog = () => {\n    setShowViewAllDialog(false);\n    setViewAllType(null);\n    setViewAllData([]);\n  };\n\n  const renderViewAllContent = () => {\n    if (!viewAllType || !viewAllData) return null;\n\n    switch (viewAllType) {\n      case 'dealerships':\n        return (\n          <div className=\"space-y-3 max-h-96 overflow-y-auto\">\n            {viewAllData.map((dealership: Dealership) => {\n              const admin = users.find(u => u.id === dealership.admin_user_id);\n              const monthlyCost = calculateMonthlyCost(dealership);\n              return (\n                <div key={dealership.id} className=\"p-3 border rounded-lg bg-blue-50\">\n                  <div className=\"flex items-start justify-between mb-2\">\n                    <div>\n                      <div className=\"font-medium text-sm\">{dealership.name}</div>\n                      {dealership.manufacturer && (\n                        <div className=\"text-xs text-gray-600\">{dealership.manufacturer}</div>\n                      )}\n                    </div>\n                    <div className=\"text-right\">\n                      <div className=\"text-sm font-bold text-green-600\">${monthlyCost}/mo</div>\n                      <div className=\"text-xs text-gray-500\">\n                        {dealership.subscription_tier || 'base'}\n                      </div>\n                    </div>\n                  </div>\n                  {admin && (\n                    <div className=\"text-xs text-gray-600 mb-2\">\n                      Admin: {admin.name} ({admin.email})\n                    </div>\n                  )}\n                  <div className=\"flex space-x-1\">\n                    <Button\n                      size=\"sm\"\n                      variant=\"outline\"\n                      className=\"text-xs px-2 py-1 h-6\"\n                      onClick={() => {\n                        closeViewAllDialog();\n                        viewDealershipDetails(dealership);\n                      }}\n                    >\n                      View\n                    </Button>\n                    {admin && (\n                      <Button\n                        size=\"sm\"\n                        variant=\"outline\"\n                        className=\"text-xs px-2 py-1 h-6\"\n                        onClick={() => {\n                          closeViewAllDialog();\n                          accessUserAccount(admin.id, admin.email, admin.role);\n                        }}\n                      >\n                        Access\n                      </Button>\n                    )}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        );\n\n      case 'groups':\n        return (\n          <div className=\"space-y-3 max-h-96 overflow-y-auto\">\n            {viewAllData.map((dealership: Dealership) => {\n              const admin = users.find(u => u.id === dealership.admin_user_id);\n              const monthlyCost = calculateMonthlyCost(dealership);\n              return (\n                <div key={dealership.id} className=\"p-3 border rounded-lg bg-blue-50\">\n                  <div className=\"flex items-start justify-between mb-2\">\n                    <div>\n                      <div className=\"font-medium text-sm\">{dealership.name}</div>\n                      <div className=\"text-xs text-blue-600\">\n                        {dealership.num_teams || 1} dealerships in group\n                      </div>\n                      {dealership.manufacturer && (\n                        <div className=\"text-xs text-gray-600\">{dealership.manufacturer}</div>\n                      )}\n                    </div>\n                    <div className=\"text-right\">\n                      <div className=\"text-sm font-bold text-green-600\">${monthlyCost}/mo</div>\n                      <div className=\"text-xs text-gray-500\">\n                        {dealership.subscription_tier || 'base'}\n                      </div>\n                    </div>\n                  </div>\n                  {admin && (\n                    <div className=\"text-xs text-gray-600 mb-2\">\n                      Admin: {admin.name} ({admin.email})\n                    </div>\n                  )}\n                  <div className=\"flex space-x-1\">\n                    <Button\n                      size=\"sm\"\n                      variant=\"outline\"\n                      className=\"text-xs px-2 py-1 h-6\"\n                      onClick={() => {\n                        closeViewAllDialog();\n                        viewDealershipDetails(dealership);\n                      }}\n                    >\n                      View\n                    </Button>\n                    {admin && (\n                      <Button\n                        size=\"sm\"\n                        variant=\"outline\"\n                        className=\"text-xs px-2 py-1 h-6\"\n                        onClick={() => {\n                          closeViewAllDialog();\n                          accessUserAccount(admin.id, admin.email, admin.role);\n                        }}\n                      >\n                        Access\n                      </Button>\n                    )}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        );\n\n      case 'finance_managers':\n        return (\n          <div className=\"space-y-3 max-h-96 overflow-y-auto\">\n            {viewAllData.map((user: User) => (\n              <div key={user.id} className=\"p-3 border rounded-lg bg-green-50\">\n                <div className=\"flex items-start justify-between mb-2\">\n                  <div>\n                    <div className=\"font-medium text-sm\">{user.name}</div>\n                    <div className=\"text-xs text-gray-500\">{user.email}</div>\n                    <div className=\"text-xs text-blue-600\">\n                      Role: {allRoles.find(r => r.value === user.role)?.label || user.role}\n                    </div>\n                    {user.dealership && (\n                      <div className=\"text-xs text-green-600\">\n                        Dealership: {user.dealership.name}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"text-right\">\n                    <div className=\"text-xs text-green-600 font-medium\">Individual User</div>\n                  </div>\n                </div>\n                <div className=\"flex space-x-1\">\n                  <Button\n                    size=\"sm\"\n                    variant=\"outline\"\n                    className=\"text-xs px-2 py-1 h-6\"\n                    onClick={() => {\n                      closeViewAllDialog();\n                      viewUserDetails(user);\n                    }}\n                  >\n                    View\n                  </Button>\n                  <Button\n                    size=\"sm\"\n                    variant=\"outline\"\n                    className=\"text-xs px-2 py-1 h-6\"\n                    onClick={() => {\n                      closeViewAllDialog();\n                      accessUserAccount(user.id, user.email, user.role);\n                    }}\n                  >\n                    Access\n                  </Button>\n                </div>\n              </div>\n            ))}\n          </div>\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto p-6\">\n      <div className=\"mb-6\">\n        <h1 className=\"text-3xl font-bold mb-2\">Master Admin Dashboard</h1>\n        <p className=\"text-gray-600\">Manage users, dealerships, and system settings</p>\n\n        {/* Debug Refresh Button */}\n        <div className=\"mt-4\">\n          <Button\n            onClick={async () => {\n              console.log('[Debug] Manual refresh triggered');\n              setLoading(true);\n              try {\n                await Promise.all([fetchUsers(), fetchDealerships(), fetchSignupRequests()]);\n                setSuccess('Data refreshed successfully!');\n                console.log('[Debug] Manual refresh completed');\n              } catch (error) {\n                console.error('[Debug] Manual refresh failed:', error);\n                setError('Failed to refresh data');\n              } finally {\n                setLoading(false);\n              }\n            }}\n            variant=\"outline\"\n            className=\"mr-2\"\n          >\n            🔄 Manual Refresh Data\n          </Button>\n          <span className=\"text-sm text-gray-500\">Use this to refresh if data seems outdated</span>\n        </div>\n      </div>\n\n      {/* Error and Success Messages */}\n      {error && (\n        <div className=\"mb-4 p-4 bg-red-50 border border-red-200 rounded-md\">\n          <div className=\"flex\">\n            <div className=\"ml-3\">\n              <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\n              <div className=\"mt-2 text-sm text-red-700\">{error}</div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {success && (\n        <div className=\"mb-4 p-4 bg-green-50 border border-green-200 rounded-md\">\n          <div className=\"flex\">\n            <div className=\"ml-3\">\n              <h3 className=\"text-sm font-medium text-green-800\">Success</h3>\n              <div className=\"mt-2 text-sm text-green-700\">{success}</div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <Tabs value={activeTab} onValueChange={handleTabChange}>\n        <TabsList className=\"grid w-full grid-cols-4\">\n          <TabsTrigger value=\"overview\">Overview</TabsTrigger>\n          <TabsTrigger value=\"create-user\">Create User</TabsTrigger>\n          <TabsTrigger value=\"signups\">Signup Requests</TabsTrigger>\n          <TabsTrigger value=\"system\">System</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"overview\" className=\"space-y-6\">\n          {/* Revenue Summary Cards */}\n          <div className=\"grid gap-4 md:grid-cols-4\">\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"text-2xl font-bold text-green-600\">\n                  $\n                  {dealerships\n                    .reduce((total, d) => total + calculateMonthlyCost(d), 0)\n                    .toLocaleString()}\n                </div>\n                <div className=\"text-sm text-gray-500\">Total Monthly Revenue</div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"text-2xl font-bold text-blue-600\">{dealerships.length}</div>\n                <div className=\"text-sm text-gray-500\">Total Entities</div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"text-2xl font-bold text-purple-600\">{users.length}</div>\n                <div className=\"text-sm text-gray-500\">Total Users</div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"text-2xl font-bold text-orange-600\">\n                  $\n                  {(\n                    dealerships.reduce((total, d) => total + calculateMonthlyCost(d), 0) * 12\n                  ).toLocaleString()}\n                </div>\n                <div className=\"text-sm text-gray-500\">Annual Revenue</div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Categorized View */}\n          <div className=\"grid gap-6 lg:grid-cols-3\">\n            {/* Single Dealerships */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center justify-between\">\n                  <span>Single Dealerships</span>\n                  <span className=\"text-sm font-normal text-gray-500\">\n                    ({dealerships.filter(d => d.type === 'single').length})\n                  </span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  {dealerships.filter(d => d.type === 'single').length === 0 ? (\n                    <p className=\"text-gray-500 text-center py-4\">No single dealerships</p>\n                  ) : (\n                    dealerships\n                      .filter(d => d.type === 'single')\n                      .slice(0, 4)\n                      .map(dealership => {\n                        const admin = users.find(u => u.id === dealership.admin_user_id);\n                        const monthlyCost = calculateMonthlyCost(dealership);\n                        return (\n                          <div key={dealership.id} className=\"p-3 border rounded-lg\">\n                            <div className=\"flex items-start justify-between mb-2\">\n                              <div>\n                                <div className=\"font-medium text-sm\">{dealership.name}</div>\n                                {dealership.locations && dealership.locations.length > 0 && (\n                                  <div className=\"text-xs text-gray-500\">\n                                    {dealership.locations[0].address ||\n                                      dealership.locations[0].city}\n                                  </div>\n                                )}\n                                {dealership.manufacturer && (\n                                  <div className=\"text-xs text-blue-600\">\n                                    {dealership.manufacturer}\n                                  </div>\n                                )}\n                              </div>\n                              <div className=\"text-right\">\n                                <div className=\"text-sm font-bold text-green-600\">\n                                  ${monthlyCost}/mo\n                                </div>\n                                <div className=\"text-xs text-gray-500\">\n                                  {dealership.subscription_tier || 'base'}\n                                </div>\n                              </div>\n                            </div>\n\n                            {admin && (\n                              <div className=\"text-xs text-gray-600 mb-2\">\n                                Admin: {admin.name} ({admin.email})\n                              </div>\n                            )}\n\n                            <div className=\"flex space-x-1\">\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline\"\n                                className=\"text-xs px-2 py-1 h-6\"\n                                onClick={() => viewDealershipDetails(dealership)}\n                              >\n                                View\n                              </Button>\n                              {admin && (\n                                <Button\n                                  size=\"sm\"\n                                  variant=\"outline\"\n                                  className=\"text-xs px-2 py-1 h-6\"\n                                  onClick={() =>\n                                    accessUserAccount(admin.id, admin.email, admin.role)\n                                  }\n                                >\n                                  Access\n                                </Button>\n                              )}\n                              <Button\n                                size=\"sm\"\n                                variant=\"destructive\"\n                                className=\"text-xs px-2 py-1 h-6\"\n                                onClick={() =>\n                                  handleDeleteRequest('dealership', dealership.id, dealership.name)\n                                }\n                              >\n                                Delete\n                              </Button>\n                            </div>\n                          </div>\n                        );\n                      })\n                  )}\n\n                  {dealerships.filter(d => d.type === 'single').length > 4 && (\n                    <div className=\"text-center py-2\">\n                      <div className=\"text-sm text-gray-500\">\n                        ... and {dealerships.filter(d => d.type === 'single').length - 4} more\n                        single dealerships\n                      </div>\n                      <div className=\"text-xs text-green-600 font-medium\">\n                        Total Monthly: $\n                        {dealerships\n                          .filter(d => d.type === 'single')\n                          .reduce((total, d) => total + calculateMonthlyCost(d), 0)\n                          .toLocaleString()}\n                      </div>\n                    </div>\n                  )}\n\n                  {/* View All button for all single dealerships */}\n                  <div className=\"text-center pt-3 border-t\">\n                    <Button\n                      size=\"sm\"\n                      variant=\"outline\"\n                      onClick={() => openViewAllDialog('dealerships')}\n                    >\n                      View All Single Dealerships (\n                      {dealerships.filter(d => d.type === 'single').length})\n                    </Button>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Dealer Groups */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center justify-between\">\n                  <span>Dealer Groups</span>\n                  <span className=\"text-sm font-normal text-gray-500\">\n                    ({dealerships.filter(d => d.type === 'group').length})\n                  </span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  {dealerships.filter(d => d.type === 'group').length === 0 ? (\n                    <p className=\"text-gray-500 text-center py-4\">No dealer groups</p>\n                  ) : (\n                    dealerships\n                      .filter(d => d.type === 'group')\n                      .slice(0, 4)\n                      .map(dealership => {\n                        const admin = users.find(u => u.id === dealership.admin_user_id);\n                        const monthlyCost = calculateMonthlyCost(dealership);\n                        return (\n                          <div key={dealership.id} className=\"p-3 border rounded-lg bg-blue-50\">\n                            <div className=\"flex items-start justify-between mb-2\">\n                              <div>\n                                <div className=\"font-medium text-sm\">{dealership.name}</div>\n                                <div className=\"text-xs text-blue-600\">\n                                  {dealership.num_teams || 1} dealerships in group\n                                </div>\n                                {dealership.manufacturer && (\n                                  <div className=\"text-xs text-gray-600\">\n                                    {dealership.manufacturer}\n                                  </div>\n                                )}\n                              </div>\n                              <div className=\"text-right\">\n                                <div className=\"text-sm font-bold text-green-600\">\n                                  ${monthlyCost}/mo\n                                </div>\n                                <div className=\"text-xs text-gray-500\">\n                                  {dealership.subscription_tier || 'base'}\n                                </div>\n                              </div>\n                            </div>\n\n                            {admin && (\n                              <div className=\"text-xs text-gray-600 mb-2\">\n                                Admin: {admin.name} ({admin.email})\n                              </div>\n                            )}\n\n                            <div className=\"flex space-x-1\">\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline\"\n                                className=\"text-xs px-2 py-1 h-6\"\n                                onClick={() => viewDealershipDetails(dealership)}\n                              >\n                                View\n                              </Button>\n                              {admin && (\n                                <Button\n                                  size=\"sm\"\n                                  variant=\"outline\"\n                                  className=\"text-xs px-2 py-1 h-6\"\n                                  onClick={() =>\n                                    accessUserAccount(admin.id, admin.email, admin.role)\n                                  }\n                                >\n                                  Access\n                                </Button>\n                              )}\n                              <Button\n                                size=\"sm\"\n                                variant=\"destructive\"\n                                className=\"text-xs px-2 py-1 h-6\"\n                                onClick={() =>\n                                  handleDeleteRequest('dealership', dealership.id, dealership.name)\n                                }\n                              >\n                                Delete\n                              </Button>\n                            </div>\n                          </div>\n                        );\n                      })\n                  )}\n\n                  {dealerships.filter(d => d.type === 'group').length > 4 && (\n                    <div className=\"text-center py-2\">\n                      <div className=\"text-sm text-gray-500\">\n                        ... and {dealerships.filter(d => d.type === 'group').length - 4} more dealer\n                        groups\n                      </div>\n                      <div className=\"text-xs text-green-600 font-medium\">\n                        Total Monthly: $\n                        {dealerships\n                          .filter(d => d.type === 'group')\n                          .reduce((total, d) => total + calculateMonthlyCost(d), 0)\n                          .toLocaleString()}\n                      </div>\n                    </div>\n                  )}\n\n                  {/* View All button for all dealer groups */}\n                  <div className=\"text-center pt-3 border-t\">\n                    <Button size=\"sm\" variant=\"outline\" onClick={() => openViewAllDialog('groups')}>\n                      View All Dealer Groups ({dealerships.filter(d => d.type === 'group').length})\n                    </Button>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Single Finance Managers */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center justify-between\">\n                  <span>Finance Managers</span>\n                  <span className=\"text-sm font-normal text-gray-500\">\n                    ({users.filter(u => mapLegacyRole(u.role) === 'single_finance_manager').length})\n                  </span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  {/* Enhanced debugging for Finance Managers */}\n                  <div className=\"p-2 bg-yellow-50 border border-yellow-200 rounded text-xs\">\n                    <strong>🔍 Debug Finance Managers:</strong>\n                    <div>Total users loaded: {users.length}</div>\n                    <div>\n                      Users with 'finance_manager' role:{' '}\n                      {users.filter(u => u.role === 'finance_manager').length}\n                    </div>\n                    <div>\n                      Users with 'single_finance_manager' role:{' '}\n                      {users.filter(u => u.role === 'single_finance_manager').length}\n                    </div>\n                    <div>\n                      Users mapped to 'single_finance_manager':{' '}\n                      {users.filter(u => mapLegacyRole(u.role) === 'single_finance_manager').length}\n                    </div>\n                    {users.filter(u => u.role.includes('finance')).length > 0 && (\n                      <details className=\"mt-1\">\n                        <summary className=\"cursor-pointer text-blue-600\">\n                          Show all finance-related users\n                        </summary>\n                        <div className=\"mt-1 space-y-1\">\n                          {users\n                            .filter(u => u.role.includes('finance'))\n                            .map(u => (\n                              <div key={u.id}>\n                                • {u.name} ({u.email}) - Role: {u.role} → Mapped:{' '}\n                                {mapLegacyRole(u.role)}\n                              </div>\n                            ))}\n                        </div>\n                      </details>\n                    )}\n                  </div>\n\n                  {users.filter(u => mapLegacyRole(u.role) === 'single_finance_manager').length ===\n                  0 ? (\n                    <>\n                      <p className=\"text-gray-500 text-center py-4\">No finance managers</p>\n                      <div className=\"p-4 border rounded bg-gray-50\">\n                        <h4 className=\"font-medium mb-2\">Current Dealerships Data</h4>\n                        <div className=\"text-sm\">\n                          <div>Total Dealerships: {dealerships.length}</div>\n                          <div>\n                            Single Dealerships:{' '}\n                            {dealerships.filter(d => d.type === 'single').length}\n                          </div>\n                          <div>\n                            Dealer Groups: {dealerships.filter(d => d.type === 'group').length}\n                          </div>\n                          <div>\n                            Finance Managers in DB:{' '}\n                            {users.filter(u => u.role === 'finance_manager').length}\n                          </div>\n                        </div>\n                      </div>\n                    </>\n                  ) : (\n                    <>\n                      {users\n                        .filter(u => mapLegacyRole(u.role) === 'single_finance_manager')\n                        .slice(0, 5)\n                        .map(user => (\n                          <div key={user.id} className=\"p-3 border rounded-lg bg-green-50\">\n                            <div className=\"flex items-start justify-between mb-2\">\n                              <div>\n                                <div className=\"font-medium text-sm\">{user.name}</div>\n                                <div className=\"text-xs text-gray-500\">{user.email}</div>\n                                <div className=\"text-xs text-blue-600\">\n                                  Role:{' '}\n                                  {allRoles.find(r => r.value === user.role)?.label || user.role}\n                                </div>\n                                {user.dealership && (\n                                  <div className=\"text-xs text-green-600\">\n                                    Dealership: {user.dealership.name}\n                                  </div>\n                                )}\n                              </div>\n                              <div className=\"text-right\">\n                                <div className=\"text-xs text-green-600 font-medium\">\n                                  Individual User\n                                </div>\n                              </div>\n                            </div>\n\n                            <div className=\"flex space-x-1\">\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline\"\n                                className=\"text-xs px-2 py-1 h-6\"\n                                onClick={() => viewUserDetails(user)}\n                              >\n                                View\n                              </Button>\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline\"\n                                className=\"text-xs px-2 py-1 h-6\"\n                                onClick={() => accessUserAccount(user.id, user.email, user.role)}\n                              >\n                                Access\n                              </Button>\n                              <Button\n                                size=\"sm\"\n                                variant=\"destructive\"\n                                className=\"text-xs px-2 py-1 h-6\"\n                                onClick={() => handleDeleteRequest('user', user.id, user.name)}\n                              >\n                                Delete\n                              </Button>\n                            </div>\n                          </div>\n                        ))}\n                    </>\n                  )}\n\n                  {users.filter(u => mapLegacyRole(u.role) === 'single_finance_manager').length >\n                    5 && (\n                    <div className=\"text-center py-2\">\n                      <div className=\"text-sm text-gray-500\">\n                        ... and{' '}\n                        {users.filter(u => mapLegacyRole(u.role) === 'single_finance_manager')\n                          .length - 5}{' '}\n                        more finance managers\n                      </div>\n                    </div>\n                  )}\n\n                  {/* View All button for all finance managers */}\n                  <div className=\"text-center pt-3 border-t\">\n                    <Button\n                      size=\"sm\"\n                      variant=\"outline\"\n                      onClick={() => openViewAllDialog('finance_managers')}\n                    >\n                      View All Finance Managers (\n                      {users.filter(u => mapLegacyRole(u.role) === 'single_finance_manager').length}\n                      )\n                    </Button>\n                  </div>\n\n                  {/* Manual Refresh Button for debugging */}\n                  <div className=\"text-center pt-2 border-t\">\n                    <Button\n                      size=\"sm\"\n                      variant=\"outline\"\n                      className=\"bg-blue-50 text-blue-600\"\n                      onClick={async () => {\n                        console.log('🔄 Manual refresh triggered for Finance Managers debugging');\n                        await fetchUsers();\n                        console.log('🔄 Refresh completed');\n                      }}\n                    >\n                      🔄 Force Refresh Data\n                    </Button>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Subscription Tier Breakdown */}\n          <div className=\"grid gap-6 md:grid-cols-2\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Revenue by Subscription Tier</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  {subscriptionTiers.map(tier => {\n                    const tieredDealerships = dealerships.filter(\n                      d => (d.subscription_tier || 'base') === tier.value\n                    );\n                    const revenue = tieredDealerships.reduce(\n                      (total, d) => total + calculateMonthlyCost(d),\n                      0\n                    );\n\n                    return (\n                      <div\n                        key={tier.value}\n                        className=\"flex items-center justify-between p-3 border rounded\"\n                      >\n                        <div>\n                          <div className=\"font-medium\">{tier.label}</div>\n                          <div className=\"text-sm text-gray-500\">{tier.description}</div>\n                          <div className=\"text-xs text-blue-600\">\n                            {tieredDealerships.length} entities\n                          </div>\n                        </div>\n                        <div className=\"text-right\">\n                          <div className=\"font-bold text-green-600\">\n                            ${revenue.toLocaleString()}/mo\n                          </div>\n                          <div className=\"text-xs text-gray-500\">\n                            ${(revenue * 12).toLocaleString()}/yr\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>All Users Overview</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  {/* Main role categories */}\n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-center justify-between p-3 border rounded\">\n                      <div>\n                        <div className=\"font-medium\">Single Finance Managers</div>\n                        <div className=\"text-sm text-gray-500\">\n                          {\n                            users.filter(u => mapLegacyRole(u.role) === 'single_finance_manager')\n                              .length\n                          }{' '}\n                          users\n                        </div>\n                      </div>\n                      <div className=\"text-right\">\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline\"\n                          onClick={() => {\n                            const financeManagers = users.filter(\n                              u => mapLegacyRole(u.role) === 'single_finance_manager'\n                            );\n                            console.log(\n                              `All Finance Managers (${\n                                financeManagers.length\n                              }):\\n\\n${financeManagers\n                                .map(\n                                  u =>\n                                    `• ${u.name} (${u.email}) - ${\n                                      allRoles.find(r => r.value === u.role)?.label || u.role\n                                    }`\n                                )\n                                .join('\\n')}`\n                            );\n                          }}\n                        >\n                          View All\n                        </Button>\n                      </div>\n                    </div>\n\n                    <div className=\"flex items-center justify-between p-3 border rounded\">\n                      <div>\n                        <div className=\"font-medium\">Single Dealership Admins</div>\n                        <div className=\"text-sm text-gray-500\">\n                          {\n                            users.filter(u => mapLegacyRole(u.role) === 'single_dealer_admin')\n                              .length\n                          }{' '}\n                          users\n                        </div>\n                      </div>\n                      <div className=\"text-right\">\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline\"\n                          onClick={() => {\n                            const dealerAdmins = users.filter(\n                              u => mapLegacyRole(u.role) === 'single_dealer_admin'\n                            );\n                            console.log(\n                              `All Dealership Admins (${dealerAdmins.length}):\\n\\n${dealerAdmins\n                                .map(\n                                  u =>\n                                    `• ${u.name} (${u.email}) - ${\n                                      allRoles.find(r => r.value === u.role)?.label || u.role\n                                    }`\n                                )\n                                .join('\\n')}`\n                            );\n                          }}\n                        >\n                          View All\n                        </Button>\n                      </div>\n                    </div>\n\n                    <div className=\"flex items-center justify-between p-3 border rounded\">\n                      <div>\n                        <div className=\"font-medium\">Dealer Group Admins</div>\n                        <div className=\"text-sm text-gray-500\">\n                          {users.filter(u => mapLegacyRole(u.role) === 'group_dealer_admin').length}{' '}\n                          users\n                        </div>\n                      </div>\n                      <div className=\"text-right\">\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline\"\n                          onClick={() => {\n                            const groupAdmins = users.filter(\n                              u => mapLegacyRole(u.role) === 'group_dealer_admin'\n                            );\n                            console.log(\n                              `All Dealer Group Admins (${groupAdmins.length}):\\n\\n${groupAdmins\n                                .map(\n                                  u =>\n                                    `• ${u.name} (${u.email}) - ${\n                                      allRoles.find(r => r.value === u.role)?.label || u.role\n                                    }`\n                                )\n                                .join('\\n')}`\n                            );\n                          }}\n                        >\n                          View All\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Summary by mapped roles */}\n                  <div className=\"mt-4 pt-4 border-t\">\n                    <h4 className=\"font-medium mb-2\">Total Summary</h4>\n                    <div className=\"space-y-2\">\n                      <div className=\"flex justify-between text-sm\">\n                        <span>Finance Managers:</span>\n                        <span className=\"font-medium\">\n                          {\n                            users.filter(u => mapLegacyRole(u.role) === 'single_finance_manager')\n                              .length\n                          }\n                        </span>\n                      </div>\n                      <div className=\"flex justify-between text-sm\">\n                        <span>Dealership Admins:</span>\n                        <span className=\"font-medium\">\n                          {\n                            users.filter(u => mapLegacyRole(u.role) === 'single_dealer_admin')\n                              .length\n                          }\n                        </span>\n                      </div>\n                      <div className=\"flex justify-between text-sm\">\n                        <span>Dealer Group Admins:</span>\n                        <span className=\"font-medium\">\n                          {users.filter(u => mapLegacyRole(u.role) === 'group_dealer_admin').length}\n                        </span>\n                      </div>\n                      <div className=\"flex justify-between text-sm font-medium border-t pt-2\">\n                        <span>Total Users:</span>\n                        <span>{users.length}</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"create-user\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Create New User</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={createUser} className=\"space-y-4\">\n                <div className=\"grid gap-4 md:grid-cols-2\">\n                  <div>\n                    <Label htmlFor=\"name\">Full Name</Label>\n                    <Input\n                      id=\"name\"\n                      value={newUser.name}\n                      onChange={e => setNewUser({ ...newUser, name: e.target.value })}\n                      required\n                    />\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"email\">Email</Label>\n                    <Input\n                      id=\"email\"\n                      type=\"email\"\n                      value={newUser.email}\n                      onChange={e => setNewUser({ ...newUser, email: e.target.value })}\n                      required\n                    />\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"phone\">Phone (Required for 2FA)</Label>\n                    <Input\n                      id=\"phone\"\n                      type=\"tel\"\n                      value={newUser.phone}\n                      onChange={e => setNewUser({ ...newUser, phone: e.target.value })}\n                      placeholder=\"Enter phone number for 2FA verification\"\n                      required\n                    />\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"role\">Role</Label>\n                    <Select value={newUser.role} onValueChange={handleRoleChange}>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Select a role\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {roles.map(role => (\n                          <SelectItem key={role.value} value={role.value}>\n                            {role.label}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n\n                {/* Temporary Password */}\n                <div>\n                  <Label htmlFor=\"tempPassword\">Temporary Password</Label>\n                  <div className=\"flex space-x-2\">\n                    <Input\n                      id=\"tempPassword\"\n                      type=\"text\"\n                      value={newUser.tempPassword}\n                      onChange={e => setNewUser({ ...newUser, tempPassword: e.target.value })}\n                      required\n                    />\n                    <Button type=\"button\" onClick={generateTempPassword} variant=\"outline\">\n                      Generate\n                    </Button>\n                  </div>\n                </div>\n\n                {/* Single Dealership Fields */}\n                {newUser.role === 'single_dealer_admin' && (\n                  <div className=\"space-y-4 p-4 border rounded bg-blue-50\">\n                    <h3 className=\"font-medium text-blue-900\">Dealership Information</h3>\n                    <div className=\"grid gap-4 md:grid-cols-2\">\n                      <div>\n                        <Label htmlFor=\"dealershipName\">Dealership Name</Label>\n                        <Input\n                          id=\"dealershipName\"\n                          value={newUser.dealershipName}\n                          onChange={e => setNewUser({ ...newUser, dealershipName: e.target.value })}\n                          required\n                        />\n                      </div>\n\n                      <div>\n                        <Label htmlFor=\"location\">Location (Optional)</Label>\n                        <Input\n                          id=\"location\"\n                          value={newUser.location}\n                          onChange={e => setNewUser({ ...newUser, location: e.target.value })}\n                        />\n                      </div>\n\n                      <div>\n                        <Label htmlFor=\"manufacturer\">Manufacturer (Optional)</Label>\n                        <Select\n                          value={newUser.manufacturer}\n                          onValueChange={value => setNewUser({ ...newUser, manufacturer: value })}\n                        >\n                          <SelectTrigger>\n                            <SelectValue placeholder=\"Select manufacturer\" />\n                          </SelectTrigger>\n                          <SelectContent>\n                            {manufacturers.map(manufacturer => (\n                              <SelectItem key={manufacturer} value={manufacturer}>\n                                {manufacturer}\n                              </SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                      </div>\n                    </div>\n                  </div>\n                )}\n\n                {/* Dealer Group Fields */}\n                {newUser.role === 'group_dealer_admin' && (\n                  <div className=\"space-y-4 p-4 border rounded bg-green-50\">\n                    <h3 className=\"font-medium text-green-900\">Dealer Group Information</h3>\n                    <div className=\"grid gap-4 md:grid-cols-2\">\n                      <div>\n                        <Label htmlFor=\"groupName\">Dealer Group Name</Label>\n                        <Input\n                          id=\"groupName\"\n                          value={newUser.groupName}\n                          onChange={e => setNewUser({ ...newUser, groupName: e.target.value })}\n                          required\n                        />\n                      </div>\n\n                      <div>\n                        <Label htmlFor=\"numDealerships\">Number of Dealerships</Label>\n                        <Select\n                          value={newUser.numDealerships.toString()}\n                          onValueChange={value =>\n                            setNewUser({ ...newUser, numDealerships: parseInt(value) })\n                          }\n                        >\n                          <SelectTrigger>\n                            <SelectValue />\n                          </SelectTrigger>\n                          <SelectContent>\n                            {[2, 3, 4, 5, 6, 7, 8, 9, 10].map(num => (\n                              <SelectItem key={num} value={num.toString()}>\n                                {num} dealerships\n                              </SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                      </div>\n                    </div>\n\n                    {/* Individual Dealership Entries */}\n                    <div className=\"space-y-3\">\n                      <h4 className=\"font-medium\">Dealership Details</h4>\n                      {newUser.dealerships.map((dealership, index) => (\n                        <div\n                          key={index}\n                          className=\"grid gap-3 md:grid-cols-2 p-3 border rounded bg-white\"\n                        >\n                          <div>\n                            <Label htmlFor={`dealership-name-${index}`}>\n                              Dealership {index + 1} Name\n                            </Label>\n                            <Input\n                              id={`dealership-name-${index}`}\n                              value={dealership.name}\n                              onChange={e => updateDealershipEntry(index, 'name', e.target.value)}\n                              required\n                            />\n                          </div>\n                          <div>\n                            <Label htmlFor={`dealership-manufacturer-${index}`}>Manufacturer</Label>\n                            <Select\n                              value={dealership.manufacturer}\n                              onValueChange={value =>\n                                updateDealershipEntry(index, 'manufacturer', value)\n                              }\n                            >\n                              <SelectTrigger>\n                                <SelectValue placeholder=\"Select manufacturer\" />\n                              </SelectTrigger>\n                              <SelectContent>\n                                {manufacturers.map(manufacturer => (\n                                  <SelectItem key={manufacturer} value={manufacturer}>\n                                    {manufacturer}\n                                  </SelectItem>\n                                ))}\n                              </SelectContent>\n                            </Select>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                <Button type=\"submit\" disabled={loading} className=\"w-full\">\n                  {loading ? 'Creating...' : 'Create User'}\n                </Button>\n              </form>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"signups\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Signup Requests ({signupRequests.length})</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-3\">\n                {signupRequests.length === 0 ? (\n                  <p className=\"text-gray-500 text-center py-4\">No signup requests</p>\n                ) : (\n                  signupRequests.map(request => (\n                    <div\n                      key={request.id}\n                      className=\"flex items-center justify-between p-4 border rounded\"\n                    >\n                      <div>\n                        <div className=\"font-medium\">{request.dealership_name}</div>\n                        <div className=\"text-sm text-gray-500\">\n                          Contact: {request.contact_person} ({request.email})\n                        </div>\n                        <div className=\"text-xs text-blue-600\">\n                          Tier: {request.tier} | Status: {request.status}\n                        </div>\n                        <div className=\"text-xs text-gray-400\">\n                          {new Date(request.created_at).toLocaleDateString()}\n                        </div>\n                      </div>\n                      <div className=\"flex space-x-2\">\n                        <Button\n                          size=\"sm\"\n                          onClick={() => approveSignupRequest(request.id)}\n                          disabled={request.status !== 'pending'}\n                        >\n                          Approve\n                        </Button>\n                        <Button\n                          size=\"sm\"\n                          variant=\"destructive\"\n                          onClick={() => rejectSignupRequest(request.id)}\n                          disabled={request.status !== 'pending'}\n                        >\n                          Reject\n                        </Button>\n                      </div>\n                    </div>\n                  ))\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"system\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>System Information</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                <div>\n                  <h3 className=\"font-medium mb-2\">Database Statistics</h3>\n                  <div className=\"grid gap-4 md:grid-cols-3\">\n                    <div className=\"p-3 border rounded\">\n                      <div className=\"text-2xl font-bold text-blue-600\">{users.length}</div>\n                      <div className=\"text-sm text-gray-500\">Total Users</div>\n                    </div>\n                    <div className=\"p-3 border rounded\">\n                      <div className=\"text-2xl font-bold text-green-600\">{dealerships.length}</div>\n                      <div className=\"text-sm text-gray-500\">Total Dealerships</div>\n                    </div>\n                    <div className=\"p-3 border rounded\">\n                      <div className=\"text-2xl font-bold text-purple-600\">\n                        {signupRequests.length}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">Signup Requests</div>\n                    </div>\n                  </div>\n                </div>\n\n                <div>\n                  <h3 className=\"font-medium mb-2\">Environment Test</h3>\n                  <EnvTest />\n                </div>\n\n                {/* Debug Section */}\n                <div>\n                  <h3 className=\"font-medium mb-2\">Debug Information</h3>\n                  <div className=\"space-y-4\">\n                    <div className=\"p-4 border rounded bg-gray-50\">\n                      <h4 className=\"font-medium mb-2\">Current Users Data</h4>\n                      <div className=\"text-sm\">\n                        <div>Total Users: {users.length}</div>\n                        <div>\n                          Finance Managers:{' '}\n                          {\n                            users.filter(u => mapLegacyRole(u.role) === 'single_finance_manager')\n                              .length\n                          }\n                        </div>\n                        <div>\n                          Single Dealer Admins:{' '}\n                          {\n                            users.filter(u => mapLegacyRole(u.role) === 'single_dealer_admin')\n                              .length\n                          }\n                        </div>\n                        <div>\n                          Group Dealer Admins:{' '}\n                          {users.filter(u => mapLegacyRole(u.role) === 'group_dealer_admin').length}\n                        </div>\n                      </div>\n\n                      {users.length > 0 && (\n                        <details className=\"mt-2\">\n                          <summary className=\"cursor-pointer text-blue-600\">Show All Users</summary>\n                          <div className=\"mt-2 space-y-1 text-xs\">\n                            {users.map((user, index) => (\n                              <div key={user.id} className=\"flex justify-between\">\n                                <span>\n                                  {user.name} ({user.email})\n                                </span>\n                                <span>\n                                  {user.role} → {mapLegacyRole(user.role)}\n                                </span>\n                              </div>\n                            ))}\n                          </div>\n                        </details>\n                      )}\n                    </div>\n\n                    <div className=\"p-4 border rounded bg-gray-50\">\n                      <h4 className=\"font-medium mb-2\">Current Dealerships Data</h4>\n                      <div className=\"text-sm\">\n                        <div>Total Dealerships: {dealerships.length}</div>\n                        <div>\n                          With Admin Assigned: {dealerships.filter(d => d.admin_user_id).length}\n                        </div>\n                        <div>Without Admin: {dealerships.filter(d => !d.admin_user_id).length}</div>\n                      </div>\n\n                      {dealerships.length > 0 && (\n                        <details className=\"mt-2\">\n                          <summary className=\"cursor-pointer text-blue-600\">\n                            Show All Dealerships\n                          </summary>\n                          <div className=\"mt-2 space-y-1 text-xs\">\n                            {dealerships.map((dealership, index) => (\n                              <div key={dealership.id} className=\"flex justify-between\">\n                                <span>\n                                  {dealership.name} ({dealership.type || 'single'})\n                                </span>\n                                <span>Admin: {dealership.admin_user_id || 'None'}</span>\n                              </div>\n                            ))}\n                          </div>\n                        </details>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n\n      {/* Edit Dialog */}\n      <Dialog open={showEditDialog} onOpenChange={setShowEditDialog}>\n        <DialogContent className=\"max-w-2xl max-h-[90vh] overflow-y-auto\">\n          <DialogHeader>\n            <DialogTitle>\n              {selectedDealership\n                ? `${editMode ? 'Edit' : 'View'} Dealership Details`\n                : `${editMode ? 'Edit' : 'View'} User Details`}\n            </DialogTitle>\n            <DialogDescription>\n              {selectedDealership\n                ? `${editMode ? 'Update' : 'View'} dealership information and settings`\n                : `${editMode ? 'Update' : 'View'} user profile and role information`}\n            </DialogDescription>\n          </DialogHeader>\n\n          {dialogLoading ? (\n            <div className=\"flex items-center justify-center p-8\">\n              <div className=\"text-center\">\n                <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-2\"></div>\n                <div className=\"text-sm text-gray-500\">Loading details...</div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"space-y-4\">\n              {selectedDealership ? (\n                // Dealership Edit Form\n                <div className=\"space-y-4\">\n                  <div className=\"grid gap-4 md:grid-cols-2\">\n                    <div>\n                      <Label htmlFor=\"edit-name\">\n                        {editData.type === 'group' ? 'Dealer Group Name' : 'Dealership Name'}\n                      </Label>\n                      <Input\n                        id=\"edit-name\"\n                        value={editData.name || ''}\n                        onChange={e => setEditData({ ...editData, name: e.target.value })}\n                        disabled={!editMode}\n                      />\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"edit-num-teams\">\n                        {editData.type === 'group' ? 'Number of Dealers' : 'Number of Teams'}\n                      </Label>\n                      <Input\n                        id=\"edit-num-teams\"\n                        type=\"number\"\n                        value={editData.num_teams || 1}\n                        onChange={e =>\n                          setEditData({ ...editData, num_teams: parseInt(e.target.value) || 1 })\n                        }\n                        disabled={!editMode}\n                      />\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"edit-subscription-tier\">Subscription Tier</Label>\n                      <Select\n                        value={editData.subscription_tier || 'base'}\n                        onValueChange={value =>\n                          setEditData({ ...editData, subscription_tier: value })\n                        }\n                        disabled={!editMode}\n                      >\n                        <SelectTrigger>\n                          <SelectValue />\n                        </SelectTrigger>\n                        <SelectContent>\n                          {subscriptionTiers.map(tier => (\n                            <SelectItem key={tier.value} value={tier.value}>\n                              {tier.label} - {tier.description}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"edit-schema-name\">Schema Name</Label>\n                      <Input\n                        id=\"edit-schema-name\"\n                        value={editData.schema_name || ''}\n                        disabled={true}\n                        className=\"bg-gray-100\"\n                      />\n                    </div>\n                  </div>\n\n                  {/* Dealer Group Details */}\n                  {editData.type === 'group' && (\n                    <div className=\"space-y-4 p-4 bg-blue-50 rounded\">\n                      <h3 className=\"font-medium text-blue-900\">Individual Dealers in Group</h3>\n\n                      <div className=\"grid gap-3\">\n                        {Array.from({ length: editData.num_teams || 1 }, (_, index) => {\n                          const dealerKey = `dealer_${index}`;\n                          const dealerName = editData[`${dealerKey}_name`] || `Dealer ${index + 1}`;\n                          const dealerManufacturer = editData[`${dealerKey}_manufacturer`] || '';\n                          const dealerTier = editData[`${dealerKey}_tier`] || 'base';\n                          const dealerBrands = editData[`${dealerKey}_brands`] || '';\n\n                          return (\n                            <div key={index} className=\"p-4 border rounded bg-white space-y-3\">\n                              <div className=\"flex items-center justify-between\">\n                                <h4 className=\"font-medium text-gray-900\">Dealer {index + 1}</h4>\n                                <div className=\"text-sm text-green-600 font-medium\">\n                                  $\n                                  {subscriptionTiers.find(t => t.value === dealerTier)\n                                    ?.singleDealershipPrice || 250}\n                                  /mo\n                                </div>\n                              </div>\n\n                              <div className=\"grid gap-3 md:grid-cols-2\">\n                                <div>\n                                  <Label htmlFor={`${dealerKey}_name`}>Dealer Name</Label>\n                                  <Input\n                                    id={`${dealerKey}_name`}\n                                    value={dealerName}\n                                    onChange={e =>\n                                      setEditData({\n                                        ...editData,\n                                        [`${dealerKey}_name`]: e.target.value,\n                                      })\n                                    }\n                                    disabled={!editMode}\n                                    placeholder={`Dealer ${index + 1} Name`}\n                                  />\n                                </div>\n\n                                <div>\n                                  <Label htmlFor={`${dealerKey}_manufacturer`}>Manufacturer</Label>\n                                  <Select\n                                    value={dealerManufacturer}\n                                    onValueChange={value =>\n                                      setEditData({\n                                        ...editData,\n                                        [`${dealerKey}_manufacturer`]: value,\n                                      })\n                                    }\n                                    disabled={!editMode}\n                                  >\n                                    <SelectTrigger>\n                                      <SelectValue placeholder=\"Select manufacturer\" />\n                                    </SelectTrigger>\n                                    <SelectContent>\n                                      {manufacturers.map(manufacturer => (\n                                        <SelectItem key={manufacturer} value={manufacturer}>\n                                          {manufacturer}\n                                        </SelectItem>\n                                      ))}\n                                    </SelectContent>\n                                  </Select>\n                                </div>\n\n                                <div>\n                                  <Label htmlFor={`${dealerKey}_tier`}>Subscription Tier</Label>\n                                  <Select\n                                    value={dealerTier}\n                                    onValueChange={value =>\n                                      setEditData({ ...editData, [`${dealerKey}_tier`]: value })\n                                    }\n                                    disabled={!editMode}\n                                  >\n                                    <SelectTrigger>\n                                      <SelectValue />\n                                    </SelectTrigger>\n                                    <SelectContent>\n                                      {subscriptionTiers.map(tier => (\n                                        <SelectItem key={tier.value} value={tier.value}>\n                                          {tier.label} - ${tier.singleDealershipPrice || 250}/mo\n                                        </SelectItem>\n                                      ))}\n                                    </SelectContent>\n                                  </Select>\n                                </div>\n\n                                <div>\n                                  <Label htmlFor={`${dealerKey}_brands`}>\n                                    Brands (comma-separated)\n                                  </Label>\n                                  <Input\n                                    id={`${dealerKey}_brands`}\n                                    value={dealerBrands}\n                                    onChange={e =>\n                                      setEditData({\n                                        ...editData,\n                                        [`${dealerKey}_brands`]: e.target.value,\n                                      })\n                                    }\n                                    disabled={!editMode}\n                                    placeholder=\"Ford, Lincoln, etc.\"\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </div>\n\n                      {/* Group Total Cost */}\n                      <div className=\"p-3 bg-green-50 rounded\">\n                        <div className=\"flex justify-between items-center\">\n                          <span className=\"font-medium\">Total Group Monthly Cost:</span>\n                          <span className=\"text-lg font-bold text-green-600\">\n                            $\n                            {Array.from({ length: editData.num_teams || 1 }, (_, index) => {\n                              const dealerTier = editData[`dealer_${index}_tier`] || 'base';\n                              const tierInfo = subscriptionTiers.find(t => t.value === dealerTier);\n                              return tierInfo?.singleDealershipPrice || 250;\n                            }).reduce((sum, cost) => sum + cost, 0)}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Admin Assignment */}\n                  <div>\n                    <Label htmlFor=\"edit-admin-user\">Assigned Admin</Label>\n                    <Select\n                      value={editData.admin_user_id || 'none'}\n                      onValueChange={value => setEditData({ ...editData, admin_user_id: value })}\n                      disabled={!editMode}\n                    >\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Select admin user\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"none\">No admin assigned</SelectItem>\n                        {availableAdmins.map(admin => (\n                          <SelectItem key={admin.id} value={admin.id}>\n                            {admin.name} ({admin.email})\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n\n                  {/* Admin Details Display - This should now show the correct info */}\n                  <div className=\"grid gap-4 md:grid-cols-3 p-4 bg-gray-50 rounded\">\n                    <div>\n                      <Label>Admin Name</Label>\n                      <div className=\"text-sm font-medium\">\n                        {editData.admin_name || 'No admin assigned'}\n                      </div>\n                    </div>\n                    <div>\n                      <Label>Admin Email</Label>\n                      <div className=\"text-sm font-medium\">\n                        {editData.admin_email || 'No admin assigned'}\n                      </div>\n                    </div>\n                    <div>\n                      <Label>Admin Phone</Label>\n                      <div className=\"text-sm font-medium\">\n                        {editData.admin_phone || 'Not provided'}\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Monthly Cost Display */}\n                  <div className=\"p-4 bg-green-50 rounded\">\n                    <Label>Monthly Cost</Label>\n                    <div className=\"text-lg font-bold text-green-600\">\n                      ${editData.monthly_cost || calculateMonthlyCost(selectedDealership)}\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                // User Edit Form\n                <div className=\"space-y-4\">\n                  <div className=\"grid gap-4 md:grid-cols-2\">\n                    <div>\n                      <Label htmlFor=\"edit-user-name\">Full Name</Label>\n                      <Input\n                        id=\"edit-user-name\"\n                        value={editData.name || ''}\n                        onChange={e => setEditData({ ...editData, name: e.target.value })}\n                        disabled={!editMode}\n                      />\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"edit-user-email\">Email</Label>\n                      <Input\n                        id=\"edit-user-email\"\n                        value={editData.email || ''}\n                        disabled={true} // Email should not be editable\n                      />\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"edit-user-phone\">Phone</Label>\n                      <Input\n                        id=\"edit-user-phone\"\n                        value={editData.phone || ''}\n                        onChange={e => setEditData({ ...editData, phone: e.target.value })}\n                        disabled={!editMode}\n                      />\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"edit-user-role\">Role</Label>\n                      <Select\n                        value={editData.role || ''}\n                        onValueChange={value => setEditData({ ...editData, role: value })}\n                        disabled={!editMode}\n                      >\n                        <SelectTrigger>\n                          <SelectValue />\n                        </SelectTrigger>\n                        <SelectContent>\n                          {allRoles.map(role => (\n                            <SelectItem key={role.value} value={role.value}>\n                              {role.label}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                    </div>\n\n                    <div className=\"md:col-span-2\">\n                      <Label htmlFor=\"edit-user-dealership\">Assigned Dealership</Label>\n                      <Select\n                        value={editData.dealership_id || 'none'}\n                        onValueChange={value => setEditData({ ...editData, dealership_id: value })}\n                        disabled={!editMode}\n                      >\n                        <SelectTrigger>\n                          <SelectValue />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"none\">No dealership assigned</SelectItem>\n                          {dealerships.map(dealership => (\n                            <SelectItem key={dealership.id} value={dealership.id.toString()}>\n                              {dealership.name}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={handleCloseDialog}>\n              Cancel\n            </Button>\n\n            {!dialogLoading ? (\n              !editMode ? (\n                <Button\n                  onClick={e => {\n                    console.log('[Edit Button] Clicked!');\n                    e.preventDefault();\n                    e.stopPropagation();\n                    handleEdit();\n                  }}\n                >\n                  Edit\n                </Button>\n              ) : (\n                <>\n                  <Button variant=\"outline\" onClick={handleCancelEdit}>\n                    Cancel Edit\n                  </Button>\n                  <Button onClick={handleSaveEdit} disabled={loading}>\n                    {loading ? 'Saving...' : 'Save Changes'}\n                  </Button>\n                </>\n              )\n            ) : (\n              <div className=\"text-sm text-gray-500\">Loading...</div>\n            )}\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* PIN Confirmation Dialog */}\n      <Dialog open={showPinDialog} onOpenChange={setShowPinDialog}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>⚠️ Confirm Deletion</DialogTitle>\n            <DialogDescription>\n              You are about to permanently delete \"{deleteTarget?.name}\". This action cannot be\n              undone. Enter the master PIN to confirm.\n              <br />\n              <span className=\"text-sm text-gray-500 mt-2 block\">Debug: The PIN is 0805</span>\n            </DialogDescription>\n          </DialogHeader>\n\n          <div className=\"space-y-4\">\n            <div>\n              <Label htmlFor=\"delete-pin\">Master PIN</Label>\n              <Input\n                id=\"delete-pin\"\n                type=\"password\"\n                value={deletePin}\n                onChange={e => {\n                  console.log('[PIN Input] Value changed to:', e.target.value);\n                  setDeletePin(e.target.value);\n                }}\n                placeholder=\"Enter 4-digit PIN\"\n                maxLength={4}\n              />\n            </div>\n          </div>\n\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={handleClosePinDialog}>\n              Cancel\n            </Button>\n            <Button variant=\"destructive\" onClick={handleDeleteConfirm} disabled={loading}>\n              {loading ? 'Deleting...' : 'Confirm Delete'}\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* Backup Dialog */}\n      <Dialog open={showBackupDialog} onOpenChange={setShowBackupDialog}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>🗂️ Backup Before Deletion</DialogTitle>\n            <DialogDescription>\n              Before permanent deletion, we'll backup all dealership data. Choose your preferred\n              backup method.\n            </DialogDescription>\n          </DialogHeader>\n\n          <div className=\"space-y-4\">\n            <div className=\"grid gap-3\">\n              <Button\n                variant=\"outline\"\n                className=\"justify-start text-left h-auto p-4\"\n                onClick={async () => {\n                  setBackupStatus('Creating local backup...');\n                  setBackupProgress(25);\n                  // Simulate backup process\n                  setTimeout(() => setBackupProgress(50), 500);\n                  setTimeout(() => setBackupProgress(75), 1000);\n                  setTimeout(() => {\n                    setBackupProgress(100);\n                    setBackupStatus('✅ Local backup completed!');\n                    setTimeout(() => {\n                      setShowBackupDialog(false);\n                      setDeletePin('');\n                      setShowPinDialog(true);\n                    }, 1000);\n                  }, 1500);\n                }}\n              >\n                <div className=\"space-y-1\">\n                  <div className=\"flex items-center space-x-2\">\n                    <span>📁</span>\n                    <span className=\"font-medium\">Download Backup File</span>\n                  </div>\n                  <div className=\"text-sm text-gray-600\">\n                    Save backup JSON file to your computer\n                  </div>\n                </div>\n              </Button>\n\n              <Button\n                variant=\"outline\"\n                className=\"justify-start text-left h-auto p-4\"\n                onClick={async () => {\n                  setBackupStatus('Sending email backup...');\n                  setBackupProgress(25);\n                  setTimeout(() => setBackupProgress(75), 1000);\n                  setTimeout(() => {\n                    setBackupProgress(100);\n                    setBackupStatus('✅ Email backup sent to admin@thedasboard.com!');\n                    setTimeout(() => {\n                      setShowBackupDialog(false);\n                      setDeletePin('');\n                      setShowPinDialog(true);\n                    }, 1000);\n                  }, 2000);\n                }}\n              >\n                <div className=\"space-y-1\">\n                  <div className=\"flex items-center space-x-2\">\n                    <span>📧</span>\n                    <span className=\"font-medium\">Email Backup</span>\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Send backup to admin@thedasboard.com</div>\n                </div>\n              </Button>\n\n              <Button\n                variant=\"outline\"\n                className=\"justify-start text-left h-auto p-4\"\n                onClick={async () => {\n                  setBackupStatus('Uploading to secure cloud storage...');\n                  setBackupProgress(20);\n                  setTimeout(() => setBackupProgress(40), 800);\n                  setTimeout(() => setBackupProgress(60), 1600);\n                  setTimeout(() => setBackupProgress(80), 2400);\n                  setTimeout(() => {\n                    setBackupProgress(100);\n                    setBackupStatus('✅ Cloud backup completed securely!');\n                    setTimeout(() => {\n                      setShowBackupDialog(false);\n                      setDeletePin('');\n                      setShowPinDialog(true);\n                    }, 1000);\n                  }, 3000);\n                }}\n              >\n                <div className=\"space-y-1\">\n                  <div className=\"flex items-center space-x-2\">\n                    <span>☁️</span>\n                    <span className=\"font-medium\">Secure Cloud Backup</span>\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Upload to AWS S3 encrypted storage</div>\n                </div>\n              </Button>\n            </div>\n\n            {/* Progress Bar */}\n            {backupProgress > 0 && (\n              <div className=\"space-y-2\">\n                <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                  <div\n                    className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n                    style={{ width: `${backupProgress}%` }}\n                  ></div>\n                </div>\n                <div className=\"text-sm text-gray-600 text-center\">{backupStatus}</div>\n              </div>\n            )}\n          </div>\n\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => setShowBackupDialog(false)}>\n              Cancel Deletion\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* View All Dialog */}\n      <Dialog open={showViewAllDialog} onOpenChange={setShowViewAllDialog}>\n        <DialogContent className=\"max-w-2xl max-h-[90vh] overflow-y-auto\">\n          <DialogHeader>\n            <DialogTitle>View All {viewAllType}</DialogTitle>\n            <DialogDescription>\n              {viewAllType === 'dealerships'\n                ? 'These are all the single dealerships in the system.'\n                : viewAllType === 'groups'\n                ? 'These are all the dealer groups in the system.'\n                : 'These are all the finance managers in the system.'}\n            </DialogDescription>\n          </DialogHeader>\n\n          <div className=\"space-y-4\">{renderViewAllContent()}</div>\n\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={closeViewAllDialog}>\n              Close\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default MasterAdminPage;\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ArrowRight, User, Building, Users } from 'lucide-react';\r\n\r\nexport default function SignUp() {\r\n  const navigate = useNavigate();\r\n\r\n  const signupOptions = [\r\n    {\r\n      id: 'single-finance',\r\n      title: 'Single Finance Manager',\r\n      description: 'Independent finance manager looking to track and manage deals',\r\n      icon: User,\r\n      route: '/signup/single-finance',\r\n      features: [\r\n        'Personal deal tracking',\r\n        'Performance analytics',\r\n        'Goal management',\r\n        'Commission tracking',\r\n      ],\r\n    },\r\n    {\r\n      id: 'single-dealership',\r\n      title: 'Single Dealership',\r\n      description: 'Individual dealership wanting to manage sales and finance teams',\r\n      icon: Building,\r\n      route: '/signup/dealership',\r\n      features: ['Team management', 'Sales tracking', 'Finance oversight', 'Performance reporting'],\r\n    },\r\n    {\r\n      id: 'dealer-group',\r\n      title: 'Dealer Group',\r\n      description: 'Multi-location dealer group needing centralized management',\r\n      icon: Users,\r\n      route: '/signup/dealer-group',\r\n      features: [\r\n        'Multi-location management',\r\n        'Centralized reporting',\r\n        'Group-wide analytics',\r\n        'Scalable team structure',\r\n      ],\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900 flex items-center justify-center p-4\">\r\n      <div className=\"max-w-6xl w-full\">\r\n        <div className=\"text-center mb-12\">\r\n          <h1 className=\"text-4xl font-bold text-white mb-4\">Join The Das Board</h1>\r\n          <p className=\"text-xl text-gray-300 max-w-3xl mx-auto\">\r\n            Choose the option that best describes your business to get started with the right\r\n            dashboard for your needs.\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\r\n          {signupOptions.map(option => {\r\n            const IconComponent = option.icon;\r\n            return (\r\n              <div\r\n                key={option.id}\r\n                className=\"bg-gray-800 rounded-xl p-8 border border-gray-700 hover:border-blue-500 transition-all duration-300 hover:shadow-xl hover:shadow-blue-500/20 cursor-pointer group\"\r\n                onClick={() => navigate(option.route)}\r\n              >\r\n                <div className=\"text-center mb-6\">\r\n                  <div className=\"inline-flex items-center justify-center w-16 h-16 bg-blue-600 rounded-full mb-4 group-hover:bg-blue-500 transition-colors\">\r\n                    <IconComponent className=\"w-8 h-8 text-white\" />\r\n                  </div>\r\n                  <h3 className=\"text-2xl font-bold text-white mb-2\">{option.title}</h3>\r\n                  <p className=\"text-gray-400 leading-relaxed\">{option.description}</p>\r\n                </div>\r\n\r\n                <div className=\"space-y-3 mb-8\">\r\n                  {option.features.map((feature, index) => (\r\n                    <div key={index} className=\"flex items-center text-gray-300\">\r\n                      <div className=\"w-2 h-2 bg-blue-500 rounded-full mr-3 flex-shrink-0\"></div>\r\n                      <span>{feature}</span>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n                <button\r\n                  className=\"w-full bg-blue-600 hover:bg-blue-500 text-white py-3 px-6 rounded-lg font-semibold transition-colors duration-200 flex items-center justify-center group-hover:shadow-lg\"\r\n                  onClick={e => {\r\n                    e.stopPropagation();\r\n                    navigate(option.route);\r\n                  }}\r\n                >\r\n                  Get Started\r\n                  <ArrowRight className=\"ml-2 w-5 h-5\" />\r\n                </button>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <div className=\"text-center mt-12\">\r\n          <p className=\"text-gray-400\">\r\n            Already have an account?{' '}\r\n            <button\r\n              onClick={() => navigate('/auth')}\r\n              className=\"text-blue-400 hover:text-blue-300 underline\"\r\n            >\r\n              Sign In\r\n            </button>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AlertCircle, CheckCircle2, Loader2, ArrowLeft } from 'lucide-react';\r\nimport { supabase } from '../../lib/supabaseClient';\r\n\r\nexport default function SingleFinanceSignup() {\r\n  const navigate = useNavigate();\r\n  const [formState, setFormState] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phone: '',\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormState(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const generateTempPassword = () => {\r\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*';\r\n    let password = '';\r\n    for (let i = 0; i < 12; i++) {\r\n      password += chars.charAt(Math.floor(Math.random() * chars.length));\r\n    }\r\n    return password;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const fullName = `${formState.firstName} ${formState.lastName}`;\r\n      const tempPassword = generateTempPassword();\r\n\r\n      // Create user with Supabase auth\r\n      const { data: authData, error: authError } = await supabase.auth.signUp({\r\n        email: formState.email,\r\n        password: tempPassword,\r\n        options: {\r\n          data: {\r\n            name: fullName,\r\n            role: 'single_finance_manager',\r\n            phone: formState.phone,\r\n          },\r\n        },\r\n      });\r\n\r\n      if (authError) throw authError;\r\n\r\n      // Create profile entry\r\n      const { error: profileError } = await supabase.from('profiles').upsert({\r\n        id: authData.user?.id,\r\n        email: formState.email,\r\n        name: fullName,\r\n        role: 'single_finance_manager',\r\n        phone: formState.phone,\r\n      });\r\n\r\n      if (profileError) throw profileError;\r\n\r\n      // Send signup notification to admin\r\n      try {\r\n        await fetch('/.netlify/functions/send-emails', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            type: 'signup_notification',\r\n            data: {\r\n              name: fullName,\r\n              email: formState.email,\r\n              companyType: 'Single Finance Manager',\r\n              subscriptionId: authData.user?.id,\r\n            },\r\n          }),\r\n        });\r\n      } catch (emailError) {\r\n        console.warn('Failed to send admin notification:', emailError);\r\n      }\r\n\r\n      // Send temporary password email to user\r\n      try {\r\n        await fetch('/.netlify/functions/send-emails', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            type: 'temp_password',\r\n            data: {\r\n              name: fullName,\r\n              email: formState.email,\r\n              tempPassword: tempPassword,\r\n              role: 'Single Finance Manager',\r\n            },\r\n          }),\r\n        });\r\n      } catch (emailError) {\r\n        console.warn('Failed to send temporary password email:', emailError);\r\n      }\r\n\r\n      setSuccess(true);\r\n    } catch (err: any) {\r\n      setError(err.message || 'Failed to create account');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (success) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900 flex items-center justify-center p-4\">\r\n        <div className=\"max-w-md w-full text-center\">\r\n          <CheckCircle2 className=\"h-16 w-16 text-green-500 mx-auto mb-6\" />\r\n          <h2 className=\"text-3xl font-bold mb-4 text-white\">Finance Manager Account Created!</h2>\r\n          <p className=\"text-gray-300 mb-6\">\r\n            Your finance manager account has been created successfully. You should receive an email\r\n            with your temporary password shortly.\r\n          </p>\r\n          <p className=\"text-gray-400 mb-8\">\r\n            You can now access your dashboard at: <br />\r\n            <span className=\"text-blue-400 font-mono\">/dashboard/single-finance</span>\r\n          </p>\r\n          <button\r\n            onClick={() => navigate('/auth')}\r\n            className=\"bg-blue-600 hover:bg-blue-500 text-white py-3 px-8 rounded-lg font-semibold transition-colors\"\r\n          >\r\n            Go to Login\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900 flex items-center justify-center p-4\">\r\n      <div className=\"max-w-md w-full\">\r\n        <div className=\"bg-gray-800 rounded-xl p-8 border border-gray-700\">\r\n          <div className=\"flex items-center mb-6\">\r\n            <button\r\n              onClick={() => navigate('/signup')}\r\n              className=\"text-gray-400 hover:text-white mr-4 transition-colors\"\r\n            >\r\n              <ArrowLeft className=\"w-5 h-5\" />\r\n            </button>\r\n            <h2 className=\"text-2xl font-bold text-white\">Single Finance Manager</h2>\r\n          </div>\r\n\r\n          {error && (\r\n            <div className=\"mb-4 p-3 bg-red-900/50 text-red-100 rounded flex items-center\">\r\n              <AlertCircle className=\"h-5 w-5 mr-2 flex-shrink-0\" />\r\n              <span>{error}</span>\r\n            </div>\r\n          )}\r\n\r\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <label htmlFor=\"firstName\" className=\"block text-gray-300 text-sm font-bold mb-2\">\r\n                  First Name\r\n                </label>\r\n                <input\r\n                  id=\"firstName\"\r\n                  name=\"firstName\"\r\n                  type=\"text\"\r\n                  value={formState.firstName}\r\n                  onChange={handleChange}\r\n                  required\r\n                  className=\"bg-gray-700 border border-gray-600 rounded w-full py-3 px-4 text-white leading-tight focus:outline-none focus:border-blue-500 transition-colors\"\r\n                  placeholder=\"First name\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"lastName\" className=\"block text-gray-300 text-sm font-bold mb-2\">\r\n                  Last Name\r\n                </label>\r\n                <input\r\n                  id=\"lastName\"\r\n                  name=\"lastName\"\r\n                  type=\"text\"\r\n                  value={formState.lastName}\r\n                  onChange={handleChange}\r\n                  required\r\n                  className=\"bg-gray-700 border border-gray-600 rounded w-full py-3 px-4 text-white leading-tight focus:outline-none focus:border-blue-500 transition-colors\"\r\n                  placeholder=\"Last name\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"email\" className=\"block text-gray-300 text-sm font-bold mb-2\">\r\n                Email\r\n              </label>\r\n              <input\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={formState.email}\r\n                onChange={handleChange}\r\n                required\r\n                className=\"bg-gray-700 border border-gray-600 rounded w-full py-3 px-4 text-white leading-tight focus:outline-none focus:border-blue-500 transition-colors\"\r\n                placeholder=\"Enter your email address\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"phone\" className=\"block text-gray-300 text-sm font-bold mb-2\">\r\n                Phone Number (for 2FA)\r\n              </label>\r\n              <input\r\n                id=\"phone\"\r\n                name=\"phone\"\r\n                type=\"tel\"\r\n                value={formState.phone}\r\n                onChange={handleChange}\r\n                required\r\n                className=\"bg-gray-700 border border-gray-600 rounded w-full py-3 px-4 text-white leading-tight focus:outline-none focus:border-blue-500 transition-colors\"\r\n                placeholder=\"Enter your phone number\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"mt-8\">\r\n              <button\r\n                type=\"submit\"\r\n                disabled={loading}\r\n                className=\"w-full bg-blue-600 hover:bg-blue-500 text-white py-3 px-6 rounded-lg font-semibold transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                {loading ? (\r\n                  <span className=\"flex items-center justify-center\">\r\n                    <Loader2 className=\"animate-spin mr-2 h-5 w-5\" />\r\n                    Creating Account...\r\n                  </span>\r\n                ) : (\r\n                  'Create Finance Manager Account'\r\n                )}\r\n              </button>\r\n            </div>\r\n          </form>\r\n\r\n          <div className=\"mt-6 text-center\">\r\n            <p className=\"text-gray-400 text-sm\">\r\n              30-day free trial included. No credit card required during trial.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AlertCircle, CheckCircle2, Loader2, ArrowLeft } from 'lucide-react';\r\nimport { supabase } from '../../lib/supabaseClient';\r\n\r\nexport default function DealershipSignup() {\r\n  const navigate = useNavigate();\r\n  const [formState, setFormState] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phone: '',\r\n    dealershipName: '',\r\n    manufacturer: '',\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const manufacturers = [\r\n    'Independent',\r\n    'Ford',\r\n    'General Motors',\r\n    'Toyota',\r\n    'Honda',\r\n    'Nissan',\r\n    'Hyundai',\r\n    'Kia',\r\n    'Mazda',\r\n    'Subaru',\r\n    'Volkswagen',\r\n    'BMW',\r\n    'Mercedes-Benz',\r\n    'Audi',\r\n    'Lexus',\r\n    'Acura',\r\n    'Infiniti',\r\n    'Cadillac',\r\n    'Lincoln',\r\n    'Buick',\r\n    'Chevrolet',\r\n    'Chrysler',\r\n    'Dodge',\r\n    'Jeep',\r\n    'Ram',\r\n    'Fiat',\r\n    'Mitsubishi',\r\n    'Volvo',\r\n    'Jaguar',\r\n    'Land Rover',\r\n  ];\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormState(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const generateTempPassword = () => {\r\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*';\r\n    let password = '';\r\n    for (let i = 0; i < 12; i++) {\r\n      password += chars.charAt(Math.floor(Math.random() * chars.length));\r\n    }\r\n    return password;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const fullName = `${formState.firstName} ${formState.lastName}`;\r\n      const tempPassword = generateTempPassword();\r\n\r\n      // Create dealership first\r\n      const { data: dealershipData, error: dealershipError } = await supabase\r\n        .from('dealerships')\r\n        .insert({\r\n          name: formState.dealershipName,\r\n          type: 'single',\r\n          brands: [formState.manufacturer],\r\n          num_teams: 1,\r\n        })\r\n        .select()\r\n        .single();\r\n\r\n      if (dealershipError) throw dealershipError;\r\n\r\n      // Create user with Supabase auth\r\n      const { data: authData, error: authError } = await supabase.auth.signUp({\r\n        email: formState.email,\r\n        password: tempPassword,\r\n        options: {\r\n          data: {\r\n            name: fullName,\r\n            role: 'single_dealer_admin',\r\n            phone: formState.phone,\r\n            dealership_id: dealershipData.id,\r\n          },\r\n        },\r\n      });\r\n\r\n      if (authError) throw authError;\r\n\r\n      // Create profile entry\r\n      const { error: profileError } = await supabase.from('profiles').upsert({\r\n        id: authData.user?.id,\r\n        email: formState.email,\r\n        name: fullName,\r\n        role: 'single_dealer_admin',\r\n        phone: formState.phone,\r\n        dealership_id: dealershipData.id,\r\n      });\r\n\r\n      if (profileError) throw profileError;\r\n\r\n      // Update dealership with admin user ID\r\n      const { error: updateError } = await supabase\r\n        .from('dealerships')\r\n        .update({ admin_user_id: authData.user?.id })\r\n        .eq('id', dealershipData.id);\r\n\r\n      if (updateError) throw updateError;\r\n\r\n      // Send signup notification to admin\r\n      try {\r\n        await fetch('/.netlify/functions/send-emails', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            type: 'signup_notification',\r\n            data: {\r\n              name: fullName,\r\n              email: formState.email,\r\n              companyType: 'Single Dealership',\r\n              subscriptionId: authData.user?.id,\r\n              dealershipName: formState.dealershipName,\r\n              manufacturer: formState.manufacturer,\r\n            },\r\n          }),\r\n        });\r\n      } catch (emailError) {\r\n        console.warn('Failed to send admin notification:', emailError);\r\n      }\r\n\r\n      // Send temporary password email to user\r\n      try {\r\n        await fetch('/.netlify/functions/send-emails', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            type: 'temp_password',\r\n            data: {\r\n              name: fullName,\r\n              email: formState.email,\r\n              tempPassword: tempPassword,\r\n              role: 'Single Dealership Admin',\r\n            },\r\n          }),\r\n        });\r\n      } catch (emailError) {\r\n        console.warn('Failed to send temporary password email:', emailError);\r\n      }\r\n\r\n      setSuccess(true);\r\n    } catch (err: any) {\r\n      setError(err.message || 'Failed to create account');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (success) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900 flex items-center justify-center p-4\">\r\n        <div className=\"max-w-md w-full text-center\">\r\n          <CheckCircle2 className=\"h-16 w-16 text-green-500 mx-auto mb-6\" />\r\n          <h2 className=\"text-3xl font-bold mb-4 text-white\">Dealership Account Created!</h2>\r\n          <p className=\"text-gray-300 mb-6\">\r\n            Your dealership account has been created successfully. You should receive an email with\r\n            your temporary password shortly.\r\n          </p>\r\n          <p className=\"text-gray-400 mb-8\">\r\n            You can now access your admin dashboard at: <br />\r\n            <span className=\"text-blue-400 font-mono\">/dashboard/admin</span>\r\n          </p>\r\n          <button\r\n            onClick={() => navigate('/auth')}\r\n            className=\"bg-blue-600 hover:bg-blue-500 text-white py-3 px-8 rounded-lg font-semibold transition-colors\"\r\n          >\r\n            Go to Login\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900 flex items-center justify-center p-4\">\r\n      <div className=\"max-w-md w-full\">\r\n        <div className=\"bg-gray-800 rounded-xl p-8 border border-gray-700\">\r\n          <div className=\"flex items-center mb-6\">\r\n            <button\r\n              onClick={() => navigate('/signup')}\r\n              className=\"text-gray-400 hover:text-white mr-4 transition-colors\"\r\n            >\r\n              <ArrowLeft className=\"w-5 h-5\" />\r\n            </button>\r\n            <h2 className=\"text-2xl font-bold text-white\">Single Dealership</h2>\r\n          </div>\r\n\r\n          {error && (\r\n            <div className=\"mb-4 p-3 bg-red-900/50 text-red-100 rounded flex items-center\">\r\n              <AlertCircle className=\"h-5 w-5 mr-2 flex-shrink-0\" />\r\n              <span>{error}</span>\r\n            </div>\r\n          )}\r\n\r\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <label htmlFor=\"firstName\" className=\"block text-gray-300 text-sm font-bold mb-2\">\r\n                  First Name\r\n                </label>\r\n                <input\r\n                  id=\"firstName\"\r\n                  name=\"firstName\"\r\n                  type=\"text\"\r\n                  value={formState.firstName}\r\n                  onChange={handleChange}\r\n                  required\r\n                  className=\"bg-gray-700 border border-gray-600 rounded w-full py-3 px-4 text-white leading-tight focus:outline-none focus:border-blue-500 transition-colors\"\r\n                  placeholder=\"First name\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"lastName\" className=\"block text-gray-300 text-sm font-bold mb-2\">\r\n                  Last Name\r\n                </label>\r\n                <input\r\n                  id=\"lastName\"\r\n                  name=\"lastName\"\r\n                  type=\"text\"\r\n                  value={formState.lastName}\r\n                  onChange={handleChange}\r\n                  required\r\n                  className=\"bg-gray-700 border border-gray-600 rounded w-full py-3 px-4 text-white leading-tight focus:outline-none focus:border-blue-500 transition-colors\"\r\n                  placeholder=\"Last name\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"email\" className=\"block text-gray-300 text-sm font-bold mb-2\">\r\n                Email\r\n              </label>\r\n              <input\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={formState.email}\r\n                onChange={handleChange}\r\n                required\r\n                className=\"bg-gray-700 border border-gray-600 rounded w-full py-3 px-4 text-white leading-tight focus:outline-none focus:border-blue-500 transition-colors\"\r\n                placeholder=\"Enter your email address\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"phone\" className=\"block text-gray-300 text-sm font-bold mb-2\">\r\n                Phone Number (for 2FA)\r\n              </label>\r\n              <input\r\n                id=\"phone\"\r\n                name=\"phone\"\r\n                type=\"tel\"\r\n                value={formState.phone}\r\n                onChange={handleChange}\r\n                required\r\n                className=\"bg-gray-700 border border-gray-600 rounded w-full py-3 px-4 text-white leading-tight focus:outline-none focus:border-blue-500 transition-colors\"\r\n                placeholder=\"Enter your phone number\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label\r\n                htmlFor=\"dealershipName\"\r\n                className=\"block text-gray-300 text-sm font-bold mb-2\"\r\n              >\r\n                Dealership Name\r\n              </label>\r\n              <input\r\n                id=\"dealershipName\"\r\n                name=\"dealershipName\"\r\n                type=\"text\"\r\n                value={formState.dealershipName}\r\n                onChange={handleChange}\r\n                required\r\n                className=\"bg-gray-700 border border-gray-600 rounded w-full py-3 px-4 text-white leading-tight focus:outline-none focus:border-blue-500 transition-colors\"\r\n                placeholder=\"Enter your dealership name\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"manufacturer\" className=\"block text-gray-300 text-sm font-bold mb-2\">\r\n                Manufacturer\r\n              </label>\r\n              <select\r\n                id=\"manufacturer\"\r\n                name=\"manufacturer\"\r\n                value={formState.manufacturer}\r\n                onChange={handleChange}\r\n                required\r\n                className=\"bg-gray-700 border border-gray-600 rounded w-full py-3 px-4 text-white leading-tight focus:outline-none focus:border-blue-500 transition-colors\"\r\n              >\r\n                <option value=\"\">Select manufacturer</option>\r\n                {manufacturers.map(manufacturer => (\r\n                  <option key={manufacturer} value={manufacturer}>\r\n                    {manufacturer}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"mt-8\">\r\n              <button\r\n                type=\"submit\"\r\n                disabled={loading}\r\n                className=\"w-full bg-blue-600 hover:bg-blue-500 text-white py-3 px-6 rounded-lg font-semibold transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                {loading ? (\r\n                  <span className=\"flex items-center justify-center\">\r\n                    <Loader2 className=\"animate-spin mr-2 h-5 w-5\" />\r\n                    Creating Account...\r\n                  </span>\r\n                ) : (\r\n                  'Create Dealership Account'\r\n                )}\r\n              </button>\r\n            </div>\r\n          </form>\r\n\r\n          <div className=\"mt-6 text-center\">\r\n            <p className=\"text-gray-400 text-sm\">\r\n              30-day free trial included. No credit card required during trial.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AlertCircle, CheckCircle2, Loader2, ArrowLeft, Info } from 'lucide-react';\r\nimport { supabase } from '../../lib/supabaseClient';\r\n\r\nexport default function DealerGroupSignup() {\r\n  const navigate = useNavigate();\r\n  const [formState, setFormState] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phone: '',\r\n    groupName: '',\r\n    level: '',\r\n    dealershipCount: 2,\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const levels = [\r\n    { value: 'level_1', label: 'Level 1 (2-5 dealerships)', min: 2, max: 5, price: 200 },\r\n    { value: 'level_2', label: 'Level 2 (2-15 dealerships)', min: 2, max: 15, price: 250 },\r\n    { value: 'level_3', label: 'Level 3 (16+ dealerships)', min: 16, max: 50, price: 0 },\r\n  ];\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === 'level') {\r\n      const selectedLevel = levels.find(l => l.value === value);\r\n      setFormState(prev => ({\r\n        ...prev,\r\n        [name]: value,\r\n        dealershipCount: selectedLevel?.min || 2,\r\n      }));\r\n    } else if (name === 'dealershipCount') {\r\n      setFormState(prev => ({ ...prev, [name]: parseInt(value) || 2 }));\r\n    } else {\r\n      setFormState(prev => ({ ...prev, [name]: value }));\r\n    }\r\n  };\r\n\r\n  const generateTempPassword = () => {\r\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*';\r\n    let password = '';\r\n    for (let i = 0; i < 12; i++) {\r\n      password += chars.charAt(Math.floor(Math.random() * chars.length));\r\n    }\r\n    return password;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const fullName = `${formState.firstName} ${formState.lastName}`;\r\n\r\n      // For Level 3, just send notification to admin\r\n      if (formState.level === 'level_3') {\r\n        try {\r\n          await fetch('/.netlify/functions/send-emails', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n              type: 'large_group_notification',\r\n              data: {\r\n                name: fullName,\r\n                email: formState.email,\r\n                phone: formState.phone,\r\n                groupName: formState.groupName,\r\n                dealershipCount: formState.dealershipCount,\r\n                level: 'Level 3',\r\n              },\r\n            }),\r\n          });\r\n        } catch (emailError) {\r\n          console.warn('Failed to send large group notification:', emailError);\r\n        }\r\n\r\n        setSuccess(true);\r\n        return;\r\n      }\r\n\r\n      const tempPassword = generateTempPassword();\r\n\r\n      // Create dealer group\r\n      const { data: dealerGroupData, error: dealerGroupError } = await supabase\r\n        .from('dealerships')\r\n        .insert({\r\n          name: formState.groupName,\r\n          type: 'group',\r\n          num_teams: formState.dealershipCount,\r\n          metadata: {\r\n            level: formState.level,\r\n            dealership_count: formState.dealershipCount,\r\n          },\r\n        })\r\n        .select()\r\n        .single();\r\n\r\n      if (dealerGroupError) throw dealerGroupError;\r\n\r\n      // Create user with Supabase auth\r\n      const { data: authData, error: authError } = await supabase.auth.signUp({\r\n        email: formState.email,\r\n        password: tempPassword,\r\n        options: {\r\n          data: {\r\n            name: fullName,\r\n            role: 'group_dealer_admin',\r\n            phone: formState.phone,\r\n            dealership_id: dealerGroupData.id,\r\n          },\r\n        },\r\n      });\r\n\r\n      if (authError) throw authError;\r\n\r\n      // Create profile entry\r\n      const { error: profileError } = await supabase.from('profiles').upsert({\r\n        id: authData.user?.id,\r\n        email: formState.email,\r\n        name: fullName,\r\n        role: 'group_dealer_admin',\r\n        phone: formState.phone,\r\n        dealership_id: dealerGroupData.id,\r\n      });\r\n\r\n      if (profileError) throw profileError;\r\n\r\n      // Update dealer group with admin user ID\r\n      const { error: updateError } = await supabase\r\n        .from('dealerships')\r\n        .update({ admin_user_id: authData.user?.id })\r\n        .eq('id', dealerGroupData.id);\r\n\r\n      if (updateError) throw updateError;\r\n\r\n      // Send signup notification to admin\r\n      try {\r\n        await fetch('/.netlify/functions/send-emails', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            type: 'signup_notification',\r\n            data: {\r\n              name: fullName,\r\n              email: formState.email,\r\n              companyType: 'Dealer Group',\r\n              subscriptionId: authData.user?.id,\r\n              groupName: formState.groupName,\r\n              level: formState.level,\r\n              dealershipCount: formState.dealershipCount,\r\n            },\r\n          }),\r\n        });\r\n      } catch (emailError) {\r\n        console.warn('Failed to send admin notification:', emailError);\r\n      }\r\n\r\n      // Send temporary password email to user\r\n      try {\r\n        await fetch('/.netlify/functions/send-emails', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            type: 'temp_password',\r\n            data: {\r\n              name: fullName,\r\n              email: formState.email,\r\n              tempPassword: tempPassword,\r\n              role: 'Dealer Group Admin',\r\n            },\r\n          }),\r\n        });\r\n      } catch (emailError) {\r\n        console.warn('Failed to send temporary password email:', emailError);\r\n      }\r\n\r\n      setSuccess(true);\r\n    } catch (err: any) {\r\n      setError(err.message || 'Failed to create account');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const selectedLevel = levels.find(l => l.value === formState.level);\r\n\r\n  if (success) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900 flex items-center justify-center p-4\">\r\n        <div className=\"max-w-md w-full text-center\">\r\n          <CheckCircle2 className=\"h-16 w-16 text-green-500 mx-auto mb-6\" />\r\n          <h2 className=\"text-3xl font-bold mb-4 text-white\">\r\n            {formState.level === 'level_3' ? 'Request Submitted!' : 'Dealer Group Account Created!'}\r\n          </h2>\r\n          <p className=\"text-gray-300 mb-6\">\r\n            {formState.level === 'level_3'\r\n              ? 'Thank you for your interest! A member of our team will contact you shortly to discuss your custom dealer group solution.'\r\n              : 'Your dealer group account has been created successfully. You should receive an email with your temporary password shortly.'}\r\n          </p>\r\n          {formState.level !== 'level_3' && (\r\n            <p className=\"text-gray-400 mb-8\">\r\n              You can now access your group admin dashboard at: <br />\r\n              <span className=\"text-blue-400 font-mono\">/group-admin</span>\r\n            </p>\r\n          )}\r\n          <button\r\n            onClick={() => navigate(formState.level === 'level_3' ? '/signup' : '/auth')}\r\n            className=\"bg-blue-600 hover:bg-blue-500 text-white py-3 px-8 rounded-lg font-semibold transition-colors\"\r\n          >\r\n            {formState.level === 'level_3' ? 'Back to Signup' : 'Go to Login'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900 flex items-center justify-center p-4\">\r\n      <div className=\"max-w-md w-full\">\r\n        <div className=\"bg-gray-800 rounded-xl p-8 border border-gray-700\">\r\n          <div className=\"flex items-center mb-6\">\r\n            <button\r\n              onClick={() => navigate('/signup')}\r\n              className=\"text-gray-400 hover:text-white mr-4 transition-colors\"\r\n            >\r\n              <ArrowLeft className=\"w-5 h-5\" />\r\n            </button>\r\n            <h2 className=\"text-2xl font-bold text-white\">Dealer Group</h2>\r\n          </div>\r\n\r\n          {error && (\r\n            <div className=\"mb-4 p-3 bg-red-900/50 text-red-100 rounded flex items-center\">\r\n              <AlertCircle className=\"h-5 w-5 mr-2 flex-shrink-0\" />\r\n              <span>{error}</span>\r\n            </div>\r\n          )}\r\n\r\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <label htmlFor=\"firstName\" className=\"block text-gray-300 text-sm font-bold mb-2\">\r\n                  First Name\r\n                </label>\r\n                <input\r\n                  id=\"firstName\"\r\n                  name=\"firstName\"\r\n                  type=\"text\"\r\n                  value={formState.firstName}\r\n                  onChange={handleChange}\r\n                  required\r\n                  className=\"bg-gray-700 border border-gray-600 rounded w-full py-3 px-4 text-white leading-tight focus:outline-none focus:border-blue-500 transition-colors\"\r\n                  placeholder=\"First name\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"lastName\" className=\"block text-gray-300 text-sm font-bold mb-2\">\r\n                  Last Name\r\n                </label>\r\n                <input\r\n                  id=\"lastName\"\r\n                  name=\"lastName\"\r\n                  type=\"text\"\r\n                  value={formState.lastName}\r\n                  onChange={handleChange}\r\n                  required\r\n                  className=\"bg-gray-700 border border-gray-600 rounded w-full py-3 px-4 text-white leading-tight focus:outline-none focus:border-blue-500 transition-colors\"\r\n                  placeholder=\"Last name\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"email\" className=\"block text-gray-300 text-sm font-bold mb-2\">\r\n                Email\r\n              </label>\r\n              <input\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={formState.email}\r\n                onChange={handleChange}\r\n                required\r\n                className=\"bg-gray-700 border border-gray-600 rounded w-full py-3 px-4 text-white leading-tight focus:outline-none focus:border-blue-500 transition-colors\"\r\n                placeholder=\"Enter your email address\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"phone\" className=\"block text-gray-300 text-sm font-bold mb-2\">\r\n                Phone Number (for 2FA)\r\n              </label>\r\n              <input\r\n                id=\"phone\"\r\n                name=\"phone\"\r\n                type=\"tel\"\r\n                value={formState.phone}\r\n                onChange={handleChange}\r\n                required\r\n                className=\"bg-gray-700 border border-gray-600 rounded w-full py-3 px-4 text-white leading-tight focus:outline-none focus:border-blue-500 transition-colors\"\r\n                placeholder=\"Enter your phone number\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"groupName\" className=\"block text-gray-300 text-sm font-bold mb-2\">\r\n                Dealer Group Name\r\n              </label>\r\n              <input\r\n                id=\"groupName\"\r\n                name=\"groupName\"\r\n                type=\"text\"\r\n                value={formState.groupName}\r\n                onChange={handleChange}\r\n                required\r\n                className=\"bg-gray-700 border border-gray-600 rounded w-full py-3 px-4 text-white leading-tight focus:outline-none focus:border-blue-500 transition-colors\"\r\n                placeholder=\"Enter your dealer group name\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"level\" className=\"block text-gray-300 text-sm font-bold mb-2\">\r\n                Group Level\r\n              </label>\r\n              <select\r\n                id=\"level\"\r\n                name=\"level\"\r\n                value={formState.level}\r\n                onChange={handleChange}\r\n                required\r\n                className=\"bg-gray-700 border border-gray-600 rounded w-full py-3 px-4 text-white leading-tight focus:outline-none focus:border-blue-500 transition-colors\"\r\n              >\r\n                <option value=\"\">Select level</option>\r\n                {levels.map(level => (\r\n                  <option key={level.value} value={level.value}>\r\n                    {level.label} {level.price > 0 && `- $${level.price}/dealership/month`}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              {formState.level === 'level_3' && (\r\n                <div className=\"mt-2 p-3 bg-blue-900/30 border border-blue-500/50 rounded\">\r\n                  <div className=\"flex items-start\">\r\n                    <Info className=\"h-5 w-5 text-blue-400 mr-2 mt-0.5 flex-shrink-0\" />\r\n                    <p className=\"text-blue-300 text-sm\">\r\n                      Level 3 groups require custom pricing and setup. Our team will contact you to\r\n                      discuss your specific needs.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {formState.level && formState.level !== 'level_3' && selectedLevel && (\r\n              <div>\r\n                <label\r\n                  htmlFor=\"dealershipCount\"\r\n                  className=\"block text-gray-300 text-sm font-bold mb-2\"\r\n                >\r\n                  Number of Dealerships\r\n                </label>\r\n                <select\r\n                  id=\"dealershipCount\"\r\n                  name=\"dealershipCount\"\r\n                  value={formState.dealershipCount}\r\n                  onChange={handleChange}\r\n                  required\r\n                  className=\"bg-gray-700 border border-gray-600 rounded w-full py-3 px-4 text-white leading-tight focus:outline-none focus:border-blue-500 transition-colors\"\r\n                >\r\n                  {Array.from({ length: selectedLevel.max - selectedLevel.min + 1 }, (_, i) => {\r\n                    const count = selectedLevel.min + i;\r\n                    return (\r\n                      <option key={count} value={count}>\r\n                        {count} dealership{count > 1 ? 's' : ''}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n                <p className=\"mt-2 text-gray-400 text-sm\">\r\n                  Estimated monthly cost: $\r\n                  {(selectedLevel.price * formState.dealershipCount).toLocaleString()}\r\n                </p>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"mt-8\">\r\n              <button\r\n                type=\"submit\"\r\n                disabled={loading}\r\n                className=\"w-full bg-blue-600 hover:bg-blue-500 text-white py-3 px-6 rounded-lg font-semibold transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                {loading ? (\r\n                  <span className=\"flex items-center justify-center\">\r\n                    <Loader2 className=\"animate-spin mr-2 h-5 w-5\" />\r\n                    {formState.level === 'level_3'\r\n                      ? 'Submitting Request...'\r\n                      : 'Creating Account...'}\r\n                  </span>\r\n                ) : formState.level === 'level_3' ? (\r\n                  'Submit Request'\r\n                ) : (\r\n                  'Create Dealer Group Account'\r\n                )}\r\n              </button>\r\n            </div>\r\n          </form>\r\n\r\n          <div className=\"mt-6 text-center\">\r\n            <p className=\"text-gray-400 text-sm\">\r\n              {formState.level === 'level_3'\r\n                ? 'Custom pricing and setup for large dealer groups.'\r\n                : '30-day free trial included. No credit card required during trial.'}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\ntype Language = 'en' | 'es' | 'fr' | 'de' | 'cs' | 'it' | 'pl' | 'el' | 'pt';\r\n\r\ninterface TranslationContextType {\r\n  language: Language;\r\n  setLanguage: (lang: Language) => void;\r\n  t: (key: string) => string;\r\n}\r\n\r\nconst TranslationContext = createContext<TranslationContextType | undefined>(undefined);\r\n\r\nconst translations = {\r\n  en: {\r\n    // Navigation\r\n    'nav.home': 'Home',\r\n    'nav.screenshots': 'Screenshots',\r\n    'nav.pricing': 'Pricing',\r\n    'nav.about': 'About Us',\r\n    'nav.login': 'Login',\r\n    'nav.signup': 'Sign Up',\r\n    'nav.legal': 'Legal',\r\n\r\n    // Homepage\r\n    'home.title': 'The DAS Board',\r\n    'home.subtitle':\r\n      'Real-time dashboards providing critical insights for finance managers, dealerships, and dealer groups.',\r\n    'home.startTrial': 'Start Your Free Trial',\r\n    'home.viewScreenshots': 'View Screenshots',\r\n    'home.mission':\r\n      '\"The DAS Board redefines dealership success, empowering Sales Managers to optimize teams and Finance Managers to maximize profits with key sales insights, and Sales People to stay on top of their deals.\" - Tyler Durden',\r\n    'home.features.title': 'Key Features',\r\n    'home.features.subtitle':\r\n      'Everything you need to manage your dealership operations effectively',\r\n    'home.pricing.title': 'Try it Now',\r\n    'home.pricing.subtitle':\r\n      'Start your free trial and see the difference real-time insights can make for your dealership.',\r\n    'home.cta.title': 'Ready to transform your dealership operations?',\r\n    'home.cta.subtitle':\r\n      'Join hundreds of dealerships already using The DAS Board to optimize their operations.',\r\n\r\n    // Features\r\n    'features.finance.title': 'Finance Dashboards',\r\n    'features.finance.desc':\r\n      'Real-time insights for finance managers to track daily performance, log deals, view metrics including PVR, VSC, and other Products.',\r\n    'features.sales.title': 'Sales Team Dashboards',\r\n    'features.sales.desc':\r\n      'The Das Board is your new Leaderboard! Keep track of your deals know exactly where you are throughout the month.',\r\n    'features.manager.title': 'Sales Manager Dashboards',\r\n    'features.manager.desc':\r\n      'View Deals Logs, Sales People statistics, manage your Teams more effectively.',\r\n    'features.info.title': 'Informative Dashboards',\r\n    'features.info.desc':\r\n      'Role-specific dashboards for Sales Teams, Finance Managers, Sales Managers and General Managers.',\r\n    'features.scheduler.title': 'Dynamic Scheduler',\r\n    'features.scheduler.desc':\r\n      'Dynamic Sales person scheduler for efficient team coordination. Manage schedules to maximize daily production.',\r\n    'features.calculator.title': 'Pay Calculator',\r\n    'features.calculator.desc':\r\n      'Your Sales Team and Finance Managers will be able to see month to date real time earnings with pre-configured pay plans.',\r\n\r\n    // Pricing\r\n    'pricing.title': 'Choose the Perfect Plan',\r\n    'pricing.subtitle':\r\n      'Start with our free trial for finance managers, or choose the plan that scales with your dealership.',\r\n    'pricing.finance': 'Finance Manager',\r\n    'pricing.dealership': 'Single Dealership',\r\n    'pricing.group': 'Dealer Groups',\r\n    'pricing.freeTime': 'Free for Limited Time!',\r\n    'pricing.getStarted': 'Get Started',\r\n    'pricing.startTrial': 'Start Free Trial',\r\n    'pricing.popular': 'Most Popular',\r\n\r\n    // Footer\r\n    'footer.tagline': 'Modern dealership management software with real-time insights.',\r\n    'footer.industry': 'Dealership Automotive Sales',\r\n    'footer.product': 'Product',\r\n    'footer.legal': 'Legal',\r\n    'footer.contact': 'Contact',\r\n    'footer.support': 'For support or inquiries, please contact us at:',\r\n    'footer.copyright': '© 2025 The DAS Board. All rights reserved. Designed with 🖤',\r\n    'footer.terms': 'Terms of Service',\r\n    'footer.privacy': 'Privacy Policy',\r\n    'footer.subscription': 'Subscription Agreement',\r\n\r\n    // Legal\r\n    'legal.terms.title': 'Terms of Service',\r\n    'legal.privacy.title': 'Privacy Policy',\r\n    'legal.subscription.title': 'Subscription Agreement',\r\n\r\n    // About\r\n    'about.title': 'Who We Are',\r\n    'about.subtitle':\r\n      'Passionate professionals dedicated to revolutionizing dealership management through innovative technology and data-driven insights.',\r\n    'about.founderVision.title': \"Founder's Vision\",\r\n    'about.founderVision.paragraph1':\r\n      'The DAS Board was born from a real need in the automotive industry. Having worked directly in dealerships, I witnessed firsthand the challenges that finance managers, sales teams, and dealership management face every day.',\r\n    'about.founderVision.paragraph2':\r\n      \"Traditional systems were outdated, inefficient, and didn't provide the real-time insights that modern dealerships need to stay competitive. I envisioned a platform that would empower every role in the dealership with the data and tools they need to succeed.\",\r\n    'about.founderVision.paragraph3':\r\n      'Today, The DAS Board serves hundreds of dealerships across the country, helping them increase profitability, improve team performance, and make data-driven decisions that drive success.',\r\n    'about.team.title': 'Our Team',\r\n    'about.team.members.tyler.name': 'Tyler Durden',\r\n    'about.team.members.tyler.role': 'Founder & CEO',\r\n    'about.team.members.tyler.bio':\r\n      'Former dealership finance manager with over 10 years of automotive industry experience. Passionate about using technology to solve real-world problems.',\r\n    'about.team.members.sarah.name': 'Sarah Johnson',\r\n    'about.team.members.sarah.role': 'Head of Product',\r\n    'about.team.members.sarah.bio':\r\n      'Product management expert with a background in automotive software. Ensures our platform meets the evolving needs of modern dealerships.',\r\n    'about.team.members.claude.name': 'Claude Mitchell',\r\n    'about.team.members.claude.role': 'Lead Developer',\r\n    'about.team.members.claude.bio':\r\n      'Full-stack developer specializing in real-time applications and data visualization. Builds the technical backbone that powers The DAS Board.',\r\n    'about.team.members.annie.name': 'Annie Rodriguez',\r\n    'about.team.members.annie.role': 'Customer Success Manager',\r\n    'about.team.members.annie.bio':\r\n      'Dedicated to ensuring our customers get maximum value from The DAS Board. Former automotive operations manager with deep industry knowledge.',\r\n    'about.values.title': 'Our Values',\r\n    'about.values.customerFocused.title': 'Customer-Focused',\r\n    'about.values.customerFocused.description':\r\n      'Every feature we build is driven by real feedback from dealerships. We listen to our customers and continuously improve based on their needs.',\r\n    'about.values.dataDriven.title': 'Data-Driven',\r\n    'about.values.dataDriven.description':\r\n      'We believe in the power of data to transform decision-making. Our platform provides actionable insights that drive real business results.',\r\n    'about.values.continuousImprovement.title': 'Continuous Improvement',\r\n    'about.values.continuousImprovement.description':\r\n      'The automotive industry evolves rapidly, and so do we. We are constantly innovating and improving to stay ahead of industry trends.',\r\n    'about.contact.title': 'Get in Touch',\r\n    'about.contact.subtitle':\r\n      \"Ready to see how The DAS Board can transform your dealership operations? We'd love to hear from you.\",\r\n    'about.contact.email': 'Email:',\r\n    'about.contact.phone': 'Phone:',\r\n  },\r\n  es: {\r\n    // Navigation\r\n    'nav.home': 'Inicio',\r\n    'nav.screenshots': 'Capturas',\r\n    'nav.pricing': 'Precios',\r\n    'nav.about': 'Nosotros',\r\n    'nav.login': 'Iniciar Sesión',\r\n    'nav.signup': 'Registrarse',\r\n    'nav.legal': 'Legal',\r\n\r\n    // Homepage\r\n    'home.title': 'El DAS Board',\r\n    'home.subtitle':\r\n      'Tableros en tiempo real que proporcionan información crítica para gerentes financieros, concesionarios y grupos de concesionarios.',\r\n    'home.startTrial': 'Comience su Prueba Gratuita',\r\n    'home.viewScreenshots': 'Ver Capturas',\r\n    'home.mission':\r\n      '\"El DAS Board redefine el éxito del concesionario, capacitando a los Gerentes de Ventas para optimizar equipos y a los Gerentes Financieros para maximizar las ganancias con información clave de ventas, y a los Vendedores para mantenerse al tanto de sus ofertas.\" - Tyler Durden',\r\n    'home.features.title': 'Características Clave',\r\n    'home.features.subtitle':\r\n      'Todo lo que necesita para gestionar las operaciones de su concesionario de manera efectiva',\r\n    'home.pricing.title': 'Pruébelo Ahora',\r\n    'home.pricing.subtitle':\r\n      'Comience su prueba gratuita y vea la diferencia que pueden hacer los insights en tiempo real para su concesionario.',\r\n    'home.cta.title': '¿Listo para transformar las operaciones de su concesionario?',\r\n    'home.cta.subtitle':\r\n      'Únase a cientos de concesionarios que ya usan El DAS Board para optimizar sus operaciones.',\r\n\r\n    // Features\r\n    'features.finance.title': 'Tableros Financieros',\r\n    'features.finance.desc':\r\n      'Información en tiempo real para que los gerentes financieros rastreen el rendimiento diario, registren ofertas, vean métricas incluyendo PVR, VSC y otros Productos.',\r\n    'features.sales.title': 'Tableros del Equipo de Ventas',\r\n    'features.sales.desc':\r\n      '¡El Das Board es su nueva Tabla de Clasificación! Mantenga un registro de sus ofertas y sepa exactamente dónde está durante el mes.',\r\n    'features.manager.title': 'Tableros del Gerente de Ventas',\r\n    'features.manager.desc':\r\n      'Vea Registros de Ofertas, estadísticas de Vendedores, gestione sus Equipos de manera más efectiva.',\r\n    'features.info.title': 'Tableros Informativos',\r\n    'features.info.desc':\r\n      'Tableros específicos por rol para Equipos de Ventas, Gerentes Financieros, Gerentes de Ventas y Gerentes Generales.',\r\n    'features.scheduler.title': 'Programador Dinámico',\r\n    'features.scheduler.desc':\r\n      'Programador dinámico de vendedores para coordinación eficiente del equipo. Gestione horarios para maximizar la producción diaria.',\r\n    'features.calculator.title': 'Calculadora de Pagos',\r\n    'features.calculator.desc':\r\n      'Su Equipo de Ventas y Gerentes Financieros podrán ver las ganancias en tiempo real del mes hasta la fecha con planes de pago preconfigurados.',\r\n\r\n    // Pricing\r\n    'pricing.title': 'Elija el Plan Perfecto',\r\n    'pricing.subtitle':\r\n      'Comience con nuestra prueba gratuita para gerentes financieros, o elija el plan que se adapte a su concesionario.',\r\n    'pricing.finance': 'Gerente Financiero',\r\n    'pricing.dealership': 'Concesionario Individual',\r\n    'pricing.group': 'Grupos de Concesionarios',\r\n    'pricing.freeTime': '¡Gratis por Tiempo Limitado!',\r\n    'pricing.getStarted': 'Comenzar',\r\n    'pricing.startTrial': 'Iniciar Prueba Gratuita',\r\n    'pricing.popular': 'Más Popular',\r\n\r\n    // Footer\r\n    'footer.tagline':\r\n      'Software moderno de gestión de concesionarios con información en tiempo real.',\r\n    'footer.industry': 'Ventas Automotrices de Concesionarios',\r\n    'footer.product': 'Producto',\r\n    'footer.legal': 'Legal',\r\n    'footer.contact': 'Contacto',\r\n    'footer.support': 'Para soporte o consultas, por favor contáctenos en:',\r\n    'footer.copyright': '© 2025 The DAS Board. Todos los derechos reservados. Diseñado con 🖤',\r\n    'footer.terms': 'Términos de Servicio',\r\n    'footer.privacy': 'Política de Privacidad',\r\n    'footer.subscription': 'Acuerdo de Suscripción',\r\n\r\n    // Legal\r\n    'legal.terms.title': 'Términos de Servicio',\r\n    'legal.privacy.title': 'Política de Privacidad',\r\n    'legal.subscription.title': 'Acuerdo de Suscripción',\r\n  },\r\n  fr: {\r\n    // Navigation\r\n    'nav.home': 'Accueil',\r\n    'nav.screenshots': 'Captures',\r\n    'nav.pricing': 'Tarifs',\r\n    'nav.about': 'À Propos',\r\n    'nav.login': 'Connexion',\r\n    'nav.signup': \"S'inscrire\",\r\n    'nav.legal': 'Légal',\r\n\r\n    // Homepage\r\n    'home.title': 'Le DAS Board',\r\n    'home.subtitle':\r\n      'Tableaux de bord en temps réel fournissant des informations critiques pour les gestionnaires financiers, les concessionnaires et les groupes de concessionnaires.',\r\n    'home.startTrial': 'Commencez Votre Essai Gratuit',\r\n    'home.viewScreenshots': 'Voir les Captures',\r\n    'home.mission':\r\n      '\"Le DAS Board redéfinit le succès des concessionnaires, permettant aux Gestionnaires des Ventes d\\'optimiser les équipes et aux Gestionnaires Financiers de maximiser les profits avec des informations clés sur les ventes, et aux Vendeurs de rester au courant de leurs affaires.\" - Tyler Durden',\r\n    'home.features.title': 'Fonctionnalités Clés',\r\n    'home.features.subtitle':\r\n      'Tout ce dont vous avez besoin pour gérer efficacement les opérations de votre concessionnaire',\r\n    'home.pricing.title': 'Essayez Maintenant',\r\n    'home.pricing.subtitle':\r\n      'Commencez votre essai gratuit et voyez la différence que peuvent faire les insights en temps réel pour votre concessionnaire.',\r\n    'home.cta.title': 'Prêt à transformer les opérations de votre concessionnaire?',\r\n    'home.cta.subtitle':\r\n      'Rejoignez des centaines de concessionnaires utilisant déjà Le DAS Board pour optimiser leurs opérations.',\r\n\r\n    // Pricing\r\n    'pricing.title': 'Choisissez le Plan Parfait',\r\n    'pricing.subtitle':\r\n      \"Commencez avec notre essai gratuit pour les gestionnaires financiers, ou choisissez le plan qui s'adapte à votre concessionnaire.\",\r\n    'pricing.finance': 'Gestionnaire Financier',\r\n    'pricing.dealership': 'Concessionnaire Unique',\r\n    'pricing.group': 'Groupes de Concessionnaires',\r\n    'pricing.freeTime': 'Gratuit pour une Durée Limitée!',\r\n    'pricing.getStarted': 'Commencer',\r\n    'pricing.startTrial': \"Commencer l'Essai Gratuit\",\r\n    'pricing.popular': 'Le Plus Populaire',\r\n\r\n    // Footer\r\n    'footer.tagline':\r\n      'Logiciel moderne de gestion de concessionnaire avec des informations en temps réel.',\r\n    'footer.industry': 'Ventes Automobiles de Concessionnaires',\r\n    'footer.product': 'Produit',\r\n    'footer.legal': 'Légal',\r\n    'footer.contact': 'Contact',\r\n    'footer.support': 'Pour le support ou les demandes, veuillez nous contacter à:',\r\n    'footer.copyright': '© 2025 The DAS Board. Tous droits réservés. Conçu avec 🖤',\r\n    'footer.terms': 'Conditions de Service',\r\n    'footer.privacy': 'Politique de Confidentialité',\r\n    'footer.subscription': \"Accord d'Abonnement\",\r\n\r\n    // Legal\r\n    'legal.terms.title': 'Conditions de Service',\r\n    'legal.privacy.title': 'Politique de Confidentialité',\r\n    'legal.subscription.title': \"Accord d'Abonnement\",\r\n  },\r\n  de: {\r\n    // Navigation\r\n    'nav.home': 'Startseite',\r\n    'nav.screenshots': 'Screenshots',\r\n    'nav.pricing': 'Preise',\r\n    'nav.about': 'Über uns',\r\n    'nav.login': 'Anmelden',\r\n    'nav.signup': 'Registrieren',\r\n    'nav.legal': 'Rechtliches',\r\n\r\n    // Homepage\r\n    'home.title': 'Das DAS Board',\r\n    'home.subtitle':\r\n      'Echtzeit-Dashboards mit wichtigen Einblicken für Finanzmanager, Autohäuser und Autohausgruppen.',\r\n    'home.startTrial': 'Starten Sie Ihre Kostenlose Testversion',\r\n    'home.viewScreenshots': 'Screenshots Ansehen',\r\n    'home.mission':\r\n      '\"Das DAS Board definiert den Erfolg von Autohäusern neu, ermöglicht Verkaufsleitern die Optimierung von Teams und Finanzmanagern die Maximierung von Gewinnen mit wichtigen Verkaufseinblicken, und Verkäufern, über ihre Geschäfte auf dem Laufenden zu bleiben.\" - Tyler Durden',\r\n    'home.features.title': 'Hauptmerkmale',\r\n    'home.features.subtitle':\r\n      'Alles was Sie brauchen, um die Abläufe Ihres Autohauses effektiv zu verwalten',\r\n    'home.pricing.title': 'Jetzt Ausprobieren',\r\n    'home.pricing.subtitle':\r\n      'Starten Sie Ihre kostenlose Testversion und sehen Sie den Unterschied, den Echtzeit-Einblicke für Ihr Autohaus machen können.',\r\n    'home.cta.title': 'Bereit, die Abläufe Ihres Autohauses zu transformieren?',\r\n    'home.cta.subtitle':\r\n      'Schließen Sie sich Hunderten von Autohäusern an, die bereits Das DAS Board verwenden, um ihre Abläufe zu optimieren.',\r\n\r\n    // Pricing\r\n    'pricing.title': 'Wählen Sie den Perfekten Plan',\r\n    'pricing.subtitle':\r\n      'Beginnen Sie mit unserer kostenlosen Testversion für Finanzmanager oder wählen Sie den Plan, der zu Ihrem Autohaus passt.',\r\n    'pricing.finance': 'Finanzmanager',\r\n    'pricing.dealership': 'Einzelnes Autohaus',\r\n    'pricing.group': 'Autohausgruppen',\r\n    'pricing.freeTime': 'Begrenzte Zeit Kostenlos!',\r\n    'pricing.getStarted': 'Loslegen',\r\n    'pricing.startTrial': 'Kostenlose Testversion Starten',\r\n    'pricing.popular': 'Am Beliebtesten',\r\n\r\n    // Footer\r\n    'footer.tagline': 'Moderne Autohaus-Management-Software mit Echtzeit-Einblicken.',\r\n    'footer.industry': 'Autohaus-Automobilverkäufe',\r\n    'footer.product': 'Produkt',\r\n    'footer.legal': 'Rechtliches',\r\n    'footer.contact': 'Kontakt',\r\n    'footer.support': 'Für Support oder Anfragen kontaktieren Sie uns bitte unter:',\r\n    'footer.copyright': '© 2025 The DAS Board. Alle Rechte vorbehalten. Entworfen mit 🖤',\r\n    'footer.terms': 'Nutzungsbedingungen',\r\n    'footer.privacy': 'Datenschutzrichtlinie',\r\n    'footer.subscription': 'Abonnement-Vereinbarung',\r\n\r\n    // Legal\r\n    'legal.terms.title': 'Nutzungsbedingungen',\r\n    'legal.privacy.title': 'Datenschutzrichtlinie',\r\n    'legal.subscription.title': 'Abonnement-Vereinbarung',\r\n  },\r\n  cs: {\r\n    // Navigation\r\n    'nav.home': 'Domů',\r\n    'nav.screenshots': 'Snímky',\r\n    'nav.pricing': 'Ceny',\r\n    'nav.about': 'O nás',\r\n    'nav.login': 'Přihlásit',\r\n    'nav.signup': 'Registrovat',\r\n    'nav.legal': 'Právní',\r\n\r\n    // Homepage\r\n    'home.title': 'DAS Board',\r\n    'home.subtitle':\r\n      'Dashboardy v reálném čase poskytující kritické poznatky pro finanční manažery, dealerství a skupiny dealerství.',\r\n    'home.startTrial': 'Začněte Vaši Bezplatnou Zkušební Verzi',\r\n    'home.viewScreenshots': 'Zobrazit Snímky',\r\n    'home.features.title': 'Klíčové Funkce',\r\n    'home.features.subtitle': 'Vše co potřebujete k efektivnímu řízení provozu vašeho dealerství',\r\n    'home.pricing.title': 'Vyzkoušejte Nyní',\r\n    'home.pricing.subtitle':\r\n      'Začněte vaši bezplatnou zkušební verzi a uvidíte rozdíl, který mohou udělat poznatky v reálném čase pro vaše dealerství.',\r\n    'home.cta.title': 'Připraveni transformovat provoz vašeho dealerství?',\r\n    'home.cta.subtitle':\r\n      'Připojte se ke stovkám dealerství, která již používají DAS Board k optimalizaci svých operací.',\r\n\r\n    // Pricing\r\n    'pricing.title': 'Vyberte Perfektní Plán',\r\n    'pricing.subtitle':\r\n      'Začněte s naší bezplatnou zkušební verzí pro finanční manažery, nebo si vyberte plán, který se hodí k vašemu dealerství.',\r\n    'pricing.finance': 'Finanční Manažer',\r\n    'pricing.dealership': 'Jednotlivé Dealerství',\r\n    'pricing.group': 'Skupiny Dealerství',\r\n    'pricing.freeTime': 'Zdarma na Omezenou Dobu!',\r\n    'pricing.getStarted': 'Začít',\r\n    'pricing.startTrial': 'Začít Bezplatnou Zkušební Verzi',\r\n    'pricing.popular': 'Nejpopulárnější',\r\n\r\n    // Footer\r\n    'footer.tagline': 'Moderní software pro řízení dealerství s poznatky v reálném čase.',\r\n    'footer.industry': 'Prodej Automobilů Dealerství',\r\n    'footer.product': 'Produkt',\r\n    'footer.legal': 'Právní',\r\n    'footer.contact': 'Kontakt',\r\n    'footer.support': 'Pro podporu nebo dotazy nás prosím kontaktujte na:',\r\n    'footer.copyright': '© 2025 The DAS Board. Všechna práva vyhrazena. Navrženo s 🖤',\r\n    'footer.terms': 'Podmínky Služby',\r\n    'footer.privacy': 'Zásady Ochrany Soukromí',\r\n    'footer.subscription': 'Smlouva o Předplatném',\r\n\r\n    // Legal\r\n    'legal.terms.title': 'Podmínky Služby',\r\n    'legal.privacy.title': 'Zásady Ochrany Soukromí',\r\n    'legal.subscription.title': 'Smlouva o Předplatném',\r\n  },\r\n  it: {\r\n    // Navigation\r\n    'nav.home': 'Home',\r\n    'nav.screenshots': 'Screenshot',\r\n    'nav.pricing': 'Prezzi',\r\n    'nav.about': 'Chi Siamo',\r\n    'nav.login': 'Accedi',\r\n    'nav.signup': 'Registrati',\r\n    'nav.legal': 'Legale',\r\n\r\n    // Homepage\r\n    'home.title': 'Il DAS Board',\r\n    'home.subtitle':\r\n      'Dashboard in tempo reale che forniscono informazioni critiche per manager finanziari, concessionarie e gruppi di concessionarie.',\r\n    'home.startTrial': 'Inizia la Tua Prova Gratuita',\r\n    'home.viewScreenshots': 'Visualizza Screenshot',\r\n    'home.features.title': 'Caratteristiche Principali',\r\n    'home.features.subtitle':\r\n      'Tutto ciò di cui hai bisogno per gestire efficacemente le operazioni della tua concessionaria',\r\n    'home.pricing.title': 'Provalo Ora',\r\n    'home.pricing.subtitle':\r\n      'Inizia la tua prova gratuita e vedi la differenza che possono fare le informazioni in tempo reale per la tua concessionaria.',\r\n    'home.cta.title': 'Pronto a trasformare le operazioni della tua concessionaria?',\r\n    'home.cta.subtitle':\r\n      'Unisciti a centinaia di concessionarie che già utilizzano Il DAS Board per ottimizzare le loro operazioni.',\r\n\r\n    // Pricing\r\n    'pricing.title': 'Scegli il Piano Perfetto',\r\n    'pricing.subtitle':\r\n      'Inizia con la nostra prova gratuita per manager finanziari, o scegli il piano che si adatta alla tua concessionaria.',\r\n    'pricing.finance': 'Manager Finanziario',\r\n    'pricing.dealership': 'Concessionaria Singola',\r\n    'pricing.group': 'Gruppi di Concessionarie',\r\n    'pricing.freeTime': 'Gratis per Tempo Limitato!',\r\n    'pricing.getStarted': 'Inizia',\r\n    'pricing.startTrial': 'Inizia Prova Gratuita',\r\n    'pricing.popular': 'Più Popolare',\r\n\r\n    // Footer\r\n    'footer.tagline':\r\n      'Software moderno di gestione concessionaria con informazioni in tempo reale.',\r\n    'footer.industry': 'Vendite Automobilistiche Concessionarie',\r\n    'footer.product': 'Prodotto',\r\n    'footer.legal': 'Legale',\r\n    'footer.contact': 'Contatto',\r\n    'footer.support': 'Per supporto o richieste, contattaci a:',\r\n    'footer.copyright': '© 2025 The DAS Board. Tutti i diritti riservati. Progettato con 🖤',\r\n    'footer.terms': 'Termini di Servizio',\r\n    'footer.privacy': 'Politica sulla Privacy',\r\n    'footer.subscription': 'Accordo di Abbonamento',\r\n\r\n    // Legal\r\n    'legal.terms.title': 'Termini di Servizio',\r\n    'legal.privacy.title': 'Politica sulla Privacy',\r\n    'legal.subscription.title': 'Accordo di Abbonamento',\r\n  },\r\n  pl: {\r\n    // Navigation\r\n    'nav.home': 'Strona Główna',\r\n    'nav.screenshots': 'Zrzuty Ekranu',\r\n    'nav.pricing': 'Cennik',\r\n    'nav.about': 'O Nas',\r\n    'nav.login': 'Zaloguj',\r\n    'nav.signup': 'Zarejestruj',\r\n    'nav.legal': 'Prawne',\r\n\r\n    // Homepage\r\n    'home.title': 'DAS Board',\r\n    'home.subtitle':\r\n      'Dashboardy w czasie rzeczywistym dostarczające krytyczne spostrzeżenia dla menedżerów finansowych, dealerów i grup dealerskich.',\r\n    'home.startTrial': 'Rozpocznij Darmową Wersję Próbną',\r\n    'home.viewScreenshots': 'Zobacz Zrzuty Ekranu',\r\n    'home.features.title': 'Kluczowe Funkcje',\r\n    'home.features.subtitle':\r\n      'Wszystko czego potrzebujesz do efektywnego zarządzania operacjami swojego dealera',\r\n    'home.pricing.title': 'Wypróbuj Teraz',\r\n    'home.pricing.subtitle':\r\n      'Rozpocznij darmową wersję próbną i zobacz różnicę, jaką mogą zrobić spostrzeżenia w czasie rzeczywistym dla twojego dealera.',\r\n    'home.cta.title': 'Gotowy na transformację operacji swojego dealera?',\r\n    'home.cta.subtitle':\r\n      'Dołącz do setek dealerów, którzy już używają DAS Board do optymalizacji swoich operacji.',\r\n\r\n    // Pricing\r\n    'pricing.title': 'Wybierz Idealny Plan',\r\n    'pricing.subtitle':\r\n      'Rozpocznij od naszej darmowej wersji próbnej dla menedżerów finansowych, lub wybierz plan, który pasuje do twojego dealera.',\r\n    'pricing.finance': 'Menedżer Finansowy',\r\n    'pricing.dealership': 'Pojedynczy Dealer',\r\n    'pricing.group': 'Grupy Dealerskie',\r\n    'pricing.freeTime': 'Darmowe przez Ograniczony Czas!',\r\n    'pricing.getStarted': 'Rozpocznij',\r\n    'pricing.startTrial': 'Rozpocznij Darmową Wersję Próbną',\r\n    'pricing.popular': 'Najpopularniejszy',\r\n\r\n    // Footer\r\n    'footer.tagline':\r\n      'Nowoczesne oprogramowanie do zarządzania dealerem z spostrzeżeniami w czasie rzeczywistym.',\r\n    'footer.industry': 'Sprzedaż Samochodów Dealerskich',\r\n    'footer.product': 'Produkt',\r\n    'footer.legal': 'Prawne',\r\n    'footer.contact': 'Kontakt',\r\n    'footer.support': 'W celu uzyskania wsparcia lub zapytań, skontaktuj się z nami pod adresem:',\r\n    'footer.copyright': '© 2025 The DAS Board. Wszelkie prawa zastrzeżone. Zaprojektowane z 🖤',\r\n    'footer.terms': 'Warunki Usługi',\r\n    'footer.privacy': 'Polityka Prywatności',\r\n    'footer.subscription': 'Umowa Subskrypcji',\r\n\r\n    // Legal\r\n    'legal.terms.title': 'Warunki Usługi',\r\n    'legal.privacy.title': 'Polityka Prywatności',\r\n    'legal.subscription.title': 'Umowa Subskrypcji',\r\n  },\r\n  el: {\r\n    // Navigation\r\n    'nav.home': 'Αρχική',\r\n    'nav.screenshots': 'Στιγμιότυπα',\r\n    'nav.pricing': 'Τιμές',\r\n    'nav.about': 'Σχετικά',\r\n    'nav.login': 'Σύνδεση',\r\n    'nav.signup': 'Εγγραφή',\r\n    'nav.legal': 'Νομικά',\r\n\r\n    // Homepage\r\n    'home.title': 'Το DAS Board',\r\n    'home.subtitle':\r\n      'Dashboards σε πραγματικό χρόνο που παρέχουν κρίσιμες πληροφορίες για οικονομικούς διευθυντές, αντιπροσωπείες και ομάδες αντιπροσωπειών.',\r\n    'home.startTrial': 'Ξεκινήστε τη Δωρεάν Δοκιμή',\r\n    'home.viewScreenshots': 'Δείτε Στιγμιότυπα',\r\n    'home.features.title': 'Βασικά Χαρακτηριστικά',\r\n    'home.features.subtitle':\r\n      'Όλα όσα χρειάζεστε για να διαχειριστείτε αποτελεσματικά τις λειτουργίες της αντιπροσωπείας σας',\r\n    'home.pricing.title': 'Δοκιμάστε Τώρα',\r\n    'home.pricing.subtitle':\r\n      'Ξεκινήστε τη δωρεάν δοκιμή και δείτε τη διαφορά που μπορούν να κάνουν οι πληροφορίες σε πραγματικό χρόνο για την αντιπροσωπεία σας.',\r\n    'home.cta.title': 'Έτοιμοι να μεταμορφώσετε τις λειτουργίες της αντιπροσωπείας σας;',\r\n    'home.cta.subtitle':\r\n      'Ενωθείτε με εκατοντάδες αντιπροσωπείες που ήδη χρησιμοποιούν το DAS Board για να βελτιστοποιήσουν τις λειτουργίες τους.',\r\n\r\n    // Pricing\r\n    'pricing.title': 'Επιλέξτε το Τέλειο Πλάνο',\r\n    'pricing.subtitle':\r\n      'Ξεκινήστε με τη δωρεάν δοκιμή για οικονομικούς διευθυντές, ή επιλέξτε το πλάνο που ταιριάζει στην αντιπροσωπεία σας.',\r\n    'pricing.finance': 'Οικονομικός Διευθυντής',\r\n    'pricing.dealership': 'Μεμονωμένη Αντιπροσωπεία',\r\n    'pricing.group': 'Ομάδες Αντιπροσωπειών',\r\n    'pricing.freeTime': 'Δωρεάν για Περιορισμένο Χρόνο!',\r\n    'pricing.getStarted': 'Ξεκινήστε',\r\n    'pricing.startTrial': 'Ξεκινήστε Δωρεάν Δοκιμή',\r\n    'pricing.popular': 'Πιο Δημοφιλές',\r\n\r\n    // Footer\r\n    'footer.tagline':\r\n      'Σύγχρονο λογισμικό διαχείρισης αντιπροσωπείας με πληροφορίες σε πραγματικό χρόνο.',\r\n    'footer.industry': 'Πωλήσεις Αυτοκινήτων Αντιπροσωπειών',\r\n    'footer.product': 'Προϊόν',\r\n    'footer.legal': 'Νομικά',\r\n    'footer.contact': 'Επικοινωνία',\r\n    'footer.support': 'Για υποστήριξη ή ερωτήσεις, επικοινωνήστε μαζί μας στο:',\r\n    'footer.copyright': '© 2025 The DAS Board. Όλα τα δικαιώματα διατηρούνται. Σχεδιασμένο με 🖤',\r\n    'footer.terms': 'Όροι Υπηρεσίας',\r\n    'footer.privacy': 'Πολιτική Απορρήτου',\r\n    'footer.subscription': 'Συμφωνία Συνδρομής',\r\n\r\n    // Legal\r\n    'legal.terms.title': 'Όροι Υπηρεσίας',\r\n    'legal.privacy.title': 'Πολιτική Απορρήτου',\r\n    'legal.subscription.title': 'Συμφωνία Συνδρομής',\r\n  },\r\n  pt: {\r\n    // Navigation\r\n    'nav.home': 'Início',\r\n    'nav.screenshots': 'Capturas',\r\n    'nav.pricing': 'Preços',\r\n    'nav.about': 'Sobre Nós',\r\n    'nav.login': 'Entrar',\r\n    'nav.signup': 'Registrar',\r\n    'nav.legal': 'Legal',\r\n\r\n    // Homepage\r\n    'home.title': 'O DAS Board',\r\n    'home.subtitle':\r\n      'Dashboards em tempo real fornecendo insights críticos para gerentes financeiros, concessionárias e grupos de concessionárias.',\r\n    'home.startTrial': 'Inicie Sua Avaliação Gratuita',\r\n    'home.viewScreenshots': 'Ver Capturas',\r\n    'home.features.title': 'Características Principais',\r\n    'home.features.subtitle':\r\n      'Tudo que você precisa para gerenciar efetivamente as operações da sua concessionária',\r\n    'home.pricing.title': 'Experimente Agora',\r\n    'home.pricing.subtitle':\r\n      'Inicie sua avaliação gratuita e veja a diferença que insights em tempo real podem fazer para sua concessionária.',\r\n    'home.cta.title': 'Pronto para transformar as operações da sua concessionária?',\r\n    'home.cta.subtitle':\r\n      'Junte-se a centenas de concessionárias que já usam O DAS Board para otimizar suas operações.',\r\n\r\n    // Pricing\r\n    'pricing.title': 'Escolha o Plano Perfeito',\r\n    'pricing.subtitle':\r\n      'Comece com nossa avaliação gratuita para gerentes financeiros, ou escolha o plano que se adapta à sua concessionária.',\r\n    'pricing.finance': 'Gerente Financeiro',\r\n    'pricing.dealership': 'Concessionária Individual',\r\n    'pricing.group': 'Grupos de Concessionárias',\r\n    'pricing.freeTime': 'Grátis por Tempo Limitado!',\r\n    'pricing.getStarted': 'Começar',\r\n    'pricing.startTrial': 'Iniciar Avaliação Gratuita',\r\n    'pricing.popular': 'Mais Popular',\r\n\r\n    // Footer\r\n    'footer.tagline': 'Software moderno de gestão de concessionária com insights em tempo real.',\r\n    'footer.industry': 'Vendas Automotivas de Concessionárias',\r\n    'footer.product': 'Produto',\r\n    'footer.legal': 'Legal',\r\n    'footer.contact': 'Contato',\r\n    'footer.support': 'Para suporte ou consultas, entre em contato conosco em:',\r\n    'footer.copyright': '© 2025 The DAS Board. Todos os direitos reservados. Projetado com 🖤',\r\n    'footer.terms': 'Termos de Serviço',\r\n    'footer.privacy': 'Política de Privacidade',\r\n    'footer.subscription': 'Acordo de Assinatura',\r\n\r\n    // Legal\r\n    'legal.terms.title': 'Termos de Serviço',\r\n    'legal.privacy.title': 'Política de Privacidade',\r\n    'legal.subscription.title': 'Acordo de Assinatura',\r\n  },\r\n};\r\n\r\nexport const TranslationProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [language, setLanguage] = useState<Language>(() => {\r\n    // Try to get language from localStorage or browser\r\n    const saved = localStorage.getItem('dasboard-language');\r\n    if (saved && Object.keys(translations).includes(saved)) {\r\n      return saved as Language;\r\n    }\r\n\r\n    // Detect browser language\r\n    const browserLang = navigator.language.toLowerCase();\r\n    if (browserLang.startsWith('es')) return 'es';\r\n    if (browserLang.startsWith('fr')) return 'fr';\r\n    if (browserLang.startsWith('de')) return 'de';\r\n    if (browserLang.startsWith('cs')) return 'cs';\r\n    if (browserLang.startsWith('it')) return 'it';\r\n    if (browserLang.startsWith('pl')) return 'pl';\r\n    if (browserLang.startsWith('el')) return 'el';\r\n    if (browserLang.startsWith('pt')) return 'pt';\r\n\r\n    return 'en';\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('dasboard-language', language);\r\n  }, [language]);\r\n\r\n  const t = (key: string): string => {\r\n    return translations[language]?.[key] || translations.en[key] || key;\r\n  };\r\n\r\n  const value = {\r\n    language,\r\n    setLanguage,\r\n    t,\r\n  };\r\n\r\n  return <TranslationContext.Provider value={value}>{children}</TranslationContext.Provider>;\r\n};\r\n\r\nexport const useTranslation = () => {\r\n  const context = useContext(TranslationContext);\r\n  if (context === undefined) {\r\n    throw new Error('useTranslation must be used within a TranslationProvider');\r\n  }\r\n  return context;\r\n};\r\n","import React from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { useTranslation } from '../contexts/TranslationContext';\r\nimport { ChevronDown, Globe } from 'lucide-react';\r\n\r\nconst languages = [\r\n  { code: 'en', name: 'English', flag: '🇺🇸' },\r\n  { code: 'es', name: 'Español', flag: '🇪🇸' },\r\n  { code: 'fr', name: 'Français', flag: '🇫🇷' },\r\n  { code: 'de', name: 'Deutsch', flag: '🇩🇪' },\r\n  { code: 'cs', name: 'Čeština', flag: '🇨🇿' },\r\n  { code: 'it', name: 'Italiano', flag: '🇮🇹' },\r\n  { code: 'pl', name: 'Polski', flag: '🇵🇱' },\r\n  { code: 'el', name: 'Ελληνικά', flag: '🇬🇷' },\r\n  { code: 'pt', name: 'Português', flag: '🇵🇹' },\r\n];\r\n\r\nexport default function LanguageSwitcher() {\r\n  const { language, setLanguage } = useTranslation();\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [buttonRect, setButtonRect] = React.useState<DOMRect | null>(null);\r\n  const buttonRef = React.useRef<HTMLButtonElement>(null);\r\n\r\n  const currentLanguage = languages.find(lang => lang.code === language) || languages[0];\r\n\r\n  React.useEffect(() => {\r\n    if (isOpen && buttonRef.current) {\r\n      const rect = buttonRef.current.getBoundingClientRect();\r\n      setButtonRect(rect);\r\n    }\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <div className=\"relative z-[999999]\">\r\n      <button\r\n        ref={buttonRef}\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        className=\"flex items-center space-x-2 px-3 py-2 text-sm bg-gray-800 border border-gray-700 rounded-lg text-white hover:bg-gray-700 transition-colors\"\r\n      >\r\n        <Globe className=\"w-4 h-4\" />\r\n        <span className=\"text-lg\">{currentLanguage.flag}</span>\r\n        <span className=\"hidden sm:inline\">{currentLanguage.name}</span>\r\n        <ChevronDown className={`w-4 h-4 transition-transform ${isOpen ? 'rotate-180' : ''}`} />\r\n      </button>\r\n\r\n      {isOpen &&\r\n        buttonRect &&\r\n        createPortal(\r\n          <div\r\n            className=\"bg-gray-800 border border-gray-700 rounded-lg shadow-xl w-48\"\r\n            style={{\r\n              position: 'fixed',\r\n              zIndex: 2147483647,\r\n              top: buttonRect.bottom + 8,\r\n              left: buttonRect.right - 192, // 192px = w-48\r\n              transform: 'translateZ(0)',\r\n              isolation: 'isolate',\r\n              pointerEvents: 'auto',\r\n            }}\r\n          >\r\n            <div className=\"py-1\">\r\n              {languages.map(lang => (\r\n                <button\r\n                  key={lang.code}\r\n                  onClick={() => {\r\n                    setLanguage(lang.code as any);\r\n                    setIsOpen(false);\r\n                  }}\r\n                  className={`w-full text-left px-4 py-2 text-sm hover:bg-gray-700 transition-colors flex items-center space-x-3 ${\r\n                    language === lang.code ? 'bg-blue-600 text-white' : 'text-gray-300'\r\n                  }`}\r\n                >\r\n                  <span className=\"text-lg\">{lang.flag}</span>\r\n                  <span>{lang.name}</span>\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>,\r\n          document.body\r\n        )}\r\n\r\n      {/* Click outside to close */}\r\n      {isOpen &&\r\n        createPortal(\r\n          <div\r\n            className=\"fixed inset-0\"\r\n            style={{ zIndex: 2147483646 }}\r\n            onClick={() => setIsOpen(false)}\r\n          />,\r\n          document.body\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  ArrowRight,\r\n  BarChart3,\r\n  Users,\r\n  Target,\r\n  Calendar,\r\n  Calculator,\r\n  TrendingUp,\r\n} from 'lucide-react';\r\nimport { useTranslation } from '../contexts/TranslationContext';\r\nimport LanguageSwitcher from '../components/LanguageSwitcher';\r\n\r\nexport default function HomePage() {\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n\r\n  const features = [\r\n    {\r\n      icon: BarChart3,\r\n      title: 'Finance Dashboards',\r\n      description:\r\n        'Real-time insights for finance managers to track daily performance, log deals, view metrics including PVR, VSC, and other Products.',\r\n    },\r\n    {\r\n      icon: TrendingUp,\r\n      title: 'Sales Team Dashboards',\r\n      description:\r\n        'The Das Board is your new Leaderboard! Keep track of your deals know exactly where you are throughout the month.',\r\n    },\r\n    {\r\n      icon: Users,\r\n      title: 'Sales Manager Dashboards',\r\n      description: 'View Deals Logs, Sales People statistics, manage your Teams more effectively.',\r\n    },\r\n    {\r\n      icon: Target,\r\n      title: 'Informative Dashboards',\r\n      description:\r\n        'Role-specific dashboards for Sales Teams, Finance Managers, Sales Managers and General Managers.',\r\n    },\r\n    {\r\n      icon: Calendar,\r\n      title: 'Dynamic Scheduler',\r\n      description:\r\n        'Dynamic Sales person scheduler for efficient team coordination. Manage schedules to maximize daily production.',\r\n    },\r\n    {\r\n      icon: Calculator,\r\n      title: 'Pay Calculator',\r\n      description:\r\n        'Your Sales Team and Finance Managers will be able to see month to date real time earnings with pre-configured pay plans.',\r\n    },\r\n  ];\r\n\r\n  const pricingTiers = [\r\n    {\r\n      name: 'Finance Managers',\r\n      price: 'Free for Limited Time!',\r\n      originalPrice: '$5/Month',\r\n      description: 'Keep track of your Deals, Products, PVR and Pay!',\r\n      popular: true,\r\n    },\r\n    {\r\n      name: 'Dealerships',\r\n      price: '$250/month',\r\n      description: 'For up to 15 users with full dealership access.',\r\n      popular: false,\r\n    },\r\n    {\r\n      name: 'Dealer Groups',\r\n      price: '$500/month',\r\n      description: 'Multi-dealership support for dealer groups.',\r\n      popular: false,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900\">\r\n      {/* Navigation */}\r\n      <nav className=\"border-b border-gray-700 bg-gray-800/50 backdrop-blur-sm\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center h-16\">\r\n            <div className=\"flex items-center\">\r\n              <h1 className=\"text-2xl font-bold text-white\">The DAS Board</h1>\r\n            </div>\r\n            <div className=\"hidden md:flex items-center space-x-8\">\r\n              <button\r\n                onClick={() => navigate('/screenshots')}\r\n                className=\"text-gray-300 hover:text-white transition-colors\"\r\n              >\r\n                {t('nav.screenshots')}\r\n              </button>\r\n              <button\r\n                onClick={() => navigate('/pricing')}\r\n                className=\"text-gray-300 hover:text-white transition-colors\"\r\n              >\r\n                {t('nav.pricing')}\r\n              </button>\r\n              <button\r\n                onClick={() => navigate('/about')}\r\n                className=\"text-gray-300 hover:text-white transition-colors\"\r\n              >\r\n                {t('nav.about')}\r\n              </button>\r\n              <LanguageSwitcher />\r\n              <button\r\n                onClick={() => navigate('/auth')}\r\n                className=\"text-gray-300 hover:text-white transition-colors\"\r\n              >\r\n                {t('nav.login')}\r\n              </button>\r\n              <button\r\n                onClick={() => navigate('/signup')}\r\n                className=\"bg-blue-600 hover:bg-blue-500 text-white px-4 py-2 rounded-lg transition-colors\"\r\n              >\r\n                {t('nav.signup')}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n      {/* Hero Section */}\r\n      <section className=\"py-20 px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"max-w-7xl mx-auto\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\r\n            <div className=\"space-y-8\">\r\n              <h1 className=\"text-5xl lg:text-7xl font-bold text-white leading-tight\">\r\n                The{' '}\r\n                <span className=\"bg-gradient-to-r from-blue-400 to-blue-600 bg-clip-text text-transparent\">\r\n                  DAS Board\r\n                </span>\r\n              </h1>\r\n              <p className=\"text-xl text-gray-300 leading-relaxed\">\r\n                Real-time dashboards providing critical insights for finance managers, dealerships,\r\n                and dealer groups.\r\n              </p>\r\n              <div className=\"flex flex-col sm:flex-row gap-4\">\r\n                <button\r\n                  onClick={() => navigate('/signup')}\r\n                  className=\"bg-blue-600 hover:bg-blue-500 text-white px-8 py-4 rounded-lg text-lg font-semibold transition-all duration-300 hover:shadow-xl hover:shadow-blue-500/25 flex items-center justify-center\"\r\n                >\r\n                  Start Your Free Trial\r\n                  <ArrowRight className=\"ml-2 w-5 h-5\" />\r\n                </button>\r\n                <button\r\n                  onClick={() => navigate('/screenshots')}\r\n                  className=\"border border-gray-600 hover:bg-gray-700 text-white px-8 py-4 rounded-lg text-lg font-semibold transition-colors\"\r\n                >\r\n                  View Screenshots\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"relative\">\r\n              <div className=\"bg-gray-800 rounded-xl p-8 border border-gray-700 shadow-2xl\">\r\n                <div className=\"aspect-video bg-gradient-to-br from-blue-900/50 to-gray-900 rounded-lg flex items-center justify-center\">\r\n                  <div className=\"text-center\">\r\n                    <BarChart3 className=\"w-16 h-16 text-blue-400 mx-auto mb-4\" />\r\n                    <p className=\"text-gray-300 text-lg\">The DAS Board Finance Manager Dashboard</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Mission Statement */}\r\n      <section className=\"py-16 px-4 sm:px-6 lg:px-8 bg-gray-800/30\">\r\n        <div className=\"max-w-4xl mx-auto text-center\">\r\n          <p className=\"text-lg font-medium text-gray-200 leading-relaxed italic\">\r\n            \"The DAS Board redefines dealership success, empowering Sales Managers to optimize teams\r\n            and Finance Managers to maximize profits with key sales insights, and Sales People to\r\n            stay on top of their deals.\" - Tyler Durden\r\n          </p>\r\n          <div className=\"h-1 w-32 bg-gradient-to-r from-blue-400 to-blue-600 mx-auto mt-6 rounded-full\"></div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Features Section */}\r\n      <section className=\"py-20 px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"max-w-7xl mx-auto\">\r\n          <div className=\"text-center mb-16\">\r\n            <h2 className=\"text-4xl font-bold text-white mb-4\">Key Features</h2>\r\n            <p className=\"text-xl text-gray-300 max-w-2xl mx-auto\">\r\n              Everything you need to manage your dealership operations effectively\r\n            </p>\r\n          </div>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n            {features.map((feature, index) => {\r\n              const IconComponent = feature.icon;\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className=\"bg-gray-800 rounded-xl p-6 border border-gray-700 hover:border-blue-500 transition-all duration-300 hover:shadow-xl hover:shadow-blue-500/20\"\r\n                >\r\n                  <div className=\"mb-6\">\r\n                    <div className=\"inline-flex items-center justify-center w-12 h-12 bg-blue-600 rounded-lg mb-4\">\r\n                      <IconComponent className=\"w-6 h-6 text-white\" />\r\n                    </div>\r\n                    <h3 className=\"text-xl font-bold text-white mb-2\">{feature.title}</h3>\r\n                    <p className=\"text-gray-400 leading-relaxed\">{feature.description}</p>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Pricing Preview */}\r\n      <section className=\"py-20 px-4 sm:px-6 lg:px-8 bg-gray-800/30\">\r\n        <div className=\"max-w-7xl mx-auto\">\r\n          <div className=\"text-center mb-16\">\r\n            <h2 className=\"text-4xl font-bold text-white mb-4\">Try it Now</h2>\r\n            <p className=\"text-xl text-gray-300 max-w-2xl mx-auto\">\r\n              Start your free trial and see the difference real-time insights can make for your\r\n              dealership.\r\n            </p>\r\n          </div>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\r\n            {pricingTiers.map((tier, index) => (\r\n              <div\r\n                key={index}\r\n                className={`relative bg-gray-800 rounded-xl p-8 border transition-all duration-300 hover:shadow-xl ${\r\n                  tier.popular\r\n                    ? 'border-blue-500 shadow-xl shadow-blue-500/20'\r\n                    : 'border-gray-700 hover:border-blue-500'\r\n                }`}\r\n              >\r\n                {tier.popular && (\r\n                  <div className=\"absolute -top-4 left-1/2 transform -translate-x-1/2\">\r\n                    <span className=\"bg-blue-600 text-white px-4 py-1 rounded-full text-sm font-semibold\">\r\n                      Popular\r\n                    </span>\r\n                  </div>\r\n                )}\r\n                <div className=\"text-center\">\r\n                  <h3 className=\"text-xl font-bold text-white mb-2\">{tier.name}</h3>\r\n                  <div className=\"mb-4\">\r\n                    {tier.originalPrice && (\r\n                      <span className=\"text-red-400 line-through text-lg mr-2\">\r\n                        {tier.originalPrice}\r\n                      </span>\r\n                    )}\r\n                    <span className=\"text-3xl font-bold text-blue-400\">{tier.price}</span>\r\n                  </div>\r\n                  <p className=\"text-gray-300 mb-8\">{tier.description}</p>\r\n                  <button\r\n                    onClick={() => navigate('/signup')}\r\n                    className={`w-full py-3 px-6 rounded-lg font-semibold transition-colors ${\r\n                      tier.popular\r\n                        ? 'bg-blue-600 hover:bg-blue-500 text-white'\r\n                        : 'bg-gray-700 hover:bg-gray-600 text-white'\r\n                    }`}\r\n                  >\r\n                    Select Plan\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"text-center mt-12\">\r\n            <button\r\n              onClick={() => navigate('/pricing')}\r\n              className=\"text-blue-400 hover:text-blue-300 font-medium text-lg underline\"\r\n            >\r\n              View Full Pricing Details →\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* CTA Section */}\r\n      <section className=\"py-20 px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"max-w-4xl mx-auto text-center\">\r\n          <h2 className=\"text-4xl font-bold text-white mb-6\">\r\n            Ready to transform your dealership operations?\r\n          </h2>\r\n          <p className=\"text-xl text-gray-300 mb-8\">\r\n            Join hundreds of dealerships already using The DAS Board to optimize their operations.\r\n          </p>\r\n          <button\r\n            onClick={() => navigate('/signup')}\r\n            className=\"bg-blue-600 hover:bg-blue-500 text-white px-8 py-4 rounded-lg text-lg font-semibold transition-all duration-300 hover:shadow-xl hover:shadow-blue-500/25 inline-flex items-center\"\r\n          >\r\n            Start Your Free Trial\r\n            <ArrowRight className=\"ml-2 w-5 h-5\" />\r\n          </button>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Footer */}\r\n      <footer className=\"border-t border-gray-700 bg-gray-800\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\r\n            <div className=\"col-span-1 md:col-span-2\">\r\n              <h3 className=\"text-2xl font-bold text-white mb-4\">The DAS Board</h3>\r\n              <p className=\"text-gray-400 mb-4\">\r\n                Modern dealership management software with real-time insights.\r\n              </p>\r\n              <p className=\"text-gray-400\">Dealership Automotive Sales</p>\r\n            </div>\r\n            <div>\r\n              <h4 className=\"text-lg font-semibold text-white mb-4\">Product</h4>\r\n              <ul className=\"space-y-2\">\r\n                <li>\r\n                  <button\r\n                    onClick={() => navigate('/')}\r\n                    className=\"text-gray-400 hover:text-white transition-colors\"\r\n                  >\r\n                    Home\r\n                  </button>\r\n                </li>\r\n                <li>\r\n                  <button\r\n                    onClick={() => navigate('/screenshots')}\r\n                    className=\"text-gray-400 hover:text-white transition-colors\"\r\n                  >\r\n                    Screenshots\r\n                  </button>\r\n                </li>\r\n                <li>\r\n                  <button\r\n                    onClick={() => navigate('/pricing')}\r\n                    className=\"text-gray-400 hover:text-white transition-colors\"\r\n                  >\r\n                    Pricing\r\n                  </button>\r\n                </li>\r\n                <li>\r\n                  <button\r\n                    onClick={() => navigate('/about')}\r\n                    className=\"text-gray-400 hover:text-white transition-colors\"\r\n                  >\r\n                    About Us\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div>\r\n              <h4 className=\"text-lg font-semibold text-white mb-4\">Contact</h4>\r\n              <p className=\"text-gray-400 mb-2\">For support or inquiries, please contact us at:</p>\r\n              <p className=\"text-blue-400\">support@thedasboard.com</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"border-t border-gray-700 mt-8 pt-8 text-center\">\r\n            <p className=\"text-gray-400\">\r\n              © 2025 The DAS Board. All rights reserved. Designed with 🖤\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Check, ArrowLeft, Star } from 'lucide-react';\r\n\r\nexport default function PricingPage() {\r\n  const navigate = useNavigate();\r\n\r\n  const pricingTiers = [\r\n    {\r\n      name: 'Finance Manager',\r\n      price: 'Free for Limited Time!',\r\n      originalPrice: '$5/Month',\r\n      description: 'Perfect for individual finance managers',\r\n      popular: true,\r\n      features: [\r\n        'Personal deal tracking',\r\n        'Performance analytics',\r\n        'Goal management',\r\n        'Commission tracking',\r\n        'PVR & VSC metrics',\r\n        'Real-time earnings calculator',\r\n        '30-day free trial',\r\n        'Email support',\r\n      ],\r\n    },\r\n    {\r\n      name: 'Single Dealership',\r\n      price: '$250/month',\r\n      description: 'For individual dealership locations',\r\n      popular: false,\r\n      features: [\r\n        'Up to 15 users',\r\n        'Team management',\r\n        'Sales tracking',\r\n        'Finance oversight',\r\n        'Performance reporting',\r\n        'Dynamic scheduler',\r\n        'Role-based dashboards',\r\n        'Priority support',\r\n        'Custom pay plans',\r\n        'Advanced analytics',\r\n      ],\r\n    },\r\n    {\r\n      name: 'Dealer Groups',\r\n      price: '$500/month',\r\n      description: 'For multi-location dealership groups',\r\n      popular: false,\r\n      features: [\r\n        'Unlimited users',\r\n        'Multi-location management',\r\n        'Centralized reporting',\r\n        'Group-wide analytics',\r\n        'Scalable team structure',\r\n        'Advanced admin controls',\r\n        'Custom integrations',\r\n        'Dedicated account manager',\r\n        'Priority phone support',\r\n        'Custom training sessions',\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const comparisonFeatures = [\r\n    { name: 'Deal Tracking', finance: true, dealership: true, group: true },\r\n    { name: 'Performance Analytics', finance: true, dealership: true, group: true },\r\n    { name: 'Team Management', finance: false, dealership: true, group: true },\r\n    { name: 'Multi-location Support', finance: false, dealership: false, group: true },\r\n    { name: 'Custom Pay Plans', finance: false, dealership: true, group: true },\r\n    { name: 'Advanced Reporting', finance: false, dealership: true, group: true },\r\n    { name: 'Priority Support', finance: false, dealership: true, group: true },\r\n    { name: 'Custom Integrations', finance: false, dealership: false, group: true },\r\n    { name: 'Dedicated Account Manager', finance: false, dealership: false, group: true },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900\">\r\n      {/* Navigation */}\r\n      <nav className=\"border-b border-gray-700 bg-gray-800/50 backdrop-blur-sm\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center h-16\">\r\n            <div className=\"flex items-center\">\r\n              <button\r\n                onClick={() => navigate('/')}\r\n                className=\"text-gray-400 hover:text-white mr-4 transition-colors\"\r\n              >\r\n                <ArrowLeft className=\"w-5 h-5\" />\r\n              </button>\r\n              <h1 className=\"text-2xl font-bold text-white\">The DAS Board</h1>\r\n            </div>\r\n            <div className=\"hidden md:flex items-center space-x-8\">\r\n              <button\r\n                onClick={() => navigate('/')}\r\n                className=\"text-gray-300 hover:text-white transition-colors\"\r\n              >\r\n                Home\r\n              </button>\r\n              <button\r\n                onClick={() => navigate('/screenshots')}\r\n                className=\"text-gray-300 hover:text-white transition-colors\"\r\n              >\r\n                Screenshots\r\n              </button>\r\n              <button\r\n                onClick={() => navigate('/about')}\r\n                className=\"text-gray-300 hover:text-white transition-colors\"\r\n              >\r\n                About Us\r\n              </button>\r\n              <button\r\n                onClick={() => navigate('/auth')}\r\n                className=\"text-gray-300 hover:text-white transition-colors\"\r\n              >\r\n                Login\r\n              </button>\r\n              <button\r\n                onClick={() => navigate('/signup')}\r\n                className=\"bg-blue-600 hover:bg-blue-500 text-white px-4 py-2 rounded-lg transition-colors\"\r\n              >\r\n                Sign Up\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n      {/* Header */}\r\n      <section className=\"py-20 px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"max-w-4xl mx-auto text-center\">\r\n          <h1 className=\"text-5xl font-bold text-white mb-6\">\r\n            Choose the{' '}\r\n            <span className=\"bg-gradient-to-r from-blue-400 to-blue-600 bg-clip-text text-transparent\">\r\n              Perfect Plan\r\n            </span>\r\n          </h1>\r\n          <p className=\"text-xl text-gray-300 mb-8 max-w-2xl mx-auto\">\r\n            Start with our free trial for finance managers, or choose the plan that scales with your\r\n            dealership.\r\n          </p>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Pricing Cards */}\r\n      <section className=\"py-12 px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"max-w-7xl mx-auto\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n            {pricingTiers.map((tier, index) => (\r\n              <div\r\n                key={index}\r\n                className={`relative bg-gray-800 rounded-xl p-8 border transition-all duration-300 hover:shadow-xl ${\r\n                  tier.popular\r\n                    ? 'border-blue-500 shadow-xl shadow-blue-500/20 scale-105'\r\n                    : 'border-gray-700 hover:border-blue-500'\r\n                }`}\r\n              >\r\n                {tier.popular && (\r\n                  <div className=\"absolute -top-4 left-1/2 transform -translate-x-1/2\">\r\n                    <span className=\"bg-blue-600 text-white px-4 py-2 rounded-full text-sm font-semibold flex items-center\">\r\n                      <Star className=\"w-4 h-4 mr-1\" />\r\n                      Most Popular\r\n                    </span>\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"text-center mb-8\">\r\n                  <h3 className=\"text-2xl font-bold text-white mb-2\">{tier.name}</h3>\r\n                  <p className=\"text-gray-400 mb-6\">{tier.description}</p>\r\n\r\n                  <div className=\"mb-6\">\r\n                    {tier.originalPrice && (\r\n                      <div className=\"text-red-400 line-through text-lg mb-2\">\r\n                        {tier.originalPrice}\r\n                      </div>\r\n                    )}\r\n                    <div className=\"text-4xl font-bold text-blue-400\">{tier.price}</div>\r\n                  </div>\r\n\r\n                  <button\r\n                    onClick={() => navigate('/signup')}\r\n                    className={`w-full py-4 px-6 rounded-lg font-semibold text-lg transition-all duration-300 ${\r\n                      tier.popular\r\n                        ? 'bg-blue-600 hover:bg-blue-500 text-white shadow-lg hover:shadow-xl'\r\n                        : 'bg-gray-700 hover:bg-gray-600 text-white'\r\n                    }`}\r\n                  >\r\n                    {tier.popular ? 'Start Free Trial' : 'Get Started'}\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"text-lg font-semibold text-white border-b border-gray-700 pb-2\">\r\n                    What's included:\r\n                  </h4>\r\n                  {tier.features.map((feature, featureIndex) => (\r\n                    <div key={featureIndex} className=\"flex items-center\">\r\n                      <Check className=\"w-5 h-5 text-blue-400 mr-3 flex-shrink-0\" />\r\n                      <span className=\"text-gray-300\">{feature}</span>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Feature Comparison */}\r\n      <section className=\"py-20 px-4 sm:px-6 lg:px-8 bg-gray-800/30\">\r\n        <div className=\"max-w-6xl mx-auto\">\r\n          <div className=\"text-center mb-12\">\r\n            <h2 className=\"text-3xl font-bold text-white mb-4\">Compare Plans</h2>\r\n            <p className=\"text-xl text-gray-300\">See what's included in each plan at a glance</p>\r\n          </div>\r\n\r\n          <div className=\"bg-gray-800 rounded-xl border border-gray-700 overflow-hidden\">\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"w-full\">\r\n                <thead>\r\n                  <tr className=\"border-b border-gray-700\">\r\n                    <th className=\"text-left py-4 px-6 text-white font-semibold\">Features</th>\r\n                    <th className=\"text-center py-4 px-6 text-blue-400 font-semibold\">\r\n                      Finance Manager\r\n                    </th>\r\n                    <th className=\"text-center py-4 px-6 text-white font-semibold\">\r\n                      Single Dealership\r\n                    </th>\r\n                    <th className=\"text-center py-4 px-6 text-white font-semibold\">\r\n                      Dealer Groups\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {comparisonFeatures.map((feature, index) => (\r\n                    <tr key={index} className=\"border-b border-gray-700 last:border-b-0\">\r\n                      <td className=\"py-4 px-6 text-gray-300\">{feature.name}</td>\r\n                      <td className=\"py-4 px-6 text-center\">\r\n                        {feature.finance ? (\r\n                          <Check className=\"w-5 h-5 text-blue-400 mx-auto\" />\r\n                        ) : (\r\n                          <span className=\"text-gray-500\">—</span>\r\n                        )}\r\n                      </td>\r\n                      <td className=\"py-4 px-6 text-center\">\r\n                        {feature.dealership ? (\r\n                          <Check className=\"w-5 h-5 text-green-400 mx-auto\" />\r\n                        ) : (\r\n                          <span className=\"text-gray-500\">—</span>\r\n                        )}\r\n                      </td>\r\n                      <td className=\"py-4 px-6 text-center\">\r\n                        {feature.group ? (\r\n                          <Check className=\"w-5 h-5 text-green-400 mx-auto\" />\r\n                        ) : (\r\n                          <span className=\"text-gray-500\">—</span>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* FAQ Section */}\r\n      <section className=\"py-20 px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"max-w-4xl mx-auto\">\r\n          <div className=\"text-center mb-12\">\r\n            <h2 className=\"text-3xl font-bold text-white mb-4\">Frequently Asked Questions</h2>\r\n          </div>\r\n\r\n          <div className=\"space-y-6\">\r\n            {[\r\n              {\r\n                question: 'Is there really a free trial?',\r\n                answer:\r\n                  'Yes! Finance managers can use The DAS Board completely free for 30 days. No credit card required during the trial period.',\r\n              },\r\n              {\r\n                question: 'Can I upgrade or downgrade my plan?',\r\n                answer:\r\n                  'Absolutely. You can change your plan at any time through your account settings. Changes take effect immediately.',\r\n              },\r\n              {\r\n                question: 'What kind of support do you offer?',\r\n                answer:\r\n                  'We provide email support for all plans, with priority phone support for dealership and dealer group plans. Dealer groups also get a dedicated account manager.',\r\n              },\r\n              {\r\n                question: 'Is my data secure?',\r\n                answer:\r\n                  'Yes, we use enterprise-grade security measures including SSL encryption, secure data centers, and regular security audits to protect your data.',\r\n              },\r\n              {\r\n                question: 'Can I cancel anytime?',\r\n                answer:\r\n                  'Yes, there are no long-term contracts. You can cancel your subscription at any time through your account settings.',\r\n              },\r\n            ].map((faq, index) => (\r\n              <div key={index} className=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\r\n                <h3 className=\"text-lg font-semibold text-white mb-3\">{faq.question}</h3>\r\n                <p className=\"text-gray-300\">{faq.answer}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* CTA Section */}\r\n      <section className=\"py-20 px-4 sm:px-6 lg:px-8 bg-gray-800/30\">\r\n        <div className=\"max-w-4xl mx-auto text-center\">\r\n          <h2 className=\"text-4xl font-bold text-white mb-6\">Ready to Get Started?</h2>\r\n          <p className=\"text-xl text-gray-300 mb-8\">\r\n            Join hundreds of dealerships already using The DAS Board to optimize their operations.\r\n          </p>\r\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\r\n            <button\r\n              onClick={() => navigate('/signup')}\r\n              className=\"bg-blue-600 hover:bg-blue-500 text-white px-8 py-4 rounded-lg text-lg font-semibold transition-all duration-300 hover:shadow-xl hover:shadow-blue-500/25\"\r\n            >\r\n              Start Your Free Trial\r\n            </button>\r\n            <button\r\n              onClick={() => navigate('/screenshots')}\r\n              className=\"border border-gray-600 hover:bg-gray-700 text-white px-8 py-4 rounded-lg text-lg font-semibold transition-colors\"\r\n            >\r\n              View Screenshots\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Footer */}\r\n      <footer className=\"border-t border-gray-700 bg-gray-800\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\r\n            <div className=\"col-span-1 md:col-span-2\">\r\n              <h3 className=\"text-2xl font-bold text-white mb-4\">The DAS Board</h3>\r\n              <p className=\"text-gray-400 mb-4\">\r\n                Modern dealership management software with real-time insights.\r\n              </p>\r\n              <p className=\"text-gray-400\">Dealership Automotive Sales</p>\r\n            </div>\r\n            <div>\r\n              <h4 className=\"text-lg font-semibold text-white mb-4\">Product</h4>\r\n              <ul className=\"space-y-2\">\r\n                <li>\r\n                  <button\r\n                    onClick={() => navigate('/')}\r\n                    className=\"text-gray-400 hover:text-white transition-colors\"\r\n                  >\r\n                    Home\r\n                  </button>\r\n                </li>\r\n                <li>\r\n                  <button\r\n                    onClick={() => navigate('/screenshots')}\r\n                    className=\"text-gray-400 hover:text-white transition-colors\"\r\n                  >\r\n                    Screenshots\r\n                  </button>\r\n                </li>\r\n                <li>\r\n                  <button\r\n                    onClick={() => navigate('/about')}\r\n                    className=\"text-gray-400 hover:text-white transition-colors\"\r\n                  >\r\n                    About Us\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div>\r\n              <h4 className=\"text-lg font-semibold text-white mb-4\">Contact</h4>\r\n              <p className=\"text-gray-400 mb-2\">For support or inquiries, please contact us at:</p>\r\n              <p className=\"text-blue-400\">support@thedasboard.com</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"border-t border-gray-700 mt-8 pt-8 text-center\">\r\n            <p className=\"text-gray-400\">\r\n              © 2025 The DAS Board. All rights reserved. Designed with 🖤\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ArrowLeft, FileText } from 'lucide-react';\r\nimport { useTranslation } from '../../contexts/TranslationContext';\r\nimport LanguageSwitcher from '../../components/LanguageSwitcher';\r\n\r\nexport default function TermsPage() {\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900\">\r\n      {/* Header */}\r\n      <div className=\"bg-gray-900/50 border-b border-gray-700\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center py-6\">\r\n            <button\r\n              onClick={() => navigate('/')}\r\n              className=\"flex items-center space-x-2 text-blue-400 hover:text-blue-300 transition-colors\"\r\n            >\r\n              <ArrowLeft className=\"w-5 h-5\" />\r\n              <span>{t('nav.home')}</span>\r\n            </button>\r\n\r\n            <div className=\"flex items-center space-x-4\">\r\n              <LanguageSwitcher />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Content */}\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n        <div className=\"bg-gray-800/50 backdrop-blur-sm border border-gray-700 rounded-xl p-8\">\r\n          <div className=\"flex items-center space-x-3 mb-8\">\r\n            <FileText className=\"w-8 h-8 text-blue-400\" />\r\n            <h1 className=\"text-3xl font-bold text-white\">{t('legal.terms.title')}</h1>\r\n          </div>\r\n\r\n          <div className=\"prose prose-invert max-w-none\">\r\n            <p className=\"text-gray-300 text-sm mb-8\">\r\n              <strong>Effective Date:</strong> January 1, 2025\r\n              <br />\r\n              <strong>Last Updated:</strong> January 1, 2025\r\n            </p>\r\n\r\n            <div className=\"space-y-8 text-gray-300\">\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">1. Acceptance of Terms</h2>\r\n                <p>\r\n                  By accessing and using The DAS Board service, you accept and agree to be bound by\r\n                  the terms and provision of this agreement. If you do not agree to abide by the\r\n                  above, please do not use this service.\r\n                </p>\r\n              </section>\r\n\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">2. Service Description</h2>\r\n                <p>\r\n                  The DAS Board provides dealership management software with real-time dashboards\r\n                  for finance managers, sales teams, and dealership management. Our service includes\r\n                  performance tracking, deal logging, scheduling, and analytics tools designed\r\n                  specifically for automotive dealerships.\r\n                </p>\r\n              </section>\r\n\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">3. User Accounts</h2>\r\n                <p>\r\n                  You are responsible for maintaining the confidentiality of your account\r\n                  credentials and for all activities that occur under your account. You agree to\r\n                  notify us immediately of any unauthorized use of your account.\r\n                </p>\r\n              </section>\r\n\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">\r\n                  4. Subscription and Payment\r\n                </h2>\r\n                <ul className=\"list-disc list-inside space-y-2\">\r\n                  <li>Subscriptions are billed monthly or annually as selected</li>\r\n                  <li>Free trials are available for eligible plans</li>\r\n                  <li>Payment is due at the beginning of each billing cycle</li>\r\n                  <li>Cancellations take effect at the end of the current billing period</li>\r\n                  <li>Refunds are provided according to our refund policy</li>\r\n                </ul>\r\n              </section>\r\n\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">5. Data and Privacy</h2>\r\n                <p>\r\n                  Your privacy is important to us. Please review our Privacy Policy, which governs\r\n                  how we collect, use, and protect your information. By using our service, you\r\n                  consent to the collection and use of information in accordance with our Privacy\r\n                  Policy.\r\n                </p>\r\n              </section>\r\n\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">6. Acceptable Use</h2>\r\n                <p>\r\n                  You agree not to use the service for any unlawful purpose or in any way that could\r\n                  damage, disable, overburden, or impair our service. Prohibited activities include\r\n                  but are not limited to:\r\n                </p>\r\n                <ul className=\"list-disc list-inside space-y-2 mt-2\">\r\n                  <li>Violating any applicable laws or regulations</li>\r\n                  <li>Attempting to gain unauthorized access to our systems</li>\r\n                  <li>Interfering with other users' ability to use the service</li>\r\n                  <li>Transmitting viruses or malicious code</li>\r\n                </ul>\r\n              </section>\r\n\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">7. Intellectual Property</h2>\r\n                <p>\r\n                  The service and its original content, features, and functionality are owned by The\r\n                  DAS Board and are protected by international copyright, trademark, patent, trade\r\n                  secret, and other intellectual property laws.\r\n                </p>\r\n              </section>\r\n\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">\r\n                  8. Limitation of Liability\r\n                </h2>\r\n                <p>\r\n                  In no event shall The DAS Board be liable for any indirect, incidental, special,\r\n                  consequential, or punitive damages, including without limitation, loss of profits,\r\n                  data, use, goodwill, or other intangible losses, resulting from your use of the\r\n                  service.\r\n                </p>\r\n              </section>\r\n\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">9. Termination</h2>\r\n                <p>\r\n                  We may terminate or suspend your account immediately, without prior notice or\r\n                  liability, for any reason whatsoever, including without limitation if you breach\r\n                  the Terms.\r\n                </p>\r\n              </section>\r\n\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">10. Changes to Terms</h2>\r\n                <p>\r\n                  We reserve the right to modify or replace these Terms at any time. If a revision\r\n                  is material, we will try to provide at least 30 days' notice prior to any new\r\n                  terms taking effect.\r\n                </p>\r\n              </section>\r\n\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">11. Contact Information</h2>\r\n                <p>If you have any questions about these Terms, please contact us at:</p>\r\n                <div className=\"mt-2 bg-gray-700/50 p-4 rounded-lg\">\r\n                  <p>\r\n                    <strong>Email:</strong> legal@thedasboard.com\r\n                  </p>\r\n                  <p>\r\n                    <strong>Address:</strong> The DAS Board Legal Department\r\n                  </p>\r\n                </div>\r\n              </section>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ArrowLeft, Shield } from 'lucide-react';\r\nimport { useTranslation } from '../../contexts/TranslationContext';\r\nimport LanguageSwitcher from '../../components/LanguageSwitcher';\r\n\r\nexport default function PrivacyPage() {\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900\">\r\n      {/* Header */}\r\n      <div className=\"bg-gray-900/50 border-b border-gray-700\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center py-6\">\r\n            <button\r\n              onClick={() => navigate('/')}\r\n              className=\"flex items-center space-x-2 text-blue-400 hover:text-blue-300 transition-colors\"\r\n            >\r\n              <ArrowLeft className=\"w-5 h-5\" />\r\n              <span>{t('nav.home')}</span>\r\n            </button>\r\n\r\n            <div className=\"flex items-center space-x-4\">\r\n              <LanguageSwitcher />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Content */}\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n        <div className=\"bg-gray-800/50 backdrop-blur-sm border border-gray-700 rounded-xl p-8\">\r\n          <div className=\"flex items-center space-x-3 mb-8\">\r\n            <Shield className=\"w-8 h-8 text-blue-400\" />\r\n            <h1 className=\"text-3xl font-bold text-white\">{t('legal.privacy.title')}</h1>\r\n          </div>\r\n\r\n          <div className=\"prose prose-invert max-w-none\">\r\n            <p className=\"text-gray-300 text-sm mb-8\">\r\n              <strong>Effective Date:</strong> January 1, 2025\r\n              <br />\r\n              <strong>Last Updated:</strong> January 1, 2025\r\n            </p>\r\n\r\n            <div className=\"space-y-8 text-gray-300\">\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">1. Information We Collect</h2>\r\n                <p>\r\n                  We collect information you provide directly to us, such as when you create an\r\n                  account, use our services, or contact us for support.\r\n                </p>\r\n\r\n                <h3 className=\"text-lg font-medium text-white mt-4 mb-2\">Personal Information:</h3>\r\n                <ul className=\"list-disc list-inside space-y-2\">\r\n                  <li>Name, email address, and contact information</li>\r\n                  <li>Account credentials and profile information</li>\r\n                  <li>Dealership information and organizational details</li>\r\n                  <li>Payment and billing information</li>\r\n                </ul>\r\n\r\n                <h3 className=\"text-lg font-medium text-white mt-4 mb-2\">Usage Information:</h3>\r\n                <ul className=\"list-disc list-inside space-y-2\">\r\n                  <li>Log data and device information</li>\r\n                  <li>Usage patterns and feature interactions</li>\r\n                  <li>Performance metrics and analytics</li>\r\n                </ul>\r\n              </section>\r\n\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">\r\n                  2. How We Use Your Information\r\n                </h2>\r\n                <p>We use the information we collect to:</p>\r\n                <ul className=\"list-disc list-inside space-y-2 mt-2\">\r\n                  <li>Provide, maintain, and improve our services</li>\r\n                  <li>Process transactions and send related information</li>\r\n                  <li>Send technical notices and support messages</li>\r\n                  <li>Respond to your comments, questions, and requests</li>\r\n                  <li>Monitor and analyze trends, usage, and activities</li>\r\n                  <li>Detect, investigate, and prevent fraudulent activities</li>\r\n                </ul>\r\n              </section>\r\n\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">3. Information Sharing</h2>\r\n                <p>\r\n                  We do not sell, trade, or otherwise transfer your personal information to third\r\n                  parties without your consent, except as described in this policy:\r\n                </p>\r\n                <ul className=\"list-disc list-inside space-y-2 mt-2\">\r\n                  <li>\r\n                    <strong>Service Providers:</strong> Third-party vendors who assist in our\r\n                    operations\r\n                  </li>\r\n                  <li>\r\n                    <strong>Legal Requirements:</strong> When required by law or to protect our\r\n                    rights\r\n                  </li>\r\n                  <li>\r\n                    <strong>Business Transfers:</strong> In connection with mergers or acquisitions\r\n                  </li>\r\n                  <li>\r\n                    <strong>Consent:</strong> When you have given us explicit permission\r\n                  </li>\r\n                </ul>\r\n              </section>\r\n\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">4. Data Security</h2>\r\n                <p>\r\n                  We implement appropriate technical and organizational measures to protect your\r\n                  personal information against unauthorized access, alteration, disclosure, or\r\n                  destruction. This includes:\r\n                </p>\r\n                <ul className=\"list-disc list-inside space-y-2 mt-2\">\r\n                  <li>Encryption in transit and at rest</li>\r\n                  <li>Regular security assessments and updates</li>\r\n                  <li>Access controls and authentication measures</li>\r\n                  <li>Employee training on data protection</li>\r\n                </ul>\r\n              </section>\r\n\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">5. Data Retention</h2>\r\n                <p>\r\n                  We retain your personal information for as long as necessary to provide our\r\n                  services, comply with legal obligations, resolve disputes, and enforce our\r\n                  agreements. Specific retention periods vary based on:\r\n                </p>\r\n                <ul className=\"list-disc list-inside space-y-2 mt-2\">\r\n                  <li>The type of information and its purpose</li>\r\n                  <li>Legal and regulatory requirements</li>\r\n                  <li>Your relationship with our service</li>\r\n                </ul>\r\n              </section>\r\n\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">6. Your Rights</h2>\r\n                <p>\r\n                  Depending on your location, you may have certain rights regarding your personal\r\n                  information:\r\n                </p>\r\n                <ul className=\"list-disc list-inside space-y-2 mt-2\">\r\n                  <li>\r\n                    <strong>Access:</strong> Request information about the data we hold\r\n                  </li>\r\n                  <li>\r\n                    <strong>Correction:</strong> Update or correct your personal information\r\n                  </li>\r\n                  <li>\r\n                    <strong>Deletion:</strong> Request deletion of your personal information\r\n                  </li>\r\n                  <li>\r\n                    <strong>Portability:</strong> Request a copy of your data in a portable format\r\n                  </li>\r\n                  <li>\r\n                    <strong>Objection:</strong> Object to certain processing activities\r\n                  </li>\r\n                </ul>\r\n              </section>\r\n\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">7. Cookies and Tracking</h2>\r\n                <p>\r\n                  We use cookies and similar tracking technologies to enhance your experience,\r\n                  analyze usage patterns, and provide personalized content. You can control cookie\r\n                  preferences through your browser settings.\r\n                </p>\r\n              </section>\r\n\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">\r\n                  8. International Transfers\r\n                </h2>\r\n                <p>\r\n                  Your information may be transferred to and processed in countries other than your\r\n                  own. We ensure appropriate safeguards are in place to protect your information\r\n                  during such transfers.\r\n                </p>\r\n              </section>\r\n\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">9. Children's Privacy</h2>\r\n                <p>\r\n                  Our service is not intended for children under 13 years of age. We do not\r\n                  knowingly collect personal information from children under 13.\r\n                </p>\r\n              </section>\r\n\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">\r\n                  10. Changes to This Policy\r\n                </h2>\r\n                <p>\r\n                  We may update this Privacy Policy from time to time. We will notify you of any\r\n                  changes by posting the new policy on this page and updating the \"Last Updated\"\r\n                  date.\r\n                </p>\r\n              </section>\r\n\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">11. Contact Us</h2>\r\n                <p>If you have any questions about this Privacy Policy, please contact us at:</p>\r\n                <div className=\"mt-2 bg-gray-700/50 p-4 rounded-lg\">\r\n                  <p>\r\n                    <strong>Email:</strong> privacy@thedasboard.com\r\n                  </p>\r\n                  <p>\r\n                    <strong>Address:</strong> The DAS Board Privacy Department\r\n                  </p>\r\n                </div>\r\n              </section>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ArrowLeft, CreditCard } from 'lucide-react';\r\nimport { useTranslation } from '../../contexts/TranslationContext';\r\nimport LanguageSwitcher from '../../components/LanguageSwitcher';\r\n\r\nexport default function SubscriptionPage() {\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900\">\r\n      {/* Header */}\r\n      <div className=\"bg-gray-900/50 border-b border-gray-700\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center py-6\">\r\n            <button\r\n              onClick={() => navigate('/')}\r\n              className=\"flex items-center space-x-2 text-blue-400 hover:text-blue-300 transition-colors\"\r\n            >\r\n              <ArrowLeft className=\"w-5 h-5\" />\r\n              <span>{t('nav.home')}</span>\r\n            </button>\r\n\r\n            <div className=\"flex items-center space-x-4\">\r\n              <LanguageSwitcher />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Content */}\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n        <div className=\"bg-gray-800/50 backdrop-blur-sm border border-gray-700 rounded-xl p-8\">\r\n          <div className=\"flex items-center space-x-3 mb-8\">\r\n            <CreditCard className=\"w-8 h-8 text-blue-400\" />\r\n            <h1 className=\"text-3xl font-bold text-white\">{t('legal.subscription.title')}</h1>\r\n          </div>\r\n\r\n          <div className=\"prose prose-invert max-w-none\">\r\n            <p className=\"text-gray-300 text-sm mb-8\">\r\n              <strong>Effective Date:</strong> January 1, 2025\r\n              <br />\r\n              <strong>Last Updated:</strong> January 1, 2025\r\n            </p>\r\n\r\n            <div className=\"space-y-8 text-gray-300\">\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">1. Subscription Plans</h2>\r\n                <p>\r\n                  The DAS Board offers various subscription plans designed to meet the needs of\r\n                  different types of automotive dealership operations:\r\n                </p>\r\n\r\n                <div className=\"mt-4 space-y-4\">\r\n                  <div className=\"bg-gray-700/50 p-4 rounded-lg\">\r\n                    <h3 className=\"text-lg font-medium text-white mb-2\">Finance Manager Plan</h3>\r\n                    <p>\r\n                      <strong>Price:</strong> Free for limited time (normally $5/month)\r\n                    </p>\r\n                    <p>\r\n                      <strong>Features:</strong> Individual finance manager dashboard, deal\r\n                      tracking, performance analytics\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className=\"bg-gray-700/50 p-4 rounded-lg\">\r\n                    <h3 className=\"text-lg font-medium text-white mb-2\">Single Dealership Plan</h3>\r\n                    <p>\r\n                      <strong>Price:</strong> $250/month\r\n                    </p>\r\n                    <p>\r\n                      <strong>Features:</strong> Complete dealership management, unlimited users,\r\n                      advanced analytics\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className=\"bg-gray-700/50 p-4 rounded-lg\">\r\n                    <h3 className=\"text-lg font-medium text-white mb-2\">Dealer Group Plan</h3>\r\n                    <p>\r\n                      <strong>Price:</strong> Custom pricing\r\n                    </p>\r\n                    <p>\r\n                      <strong>Features:</strong> Multi-location management, enterprise features,\r\n                      dedicated support\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">\r\n                  2. Billing and Payment Terms\r\n                </h2>\r\n                <ul className=\"list-disc list-inside space-y-2\">\r\n                  <li>\r\n                    <strong>Billing Cycle:</strong> Subscriptions are billed monthly or annually\r\n                    based on your selection\r\n                  </li>\r\n                  <li>\r\n                    <strong>Payment Due:</strong> Payment is due at the beginning of each billing\r\n                    period\r\n                  </li>\r\n                  <li>\r\n                    <strong>Auto-Renewal:</strong> Subscriptions automatically renew unless\r\n                    cancelled\r\n                  </li>\r\n                  <li>\r\n                    <strong>Payment Methods:</strong> We accept major credit cards and ACH transfers\r\n                  </li>\r\n                  <li>\r\n                    <strong>Currency:</strong> All prices are in USD unless otherwise specified\r\n                  </li>\r\n                  <li>\r\n                    <strong>Taxes:</strong> Applicable taxes will be added to your subscription fee\r\n                  </li>\r\n                </ul>\r\n              </section>\r\n\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">3. Free Trial Terms</h2>\r\n                <p>Free trials are available for eligible plans with the following conditions:</p>\r\n                <ul className=\"list-disc list-inside space-y-2 mt-2\">\r\n                  <li>Trial duration varies by plan (typically 30 days)</li>\r\n                  <li>Full access to plan features during trial period</li>\r\n                  <li>Credit card required for trial activation</li>\r\n                  <li>Automatic conversion to paid subscription unless cancelled</li>\r\n                  <li>One trial per customer/organization</li>\r\n                </ul>\r\n              </section>\r\n\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">4. Subscription Changes</h2>\r\n                <p>You may upgrade, downgrade, or modify your subscription at any time:</p>\r\n                <ul className=\"list-disc list-inside space-y-2 mt-2\">\r\n                  <li>\r\n                    <strong>Upgrades:</strong> Take effect immediately with prorated billing\r\n                  </li>\r\n                  <li>\r\n                    <strong>Downgrades:</strong> Take effect at the next billing cycle\r\n                  </li>\r\n                  <li>\r\n                    <strong>Feature Limitations:</strong> Downgrading may result in loss of data or\r\n                    features\r\n                  </li>\r\n                  <li>\r\n                    <strong>Billing Adjustments:</strong> Credits or charges applied as appropriate\r\n                  </li>\r\n                </ul>\r\n              </section>\r\n\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">5. Cancellation Policy</h2>\r\n                <p>You may cancel your subscription at any time with the following terms:</p>\r\n                <ul className=\"list-disc list-inside space-y-2 mt-2\">\r\n                  <li>Cancellation takes effect at the end of the current billing period</li>\r\n                  <li>No refunds for partial billing periods</li>\r\n                  <li>Access continues until the end of the paid period</li>\r\n                  <li>Data export available for 30 days after cancellation</li>\r\n                  <li>Account reactivation possible within 90 days</li>\r\n                </ul>\r\n              </section>\r\n\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">6. Refund Policy</h2>\r\n                <p>Refunds are provided under the following circumstances:</p>\r\n                <ul className=\"list-disc list-inside space-y-2 mt-2\">\r\n                  <li>\r\n                    <strong>Service Issues:</strong> Significant service outages or technical\r\n                    problems\r\n                  </li>\r\n                  <li>\r\n                    <strong>Billing Errors:</strong> Incorrect charges or duplicate billing\r\n                  </li>\r\n                  <li>\r\n                    <strong>Cancellation:</strong> Within 7 days of initial subscription for annual\r\n                    plans\r\n                  </li>\r\n                  <li>\r\n                    <strong>Approval Required:</strong> All refunds subject to review and approval\r\n                  </li>\r\n                  <li>\r\n                    <strong>Processing Time:</strong> Refunds processed within 5-10 business days\r\n                  </li>\r\n                </ul>\r\n              </section>\r\n\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">\r\n                  7. Service Level Agreement\r\n                </h2>\r\n                <p>We strive to provide reliable service with the following commitments:</p>\r\n                <ul className=\"list-disc list-inside space-y-2 mt-2\">\r\n                  <li>\r\n                    <strong>Uptime:</strong> 99.5% monthly uptime target\r\n                  </li>\r\n                  <li>\r\n                    <strong>Support Response:</strong> Business hours support for paid plans\r\n                  </li>\r\n                  <li>\r\n                    <strong>Data Backup:</strong> Daily automated backups\r\n                  </li>\r\n                  <li>\r\n                    <strong>Maintenance:</strong> Scheduled maintenance with advance notice\r\n                  </li>\r\n                </ul>\r\n              </section>\r\n\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">8. Data and Export</h2>\r\n                <p>Your data management rights and options:</p>\r\n                <ul className=\"list-disc list-inside space-y-2 mt-2\">\r\n                  <li>\r\n                    <strong>Data Ownership:</strong> You retain ownership of all your data\r\n                  </li>\r\n                  <li>\r\n                    <strong>Export Options:</strong> Standard export formats available\r\n                  </li>\r\n                  <li>\r\n                    <strong>Data Retention:</strong> Data kept for 90 days after cancellation\r\n                  </li>\r\n                  <li>\r\n                    <strong>Deletion:</strong> Permanent deletion available upon request\r\n                  </li>\r\n                </ul>\r\n              </section>\r\n\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">9. Price Changes</h2>\r\n                <p>We may modify subscription prices with the following notice:</p>\r\n                <ul className=\"list-disc list-inside space-y-2 mt-2\">\r\n                  <li>\r\n                    <strong>Advance Notice:</strong> 30 days notice for price increases\r\n                  </li>\r\n                  <li>\r\n                    <strong>Existing Subscriptions:</strong> Current rates honored through billing\r\n                    cycle\r\n                  </li>\r\n                  <li>\r\n                    <strong>Grandfathering:</strong> Limited-time promotional rates may expire\r\n                  </li>\r\n                  <li>\r\n                    <strong>Cancellation Option:</strong> Right to cancel before price increase\r\n                    takes effect\r\n                  </li>\r\n                </ul>\r\n              </section>\r\n\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">\r\n                  10. Disputes and Resolution\r\n                </h2>\r\n                <p>For billing disputes or subscription issues:</p>\r\n                <ul className=\"list-disc list-inside space-y-2 mt-2\">\r\n                  <li>Contact our billing support team first</li>\r\n                  <li>Provide detailed information about the dispute</li>\r\n                  <li>We will investigate and respond within 5 business days</li>\r\n                  <li>Escalation procedures available if needed</li>\r\n                </ul>\r\n              </section>\r\n\r\n              <section>\r\n                <h2 className=\"text-xl font-semibold text-white mb-4\">11. Contact Information</h2>\r\n                <p>For subscription-related questions or support:</p>\r\n                <div className=\"mt-2 bg-gray-700/50 p-4 rounded-lg\">\r\n                  <p>\r\n                    <strong>Billing Support:</strong> billing@thedasboard.com\r\n                  </p>\r\n                  <p>\r\n                    <strong>Technical Support:</strong> support@thedasboard.com\r\n                  </p>\r\n                  <p>\r\n                    <strong>Phone:</strong> Available for enterprise customers\r\n                  </p>\r\n                </div>\r\n              </section>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ArrowLeft } from 'lucide-react';\r\nimport { useTranslation } from '../contexts/TranslationContext';\r\nimport LanguageSwitcher from '../components/LanguageSwitcher';\r\n\r\nexport default function AboutPage() {\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n\r\n  const teamMembers = [\r\n    {\r\n      name: t('about.team.members.tyler.name') as string,\r\n      role: t('about.team.members.tyler.role') as string,\r\n      bio: t('about.team.members.tyler.bio') as string,\r\n    },\r\n    {\r\n      name: t('about.team.members.sarah.name') as string,\r\n      role: t('about.team.members.sarah.role') as string,\r\n      bio: t('about.team.members.sarah.bio') as string,\r\n    },\r\n    {\r\n      name: t('about.team.members.claude.name') as string,\r\n      role: t('about.team.members.claude.role') as string,\r\n      bio: t('about.team.members.claude.bio') as string,\r\n    },\r\n    {\r\n      name: t('about.team.members.annie.name') as string,\r\n      role: t('about.team.members.annie.role') as string,\r\n      bio: t('about.team.members.annie.bio') as string,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900\">\r\n      {/* Header */}\r\n      <div className=\"bg-gray-900/50 border-b border-gray-700\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center py-6\">\r\n            <button\r\n              onClick={() => navigate('/')}\r\n              className=\"flex items-center space-x-2 text-blue-400 hover:text-blue-300 transition-colors\"\r\n            >\r\n              <ArrowLeft className=\"w-5 h-5\" />\r\n              <span>{t('nav.home')}</span>\r\n            </button>\r\n\r\n            <div className=\"flex items-center space-x-4\">\r\n              <LanguageSwitcher />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <section className=\"py-20 px-6 max-w-7xl mx-auto\">\r\n        <div className=\"text-center mb-16\">\r\n          <h1 className=\"text-4xl md:text-5xl font-bold mb-6 bg-gradient-to-r from-blue-400 to-blue-600 bg-clip-text text-transparent\">\r\n            {t('about.title')}\r\n          </h1>\r\n          <p className=\"text-xl text-gray-300 max-w-3xl mx-auto\">{t('about.subtitle')}</p>\r\n        </div>\r\n\r\n        {/* Founder's Vision */}\r\n        <div className=\"bg-gray-800/50 backdrop-blur-sm border border-gray-700 rounded-xl p-8 mb-16\">\r\n          <h2 className=\"text-2xl font-bold mb-4 text-blue-400\">\r\n            {t('about.founderVision.title')}\r\n          </h2>\r\n          <p className=\"text-gray-300 text-lg mb-4\">{t('about.founderVision.paragraph1')}</p>\r\n          <p className=\"text-gray-300 text-lg mb-4\">{t('about.founderVision.paragraph2')}</p>\r\n          <p className=\"text-gray-300 text-lg\">{t('about.founderVision.paragraph3')}</p>\r\n        </div>\r\n\r\n        {/* Team Section */}\r\n        <div>\r\n          <h2 className=\"text-3xl font-bold text-center mb-12 bg-gradient-to-r from-blue-400 to-blue-600 bg-clip-text text-transparent\">\r\n            {t('about.team.title')}\r\n          </h2>\r\n\r\n          <div className=\"grid md:grid-cols-2 gap-8\">\r\n            {teamMembers.map((member, index) => (\r\n              <div\r\n                key={index}\r\n                className=\"bg-gray-800/50 backdrop-blur-sm border border-gray-700 rounded-xl p-6 flex gap-4 transition-all duration-300 hover:scale-[1.02]\"\r\n              >\r\n                <div className=\"w-24 h-24 bg-gray-700 rounded-full flex items-center justify-center flex-shrink-0 border-2 border-blue-400/30\">\r\n                  <span className=\"text-2xl text-blue-400\">\r\n                    {member.name\r\n                      .split(' ')\r\n                      .map((n: string) => n[0])\r\n                      .join('')}\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <h3 className=\"text-xl font-bold text-white\">{member.name}</h3>\r\n                  <p className=\"text-blue-400 mb-2\">{member.role}</p>\r\n                  <p className=\"text-gray-300\">{member.bio}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Company Values */}\r\n        <div className=\"mt-16\">\r\n          <h2 className=\"text-3xl font-bold text-center mb-12 bg-gradient-to-r from-blue-400 to-blue-600 bg-clip-text text-transparent\">\r\n            {t('about.values.title')}\r\n          </h2>\r\n\r\n          <div className=\"grid md:grid-cols-3 gap-8\">\r\n            {[\r\n              {\r\n                title: t('about.values.customerFocused.title') as string,\r\n                description: t('about.values.customerFocused.description') as string,\r\n              },\r\n              {\r\n                title: t('about.values.dataDriven.title') as string,\r\n                description: t('about.values.dataDriven.description') as string,\r\n              },\r\n              {\r\n                title: t('about.values.continuousImprovement.title') as string,\r\n                description: t('about.values.continuousImprovement.description') as string,\r\n              },\r\n            ].map((value, index) => (\r\n              <div\r\n                key={index}\r\n                className=\"bg-gray-800/50 backdrop-blur-sm border border-gray-700 rounded-xl p-6 transition-all duration-300 hover:scale-[1.02]\"\r\n              >\r\n                <h3 className=\"text-xl font-semibold mb-3 text-blue-400\">{value.title}</h3>\r\n                <p className=\"text-gray-300\">{value.description}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Contact Section */}\r\n      <section className=\"py-20 px-6 max-w-7xl mx-auto bg-gray-800/30 mt-16 border-t border-b border-blue-400/20\">\r\n        <div className=\"text-center max-w-3xl mx-auto\">\r\n          <h2 className=\"text-3xl font-bold mb-6 bg-gradient-to-r from-blue-400 to-blue-600 bg-clip-text text-transparent\">\r\n            {t('about.contact.title')}\r\n          </h2>\r\n          <p className=\"text-xl text-gray-300 mb-8\">{t('about.contact.subtitle')}</p>\r\n          <div className=\"space-y-4\">\r\n            <p className=\"text-gray-300\">\r\n              <span className=\"font-bold\">{t('about.contact.email')}</span>{' '}\r\n              <a\r\n                href=\"mailto:contact@thedasboard.com\"\r\n                className=\"text-blue-400 hover:underline transition-colors duration-300\"\r\n              >\r\n                contact@thedasboard.com\r\n              </a>\r\n            </p>\r\n            <p className=\"text-gray-300\">\r\n              <span className=\"font-bold\">{t('about.contact.phone')}</span> (555) 123-4567\r\n            </p>\r\n          </div>\r\n          <div className=\"mt-8\">\r\n            <button\r\n              onClick={() => navigate('/signup')}\r\n              className=\"bg-gradient-to-r from-blue-600 to-blue-500 hover:from-blue-500 hover:to-blue-400 px-8 py-3 rounded-md text-lg font-medium transition-all duration-300 hover:scale-105 hover:shadow-[0_0_15px_rgba(59,130,246,0.5)]\"\r\n            >\r\n              {t('home.cta.startTrial')}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ArrowLeft } from 'lucide-react';\r\nimport { useTranslation } from '../contexts/TranslationContext';\r\nimport LanguageSwitcher from '../components/LanguageSwitcher';\r\n\r\nexport default function ScreenshotsPage() {\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900\">\r\n      {/* Header */}\r\n      <div className=\"bg-gray-900/50 border-b border-gray-700\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center py-6\">\r\n            <button\r\n              onClick={() => navigate('/')}\r\n              className=\"flex items-center space-x-2 text-blue-400 hover:text-blue-300 transition-colors\"\r\n            >\r\n              <ArrowLeft className=\"w-5 h-5\" />\r\n              <span>{t('nav.home')}</span>\r\n            </button>\r\n\r\n            <div className=\"flex items-center space-x-4\">\r\n              <LanguageSwitcher />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <section className=\"py-20 px-6 max-w-7xl mx-auto\">\r\n        <div className=\"text-center mb-16\">\r\n          <h1 className=\"text-4xl md:text-5xl font-bold mb-6 bg-gradient-to-r from-blue-400 to-blue-600 bg-clip-text text-transparent\">\r\n            Dashboard Screenshots\r\n          </h1>\r\n          <p className=\"text-xl text-gray-300 max-w-3xl mx-auto\">\r\n            Explore our different dashboard solutions designed for various roles in your dealership\r\n          </p>\r\n        </div>\r\n\r\n        {/* Dashboard Screenshots */}\r\n        <div className=\"grid lg:grid-cols-2 gap-8 mb-16\">\r\n          {/* Finance Manager Dashboard */}\r\n          <div className=\"bg-gray-800/50 backdrop-blur-sm border border-gray-700 rounded-xl p-6 transition-all duration-300 hover:scale-[1.01] relative z-0\">\r\n            <h3 className=\"text-xl font-semibold mb-4 text-blue-400\">Finance Manager Dashboard</h3>\r\n            <div className=\"relative overflow-hidden rounded-lg border border-gray-600\">\r\n              <img\r\n                src=\"/images/FINANCEMANAGER_DASH.JPG\"\r\n                alt=\"Finance Manager Dashboard\"\r\n                className=\"w-full h-auto object-cover transition-transform duration-300 hover:scale-105\"\r\n              />\r\n            </div>\r\n            <p className=\"text-gray-300 mt-4\">\r\n              Comprehensive financial tracking and deal management for finance managers.\r\n            </p>\r\n          </div>\r\n\r\n          {/* Sales Manager Dashboard */}\r\n          <div className=\"bg-gray-800/50 backdrop-blur-sm border border-gray-700 rounded-xl p-6 transition-all duration-300 hover:scale-[1.01] relative z-0\">\r\n            <h3 className=\"text-xl font-semibold mb-4 text-blue-400\">Sales Manager Dashboard</h3>\r\n            <div className=\"relative overflow-hidden rounded-lg border border-gray-600\">\r\n              <img\r\n                src=\"/images/SALESMANAGER_DASH.JPG\"\r\n                alt=\"Sales Manager Dashboard\"\r\n                className=\"w-full h-auto object-cover transition-transform duration-300 hover:scale-105\"\r\n              />\r\n            </div>\r\n            <p className=\"text-gray-300 mt-4\">\r\n              Team performance tracking and sales analytics for managers.\r\n            </p>\r\n          </div>\r\n\r\n          {/* Salesperson Dashboard 1 */}\r\n          <div className=\"bg-gray-800/50 backdrop-blur-sm border border-gray-700 rounded-xl p-6 transition-all duration-300 hover:scale-[1.01] relative z-0\">\r\n            <h3 className=\"text-xl font-semibold mb-4 text-blue-400\">Salesperson Dashboard</h3>\r\n            <div className=\"relative overflow-hidden rounded-lg border border-gray-600\">\r\n              <img\r\n                src=\"/images/SALESPERSON_DASH1.JPG\"\r\n                alt=\"Salesperson Dashboard\"\r\n                className=\"w-full h-auto object-cover transition-transform duration-300 hover:scale-105\"\r\n              />\r\n            </div>\r\n            <p className=\"text-gray-300 mt-4\">\r\n              Individual performance tracking and goal management for sales staff.\r\n            </p>\r\n          </div>\r\n\r\n          {/* Salesperson Dashboard 2 */}\r\n          <div className=\"bg-gray-800/50 backdrop-blur-sm border border-gray-700 rounded-xl p-6 transition-all duration-300 hover:scale-[1.01] relative z-0\">\r\n            <h3 className=\"text-xl font-semibold mb-4 text-blue-400\">Advanced Salesperson View</h3>\r\n            <div className=\"relative overflow-hidden rounded-lg border border-gray-600\">\r\n              <img\r\n                src=\"/images/SALESPERSON_DASH_2.JPG\"\r\n                alt=\"Advanced Salesperson Dashboard\"\r\n                className=\"w-full h-auto object-cover transition-transform duration-300 hover:scale-105\"\r\n              />\r\n            </div>\r\n            <p className=\"text-gray-300 mt-4\">\r\n              Enhanced analytics and detailed performance metrics for experienced sales\r\n              professionals.\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Features Overview */}\r\n        <div className=\"bg-gray-800/30 rounded-xl p-8 border border-gray-700\">\r\n          <h2 className=\"text-2xl font-bold text-center mb-8 text-blue-400\">\r\n            Key Dashboard Features\r\n          </h2>\r\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            <div className=\"text-center\">\r\n              <h3 className=\"text-lg font-semibold text-white mb-2\">Real-time Analytics</h3>\r\n              <p className=\"text-gray-300\">Live performance tracking and metrics updates</p>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <h3 className=\"text-lg font-semibold text-white mb-2\">Deal Management</h3>\r\n              <p className=\"text-gray-300\">Comprehensive deal logging and tracking system</p>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <h3 className=\"text-lg font-semibold text-white mb-2\">Team Coordination</h3>\r\n              <p className=\"text-gray-300\">Dynamic scheduling and team management tools</p>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <h3 className=\"text-lg font-semibold text-white mb-2\">Pay Calculation</h3>\r\n              <p className=\"text-gray-300\">Real-time earnings tracking with pay plans</p>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <h3 className=\"text-lg font-semibold text-white mb-2\">Performance Insights</h3>\r\n              <p className=\"text-gray-300\">Detailed analytics for informed decision making</p>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <h3 className=\"text-lg font-semibold text-white mb-2\">Multi-role Support</h3>\r\n              <p className=\"text-gray-300\">Customized dashboards for different user roles</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Call to Action */}\r\n      <section className=\"py-16 px-6 max-w-7xl mx-auto text-center\">\r\n        <h2 className=\"text-3xl font-bold mb-6 bg-gradient-to-r from-blue-400 to-blue-600 bg-clip-text text-transparent\">\r\n          Ready to Get Started?\r\n        </h2>\r\n        <p className=\"text-xl text-gray-300 mb-8 max-w-2xl mx-auto\">\r\n          Experience these powerful dashboards for yourself. Start your free trial today!\r\n        </p>\r\n        <div className=\"space-x-4\">\r\n          <button\r\n            onClick={() => navigate('/signup')}\r\n            className=\"bg-gradient-to-r from-blue-600 to-blue-500 hover:from-blue-500 hover:to-blue-400 px-8 py-3 rounded-md text-lg font-medium transition-all duration-300 hover:scale-105 hover:shadow-[0_0_15px_rgba(59,130,246,0.5)]\"\r\n          >\r\n            {t('home.cta.startTrial')}\r\n          </button>\r\n          <button\r\n            onClick={() => navigate('/pricing')}\r\n            className=\"border border-blue-500 text-blue-400 hover:bg-blue-500 hover:text-white px-8 py-3 rounded-md text-lg font-medium transition-all duration-300\"\r\n          >\r\n            View Pricing\r\n          </button>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","import React, { createContext, useContext, useState, lazy, Suspense } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Navigate,\r\n  useLocation,\r\n  useNavigationType,\r\n  useNavigate,\r\n  useParams,\r\n} from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { AuthProvider, useAuth } from './contexts/AuthContext';\r\nimport AuthPage from './pages/AuthPage';\r\nimport Dashboard from './pages/Dashboard';\r\nimport ProtectedRoute from './components/auth/ProtectedRoute';\r\nimport DashboardLayout from './components/layout/DashboardLayout';\r\nimport LogNewDeal from './components/dealership/LogNewDeal';\r\nimport { Toaster } from './components/ui/toaster';\r\nimport { AdminDashboard as MasterAdminDashboard } from './components/admin/AdminDashboard';\r\nimport TempAdminDashboard from './components/TempAdminDashboard';\r\nimport MasterAdminPanel from './components/admin/MasterAdminPanel';\r\nimport { QueryClientProvider } from '@tanstack/react-query';\r\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools';\r\n\r\nimport { queryClient } from './lib/react-query';\r\nimport { DealLogEditor } from './components/manager/DealLogEditor';\r\nimport { ScheduleEditor } from './components/manager/ScheduleEditor';\r\nimport { ToastContextProvider } from './lib/use-toast';\r\nimport {\r\n  SalesDashboard,\r\n  FinanceDashboard,\r\n  SalesManagerDashboard,\r\n  GMDashboard,\r\n} from './components/dashboards';\r\nimport AdminDashboardPage from './pages/AdminDashboardPage';\r\nimport AVPFullDashboard from './components/dashboards/AVPDashboard';\r\nimport { GroupAdminDashboard } from './components/admin/GroupAdminDashboard';\r\nimport { supabase } from './lib/supabaseClient';\r\nimport { Loader2 } from 'lucide-react';\r\nimport DebugAuthPage from './pages/DebugAuthPage';\r\nimport AuthDebugger from './components/debug/AuthDebugger';\r\nimport TestUserMiddleware from './components/auth/TestUserMiddleware';\r\nimport DirectLoginPage from './pages/DirectLoginPage';\r\nimport DirectAuthProvider from './components/auth/DirectAuthProvider';\r\nimport { isAuthenticated, getCurrentUser, getRedirectPath } from './lib/directAuth';\r\nimport ForceLoginPage from './pages/ForceLoginPage';\r\nimport ResetPage from './pages/ResetPage';\r\nimport LogoutPage from './pages/LogoutPage';\r\nimport TestLoginRedirect from './pages/TestLoginRedirect';\r\nimport GroupAdminBypass from './pages/GroupAdminBypass';\r\nimport DashboardSelector from './pages/DashboardSelector';\r\nimport { DealsProvider } from './contexts/DealsContext';\r\nimport DealLogPage from './pages/DealLogPage';\r\nimport TeamManagementPage from './pages/manager/TeamManagementPage';\r\nimport GoalsPage from './pages/manager/GoalsPage';\r\nimport SchedulePage from './pages/manager/SchedulePage';\r\nimport SalesReportPage from './pages/manager/SalesReportPage';\r\nimport SingleFinanceManagerDashboard from './components/dashboards/SingleFinanceManagerDashboard';\r\nimport FinanceDirectorDashboard from './components/dashboards/FinanceDirectorDashboard';\r\nimport LogFinanceManagerDeal from './pages/finance/LogFinanceManagerDeal';\r\nimport MasterAdminPage from './pages/admin/MasterAdminPage';\r\nimport SignUp from './components/auth/SignUp';\r\nimport SingleFinanceSignup from './components/auth/SingleFinanceSignup';\r\nimport DealershipSignup from './components/auth/DealershipSignup';\r\nimport DealerGroupSignup from './components/auth/DealerGroupSignup';\r\nimport HomePage from './pages/HomePage';\r\nimport PricingPage from './pages/PricingPage';\r\nimport TermsPage from './pages/legal/TermsPage';\r\nimport PrivacyPage from './pages/legal/PrivacyPage';\r\nimport SubscriptionPage from './pages/legal/SubscriptionPage';\r\nimport AboutPage from './pages/AboutPage';\r\nimport ScreenshotsPage from './pages/ScreenshotsPage';\r\nimport { TranslationProvider } from './contexts/TranslationContext';\r\n\r\n// Add global type declaration for app event tracking\r\ndeclare global {\r\n  interface Window {\r\n    appEvents?: Array<{\r\n      event: string;\r\n      details: any;\r\n    }>;\r\n  }\r\n}\r\n\r\n// Application environment variables and deployment info\r\nconst APP_VERSION = import.meta.env.VITE_DEPLOYMENT_VERSION || '1.0.0';\r\nconst APP_ENV = import.meta.env.MODE || 'development';\r\nconst APP_URL = import.meta.env.VITE_APP_URL || 'http://localhost:5173';\r\nconst MARKETING_URL = import.meta.env.VITE_MARKETING_URL || 'http://localhost:3000';\r\nconst IS_PRODUCTION = APP_ENV === 'production';\r\n\r\n// Enhanced logging function\r\nconst logAppEvent = (event: string, details: any = {}) => {\r\n  const timestamp = new Date().toISOString();\r\n  console.log(`[App][${timestamp}] ${event}`, {\r\n    ...details,\r\n    app_version: APP_VERSION,\r\n    environment: APP_ENV,\r\n    timestamp,\r\n  });\r\n\r\n  // Track navigation events in window object if in development\r\n  if (!IS_PRODUCTION && typeof window !== 'undefined') {\r\n    if (!window.appEvents) {\r\n      window.appEvents = [];\r\n    }\r\n\r\n    // Keep last 100 events\r\n    if (window.appEvents.length > 100) {\r\n      window.appEvents.shift();\r\n    }\r\n\r\n    window.appEvents.push({\r\n      event,\r\n      details: {\r\n        ...details,\r\n        timestamp,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n// DealershipContext for multi-dealership support\r\ninterface DealershipContextType {\r\n  currentDealershipId: number | null;\r\n  setCurrentDealershipId: (id: number | null) => void;\r\n  currentDealershipName: string | null;\r\n  setCurrentDealershipName: (name: string | null) => void;\r\n}\r\n\r\nconst DealershipContext = createContext<DealershipContextType | undefined>(undefined);\r\n\r\nexport const DealershipProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [currentDealershipId, setCurrentDealershipId] = useState<number | null>(null);\r\n  const [currentDealershipName, setCurrentDealershipName] = useState<string | null>(null);\r\n  const { setDealershipContext } = useAuth();\r\n\r\n  // Update the AuthContext when dealership changes\r\n  useEffect(() => {\r\n    if (currentDealershipId) {\r\n      logAppEvent('Setting dealership context', {\r\n        dealership_id: currentDealershipId,\r\n        dealership_name: currentDealershipName,\r\n      });\r\n\r\n      setDealershipContext(currentDealershipId);\r\n    }\r\n  }, [currentDealershipId, currentDealershipName, setDealershipContext]);\r\n\r\n  const value = {\r\n    currentDealershipId,\r\n    setCurrentDealershipId,\r\n    currentDealershipName,\r\n    setCurrentDealershipName,\r\n  };\r\n\r\n  return <DealershipContext.Provider value={value}>{children}</DealershipContext.Provider>;\r\n};\r\n\r\nexport const useDealership = () => {\r\n  const context = useContext(DealershipContext);\r\n  if (context === undefined) {\r\n    throw new Error('useDealership must be used within a DealershipProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n// Enhanced Route Logger Component with performance metrics\r\nfunction RouteLogger() {\r\n  const location = useLocation();\r\n  const navigationType = useNavigationType();\r\n  const { user, role } = useAuth();\r\n\r\n  useEffect(() => {\r\n    // Track navigation events with user context info\r\n    logAppEvent('Navigation event', {\r\n      path: location.pathname,\r\n      search: location.search,\r\n      type: navigationType,\r\n      state: location.state ? 'present' : 'none',\r\n      hash: location.hash || 'none',\r\n      user_id: user?.id,\r\n      user_email: user?.email,\r\n      user_role: role,\r\n    });\r\n\r\n    // Measure render time - only if performance API is available\r\n    const hasPerformanceAPI = typeof window !== 'undefined' && window.performance;\r\n    const start = hasPerformanceAPI ? window.performance.now() : 0;\r\n    const navigationStart = hasPerformanceAPI\r\n      ? window.performance.timeOrigin + window.performance.now()\r\n      : 0;\r\n\r\n    return () => {\r\n      if (hasPerformanceAPI) {\r\n        const end = window.performance.now();\r\n        const renderTime = end - start;\r\n\r\n        logAppEvent('Route render completed', {\r\n          path: location.pathname,\r\n          render_time_ms: renderTime.toFixed(2),\r\n          total_time_ms: (end - navigationStart).toFixed(2),\r\n        });\r\n\r\n        // Report to analytics if render time is too long (over 1000ms)\r\n        if (renderTime > 1000) {\r\n          console.warn(\r\n            `[Performance Warning] Slow render (${renderTime.toFixed(2)}ms) for ${\r\n              location.pathname\r\n            }`\r\n          );\r\n        }\r\n      }\r\n    };\r\n  }, [location, navigationType, user, role]);\r\n\r\n  return null;\r\n}\r\n\r\n// Enhanced Redirect logger component\r\nfunction RedirectLogger({\r\n  to,\r\n  replace = false,\r\n  state = undefined,\r\n}: {\r\n  to: string;\r\n  replace?: boolean;\r\n  state?: any;\r\n}) {\r\n  const { user, role } = useAuth();\r\n\r\n  useEffect(() => {\r\n    logAppEvent('Redirect triggered', {\r\n      from: window.location.pathname,\r\n      to,\r\n      replace,\r\n      has_state: state !== undefined,\r\n      user_id: user?.id,\r\n      user_email: user?.email,\r\n      user_role: role,\r\n    });\r\n  }, [to, replace, state, user, role]);\r\n\r\n  return <Navigate to={to} replace={replace} state={state} />;\r\n}\r\n\r\n// Update RoleBasedRedirect to check direct auth\r\nfunction RoleBasedRedirect() {\r\n  const {\r\n    role,\r\n    loading,\r\n    userRole,\r\n    user,\r\n    hasSession,\r\n    dealershipId,\r\n    currentDealershipName,\r\n    logAccessAttempt,\r\n    isGroupAdmin,\r\n    authCheckComplete,\r\n  } = useAuth();\r\n  const location = useLocation();\r\n\r\n  // Add specific debugging for finance users\r\n  useEffect(() => {\r\n    if (user?.email === 'testfinance@example.com' || user?.email === 'finance1@exampletest.com') {\r\n      console.warn('[FINANCE DEBUG] Finance user detected in RoleBasedRedirect:', {\r\n        email: user.email,\r\n        userRole,\r\n        role,\r\n        dealershipId,\r\n        isGroupAdmin,\r\n        userMetadata: user.user_metadata,\r\n      });\r\n    }\r\n  }, [user, userRole, role, dealershipId, isGroupAdmin]);\r\n\r\n  useEffect(() => {\r\n    console.warn('[DEBUG REDIRECT] Role-based redirect check', {\r\n      role,\r\n      user_role: userRole,\r\n      user_email: user?.email,\r\n      dealership_id: dealershipId,\r\n      dealership_name: currentDealershipName,\r\n      is_group_admin: isGroupAdmin,\r\n      loading,\r\n      auth_check_complete: authCheckComplete,\r\n      has_session: hasSession,\r\n      path: location.pathname,\r\n    });\r\n  }, [\r\n    role,\r\n    loading,\r\n    location,\r\n    userRole,\r\n    user,\r\n    hasSession,\r\n    dealershipId,\r\n    currentDealershipName,\r\n    isGroupAdmin,\r\n    authCheckComplete,\r\n  ]);\r\n\r\n  // First check for direct auth\r\n  if (isAuthenticated()) {\r\n    const directUser = getCurrentUser();\r\n    if (directUser) {\r\n      console.log('[ROLE REDIRECT] Direct auth user detected, redirecting to appropriate route', {\r\n        email: directUser.email,\r\n        role: directUser.role,\r\n        redirectPath: getRedirectPath(directUser),\r\n      });\r\n      return <Navigate to={getRedirectPath(directUser)} replace />;\r\n    }\r\n  }\r\n\r\n  // Wait for auth check to complete before redirecting\r\n  if (loading || !authCheckComplete) {\r\n    logAppEvent('Role redirect - Still loading or auth check incomplete', {\r\n      path: location.pathname,\r\n      loading,\r\n      authCheckComplete,\r\n    });\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!user || !hasSession) {\r\n    logAppEvent('Role redirect - Not authenticated', {\r\n      path: location.pathname,\r\n      redirect_to: '/',\r\n    });\r\n\r\n    logAccessAttempt(location.pathname, false, {\r\n      reason: 'No authenticated session',\r\n      redirect_to: '/',\r\n    });\r\n\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  logAppEvent('Role redirect - User authenticated', {\r\n    user_email: user.email,\r\n    role,\r\n    user_role: userRole,\r\n    is_admin: role === 'admin' || userRole === 'admin',\r\n    is_group_admin: isGroupAdmin,\r\n    user_metadata: user.user_metadata ? 'present' : 'missing',\r\n    dealership_id: dealershipId,\r\n    dealership_name: currentDealershipName,\r\n  });\r\n\r\n  // Check both role and userRole fields, case-insensitive\r\n  const roleValue = (role || userRole || '').toLowerCase();\r\n  console.warn('[DEBUG REDIRECT] User role determined:', {\r\n    roleValue,\r\n    isGroupAdmin,\r\n    email: user.email,\r\n    dealershipId,\r\n  });\r\n\r\n  // Special case for admin accounts\r\n  let redirectPath = '/dashboard/sales';\r\n  let redirectReason = 'Default to sales dashboard';\r\n\r\n  // Always redirect admin@thedasboard.com to master admin\r\n  if (user?.email === 'admin@thedasboard.com') {\r\n    redirectPath = '/master-admin';\r\n    redirectReason = 'Main admin account';\r\n  }\r\n  // Only redirect testadmin@example.com to master-admin if they actually have admin role\r\n  else if (\r\n    user?.email === 'testadmin@example.com' &&\r\n    (roleValue === 'admin' || roleValue === 'master_admin')\r\n  ) {\r\n    redirectPath = '/master-admin';\r\n    redirectReason = 'Test admin account with admin role';\r\n  }\r\n  // Check if user is a group admin first (this takes priority)\r\n  else if (isGroupAdmin) {\r\n    redirectPath = '/group-admin';\r\n    redirectReason = 'Group admin flag is set to true';\r\n    console.warn(\r\n      '[DEBUG REDIRECT] User is redirected to Group Admin Dashboard because is_group_admin=true',\r\n      {\r\n        user_id: user.id,\r\n        email: user.email,\r\n        is_group_admin: isGroupAdmin,\r\n        role: roleValue,\r\n      }\r\n    );\r\n  }\r\n  // Next check by role name\r\n  else if (\r\n    roleValue === 'dealer_group_admin' ||\r\n    roleValue === 'group_dealer_admin' ||\r\n    roleValue.includes('group_admin') ||\r\n    roleValue.includes('group') ||\r\n    roleValue.includes('dealergroup_admin')\r\n  ) {\r\n    redirectPath = '/group-admin';\r\n    redirectReason = 'Dealer group admin role';\r\n    console.warn(\r\n      '[DEBUG REDIRECT] User is redirected to Group Admin Dashboard because of role name',\r\n      {\r\n        user_id: user.id,\r\n        email: user.email,\r\n        role: roleValue,\r\n      }\r\n    );\r\n  } else if (\r\n    roleValue === 'single_dealer_admin' ||\r\n    roleValue === 'dealership_admin' ||\r\n    roleValue.includes('dealership_admin') ||\r\n    roleValue === 'admin'\r\n  ) {\r\n    redirectPath = '/dashboard/admin';\r\n    redirectReason = 'Single dealership admin role';\r\n    console.log('[AUTH DEBUG] User is redirected to Dealership Admin Dashboard', {\r\n      user_id: user.id,\r\n      email: user.email,\r\n      dealership_id: dealershipId,\r\n      role: roleValue,\r\n    });\r\n  } else if (\r\n    roleValue === 'single_finance_manager' ||\r\n    (roleValue === 'finance_manager' &&\r\n      (user?.email?.includes('finance') || user?.email?.includes('testfinance')))\r\n  ) {\r\n    redirectPath = '/dashboard/single-finance';\r\n    redirectReason = 'Single finance manager role (email-based routing)';\r\n    console.log('[AUTH DEBUG] User is redirected to Single Finance Manager Dashboard', {\r\n      user_id: user.id,\r\n      email: user.email,\r\n      role: roleValue,\r\n    });\r\n  } else if (roleValue === 'finance_manager' || roleValue.includes('finance')) {\r\n    redirectPath = '/dashboard/finance';\r\n    redirectReason = 'Finance manager role (regular)';\r\n  } else if (roleValue === 'sales_manager' || roleValue.includes('sales_manager')) {\r\n    redirectPath = '/dashboard/sales-manager';\r\n    redirectReason = 'Sales manager role';\r\n  } else if (roleValue === 'general_manager' || roleValue.includes('general')) {\r\n    redirectPath = '/dashboard/gm';\r\n    redirectReason = 'General manager role';\r\n  } else if (roleValue === 'area_vice_president' || roleValue.includes('vice_president')) {\r\n    redirectPath = '/avp-full-dashboard';\r\n    redirectReason = 'Area Vice President role';\r\n  } else {\r\n    redirectPath = '/dashboard/sales';\r\n    redirectReason = 'Sales role (default)';\r\n  }\r\n\r\n  console.warn('[DEBUG REDIRECT] Final redirection decision:', {\r\n    redirectPath,\r\n    redirectReason,\r\n    roleValue,\r\n    isGroupAdmin,\r\n    email: user.email,\r\n    userEmail: user.email,\r\n    isTestFinanceUser:\r\n      user.email === 'testfinance@example.com' || user.email === 'finance1@exampletest.com',\r\n    roleConditions: {\r\n      isSingleFinanceManager: roleValue === 'single_finance_manager',\r\n      isFinanceManagerWithEmail:\r\n        roleValue === 'finance_manager' &&\r\n        (user?.email?.includes('finance') || user?.email?.includes('testfinance')),\r\n      combinedFinanceCondition:\r\n        roleValue === 'single_finance_manager' ||\r\n        (roleValue === 'finance_manager' &&\r\n          (user?.email?.includes('finance') || user?.email?.includes('testfinance'))),\r\n    },\r\n  });\r\n\r\n  logAccessAttempt(redirectPath, true, {\r\n    source_path: location.pathname,\r\n    reason: redirectReason,\r\n    role: roleValue,\r\n  });\r\n\r\n  return <Navigate to={redirectPath} replace />;\r\n}\r\n\r\nfunction GroupAdminAccessCheck({ children }: { children: React.ReactNode }) {\r\n  const { user, isGroupAdmin, loading, userRole, authCheckComplete } = useAuth();\r\n  const location = useLocation();\r\n\r\n  // First check for direct auth\r\n  if (isAuthenticated()) {\r\n    const directUser = getCurrentUser();\r\n    if (directUser && directUser.isGroupAdmin) {\r\n      console.log('[GROUP ADMIN ACCESS] Direct auth user granted access to group admin', {\r\n        email: directUser.email,\r\n        role: directUser.role,\r\n      });\r\n      return <>{children}</>;\r\n    }\r\n  }\r\n\r\n  // Then check regular Supabase auth\r\n  // Wait for auth check to complete\r\n  if (loading || !authCheckComplete) {\r\n    console.log('[GROUP ADMIN ACCESS] Still loading auth state');\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  // Special case - if user is accessing /group-admin path\r\n  if (location.pathname === '/group-admin') {\r\n    // If the user is a group admin by flag or role name, allow access\r\n    const isGroupAdminByRole =\r\n      userRole?.toLowerCase().includes('group') ||\r\n      userRole?.toLowerCase().includes('dealer_group_admin');\r\n\r\n    // Also check email pattern for test accounts\r\n    const isGroupAdminByEmail =\r\n      user?.email?.toLowerCase().includes('group') &&\r\n      user?.email?.toLowerCase().includes('@exampletest.com');\r\n\r\n    if (isGroupAdmin || isGroupAdminByRole || isGroupAdminByEmail) {\r\n      console.warn('[GROUP ADMIN ACCESS] Access granted - User is identified as a group admin', {\r\n        by_flag: isGroupAdmin,\r\n        by_role: isGroupAdminByRole,\r\n        by_email: isGroupAdminByEmail,\r\n        email: user?.email,\r\n        role: userRole,\r\n      });\r\n      return <>{children}</>;\r\n    } else {\r\n      console.warn('[GROUP ADMIN ACCESS] Access denied - User is not a group admin');\r\n      return <Navigate to=\"/dashboard\" replace />;\r\n    }\r\n  }\r\n\r\n  // Default to protected route for other cases\r\n  return (\r\n    <ProtectedRoute\r\n      requiredRoles={['admin', 'dealer_group_admin', 'dealership_admin', 'area_vice_president']}\r\n    >\r\n      {children}\r\n    </ProtectedRoute>\r\n  );\r\n}\r\n\r\n// Add this function before the App component\r\nfunction ResetAuth() {\r\n  useEffect(() => {\r\n    console.log('[ResetAuth] Clearing all auth state...');\r\n\r\n    // Sign out from Supabase\r\n    supabase.auth\r\n      .signOut()\r\n      .then(() => {\r\n        console.log('[ResetAuth] Signed out from Supabase');\r\n      })\r\n      .catch(error => {\r\n        console.error('[ResetAuth] Error signing out from Supabase:', error);\r\n      });\r\n\r\n    // Clear all storage\r\n    try {\r\n      console.log('[ResetAuth] Clearing localStorage and sessionStorage');\r\n\r\n      // Clear localStorage\r\n      if (typeof window !== 'undefined' && window.localStorage) {\r\n        window.localStorage.clear();\r\n      }\r\n\r\n      // Clear sessionStorage\r\n      if (typeof window !== 'undefined' && window.sessionStorage) {\r\n        window.sessionStorage.clear();\r\n      }\r\n\r\n      // Clear cookies (non-HTTP only cookies)\r\n      if (typeof document !== 'undefined') {\r\n        document.cookie.split(';').forEach(cookie => {\r\n          const [name] = cookie.trim().split('=');\r\n          document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;\r\n        });\r\n      }\r\n\r\n      console.log('[ResetAuth] All storage cleared');\r\n    } catch (error) {\r\n      console.error('[ResetAuth] Error clearing storage:', error);\r\n    }\r\n\r\n    // Redirect to login page after a short delay\r\n    setTimeout(() => {\r\n      console.log('[ResetAuth] Redirecting to login page');\r\n      if (typeof window !== 'undefined') {\r\n        window.location.href = '/';\r\n      }\r\n    }, 1000);\r\n\r\n    return () => {\r\n      console.log('[ResetAuth] Reset component unmounted');\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ padding: '2rem', textAlign: 'center' }}>\r\n      <h1>Resetting Auth State...</h1>\r\n      <p>Clearing all authentication state and redirecting to login page.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    // Add failsafe for group admin detection on app load\r\n    const checkForAuthenticatedGroupAdmin = async () => {\r\n      try {\r\n        const { data } = await supabase.auth.getSession();\r\n        if (data?.session?.user) {\r\n          console.warn('[App] Found authenticated user on app load:', data.session.user.email);\r\n\r\n          // Skip redirection if a special query parameter is present\r\n          const searchParams =\r\n            typeof window !== 'undefined' && window.URLSearchParams\r\n              ? new window.URLSearchParams(window.location.search)\r\n              : null;\r\n          if (searchParams && (searchParams.has('noredirect') || searchParams.has('forcelogin'))) {\r\n            console.log('[App] Skipping redirect due to special parameter');\r\n            return;\r\n          }\r\n\r\n          // Check if this is a group admin\r\n          const email = data.session.user.email || '';\r\n          const isGroupAdminByEmail =\r\n            email.toLowerCase().includes('group') &&\r\n            email.toLowerCase().includes('@exampletest.com');\r\n\r\n          // Also check metadata\r\n          const isGroupAdminByMetadata = !!data.session.user.user_metadata?.is_group_admin;\r\n\r\n          if (isGroupAdminByEmail || isGroupAdminByMetadata) {\r\n            console.warn('[App] FAILSAFE - Detected group admin user, redirecting');\r\n\r\n            // Check if we're not already on the group admin page\r\n            if (typeof window !== 'undefined' && window.location.pathname !== '/group-admin') {\r\n              console.warn('[App] Forcing redirection to group admin dashboard');\r\n              window.location.href = '/group-admin';\r\n            }\r\n          } else if (email.toLowerCase() === 'testadmin@example.com') {\r\n            console.warn('[App] FAILSAFE - Detected test admin user');\r\n\r\n            // Check if we're not already on the master admin page\r\n            if (typeof window !== 'undefined' && window.location.pathname !== '/master-admin') {\r\n              console.warn('[App] Forcing redirection to master admin dashboard');\r\n              window.location.href = '/master-admin';\r\n            }\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('[App] Error in failsafe auth check:', error);\r\n      }\r\n    };\r\n\r\n    // Skip check if we're on the logout page or have noredirect parameter\r\n    const searchParams =\r\n      typeof window !== 'undefined' && window.URLSearchParams\r\n        ? new window.URLSearchParams(window.location.search)\r\n        : null;\r\n    if (\r\n      typeof window !== 'undefined' &&\r\n      window.location.pathname !== '/logout' &&\r\n      (!searchParams || (!searchParams.has('noredirect') && !searchParams.has('forcelogin')))\r\n    ) {\r\n      checkForAuthenticatedGroupAdmin();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Log application startup\r\n    logAppEvent('Application initialized', {\r\n      version: APP_VERSION,\r\n      environment: APP_ENV,\r\n      app_url: APP_URL,\r\n      marketing_url: MARKETING_URL,\r\n      user_agent:\r\n        typeof window !== 'undefined' && window.navigator ? window.navigator.userAgent : 'unknown',\r\n      language:\r\n        typeof window !== 'undefined' && window.navigator ? window.navigator.language : 'unknown',\r\n      screen_size:\r\n        typeof window !== 'undefined' ? `${window.innerWidth}x${window.innerHeight}` : 'unknown',\r\n    });\r\n\r\n    // Add listener for authentication state changes\r\n    const {\r\n      data: { subscription },\r\n    } = supabase.auth.onAuthStateChange(async (event, session) => {\r\n      console.warn('[DEBUG AUTH] Auth state changed:', event);\r\n\r\n      if (event === 'SIGNED_IN' && session?.user) {\r\n        console.warn(`[DEBUG AUTH] User signed in: ${session.user.email}`);\r\n\r\n        // Check if user is a group admin\r\n        const { data, error } = await supabase\r\n          .from('profiles')\r\n          .select('is_group_admin, role')\r\n          .eq('id', session.user.id)\r\n          .maybeSingle();\r\n\r\n        if (!error && data) {\r\n          console.warn('[DEBUG AUTH] User profile data:', data);\r\n          console.warn(`[DEBUG AUTH] is_group_admin: ${data.is_group_admin}, role: ${data.role}`);\r\n\r\n          if (data.is_group_admin) {\r\n            console.warn(\r\n              '[DEBUG AUTH] User is a group admin, should be redirected to /group-admin'\r\n            );\r\n          } else {\r\n            console.warn('[DEBUG AUTH] User is NOT a group admin');\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    // Listen for network changes\r\n    const handleNetworkChange = () => {\r\n      logAppEvent('Network status change', {\r\n        online: typeof window !== 'undefined' && window.navigator ? window.navigator.onLine : true,\r\n      });\r\n    };\r\n\r\n    if (typeof window !== 'undefined') {\r\n      window.addEventListener('online', handleNetworkChange);\r\n      window.addEventListener('offline', handleNetworkChange);\r\n    }\r\n\r\n    return () => {\r\n      subscription.unsubscribe();\r\n      if (typeof window !== 'undefined') {\r\n        window.removeEventListener('online', handleNetworkChange);\r\n        window.removeEventListener('offline', handleNetworkChange);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <TranslationProvider>\r\n      <QueryClientProvider client={queryClient}>\r\n        <ToastContextProvider>\r\n          <AuthProvider>\r\n            <DealershipProvider>\r\n              <Router>\r\n                <DirectAuthProvider>\r\n                  <TestUserMiddleware>\r\n                    <RouteLogger />\r\n                    <Routes>\r\n                      {/* Marketing Pages - Public Access */}\r\n                      <Route path=\"/\" element={<HomePage />} />\r\n                      <Route path=\"/about\" element={<AboutPage />} />\r\n                      <Route path=\"/screenshots\" element={<ScreenshotsPage />} />\r\n                      <Route path=\"/pricing\" element={<PricingPage />} />\r\n                      <Route path=\"/auth\" element={<AuthPage />} />\r\n\r\n                      {/* Legal Pages - Public Access */}\r\n                      <Route path=\"/legal/terms\" element={<TermsPage />} />\r\n                      <Route path=\"/legal/privacy\" element={<PrivacyPage />} />\r\n                      <Route path=\"/legal/subscription\" element={<SubscriptionPage />} />\r\n\r\n                      {/* Signup routes - public access */}\r\n                      <Route path=\"/signup\" element={<SignUp />} />\r\n                      <Route path=\"/signup/single-finance\" element={<SingleFinanceSignup />} />\r\n                      <Route path=\"/signup/dealership\" element={<DealershipSignup />} />\r\n                      <Route path=\"/signup/dealer-group\" element={<DealerGroupSignup />} />\r\n\r\n                      {/* New Logout Route - accessible to everyone */}\r\n                      <Route path=\"/logout\" element={<LogoutPage />} />\r\n\r\n                      {/* New Direct Login route */}\r\n                      <Route path=\"/direct-login\" element={<DirectLoginPage />} />\r\n\r\n                      {/* Force Login route - emergency bypass */}\r\n                      <Route path=\"/force-login\" element={<ForceLoginPage />} />\r\n\r\n                      {/* Auth Reset route - to escape redirect loops */}\r\n                      <Route path=\"/reset\" element={<ResetAuth />} />\r\n\r\n                      {/* Debug auth page - direct login bypass */}\r\n                      <Route path=\"/debug-auth\" element={<DebugAuthPage />} />\r\n\r\n                      {/* New Auth Debugger route */}\r\n                      <Route path=\"/auth-debug\" element={<AuthDebugger />} />\r\n\r\n                      {/* Role-based redirect after login */}\r\n                      <Route\r\n                        path=\"/dashboard\"\r\n                        element={\r\n                          <ProtectedRoute>\r\n                            <RoleBasedRedirect />\r\n                          </ProtectedRoute>\r\n                        }\r\n                      />\r\n\r\n                      {/* Marketing website link */}\r\n                      <Route path=\"/marketing\" element={<RedirectLogger to={MARKETING_URL} />} />\r\n\r\n                      {/* Admin routes */}\r\n                      <Route\r\n                        path=\"/master-admin\"\r\n                        element={\r\n                          <ProtectedRoute requiredRoles={['admin']}>\r\n                            <DashboardLayout title=\"Master Admin Panel\">\r\n                              <MasterAdminPage />\r\n                            </DashboardLayout>\r\n                          </ProtectedRoute>\r\n                        }\r\n                      />\r\n\r\n                      {/* Group Admin Route - allow group admins by email, flag, or role */}\r\n                      <Route\r\n                        path=\"/group-admin\"\r\n                        element={\r\n                          <GroupAdminAccessCheck>\r\n                            <DashboardLayout title=\"Group Admin Dashboard\">\r\n                              <GroupAdminDashboard />\r\n                            </DashboardLayout>\r\n                          </GroupAdminAccessCheck>\r\n                        }\r\n                      />\r\n\r\n                      {/* Area VP Full Dashboard Route */}\r\n                      <Route\r\n                        path=\"/avp-full-dashboard\"\r\n                        element={\r\n                          <ProtectedRoute requiredRoles={['area_vice_president']}>\r\n                            <DashboardLayout title=\"Area VP Full Dashboard\">\r\n                              <AVPFullDashboard />\r\n                            </DashboardLayout>\r\n                          </ProtectedRoute>\r\n                        }\r\n                      />\r\n\r\n                      {/* Role-specific dashboards */}\r\n                      <Route\r\n                        path=\"/dashboard/admin\"\r\n                        element={\r\n                          <ProtectedRoute\r\n                            requiredRoles={['admin', 'dealership_admin', 'single_dealer_admin']}\r\n                          >\r\n                            <AdminDashboardPage />\r\n                          </ProtectedRoute>\r\n                        }\r\n                      />\r\n\r\n                      <Route\r\n                        path=\"/dashboard/sales\"\r\n                        element={\r\n                          <ProtectedRoute requiredRoles={['salesperson']}>\r\n                            <DashboardLayout>\r\n                              <SalesDashboard />\r\n                            </DashboardLayout>\r\n                          </ProtectedRoute>\r\n                        }\r\n                      />\r\n\r\n                      <Route\r\n                        path=\"/dashboard/finance/*\"\r\n                        element={\r\n                          <ProtectedRoute\r\n                            requiredRoles={['finance_manager', 'single_finance_manager']}\r\n                          >\r\n                            <DashboardLayout>\r\n                              <FinanceDashboard />\r\n                            </DashboardLayout>\r\n                          </ProtectedRoute>\r\n                        }\r\n                      />\r\n\r\n                      {/* Single Finance Manager Dashboard */}\r\n                      <Route\r\n                        path=\"/dashboard/single-finance/*\"\r\n                        element={\r\n                          <ProtectedRoute\r\n                            requiredRoles={['finance_manager', 'single_finance_manager']}\r\n                          >\r\n                            <DashboardLayout>\r\n                              <SingleFinanceManagerDashboard />\r\n                            </DashboardLayout>\r\n                          </ProtectedRoute>\r\n                        }\r\n                      />\r\n\r\n                      {/* Finance Director Dashboard */}\r\n                      <Route\r\n                        path=\"/dashboard/finance-director/*\"\r\n                        element={\r\n                          <ProtectedRoute requiredRoles={['finance_director']}>\r\n                            <DashboardLayout>\r\n                              <FinanceDirectorDashboard />\r\n                            </DashboardLayout>\r\n                          </ProtectedRoute>\r\n                        }\r\n                      />\r\n\r\n                      {/* Finance Manager Deal Logging */}\r\n                      <Route\r\n                        path=\"/finance-manager/log-deal\"\r\n                        element={\r\n                          <ProtectedRoute\r\n                            requiredRoles={['finance_manager', 'single_finance_manager']}\r\n                          >\r\n                            <DashboardLayout>\r\n                              <LogFinanceManagerDeal />\r\n                            </DashboardLayout>\r\n                          </ProtectedRoute>\r\n                        }\r\n                      />\r\n\r\n                      {/* Direct deal log route */}\r\n                      <Route\r\n                        path=\"/deal-log\"\r\n                        element={\r\n                          <ProtectedRoute\r\n                            requiredRoles={['finance_manager', 'single_finance_manager']}\r\n                          >\r\n                            <DashboardLayout>\r\n                              <DealLogPage />\r\n                            </DashboardLayout>\r\n                          </ProtectedRoute>\r\n                        }\r\n                      />\r\n\r\n                      {/* Finance Dashboard specific deal log route */}\r\n                      <Route\r\n                        path=\"/finance-deal-log\"\r\n                        element={\r\n                          <ProtectedRoute\r\n                            requiredRoles={['finance_manager', 'single_finance_manager']}\r\n                          >\r\n                            <DashboardLayout>\r\n                              <DealLogPage dashboardType=\"finance\" />\r\n                            </DashboardLayout>\r\n                          </ProtectedRoute>\r\n                        }\r\n                      />\r\n\r\n                      {/* Single Finance Manager Dashboard specific deal log route */}\r\n                      <Route\r\n                        path=\"/single-finance-deal-log\"\r\n                        element={\r\n                          <ProtectedRoute\r\n                            requiredRoles={['finance_manager', 'single_finance_manager']}\r\n                          >\r\n                            <DashboardLayout>\r\n                              <DealLogPage dashboardType=\"single-finance\" />\r\n                            </DashboardLayout>\r\n                          </ProtectedRoute>\r\n                        }\r\n                      />\r\n\r\n                      <Route\r\n                        path=\"/dashboard/sales-manager/*\"\r\n                        element={\r\n                          <ProtectedRoute requiredRoles={['sales_manager']}>\r\n                            <DashboardLayout>\r\n                              <Routes>\r\n                                <Route path=\"/\" element={<SalesManagerDashboard />} />\r\n                                <Route path=\"team\" element={<TeamManagementPage />} />\r\n                                <Route path=\"goals\" element={<GoalsPage />} />\r\n                                <Route path=\"schedule\" element={<SchedulePage />} />\r\n                                <Route path=\"sales-report\" element={<SalesReportPage />} />\r\n                              </Routes>\r\n                            </DashboardLayout>\r\n                          </ProtectedRoute>\r\n                        }\r\n                      />\r\n\r\n                      <Route\r\n                        path=\"/dashboard/gm\"\r\n                        element={\r\n                          <ProtectedRoute requiredRoles={['general_manager']}>\r\n                            <DashboardLayout>\r\n                              <GMDashboard />\r\n                            </DashboardLayout>\r\n                          </ProtectedRoute>\r\n                        }\r\n                      />\r\n\r\n                      {/* Specific dealership routes with dealership ID parameter */}\r\n                      <Route path=\"/dealership/:dealershipId/*\" element={<DealershipLayout />} />\r\n\r\n                      {/* Test Login Redirect */}\r\n                      <Route path=\"/test-login-redirect\" element={<TestLoginRedirect />} />\r\n\r\n                      {/* Group Admin Bypass */}\r\n                      <Route path=\"/group-admin-bypass\" element={<GroupAdminBypass />} />\r\n\r\n                      {/* Dashboard Selector - Direct Access */}\r\n                      <Route path=\"/dashboard-selector\" element={<DashboardSelector />} />\r\n\r\n                      {/* Fallback - redirect to dashboard */}\r\n                      <Route path=\"*\" element={<RedirectLogger to=\"/dashboard\" />} />\r\n                    </Routes>\r\n                    <Toaster />\r\n                  </TestUserMiddleware>\r\n                </DirectAuthProvider>\r\n              </Router>\r\n            </DealershipProvider>\r\n          </AuthProvider>\r\n          {APP_ENV !== 'production' && <ReactQueryDevtools />}\r\n        </ToastContextProvider>\r\n      </QueryClientProvider>\r\n    </TranslationProvider>\r\n  );\r\n}\r\n\r\n// Layout for dealership-specific routes\r\nfunction DealershipLayout() {\r\n  const { dealershipId } = useParams<{ dealershipId: string }>();\r\n  const parsedId = dealershipId ? parseInt(dealershipId, 10) : null;\r\n\r\n  if (!parsedId) {\r\n    logAppEvent('Invalid dealership ID in URL', {\r\n      dealership_id: dealershipId,\r\n    });\r\n    return <Navigate to=\"/dashboard\" replace />;\r\n  }\r\n\r\n  logAppEvent('Rendering dealership layout', {\r\n    dealership_id: parsedId,\r\n  });\r\n\r\n  return <DealershipLayoutContent dealershipId={parsedId} />;\r\n}\r\n\r\n// Content for dealership-specific routes\r\nfunction DealershipLayoutContent({ dealershipId }: { dealershipId: number }) {\r\n  const { setCurrentDealershipId, setCurrentDealershipName } = useDealership();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Set the current dealership in context\r\n    setCurrentDealershipId(dealershipId);\r\n\r\n    // Fetch the dealership name\r\n    supabase\r\n      .from('dealerships')\r\n      .select('name')\r\n      .eq('id', dealershipId)\r\n      .single()\r\n      .then(({ data, error }) => {\r\n        if (error) {\r\n          console.error('Error fetching dealership name:', error);\r\n        } else if (data) {\r\n          setCurrentDealershipName(data.name);\r\n          logAppEvent('Set dealership name in context', {\r\n            dealership_id: dealershipId,\r\n            dealership_name: data.name,\r\n          });\r\n        }\r\n        setLoading(false);\r\n      });\r\n  }, [dealershipId, setCurrentDealershipId, setCurrentDealershipName]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex h-screen items-center justify-center\">\r\n        <Loader2 className=\"h-8 w-8 animate-spin\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Routes>\r\n      <Route\r\n        path=\"sales\"\r\n        element={\r\n          <ProtectedRoute requiredRoles={['salesperson']} requiredDealership={dealershipId}>\r\n            <DashboardLayout>\r\n              <SalesDashboard />\r\n            </DashboardLayout>\r\n          </ProtectedRoute>\r\n        }\r\n      />\r\n      <Route\r\n        path=\"finance\"\r\n        element={\r\n          <ProtectedRoute requiredRoles={['finance_manager']} requiredDealership={dealershipId}>\r\n            <DashboardLayout>\r\n              <FinanceDashboard />\r\n            </DashboardLayout>\r\n          </ProtectedRoute>\r\n        }\r\n      />\r\n      <Route\r\n        path=\"sales-manager\"\r\n        element={\r\n          <ProtectedRoute requiredRoles={['sales_manager']} requiredDealership={dealershipId}>\r\n            <DashboardLayout>\r\n              <SalesManagerDashboard />\r\n            </DashboardLayout>\r\n          </ProtectedRoute>\r\n        }\r\n      />\r\n      <Route\r\n        path=\"gm\"\r\n        element={\r\n          <ProtectedRoute requiredRoles={['general_manager']} requiredDealership={dealershipId}>\r\n            <DashboardLayout>\r\n              <GMDashboard />\r\n            </DashboardLayout>\r\n          </ProtectedRoute>\r\n        }\r\n      />\r\n      <Route\r\n        path=\"admin\"\r\n        element={\r\n          <ProtectedRoute\r\n            requiredRoles={['admin', 'dealership_admin']}\r\n            requiredDealership={dealershipId}\r\n          >\r\n            <AdminDashboardPage />\r\n          </ProtectedRoute>\r\n        }\r\n      />\r\n      <Route\r\n        path=\"deal-log\"\r\n        element={\r\n          <ProtectedRoute requiredRoles={['finance_manager']} requiredDealership={dealershipId}>\r\n            <DashboardLayout>\r\n              <DealLogPage />\r\n            </DashboardLayout>\r\n          </ProtectedRoute>\r\n        }\r\n      />\r\n      {/* Add more dealership-specific routes as needed */}\r\n      <Route path=\"*\" element={<Navigate to={`/dealership/${dealershipId}/sales`} replace />} />\r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\nimport App from './App'\r\nimport './styles/globals.css'\r\n\r\nReactDOM.createRoot(document.getElementById('root')!).render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n) "],"names":["m","require$$0","client","createRoot","hydrateRoot","supabaseUrl","supabaseAnonKey","supabaseInstance","supabase","console","log","url","keyLength","timestamp","Date","toISOString","createClient","auth","persistSession","autoRefreshToken","detectSessionInUrl","storage","window","localStorage","global","headers","userRoleCache","Map","pendingRequests","Set","getCurrentUser","__async","data","user","error","userError","getUser","has","id","cachedRole","get","userId","role","__spreadProps","requestKey","warn","add","profile","profileError","from","select","eq","single","userData","userDataError","role_id","roleData","name","set","delete","isTestEmail","email","test","toLowerCase","loginTestUser","password","Error","isGroupAdminEmail","includes","setItem","now","toString","signInData","signInError","signInWithPassword","options","userUpdateData","userUpdateError","updateUser","is_group_admin","update","err","sessionStorage","setTimeout","location","href","__spreadValues","user_metadata","isGroupAdmin","forceRedirect","redirectPath","message","maybeSingle","session","VISUALLY_HIDDEN_STYLES","Object","freeze","position","border","width","height","padding","margin","overflow","clip","whiteSpace","wordWrap","VisuallyHidden","React.forwardRef","forwardRef","props","forwardedRef","jsxRuntimeExports","jsx","Primitive","span","ref","style","displayName","PROVIDER_NAME","Collection","useCollection","createCollectionScope","createCollection","createToastContext","createToastScope","createContextScope","ToastProviderProvider","useToastProviderContext","ToastProvider","__scopeToast","label","duration","swipeDirection","swipeThreshold","children","viewport","setViewport","React.useState","toastCount","setToastCount","isFocusedToastEscapeKeyDownRef","React.useRef","useRef","isClosePausedRef","trim","Provider","scope","onViewportChange","onToastAdd","React.useCallback","prevCount","onToastRemove","VIEWPORT_NAME","VIEWPORT_DEFAULT_HOTKEY","VIEWPORT_PAUSE","VIEWPORT_RESUME","ToastViewport","_a","hotkey","viewportProps","__objRest","context","getItems","wrapperRef","headFocusProxyRef","tailFocusProxyRef","composedRefs","useComposedRefs","hotkeyLabel","join","replace","hasToasts","React.useEffect","handleKeyDown","event","length","every","key","code","current","focus","document","addEventListener","removeEventListener","wrapper","handlePause","pauseEvent","CustomEvent","dispatchEvent","handleResume","resumeEvent","handleFocusOutResume","contains","relatedTarget","handlePointerLeaveResume","activeElement","getSortedTabbableCandidates","useCallback","tabbingDirection","tabbableCandidates","map","toastItem","toastNode","toastTabbableCandidates","getTabbableCandidates","reverse","flat","isMetaKey","altKey","ctrlKey","metaKey","focusedElement","isTabbingBackwards","shiftKey","target","sortedCandidates","index","findIndex","candidate","focusFirst","slice","preventDefault","_b","_c","jsxs","DismissableLayer.Branch","tabIndex","pointerEvents","FocusProxy","onFocusFromOutsideViewport","Slot","ol","FOCUS_PROXY_NAME","proxyProps","onFocus","prevFocusedElement","TOAST_NAME","Toast","forceMount","open","openProp","defaultOpen","onOpenChange","toastProps","setOpen","useControllableState","prop","defaultProp","onChange","caller","Presence","present","ToastImpl","onClose","onPause","useCallbackRef","onResume","onSwipeStart","composeEventHandlers","currentTarget","setAttribute","onSwipeMove","x","y","detail","delta","setProperty","onSwipeCancel","removeProperty","onSwipeEnd","ToastInteractiveProvider","useToastInteractiveContext","type","durationProp","onEscapeKeyDown","node","setNode","node2","pointerStartRef","swipeDeltaRef","closeTimerStartTimeRef","closeTimerRemainingTimeRef","closeTimerRef","handleClose","startTimer","duration2","Infinity","clearTimeout","getTime","elapsedTime","announceTextContent","React.useMemo","getAnnounceTextContent","Fragment","ToastAnnounce","ReactDOM.createPortal","createPortal","ItemSlot","DismissableLayer.Root","asChild","li","userSelect","touchAction","onKeyDown","nativeEvent","defaultPrevented","onPointerDown","button","clientX","clientY","onPointerMove","hasSwipeMoveStarted","Boolean","isHorizontalSwipe","clamp","Math","min","max","clampedX","clampedY","moveStartBuffer","pointerType","eventDetail","originalEvent","handleAndDispatchCustomEvent","discrete","isDeltaInDirection","setPointerCapture","pointerId","abs","onPointerUp","hasPointerCapture","releasePointerCapture","toast","event2","once","announceProps","renderAnnounceText","setRenderAnnounceText","isAnnounced","setIsAnnounced","callback","fn","useLayoutEffect","raf1","raf2","requestAnimationFrame","cancelAnimationFrame","useNextFrame","timer","Portal","ToastTitle","titleProps","div","ToastDescription","descriptionProps","ACTION_NAME","ToastAction","altText","actionProps","ToastAnnounceExclude","ToastClose","CLOSE_NAME","closeProps","interactiveContext","onClick","announceExcludeProps","container","textContent","Array","childNodes","forEach","nodeType","TEXT_NODE","push","ELEMENT_NODE","isHTMLElement","isHidden","ariaHidden","hidden","display","isExcluded","dataset","radixToastAnnounceExclude","radixToastAnnounceAlt","handler","bubbles","cancelable","dispatchDiscreteCustomEvent","direction","threshold","deltaX","deltaY","isDeltaX","nodes","walker","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","isHiddenInput","tagName","disabled","FILTER_SKIP","FILTER_ACCEPT","nextNode","currentNode","candidates","previouslyFocusedElement","some","Viewport","Root2","Title","Description","Action","Close","falsyToString","value","cx","clsx","cva","base","config","_config_compoundVariants","variants","class","className","defaultVariants","getVariantClassNames","keys","variant","variantProp","defaultVariantProp","variantKey","propsWithoutUndefined","entries","reduce","acc","param","getCompoundVariantClassNames","compoundVariants","cvClass","cvClassName","compoundVariantOptions","isArray","cn","inputs","twMerge","ToastPrimitives.Viewport","toastVariants","default","destructive","_d","ToastPrimitives.Root","_e","_f","ToastPrimitives.Action","_g","_h","ToastPrimitives.Close","X","_i","_j","ToastPrimitives.Title","_k","_l","ToastPrimitives.Description","count","toastTimeouts","reducer","state","action","toasts","t","toastId","filter","ToastContext","React.createContext","createContext","toastContextValue","useToast","React.useContext","useContext","ToastContextProvider","dispatch","React.useReducer","addToast","Number","MAX_SAFE_INTEGER","newToast","dismissToast","updateToast","removeToast","timeout","toastTimeouts$1","contextValue","title","description","toast$1","success","warning","info","logSchemaOperation","details","insert","innerError","getUserDeals","startDate","endDate","gte","lte","getSalespersonDaysOff","daysOff","entry","date","getDate","calculateGoalProgress","deals","currentDay","monthlyGoal","expectedSales","i","calculateExpectedSales","actualSales","progressRatio","status","progressPercentage","round","expected","actual","progress","TEST_USERS","isAdmin","dealershipId","STORAGE_KEY","DASHBOARD_SELECTOR_KEY","_cachedUser","_lastCacheTime","jsonA","getItem","JSON","parse","e","jsonB","_readUserFromStorage","isAuthenticated","logout","removeItem","loginWithTestAccount","find","u","stringify","getRedirectPath","AuthContext","DEFAULT_ROLE","FALLBACK_ROLE","profileOperationAttempted","logAuthEvent","app_version","environment","authEvents","shift","logSecurityEvent","user_agent","navigator","userAgent","app_url","AuthProvider","setUser","useState","setRole","loading","setLoading","hasSession","setHasSession","initialized","setInitialized","retryCountRef","profileOperationInProgressRef","setError","userRole","setUserRole","setDealershipId","currentDealershipName","setCurrentDealershipName","setIsGroupAdmin","authCheckComplete","setAuthCheckComplete","fetchProfileData","userEmail","userMetadata","setDealershipContext","newDealershipId","dealership_id","previous_id","user_id","user_email","then","dealership_name","catch","showSuccessToast","showErrorToast","showInfoToast","fetchUserDealership","role_name","roles","roleName","dealershipData","dealershipError","String","fetchUserRole","currentRole","Promise","resolve","profileExists","exists","checkProfileExists","roleError","profileData","hasRole","rawRole","normalizedRole","isDealershipAdmin","insertPromise","timeoutPromise","insertError","race","handleAuthStateChange","updateError","userDealershipId","sessionExists","useEffect","mounted","authListener","directUser","getDirectAuthUser","mockUser","app_metadata","aud","created_at","updated_at","sessionError","getSession","initialRole","onAuthStateChange","newSession","safetyTimer","subscription","unsubscribe","fetchFromDealershipSchema","_1","_2","table","query","dealership","schema_name","schemaName","dbQuery","filters","column","in","gt","lt","order","ascending","limit","signIn","rememberMe","remember_me","testLoginResult","forceRedirectTo","forceRedirectTimestamp","isRecentRedirect","parseInt","isGroupAdminByEmail","ip_address","signUp","first_name","firstName","last_name","lastName","errorMsg","signOut","localError","magicLinkLogin","signInWithOtp","shouldCreateUser","genericError","loginTestAccount","logAccessAttempt","path","allowed","useAuth","Card","_m","_n","CardHeader","_o","_p","CardTitle","_q","_r","CardDescription","_s","_t","CardContent","_u","_v","CardFooter","_w","_x","buttonVariants","outline","secondary","ghost","link","size","sm","lg","icon","Button","_y","_z","Comp","Input","_A","_B","Label","onMouseDown","closest","call","Root","labelVariants","_C","_D","LabelPrimitive.Root","LoginForm","setEmail","setPassword","loginAttempt","setLoginAttempt","showPassword","setShowPassword","isMagicLinkSent","setIsMagicLinkSent","setRememberMe","useLocation","navigate","useNavigate","createTestUser","signUpData","signUpError","upsert","onSubmit","prev","validationError","attempt","authError","emailAddress","htmlFor","placeholder","required","EyeOff","Eye","checked","AlertTriangle","emailRedirectTo","origin","Mail","testUser","quickLogin","testUsersToCreate","AuthPage","loadingTimeout","setLoadingTimeout","searchParams","URLSearchParams","search","noRedirect","forceLogin","timeoutId","byEmail","byFlag","byMetadata","hasUser","AlertCircle","Navigate","to","ProtectedRoute","requiredRoles","requiredDealership","deploymentEnv","extraLoadingStartTime","setExtraLoadingStartTime","pathname","user_role","has_session","required_roles","user_dealership_id","required_dealership","is_loading","auth_check_complete","source_path","source_query","directAuthUser","isDirectlyAuthenticated","recentLoginCleared","recentSupabaseLogin","checkDirectSupabaseAuth","reload","timeElapsed","Loader2","isComingFromLogin","referrer","currentPath","willBeRedirectedToMaster","reason","redirect_to","normalizedUserRole","accessGranted","user_dealership","DashboardLayout","isActive","startsWith","isDealershipPath","dealershipIdFromPath","split","Building2","User","Link","Home","BarChart2","Calendar","LogOut","Outlet","backgroundColor","color","borderRadius","Toaster","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","staleTime","GoalTracking","salesData","setSalesData","isLoading","setIsLoading","setDaysOff","goalProgress","setGoalProgress","setCurrentDay","daysInMonth","setDaysInMonth","getFullYear","getMonth","fetchGoalData","currentDate","currentYear","currentMonth","all","progressMetrics","remainingDays","remainingSalesNeeded","salesPerDayNeeded","toFixed","getProgressPercentage","Target","Clock","getStatusBgColor","getStatusColor","TrendingUp","TrendingDown","toLocaleString","calculateSplitDealCredit","deal","targetSalespersonId","isSplitDeal","hasCredit","primarySalespersonId","creditPercentage","splitWith","secondarySalespersonId","mapDealData","rawDeal","dashboardType","salespersonId","dealNumber","stockNumber","vinLast8","vin","vehicleType","customer","dealDate","saleDate","frontEndGross","parseFloat","backEndGross","profit","totalGross","amount","vscProfit","ppmProfit","gapProfit","tireAndWheelProfit","appearanceProfit","otherProfit","reserveFlat","dealType","dealStatus","lender","outsideFunding","secondSalespersonId","salesManagerId","products","salesperson","vehicleTypeDisplay","mapVehicleType","productMix","product","calculateProductMix","metricFlags","countsForSold","countsForBooked","countsForTracking","countsForPVR","excludeFromMetrics","getDealMetricFlags","splitCredit","adjustedFrontGross","adjustedBackGross","adjustedTotalGross","raw","productsPerDeal","isNew","isUsed","isFunded","isPending","pvr","vehicle","p","loadDealsFromStorage","storageKey","dealsJson","getDashboardData","rawDeals","timePeriod","includeInactive","filteredDeals","lastMonth","lastMonthYear","totalDeals","fundedDeals","d","pendingDeals","newVehicleDeals","usedVehicleDeals","totalFrontGross","sum","totalBackGross","avgFrontGross","avgBackGross","totalPVR","metrics","avgPVR","lastUpdated","aggregateDealsForDashboard","useDealsData","initialTimePeriod","autoRefresh","refreshInterval","dealData","setDealData","setTimePeriod","loadDealData","interval","setInterval","clearInterval","handleStorageChange","refresh","useManagerDealsData","loadManagerData","salespersonMetrics","salespersonName","values","avgPerDeal","goalPercentage","frontGross","financeGross","salesGoal","salesPerformance","mapManagerDashboardData","period","MOCK_DEALS","CAR_PROGRESSION","emoji","SCHEDULE_DATA","day","team","PAY_CALCULATOR","frontEndGrossPercent","backEndGrossPercent","spiffs","bonusThreshold","bonusAmount","SalesDashboard","displayFrontEnd","setDisplayFrontEnd","displayBackEnd","setDisplayBackEnd","salesperson_id","setHookTimePeriod","useSalesDealsData","currentDeals","totalFrontEndGross","totalBackEndGross","miniDeals","getCurrentCar","performanceColor","expectedDeals","actualDeals","getDealsPerformanceIndicator","currentEarnings","remainingDaysFactor","potentialEarnings","projectedDeals","projectedEarningsWithBonus","isToday","today","getDay","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Lightbulb","month","year","currentQuarter","floor","getPeriodLabel","newPeriod","ShoppingBag","ChevronUp","DollarSign","ChevronDown","background","CalendarClock","ChevronLeft","substring","ChevronRight","Trophy","units","backGross","avgMonth","ytd","annualPace","newUnits","usedUnits","person","FileText","ArrowRight","Calculator","FinanceHomePage","customDateRange","setCustomDateRange","start","end","showCustomDatePicker","setShowCustomDatePicker","localDeals","setDeals","setFilteredDeals","localPendingDeals","setPendingDeals","localMetrics","setMetrics","mtdRevenue","dealsProcessed","extendedWarranty","gapInsurance","paintProtection","tireWheel","ppm","other","avgProfits","useFinanceDealsData","hookDeals","hookMetrics","handleCustomDateChange","storedDeals","parsedDeals","pendingDealsFilter","filterDealsByDateRange","getDateRange","filtered","calculateMetrics","totalRevenue","total","back_end_gross","extendedWarrantyCount","extendedWarrantyTotal","gapInsuranceCount","gapInsuranceTotal","paintProtectionCount","paintProtectionTotal","tireWheelCount","tireWheelTotal","ppmCount","ppmTotal","otherCount","otherTotal","deals2","vsc_profit","gap_profit","appearance_profit","tireWheelProfit","tire_wheel_profit","ppm_profit","ext_warranty_profit","extWarrantyProfit","key_replacement_profit","keyReplacementProfit","theft_profit","theftProfit","windshield_profit","windshieldProfit","lojack_profit","lojackProfit","other_profit","calculatePenetration","calculateAverage","CreditCard","BarChart4","Percent","percent","vscPen","gapPen","ppmPen","ppd","pop","actualDealDate","formattedDate","toLocaleDateString","twProfit","statusColor","dealId","newStatus","existingDealsJson","updatedDeals","handleStatusChange","shouldDelete","confirm","handleDeleteDeal","colSpan","Badge","badgeVariants","_E","_F","FinanceDealsPage","searchTerm","setSearchTerm","statusFilter","setStatusFilter","sortField","setSortField","sortDirection","setSortDirection","matchesSearch","matchesStatus","sort","a","b","fieldA","fieldB","localeCompare","toggleSort","field","ArrowLeft","Search","Filter","ArrowUpDown","APPOINTMENTS","time","FinanceSchedulePage","setCurrentDate","selectedDate","setSelectedDate","calendarDays","firstDay","days","generateCalendarDays","formatDateForComparison","padStart","filteredAppointments","app","appointmentsByDay","appointment","Plus","dateString","isCurrentDay","isSelected","appointmentCount","weekday","CalendarIcon","FinanceDashboard","bestPractices","PlusCircle","Routes","Route","element","Dialog","DialogPrimitive.Root","DialogTrigger","DialogPrimitive.Trigger","DialogPortal","DialogPrimitive.Portal","DialogOverlay","_G","_H","DialogPrimitive.Overlay","DialogContent","_I","_J","DialogPrimitive.Content","DialogPrimitive.Close","DialogHeader","_K","_L","DialogFooter","_M","_N","DialogTitle","_O","_P","DialogPrimitive.Title","DialogDescription","_Q","_R","DialogPrimitive.Description","usePrevious","previous","useMemo","OPEN_KEYS","SELECTION_KEYS","SELECT_NAME","createSelectContext","createSelectScope","createPopperScope","usePopperScope","SelectProvider","useSelectContext","SelectNativeOptionsProvider","useSelectNativeOptionsContext","Select","__scopeSelect","valueProp","defaultValue","onValueChange","dir","autoComplete","form","popperScope","trigger","setTrigger","valueNode","setValueNode","valueNodeHasChildren","setValueNodeHasChildren","useDirection","setValue","triggerPointerDownPosRef","isFormControl","nativeOptionsSet","setNativeOptionsSet","nativeSelectKey","option","PopperPrimitive.Root","onTriggerChange","onValueNodeChange","onValueNodeHasChildrenChange","contentId","useId","onNativeOptionAdd","onNativeOptionRemove","optionsSet","SelectBubbleInput","TRIGGER_NAME","SelectTrigger","triggerProps","isDisabled","pointerTypeRef","searchRef","handleTypeaheadSearch","resetTypeahead","useTypeaheadSearch","enabledItems","item","currentItem","nextItem","findNextItem","handleOpen","pointerEvent","pageX","pageY","PopperPrimitive.Anchor","shouldShowPlaceholder","isTypingAhead","VALUE_NAME","SelectValue","valueProps","hasChildren","SelectIcon","iconProps","SelectPortal","PortalPrimitive","CONTENT_NAME","SelectContent","fragment","setFragment","DocumentFragment","frag","SelectContentProvider","SelectContentImpl","CONTENT_MARGIN","useSelectContentContext","createSlot","onCloseAutoFocus","onPointerDownOutside","side","sideOffset","align","alignOffset","arrowPadding","collisionBoundary","collisionPadding","sticky","hideWhenDetached","avoidCollisions","contentProps","content","setContent","selectedItem","setSelectedItem","selectedItemText","setSelectedItemText","isPositioned","setIsPositioned","firstValidItemFoundRef","hideOthers","useFocusGuards","firstItem","restItems","lastItem","PREVIOUSLY_FOCUSED_ELEMENT","scrollIntoView","block","scrollTop","scrollHeight","focusSelectedItem","pointerMoveDelta","handlePointerMove","handlePointerUp","capture","close","itemRefCallback","isFirstValidItem","handleItemLeave","itemTextRefCallback","SelectPosition","SelectPopperPosition","SelectItemAlignedPosition","popperContentProps","onItemLeave","RemoveScroll","as","allowPinchZoom","FocusScope","trapped","onMountAutoFocus","onUnmountAutoFocus","preventScroll","DismissableLayer","disableOutsidePointerEvents","onFocusOutside","onDismiss","onContextMenu","onPlaced","flexDirection","isModifierKey","candidateNodes","currentElement","currentIndex","indexOf","popperProps","contentContext","contentWrapper","setContentWrapper","shouldExpandOnScrollRef","shouldRepositionRef","triggerRect","getBoundingClientRect","contentRect","valueNodeRect","itemTextRect","itemTextOffset","left","leftDelta","minContentWidth","contentWidth","rightEdge","innerWidth","clampedLeft","minWidth","right","rightDelta","leftEdge","clampedRight","items","availableHeight","innerHeight","itemsHeight","contentStyles","getComputedStyle","contentBorderTopWidth","borderTopWidth","contentPaddingTop","paddingTop","contentBorderBottomWidth","borderBottomWidth","fullContentHeight","paddingBottom","minContentHeight","offsetHeight","viewportStyles","viewportPaddingTop","viewportPaddingBottom","topEdgeToTriggerMiddle","top","triggerMiddleToBottomEdge","selectedItemHalfHeight","contentTopToItemMiddle","offsetTop","itemMiddleToContentBottom","isLastItem","bottom","viewportOffsetBottom","clientHeight","isFirstItem","minHeight","maxHeight","contentZIndex","setContentZIndex","zIndex","handleScrollButtonChange","SelectViewportProvider","onScrollButtonChange","boxSizing","PopperPrimitive.Content","useSelectViewportContext","SelectViewport","nonce","viewportContext","prevScrollTopRef","dangerouslySetInnerHTML","__html","flex","onScroll","scrolledBy","cssMinHeight","cssHeight","prevHeight","nextHeight","clampedNextHeight","heightDiff","justifyContent","GROUP_NAME","SelectGroupContextProvider","useSelectGroupContext","groupProps","groupId","LABEL_NAME","SelectLabel","labelProps","groupContext","ITEM_NAME","SelectItemContextProvider","useSelectItemContext","SelectItem","textValue","textValueProp","itemProps","setTextValue","isFocused","setIsFocused","textId","handleSelect","onItemTextChange","prevTextValue","onBlur","onPointerLeave","ITEM_TEXT_NAME","SelectItemText","itemTextProps","itemContext","nativeOptionsContext","itemTextNode","setItemTextNode","nativeOption","ITEM_INDICATOR_NAME","SelectItemIndicator","itemIndicatorProps","SCROLL_UP_BUTTON_NAME","SelectScrollUpButton","canScrollUp","setCanScrollUp","handleScroll2","canScrollUp2","SelectScrollButtonImpl","onAutoScroll","SCROLL_DOWN_BUTTON_NAME","SelectScrollDownButton","canScrollDown","setCanScrollDown","maxScroll","canScrollDown2","ceil","scrollIndicatorProps","autoScrollTimerRef","clearAutoScrollTimer","activeItem","flexShrink","SelectSeparator","separatorProps","ARROW_NAME","arrowProps","PopperPrimitive.Arrow","_S","_T","prevValue","selectProto","HTMLSelectElement","prototype","getOwnPropertyDescriptor","Event","onSearchChange","handleSearchChange","timerRef","updateSearch","normalizedSearch","char","currentItemIndex","wrappedItems","array","startIndex","_","v","Trigger","Icon","Content2","Item","ItemText","ItemIndicator","ScrollUpButton","ScrollDownButton","Separator","_U","_V","SelectPrimitive.Trigger","SelectPrimitive.Icon","_W","_X","SelectPrimitive.ScrollUpButton","_Y","_Z","SelectPrimitive.ScrollDownButton","__","_$","SelectPrimitive.Portal","SelectPrimitive.Content","SelectPrimitive.Viewport","_aa","_ba","SelectPrimitive.Label","_ca","_da","SelectPrimitive.Item","SelectPrimitive.ItemIndicator","Check","SelectPrimitive.ItemText","_ea","_fa","SelectPrimitive.Separator","Table","_ga","_ha","TableHeader","_ia","_ja","TableBody","_ka","_la","_ma","_na","TableRow","_oa","_pa","TableHead","_qa","_ra","TableCell","_sa","_ta","_ua","_va","totalUnits","newCars","usedCars","avgFinanceGross","lastMonthComparison","shifts","hours","members","SalesManagerDashboard","setData","selectedDeal","setSelectedDeal","isEditing","setIsEditing","isSaving","setIsSaving","managerDealData","dealDataLoading","dealDataError","formatCurrency","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","format","currentScheduleData","currentDayIndex","dayIndex","setDate","dateNum","sampleDataIndex","shiftsData","generateScheduleData","handleFrontGrossChange","handleSubmit","ArrowUp","ArrowDown","Car","dayData","shiftIndex","Users","LineChart","initials","csiFollowUp","reverseIndex","toUpperCase","Edit","Save","targetGoal","avgFront","avgBackEnd","percentGoal","GMDashboard","manager","gross","avgBack","Building","BarChart3","Tabs","TabsPrimitive.Root","TabsList","_wa","_xa","TabsPrimitive.List","TabsTrigger","_ya","_za","TabsPrimitive.Trigger","TabsContent","_Aa","_Ba","TabsPrimitive.Content","CHECKBOX_NAME","createCheckboxContext","createCheckboxScope","CheckboxProvider","useCheckboxContext","Checkbox","__scopeCheckbox","checkedProp","defaultChecked","onCheckedChange","checkboxProps","setButton","hasConsumerStoppedPropagationRef","setChecked","initialCheckedStateRef","form2","reset","isIndeterminate","getState","prevChecked","isPropagationStopped","stopPropagation","CheckboxBubbleInput","control","transform","INDICATOR_NAME","CheckboxIndicator","indicatorProps","_Ca","_Da","controlSize","useSize","input","inputProto","HTMLInputElement","indeterminate","defaultCheckedRef","opacity","Indicator","_Ea","_Fa","CheckboxPrimitive.Root","CheckboxPrimitive.Indicator","ownerName","SlotClone","Slot2","slotProps","childrenArray","React.Children","toArray","slottable","isSlottable","newElement","newChildren","child","Children","only","React.isValidElement","isValidElement","React.cloneElement","createSlotClone","childrenRef","getter","mayWarn","isReactWarning","getElementRef","props2","mergeProps","childProps","overrideProps","propName","slotPropValue","childPropValue","args","result","React.Fragment","composeRefs","cloneElement","SLOTTABLE_IDENTIFIER","Symbol","__radixId","primitive","Node","primitiveProps","for","SWITCH_NAME","createSwitchContext","createSwitchScope","SwitchProvider","useSwitchContext","Switch","__scopeSwitch","switchProps","SwitchBubbleInput","THUMB_NAME","SwitchThumb","thumbProps","_Ga","_Ha","Thumb","_Ia","_Ja","SwitchPrimitives.Root","SwitchPrimitives.Thumb","Textarea","_Ka","_La","PAY_PLAN_CONFIG","ROLES","category","PLAN_TYPES","PERCENTAGE_OPTIONS","DRAW_AMOUNTS","DRAW_FREQUENCIES","PROVIDER_OPTIONS","commission","UNIT_FLAT_AMOUNTS","PACK_AMOUNTS","PACK_THRESHOLDS","MINIMUM_GUARANTEES","EnhancedPayPlanManager","payPlans","setPayPlans","users","setUsers","assignments","setAssignments","selectedTab","setSelectedTab","editingPlan","setEditingPlan","showCreateForm","setShowCreateForm","formData","setFormData","plan_type","is_active","structure","activeTierEditor","setActiveTierEditor","fetchPayPlans","fetchUsers","fetchAssignments","created_by","base_commission","enabled","base_percentage","tiers","applies_to","draw_structure","frequency","deducted_from_commissions","cit_bonuses","cit_30_bonus","min_deals","bonus_percentage","max_deals","cit_10_bonus","penetration_bonuses","min_percentage","max_percentage","provider_bonuses","provider_name","commission_percentage","payment_frequency","vehicle_allowance","allowance_amount","demo_privileges_available","pto_structure","annual_days","prorated","cash_value_per_day","chargeback_protection","protection_period_days","commission_structure","base_fi_percentage","pvr_tiers","min_value","max_value","percentage","monthly_draw","current_pay_plan","pay_plan_id","assigned_by","assigned_at","effective_date","resetForm","Shield","Settings","plan","assignedCount","r","Copy","currentAssignment","currentPlan","availablePlans","handleAssignPayPlan","payPlanId","payPlan","newAssignment","rows","FinanceManagerForm","SalespersonForm","errors","validatePayPlan","newPlan","expandedSections","setExpandedSections","toggleSection","section","s","isExpanded","provider","opt","PayCalculator","setInputs","selectedPayPlanId","unitsSold","frontEndGrossProfit","backEndGrossProfit","vehicleValue","csiAboveBenchmark","results","setResults","selectedPlan","step","simplePlan","frontEndCommission","front_end_gross_percentage","backEndCommission","back_end_gross_percentage","totalCommission","finalPayout","minimum_monthly_pay","csiBonus","minimumGuarantee","packDeduction","unitFlatAmount","percentageAmount","usedHigherAmount","advancedPlan","used_vehicle_pack","high_value_pack","pack_amount","low_value_pack","min_threshold","max_threshold","front_end_commission","gross_percentage","unit_flat_structure","flatTier","tier","min_units","retroactive","flat_amount","take_higher","backEndPercentage","back_end_commission","backEndTier","csi_bonus","benchmark_bonus","minimum_guarantee","guaranteeTier","guarantee_amount","USER_ROLES","EMPLOYMENT_STATUS","AdminDashboard","directAuthData","currentUser","supabaseUser","staffCounts","setStaffCounts","finance_manager","sales_manager","general_manager","gsm","editingUserId","setEditingUserId","userLoading","setUserLoading","userForm","setUserForm","roleId","tempPassword","generateTempPassword","random","counts","mappedUsers","employment_status","start_date","mockPayPlans","max_units","conditions","no_prepaid_commission","complete_paperwork_required","trade_payoff_discrepancy_flat","weekly_verification_required","updateEmploymentStatus","toggleEditMode","getUsersByRole","statusOrder","employed","suspended","terminated","statusA","statusB","getStatusBadge","statusConfig","Crown","Info","AdminDashboardPage","LENDERS","DEAL_TYPES","DEAL_STATUSES","VEHICLE_TYPES","SALESPEOPLE","DealLogPage","handleChange","calculateBackEndGross","salespersonInitials","secondSalespersonInitials","secondSalesperson","salespersonDisplay","newDeal","alert","Hash","maxLength","Briefcase","secondInitials","getSelectedSalespersonInitials","Package","Activity","Zap","PieChart","readOnly","AVPDashboard","selectedDealership","setSelectedDealership","showSalesBoard","setShowSalesBoard","districtMetrics","setDistrictMetrics","total_dealerships","active_dealerships","total_gross_profit","total_units","district_front_pvr","district_back_pvr","goal_achievement","top_performer","mtd_growth","dealerships","setDealerships","phone","monthly_goal","ytd_units","mtd_units","front_gross","back_gross","total_gross","new_units","used_units","cpo_units","front_pvr","back_pvr","performance_rating","teamMembers","setTeamMembers","deals_processed","revenue","schedule","goals","monthly_deals","current_deals","monthly_revenue","current_revenue","getPerformanceBadge","performance","getGoalProgress","Goal","ToggleLeft","ToggleRight","member","UserPlus","UserCheck","ClipboardList","GroupAdminDashboard","groupMetrics","setGroupMetrics","total_users","monthly_vehicles_sold","total_revenue","dealershipUsers","setDealershipUsers","fetchDashboardData","mockDealerships","salespeople_count","finance_count","managers_count","total_staff","monthly_sales","is_configured","fetchDealershipUsers","handleUserSubmit","newUser","handleBackToDealerships","MapPin","UserCircle","handleConfigureDealership","alertVariants","Alert","_Ma","_Na","_Oa","_Pa","AlertDescription","_Qa","_Ra","TEST_ACCOUNTS","metadata","is_admin","DebugAuthPage","setSuccess","authStatus","setAuthStatus","selectedAccount","setSelectedAccount","checkAuth","handleDirectLogin","usePreset","loginEmail","loginPassword","metadataError","RefreshCw","account","AuthDebugger","show","showDebug","setShowDebug","storedSession","setStoredSession","rawLocalStorage","setRawLocalStorage","authLog","setAuthLog","rawContent","sb_session","expires_at","toLocaleTimeString","sessionString","access_token","refresh_token","TestUserMiddleware","checking","setChecking","isTestUser","setIsTestUser","hasProcessed","setHasProcessed","clearTestUserProcessingFlags","sessionData","shouldRedirectTo","processingKey","DirectLoginPage","selectedUser","setSelectedUser","setMessage","setStatus","DirectAuthProvider","correctPath","isFinanceManager","isDealLogPath","isAreaVicePresident","isAVPDashboardPath","correct","ForceLoginPage","handleCompleteReset","clear","cookie","userToLogin","fakeSession","expires_in","LogoutPage","isComplete","setIsComplete","logoutSteps","setLogoutSteps","addLogoutStep","stepWithTime","checkSession","sessionExpiry","clearAllStorage","localStorageKeys","cookies","hasInitialSession","startTime","this","supabaseError","supabaseException","hasSessionAfterSignOut","storageCleared","finalSessionCheck","TestLoginRedirect","countdown","setCountdown","targetPath","setTargetPath","GroupAdminBypass","handleGroupAdminLogin","DashboardSelector","useBypass","setUseBypass","accessDashboard","dashboard","bypassAuth","userUpdateResult","profileUpdateResult","TEAM_MEMBERS","joinDate","lastActivity","TEAM_PERFORMANCE","dealsTotal","avgDealsPerMember","grossTotal","avgGross","closingRatio","TeamManagementPage","searchQuery","setSearchQuery","selectedTeam","setSelectedTeam","editingMember","setEditingMember","memberTeam","setMemberTeam","isAddTeamDialogOpen","setIsAddTeamDialogOpen","newTeamName","setNewTeamName","teamColor","setTeamColor","filteredMembers","matchesTeam","Award","handleEditMember","avgMonthly","CheckCircle","INDIVIDUAL_GOALS","currentUnits","goalUnits","grossTarget","currentGross","frontGrossGoal","backEndGoal","TEAM_GOALS","closingRatioTarget","currentClosingRatio","frontEndTarget","backEndTarget","MONTHLY_TARGETS","newVehicles","usedVehicles","avgGrossPerUnit","GoalsPage","editMode","setEditMode","overallProgress","totalCurrentUnits","totalGoalUnits","calculateOverallProgress","BarChart","Medal","vsLastMonth","SHIFT_TYPES","CURRENT_SCHEDULE","memberId","shiftTypeId","generateWeekDates","dates","formatDate","SchedulePage","view","setView","currentWeek","setCurrentWeek","editingShift","setEditingShift","selectedMember","setSelectedMember","selectedShiftType","setSelectedShiftType","navigateWeek","newStartDate","getShiftType","monthYearString","DateTimeFormat","toDateString","dateIndex","scheduleDay","getMemberShift","handleEditShift","borderLeft","scheduleForDay","opening","mid","closing","weekend","off","shiftType","COLLAPSIBLE_NAME","createCollapsibleContext","createCollapsibleScope","CollapsibleProvider","useCollapsibleContext","Collapsible","__scopeCollapsible","collapsibleProps","onOpenToggle","prevOpen","CollapsibleTrigger","CollapsibleContent","CollapsibleContentImpl","isPresent","setIsPresent","heightRef","widthRef","isOpen","isMountAnimationPreventedRef","originalStylesRef","rAF","transitionDuration","animationName","rect","CollapsiblePrimitive.CollapsibleTrigger","CollapsiblePrimitive.CollapsibleContent","MONTHLY_SALES","totalSales","salesPerMember","grossProfit","SALESPERSON_DATA","INVENTORY_DATA","inTransit","sold","available","reserved","daysOnLot","VEHICLE_TYPES_SOLD","FINANCE_DATA","STORE_COMPARISON_DATA","lastUpdate","totalSold","totalBooked","tracking","currentFront","currentBack","fiChargebacks","wholesaleProfitLoss","trackingGross","forecastGross","overUnderGross","trackingUnits","forecastUnits","overUnderUnits","DEALER_GROUP_DATA","isManagerStore","storeType","totalPending","currentFrontGross","currentBackGross","actualUnits","locations","SalesPerformanceSummary","viewMode","setViewMode","formatNumber","CardsView","group","DealerGroupSummary","dealerGroup","ComparisonView","newCarDealerships","dealer","usedCarDealerships","mixedDealerships","highlight","conditional","getValueClassName","renderComparisonTable","bgColor","metric","setIsExpanded","colors","headerBg","badge","getStoreColors","MetricCard","CheckSquare","DetailedSalesReport","selectedView","setSelectedView","selectedStore","setSelectedStore","filteredStores","store","MetricRow","isHighlighted","isCurrency","isNegative","getColorClasses","SalesReportPage","dateRange","setDateRange","monthlyTotals","latestMonth","previousMonth","newVehicleChange","usedVehicleChange","totalSalesChange","avgGrossChange","change","calculateMonthlyTotals","Download","DropdownMenu","DropdownMenuPrimitive.Root","_Sa","_Ta","inset","DropdownMenuPrimitive.SubTrigger","_Ua","_Va","DropdownMenuPrimitive.SubContent","_Wa","_Xa","DropdownMenuPrimitive.Portal","DropdownMenuPrimitive.Content","_Ya","_Za","DropdownMenuPrimitive.Item","__a","_$a","DropdownMenuPrimitive.CheckboxItem","DropdownMenuPrimitive.ItemIndicator","_ab","_bb","DropdownMenuPrimitive.RadioItem","Circle","_cb","_db","DropdownMenuPrimitive.Label","_eb","_fb","DropdownMenuPrimitive.Separator","SingleFinanceHomePage","dealTypes","finance","cash","lease","showPromoBanner","setShowPromoBanner","handleWindowFocus","refreshDeals","refreshSingleFinanceDeals","financeDealsCount","cashDealsCount","leaseDealsCount","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","SingleFinanceDealsPage","formattedDeals","assign","SingleFinanceManagerDashboard","loadDealsFromLocalStorage","singleFinanceDealsJson","fetchDealsFromSchema","sale_date","quarterStartMonth","schema","sortBy","offset","filterCondition","selectQuery","countQuery","rpc","sql_query","countData","countError","schemaDeal","deal_number","customer_name","handleLogNewDealClick","MainDashboardContent","FinanceDirectorDashboard","showLogDealForm","setShowLogDealForm","selectedManager","setSelectedManager","departmentMetrics","setDepartmentMetrics","total_fi_gross","products_per_deal","per_vehicle_retail","team_performance","total_vsc_penetration","penetration_rate","financeManagers","setFinanceManagers","mtd_revenue","vsc_penetration","recentDeals","setRecentDeals","fi_gross","deal_type","funding_source","getDealTypeBadge","getVSCIcon","penetration","Star","CheckCircle2","actionTypes","listeners","memoryState","listener","_gb","MAX_VALUE","dismiss","STATUS_OPTIONS","LogFinanceManagerDeal","isSubmitting","setIsSubmitting","customerName","vehicleDescription","notes","calculateTotals","handleInputChange","productsSold","stock_number","is_split_deal","second_salesperson_id","front_end_gross","reserve_flat","vsc_sold","dashboard_type","formattedDeal","deal_details","insertQuery","logFinanceManagerDeal","supabaseKey","baseHeaders","Authorization","apikey","Prefer","directSupabase","constructor","__publicField","baseUrl","_0","arguments","params","columns","append","orderBy","response","fetch","method","ok","errorText","text","json","body","testConnection","EnvTest","fetchTest","setFetchTest","fetchLoading","setFetchLoading","supabaseTest","setSupabaseTest","supabaseLoading","setSupabaseLoading","envVars","fromEntries","statusText","testClient","reject","queryPromise","MasterAdminPage","signupRequests","setSignupRequests","editData","setEditData","deletePin","setDeletePin","deleteTarget","setDeleteTarget","showPinDialog","setShowPinDialog","showEditDialog","setShowEditDialog","availableAdmins","setAvailableAdmins","dialogLoading","setDialogLoading","activeTab","setActiveTab","showDialog","setShowDialog","dialogType","setDialogType","selectedEntity","setSelectedEntity","deleteItemName","setDeleteItemName","isDeleting","setIsDeleting","showViewAllDialog","setShowViewAllDialog","viewAllType","setViewAllType","viewAllData","setViewAllData","refreshOverview","fetchDealerships","fetchSignupRequests","handleTabChange","showBackupDialog","setShowBackupDialog","backupProgress","setBackupProgress","backupStatus","setBackupStatus","setNewUser","dealershipName","manufacturer","groupName","numDealerships","allRoles","mapLegacyRole","single_finance_manager","single_dealer_admin","group_dealer_admin","admin","dealership_admin","mapUIRoleToDatabase","uiRole","manufacturers","subscriptionTiers","singleDealershipPrice","dealerGroupPricePerDealer","features","additionalCost","calculateMonthlyCost","subscription_tier","num_teams","individualDealers","individual_dealers","totalCost","dealerTier","dealerCost","baseCost","hasSupabaseAccess","hasDirectAuthAccess","currentDealerships","usersResult","dataLength","dataType","hint","usersData","mappedRole","fm","alternativeResult","altError","dealershipsResult","transformedData","finalFinanceManagers","stack","dealershipsData","updateDealershipEntry","updatedDealerships","accessUserAccount","dashboardUrl","getDashboardUrl","viewDealershipDetails","admin_user_id","monthlyCost","adminDetails","adminResult","adminUser","admin_name","admin_email","admin_phone","admin_role","dealerGroupDetails","storedDealers","individualDealerRevenues","dealerKey","storedDealer","brands","cost","group_name","num_dealers","total_monthly_revenue","individual_dealer_revenues","finalEditData","store_hours","monthly_cost","adminLoadingTimeout","adminUsers","adminError","viewUserDetails","admins","getAvailableAdmins","handleDeleteRequest","createTenantSchema","isGroup","cleanupTenantSchema","operation","error2","openViewAllDialog","closeViewAllDialog","address","city","tieredDealerships","dealerAdmins","groupAdmins","isExistingUserUpdate","duplicateCheck","authData","tenantSchemaName","note","zip","dealershipResponse","dealershipCreationError","basicInsert","updateSchema","updateTeams","dealerGroupError","tenant_schema","profileCheckResult","existingProfile","databaseRole","updateResult","existingUserResult","profileSearchError","profileResult","finalUserId","searchError","verifyResult","tenantSchema","emailError","roleLabel","successMessage","entityType","refreshError","authSignupError","errorMessage","chars","charAt","num","request","contact_person","approveSignupRequest","requestId","rejectSignupRequest","dealerName","dealerManufacturer","dealerBrands","tierInfo","updateData","dealerData","schemaError","deleteUser","authDeleteError","SignUp","signupOptions","route","IconComponent","feature","SingleFinanceSignup","formState","setFormState","fullName","companyType","subscriptionId","DealershipSignup","DealerGroupSignup","level","dealershipCount","levels","price","selectedLevel","l","dealerGroupData","dealership_count","TranslationContext","translations","en","es","fr","de","cs","it","pl","el","pt","TranslationProvider","language","setLanguage","saved","browserLang","useTranslation","languages","flag","LanguageSwitcher","setIsOpen","React","buttonRect","setButtonRect","buttonRef","currentLanguage","lang","Globe","isolation","HomePage","originalPrice","popular","PricingPage","featureIndex","question","answer","faq","TermsPage","PrivacyPage","SubscriptionPage","AboutPage","bio","n","ScreenshotsPage","src","alt","APP_VERSION","APP_ENV","MARKETING_URL","logAppEvent","DealershipContext","DealershipProvider","currentDealershipId","setCurrentDealershipId","RouteLogger","navigationType","useNavigationType","hash","hasPerformanceAPI","navigationStart","timeOrigin","renderTime","render_time_ms","total_time_ms","RedirectLogger","has_state","RoleBasedRedirect","roleValue","redirectReason","isTestFinanceUser","roleConditions","isSingleFinanceManager","isFinanceManagerWithEmail","combinedFinanceCondition","GroupAdminAccessCheck","isGroupAdminByRole","by_flag","by_role","by_email","ResetAuth","textAlign","App","isGroupAdminByMetadata","version","marketing_url","screen_size","handleNetworkChange","online","onLine","QueryClientProvider","Router","AVPFullDashboard","DealershipLayout","useParams","parsedId","DealershipLayoutContent","useDealership","ReactDOM","getElementById","render","StrictMode"],"mappings":"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","x_google_ignoreList":[0,2,3,4,14,32,33,34,40,42,43,44,69,70,71]}