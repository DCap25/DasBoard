{"version":3,"file":"query.BsNGtoLU.js","sources":["../../node_modules/@tanstack/query-core/build/modern/subscribable.js","../../node_modules/@tanstack/query-core/build/modern/utils.js","../../node_modules/@tanstack/query-core/build/modern/focusManager.js","../../node_modules/@tanstack/query-core/build/modern/onlineManager.js","../../node_modules/@tanstack/query-core/build/modern/retryer.js","../../node_modules/@tanstack/query-core/build/modern/thenable.js","../../node_modules/@tanstack/query-core/build/modern/notifyManager.js","../../node_modules/@tanstack/query-core/build/modern/removable.js","../../node_modules/@tanstack/query-core/build/modern/query.js","../../node_modules/@tanstack/query-core/build/modern/queryCache.js","../../node_modules/@tanstack/query-core/build/modern/mutation.js","../../node_modules/@tanstack/query-core/build/modern/mutationCache.js","../../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js","../../node_modules/@tanstack/query-core/build/modern/queryClient.js","../../node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js"],"sourcesContent":["// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {\n  }\n  onUnsubscribe() {\n  }\n};\nexport {\n  Subscribable\n};\n//# sourceMappingURL=subscribable.js.map","// src/utils.ts\nvar isServer = typeof window === \"undefined\" || \"Deno\" in globalThis;\nfunction noop() {\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const { exact, status, predicate, mutationKey } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(\n    queryKey,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return Object.keys(b).every((key) => partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    const aItems = array ? a : Object.keys(a);\n    const aSize = aItems.length;\n    const bItems = array ? b : Object.keys(b);\n    const bSize = bItems.length;\n    const copy = array ? [] : {};\n    let equalItems = 0;\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i];\n      if ((!array && aItems.includes(key) || array) && a[key] === void 0 && b[key] === void 0) {\n        copy[key] = void 0;\n        equalItems++;\n      } else {\n        copy[key] = replaceEqualDeep(a[key], b[key]);\n        if (copy[key] === a[key] && a[key] !== void 0) {\n          equalItems++;\n        }\n      }\n    }\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n  return b;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== \"production\") {\n      try {\n        return replaceEqualDeep(prevData, data);\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`\n        );\n        throw error;\n      }\n    }\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`\n      );\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\nexport {\n  addToEnd,\n  addToStart,\n  ensureQueryFn,\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  isPlainArray,\n  isPlainObject,\n  isServer,\n  isValidTimeout,\n  keepPreviousData,\n  matchMutation,\n  matchQuery,\n  noop,\n  partialMatchKey,\n  replaceData,\n  replaceEqualDeep,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  skipToken,\n  sleep,\n  timeUntilStale\n};\n//# sourceMappingURL=utils.js.map","// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar FocusManager = class extends Subscribable {\n  #focused;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onFocus) => {\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.#focused !== focused;\n    if (changed) {\n      this.#focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach((listener) => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    if (typeof this.#focused === \"boolean\") {\n      return this.#focused;\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n};\nvar focusManager = new FocusManager();\nexport {\n  FocusManager,\n  focusManager\n};\n//# sourceMappingURL=focusManager.js.map","// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = class extends Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onOnline) => {\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach((listener) => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\nexport {\n  OnlineManager,\n  onlineManager\n};\n//# sourceMappingURL=onlineManager.js.map","// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let isResolved = false;\n  let continueFn;\n  const thenable = pendingThenable();\n  const cancel = (cancelOptions) => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions));\n      config.abort?.();\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onSuccess?.(value);\n      continueFn?.();\n      thenable.resolve(value);\n    }\n  };\n  const reject = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onError?.(value);\n      continueFn?.();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      if (isResolved) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\nexport {\n  CancelledError,\n  canFetch,\n  createRetryer,\n  isCancelledError\n};\n//# sourceMappingURL=retryer.js.map","// src/thenable.ts\nfunction pendingThenable() {\n  let resolve;\n  let reject;\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  thenable.status = \"pending\";\n  thenable.catch(() => {\n  });\n  function finalize(data) {\n    Object.assign(thenable, data);\n    delete thenable.resolve;\n    delete thenable.reject;\n  }\n  thenable.resolve = (value) => {\n    finalize({\n      status: \"fulfilled\",\n      value\n    });\n    resolve(value);\n  };\n  thenable.reject = (reason) => {\n    finalize({\n      status: \"rejected\",\n      reason\n    });\n    reject(reason);\n  };\n  return thenable;\n}\nexport {\n  pendingThenable\n};\n//# sourceMappingURL=thenable.js.map","// src/notifyManager.ts\nvar defaultScheduler = (cb) => setTimeout(cb, 0);\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n  let notifyFn = (callback) => {\n    callback();\n  };\n  let batchNotifyFn = (callback) => {\n    callback();\n  };\n  let scheduleFn = defaultScheduler;\n  const schedule = (callback) => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  return {\n    batch: (callback) => {\n      let result;\n      transactions++;\n      try {\n        result = callback();\n      } finally {\n        transactions--;\n        if (!transactions) {\n          flush();\n        }\n      }\n      return result;\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: (callback) => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args);\n        });\n      };\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn) => {\n      notifyFn = fn;\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn) => {\n      batchNotifyFn = fn;\n    },\n    setScheduler: (fn) => {\n      scheduleFn = fn;\n    }\n  };\n}\nvar notifyManager = createNotifyManager();\nexport {\n  createNotifyManager,\n  defaultScheduler,\n  notifyManager\n};\n//# sourceMappingURL=notifyManager.js.map","// src/removable.ts\nimport { isServer, isValidTimeout } from \"./utils.js\";\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)\n    );\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\nexport {\n  Removable\n};\n//# sourceMappingURL=removable.js.map","// src/query.ts\nimport {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  skipToken,\n  timeUntilStale\n} from \"./utils.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { canFetch, createRetryer, isCancelledError } from \"./retryer.js\";\nimport { Removable } from \"./removable.js\";\nvar Query = class extends Removable {\n  #initialState;\n  #revertState;\n  #cache;\n  #client;\n  #retryer;\n  #defaultOptions;\n  #abortSignalConsumed;\n  constructor(config) {\n    super();\n    this.#abortSignalConsumed = false;\n    this.#defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.#client = config.client;\n    this.#cache = this.#client.getQueryCache();\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.#initialState = getDefaultState(this.options);\n    this.state = config.state ?? this.#initialState;\n    this.scheduleGc();\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  get promise() {\n    return this.#retryer?.promise;\n  }\n  setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n  }\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n      this.#cache.remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options);\n    this.#dispatch({\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    this.#dispatch({ type: \"setState\", state, setStateOptions });\n  }\n  cancel(options) {\n    const promise = this.#retryer?.promise;\n    this.#retryer?.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({ silent: true });\n  }\n  reset() {\n    this.destroy();\n    this.setState(this.#initialState);\n  }\n  isActive() {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false\n    );\n  }\n  isDisabled() {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive();\n    }\n    return this.options.queryFn === skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;\n  }\n  isStale() {\n    if (this.state.isInvalidated) {\n      return true;\n    }\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale\n      );\n    }\n    return this.state.data === void 0;\n  }\n  isStaleByTime(staleTime = 0) {\n    return this.state.isInvalidated || this.state.data === void 0 || !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  onOnline() {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer);\n      this.clearGcTimeout();\n      this.#cache.notify({ type: \"observerAdded\", query: this, observer });\n    }\n  }\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer);\n      if (!this.observers.length) {\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true });\n          } else {\n            this.#retryer.cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      this.#cache.notify({ type: \"observerRemoved\", query: this, observer });\n    }\n  }\n  getObserversCount() {\n    return this.observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: \"invalidate\" });\n    }\n  }\n  fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\") {\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n        this.cancel({ silent: true });\n      } else if (this.#retryer) {\n        this.#retryer.continueRetry();\n        return this.#retryer.promise;\n      }\n    }\n    if (options) {\n      this.setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn);\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`\n        );\n      }\n    }\n    const abortController = new AbortController();\n    const addSignalProperty = (object) => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true;\n          return abortController.signal;\n        }\n      });\n    };\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions);\n      const queryFnContext = {\n        client: this.#client,\n        queryKey: this.queryKey,\n        meta: this.meta\n      };\n      addSignalProperty(queryFnContext);\n      this.#abortSignalConsumed = false;\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this\n        );\n      }\n      return queryFn(queryFnContext);\n    };\n    const context = {\n      fetchOptions,\n      options: this.options,\n      queryKey: this.queryKey,\n      client: this.#client,\n      state: this.state,\n      fetchFn\n    };\n    addSignalProperty(context);\n    this.options.behavior?.onFetch(\n      context,\n      this\n    );\n    this.#revertState = this.state;\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      this.#dispatch({ type: \"fetch\", meta: context.fetchOptions?.meta });\n    }\n    const onError = (error) => {\n      if (!(isCancelledError(error) && error.silent)) {\n        this.#dispatch({\n          type: \"error\",\n          error\n        });\n      }\n      if (!isCancelledError(error)) {\n        this.#cache.config.onError?.(\n          error,\n          this\n        );\n        this.#cache.config.onSettled?.(\n          this.state.data,\n          error,\n          this\n        );\n      }\n      this.scheduleGc();\n    };\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise,\n      fn: context.fetchFn,\n      abort: abortController.abort.bind(abortController),\n      onSuccess: (data) => {\n        if (data === void 0) {\n          if (process.env.NODE_ENV !== \"production\") {\n            console.error(\n              `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`\n            );\n          }\n          onError(new Error(`${this.queryHash} data is undefined`));\n          return;\n        }\n        try {\n          this.setData(data);\n        } catch (error) {\n          onError(error);\n          return;\n        }\n        this.#cache.config.onSuccess?.(data, this);\n        this.#cache.config.onSettled?.(\n          data,\n          this.state.error,\n          this\n        );\n        this.scheduleGc();\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true\n    });\n    return this.#retryer.start();\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            fetchStatus: \"paused\"\n          };\n        case \"continue\":\n          return {\n            ...state,\n            fetchStatus: \"fetching\"\n          };\n        case \"fetch\":\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: \"success\",\n            ...!action.manual && {\n              fetchStatus: \"idle\",\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            }\n          };\n        case \"error\":\n          const error = action.error;\n          if (isCancelledError(error) && error.revert && this.#revertState) {\n            return { ...this.#revertState, fetchStatus: \"idle\" };\n          }\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: \"idle\",\n            status: \"error\"\n          };\n        case \"invalidate\":\n          return {\n            ...state,\n            isInvalidated: true\n          };\n        case \"setState\":\n          return {\n            ...state,\n            ...action.state\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate();\n      });\n      this.#cache.notify({ query: this, type: \"updated\", action });\n    });\n  }\n};\nfunction fetchState(data, options) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? \"fetching\" : \"paused\",\n    ...data === void 0 && {\n      error: null,\n      status: \"pending\"\n    }\n  };\n}\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = data !== void 0;\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\nexport {\n  Query,\n  fetchState\n};\n//# sourceMappingURL=query.js.map","// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar QueryCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#queries = /* @__PURE__ */ new Map();\n  }\n  #queries;\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = this.#queries.get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash);\n      }\n      this.notify({ type: \"removed\", query });\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return this.#queries.get(queryHash);\n  }\n  getAll() {\n    return [...this.#queries.values()];\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (query) => matchQuery(defaultedFilters, query)\n    );\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline();\n      });\n    });\n  }\n};\nexport {\n  QueryCache\n};\n//# sourceMappingURL=queryCache.js.map","// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { createRetryer } from \"./retryer.js\";\nvar Mutation = class extends Removable {\n  #observers;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.mutationId = config.mutationId;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    const onContinue = () => {\n      this.#dispatch({ type: \"continue\" });\n    };\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables);\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue,\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this)\n    });\n    const restored = this.state.status === \"pending\";\n    const isPaused = !this.#retryer.canStart();\n    try {\n      if (restored) {\n        onContinue();\n      } else {\n        this.#dispatch({ type: \"pending\", variables, isPaused });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this\n        );\n        const context = await this.options.onMutate?.(variables);\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await this.#retryer.start();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSuccess?.(data, variables, this.state.context);\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSettled?.(data, null, variables, this.state.context);\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    } finally {\n      this.#mutationCache.runNext(this);\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport {\n  Mutation,\n  getDefaultState\n};\n//# sourceMappingURL=mutation.js.map","// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar MutationCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#mutations = /* @__PURE__ */ new Set();\n    this.#scopes = /* @__PURE__ */ new Map();\n    this.#mutationId = 0;\n  }\n  #mutations;\n  #scopes;\n  #mutationId;\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    this.#mutations.add(mutation);\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const scopedMutations = this.#scopes.get(scope);\n      if (scopedMutations) {\n        scopedMutations.push(mutation);\n      } else {\n        this.#scopes.set(scope, [mutation]);\n      }\n    }\n    this.notify({ type: \"added\", mutation });\n  }\n  remove(mutation) {\n    if (this.#mutations.delete(mutation)) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const scopedMutations = this.#scopes.get(scope);\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation);\n            if (index !== -1) {\n              scopedMutations.splice(index, 1);\n            }\n          } else if (scopedMutations[0] === mutation) {\n            this.#scopes.delete(scope);\n          }\n        }\n      }\n    }\n    this.notify({ type: \"removed\", mutation });\n  }\n  canRun(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const mutationsWithSameScope = this.#scopes.get(scope);\n      const firstPendingMutation = mutationsWithSameScope?.find(\n        (m) => m.state.status === \"pending\"\n      );\n      return !firstPendingMutation || firstPendingMutation === mutation;\n    } else {\n      return true;\n    }\n  }\n  runNext(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const foundMutation = this.#scopes.get(scope)?.find((m) => m !== mutation && m.state.isPaused);\n      return foundMutation?.continue() ?? Promise.resolve();\n    } else {\n      return Promise.resolve();\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.notify({ type: \"removed\", mutation });\n      });\n      this.#mutations.clear();\n      this.#scopes.clear();\n    });\n  }\n  getAll() {\n    return Array.from(this.#mutations);\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (mutation) => matchMutation(defaultedFilters, mutation)\n    );\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation));\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused);\n    return notifyManager.batch(\n      () => Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop))\n      )\n    );\n  }\n};\nfunction scopeFor(mutation) {\n  return mutation.options.scope?.id;\n}\nexport {\n  MutationCache\n};\n//# sourceMappingURL=mutationCache.js.map","// src/infiniteQueryBehavior.ts\nimport { addToEnd, addToStart, ensureQueryFn } from \"./utils.js\";\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options;\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n      const oldPages = context.state.data?.pages || [];\n      const oldPageParams = context.state.data?.pageParams || [];\n      let result = { pages: [], pageParams: [] };\n      let currentPage = 0;\n      const fetchFn = async () => {\n        let cancelled = false;\n        const addSignalProperty = (object) => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions);\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const queryFnContext = {\n            client: context.client,\n            queryKey: context.queryKey,\n            pageParam: param,\n            direction: previous ? \"backward\" : \"forward\",\n            meta: context.options.meta\n          };\n          addSignalProperty(queryFnContext);\n          const page = await queryFn(\n            queryFnContext\n          );\n          const { maxPages } = context.options;\n          const addTo = previous ? addToStart : addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          const remainingPages = pages ?? oldPages.length;\n          do {\n            const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);\n            if (currentPage > 0 && param == null) {\n              break;\n            }\n            result = await fetchPage(result, param);\n            currentPage++;\n          } while (currentPage < remainingPages);\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn,\n            {\n              client: context.client,\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal\n            },\n            query\n          );\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n  const lastIndex = pages.length - 1;\n  return pages.length > 0 ? options.getNextPageParam(\n    pages[lastIndex],\n    pages,\n    pageParams[lastIndex],\n    pageParams\n  ) : void 0;\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n  if (!data) return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam) return false;\n  return getPreviousPageParam(options, data) != null;\n}\nexport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n};\n//# sourceMappingURL=infiniteQueryBehavior.js.map","// src/queryClient.ts\nimport {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken\n} from \"./utils.js\";\nimport { QueryCache } from \"./queryCache.js\";\nimport { MutationCache } from \"./mutationCache.js\";\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { infiniteQueryBehavior } from \"./infiniteQueryBehavior.js\";\nvar QueryClient = class {\n  #queryCache;\n  #mutationCache;\n  #defaultOptions;\n  #queryDefaults;\n  #mutationDefaults;\n  #mountCount;\n  #unsubscribeFocus;\n  #unsubscribeOnline;\n  constructor(config = {}) {\n    this.#queryCache = config.queryCache || new QueryCache();\n    this.#mutationCache = config.mutationCache || new MutationCache();\n    this.#defaultOptions = config.defaultOptions || {};\n    this.#queryDefaults = /* @__PURE__ */ new Map();\n    this.#mutationDefaults = /* @__PURE__ */ new Map();\n    this.#mountCount = 0;\n  }\n  mount() {\n    this.#mountCount++;\n    if (this.#mountCount !== 1) return;\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations();\n        this.#queryCache.onFocus();\n      }\n    });\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations();\n        this.#queryCache.onOnline();\n      }\n    });\n  }\n  unmount() {\n    this.#mountCount--;\n    if (this.#mountCount !== 0) return;\n    this.#unsubscribeFocus?.();\n    this.#unsubscribeFocus = void 0;\n    this.#unsubscribeOnline?.();\n    this.#unsubscribeOnline = void 0;\n  }\n  isFetching(filters) {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: \"fetching\" }).length;\n  }\n  isMutating(filters) {\n    return this.#mutationCache.findAll({ ...filters, status: \"pending\" }).length;\n  }\n  /**\n   * Imperative (non-reactive) way to retrieve data for a QueryKey.\n   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.\n   *\n   * Hint: Do not use this function inside a component, because it won't receive updates.\n   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.\n   */\n  getQueryData(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state.data;\n  }\n  ensureQueryData(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    const query = this.#queryCache.build(this, defaultedOptions);\n    const cachedData = query.state.data;\n    if (cachedData === void 0) {\n      return this.fetchQuery(options);\n    }\n    if (options.revalidateIfStale && query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))) {\n      void this.prefetchQuery(defaultedOptions);\n    }\n    return Promise.resolve(cachedData);\n  }\n  getQueriesData(filters) {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const defaultedOptions = this.defaultQueryOptions({ queryKey });\n    const query = this.#queryCache.get(\n      defaultedOptions.queryHash\n    );\n    const prevData = query?.state.data;\n    const data = functionalUpdate(updater, prevData);\n    if (data === void 0) {\n      return void 0;\n    }\n    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });\n  }\n  setQueriesData(filters, updater, options) {\n    return notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map(({ queryKey }) => [\n        queryKey,\n        this.setQueryData(queryKey, updater, options)\n      ])\n    );\n  }\n  getQueryState(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(\n      options.queryHash\n    )?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = this.#queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = this.#queryCache;\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset();\n      });\n      return this.refetchQueries(\n        {\n          type: \"active\",\n          ...filters\n        },\n        options\n      );\n    });\n  }\n  cancelQueries(filters, cancelOptions = {}) {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))\n    );\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n  invalidateQueries(filters, options = {}) {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate();\n      });\n      if (filters?.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      return this.refetchQueries(\n        {\n          ...filters,\n          type: filters?.refetchType ?? filters?.type ?? \"active\"\n        },\n        options\n      );\n    });\n  }\n  refetchQueries(filters, options = {}) {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options.cancelRefetch ?? true\n    };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled()).map((query) => {\n        let promise = query.fetch(void 0, fetchOptions);\n        if (!fetchOptions.throwOnError) {\n          promise = promise.catch(noop);\n        }\n        return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n      })\n    );\n    return Promise.all(promises).then(noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (defaultedOptions.retry === void 0) {\n      defaultedOptions.retry = false;\n    }\n    const query = this.#queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query)\n    ) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(noop).catch(noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop);\n  }\n  ensureInfiniteQueryData(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.ensureQueryData(options);\n  }\n  resumePausedMutations() {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations();\n    }\n    return Promise.resolve();\n  }\n  getQueryCache() {\n    return this.#queryCache;\n  }\n  getMutationCache() {\n    return this.#mutationCache;\n  }\n  getDefaultOptions() {\n    return this.#defaultOptions;\n  }\n  setDefaultOptions(options) {\n    this.#defaultOptions = options;\n  }\n  setQueryDefaults(queryKey, options) {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [...this.#queryDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [...this.#mutationDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options._defaulted) {\n      return options;\n    }\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions\n      );\n    }\n    if (defaultedOptions.refetchOnReconnect === void 0) {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (defaultedOptions.throwOnError === void 0) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    if (defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false;\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n  clear() {\n    this.#queryCache.clear();\n    this.#mutationCache.clear();\n  }\n};\nexport {\n  QueryClient\n};\n//# sourceMappingURL=queryClient.js.map","\"use client\";\n\n// src/QueryClientProvider.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar QueryClientContext = React.createContext(\n  void 0\n);\nvar useQueryClient = (queryClient) => {\n  const client = React.useContext(QueryClientContext);\n  if (queryClient) {\n    return queryClient;\n  }\n  if (!client) {\n    throw new Error(\"No QueryClient set, use QueryClientProvider to set one\");\n  }\n  return client;\n};\nvar QueryClientProvider = ({\n  client,\n  children\n}) => {\n  React.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n  return /* @__PURE__ */ jsx(QueryClientContext.Provider, { value: client, children });\n};\nexport {\n  QueryClientContext,\n  QueryClientProvider,\n  useQueryClient\n};\n//# sourceMappingURL=QueryClientProvider.js.map"],"names":["Subscribable","constructor","this","listeners","Set","subscribe","bind","listener","add","onSubscribe","delete","onUnsubscribe","hasListeners","size","isServer","window","globalThis","noop","resolveStaleTime","staleTime","query","matchQuery","filters","type","exact","fetchStatus","predicate","queryKey","stale","queryHash","hashQueryKeyByOptions","options","partialMatchKey","isActive","isStale","state","matchMutation","mutation","status","mutationKey","hashKey","queryKeyHashFn","JSON","stringify","_","val","isPlainObject","Object","keys","sort","reduce","result","key","a","b","every","replaceEqualDeep","array","isPlainArray","aItems","aSize","length","bItems","bSize","copy","equalItems","i","includes","value","Array","isArray","o","hasObjectPrototype","ctor","prot","prototype","hasOwnProperty","getPrototypeOf","toString","call","replaceData","prevData","data","structuralSharing","addToEnd","items","item","max","newItems","slice","addToStart","skipToken","Symbol","ensureQueryFn","fetchOptions","queryFn","initialPromise","Promise","reject","Error","focusManager","_a","super","__privateAdd","_focused","_cleanup","_setup","__privateSet","onFocus","addEventListener","removeEventListener","__privateGet","setEventListener","setup","focused","setFocused","isFocused","forEach","document","visibilityState","WeakMap","onlineManager","_b","_online","onOnline","onlineListener","offlineListener","setOnline","online","isOnline","defaultRetryDelay","failureCount","Math","min","__pow","canFetch","networkMode","CancelledError","revert","silent","isCancelledError","createRetryer","config","continueFn","isRetryCancelled","isResolved","thenable","resolve","_resolve","_reject","finalize","assign","catch","reason","pendingThenable","canContinue","canRun","canStart","onSuccess","onError","pause","continueResolve","onPause","then","onContinue","run","promiseOrValue","fn","error","retry","retryDelay","delay","shouldRetry","timeout","_c","onFail","setTimeout","promise","cancel","cancelOptions","abort","continue","cancelRetry","continueRetry","start","defaultScheduler","cb","notifyManager","queue","transactions","notifyFn","callback","batchNotifyFn","scheduleFn","schedule","push","batch","originalQueue","flush","batchCalls","args","setNotifyFunction","setBatchNotifyFunction","setScheduler","createNotifyManager","Removable","_gcTimeout","destroy","clearGcTimeout","scheduleGc","gcTime","Infinity","optionalRemove","updateGcTime","newGcTime","clearTimeout","Query","_d","_Query_instances","_initialState","_revertState","_cache","_client","_retryer","_defaultOptions","_abortSignalConsumed","defaultOptions","setOptions","observers","client","getQueryCache","initialData","hasData","initialDataUpdatedAt","dataUpdateCount","dataUpdatedAt","Date","now","errorUpdateCount","errorUpdatedAt","fetchFailureCount","fetchFailureReason","fetchMeta","isInvalidated","getDefaultState","meta","__spreadValues","remove","setData","newData","__privateMethod","updatedAt","manual","setState","setStateOptions","reset","some","observer","resolveEnabled","enabled","isDisabled","getObserversCount","getCurrentResult","isStaleByTime","timeUntilStale","find","x","shouldFetchOnWindowFocus","refetch","cancelRefetch","shouldFetchOnReconnect","addObserver","notify","removeObserver","filter","invalidate","dispatch_fn","fetch","abortController","AbortController","addSignalProperty","object","defineProperty","enumerable","get","signal","context","fetchFn","queryFnContext","persister","behavior","onFetch","onSettled","WeakSet","action","__spreadProps","reducer","onQueryUpdate","QueryCache","_e","_queries","Map","build","defaultQueryOptions","getQueryDefaults","has","set","queryInMap","clear","getAll","values","defaultedFilters","findAll","queries","event","Mutation","_f","_Mutation_instances","_observers","_mutationCache","mutationId","mutationCache","failureReason","isPaused","variables","submittedAt","execute","__async","mutationFn","restored","onMutate","_g","_i","_h","_k","_j","_m","_l","_o","_n","_q","_p","_s","_r","_u","_t","runNext","onMutationUpdate","MutationCache","_mutations","_scopes","_mutationId","__privateWrapper","defaultMutationOptions","scope","scopeFor","scopedMutations","index","indexOf","splice","mutationsWithSameScope","firstPendingMutation","m","foundMutation","from","resumePausedMutations","pausedMutations","all","map","id","infiniteQueryBehavior","pages","direction","fetchMore","oldPages","oldPageParams","pageParams","currentPage","cancelled","fetchPage","param","previous","pageParam","aborted","page","maxPages","addTo","oldData","getPreviousPageParam","getNextPageParam","remainingPages","initialPageParam","lastIndex","QueryClient","_queryCache","_queryDefaults","_mutationDefaults","_mountCount","_unsubscribeFocus","_unsubscribeOnline","queryCache","mount","unmount","isFetching","isMutating","getQueryData","ensureQueryData","defaultedOptions","cachedData","fetchQuery","revalidateIfStale","prefetchQuery","getQueriesData","setQueryData","updater","input","functionalUpdate","setQueriesData","getQueryState","removeQueries","resetQueries","refetchQueries","cancelQueries","defaultedCancelOptions","promises","invalidateQueries","refetchType","throwOnError","fetchInfiniteQuery","prefetchInfiniteQuery","ensureInfiniteQueryData","getMutationCache","getDefaultOptions","setDefaultOptions","setQueryDefaults","defaults","queryDefault","setMutationDefaults","getMutationDefaults","_defaulted","refetchOnReconnect","suspense","mutations","QueryClientContext","React.createContext","createContext","QueryClientProvider","children","React.useEffect","jsx","Provider"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]}